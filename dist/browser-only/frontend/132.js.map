{"version":3,"file":"132.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded?","webpack:///webpack/runtime/startup chunk dependencies?","webpack:///../../packages/core/shared/@lumino/coreutils/index.js?","webpack:///../../packages/plugin-ext/src/plugin/languages/code-action.ts?","webpack:///../../packages/plugin-ext/src/plugin/debug/plugin-debug-adapter-creator.ts?","webpack:///../../packages/plugin-ext/src/plugin/documents.ts?","webpack:///../../packages/core/src/common/message-rpc/rpc-message-encoder.ts?","webpack:///../../packages/plugin-ext/src/plugin/tasks/task-provider.ts?","webpack:///../../dev-packages/application-package/src/environment.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebook-renderers.ts?","webpack:///../../packages/plugin-ext/src/plugin/plugin-storage.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/rename.ts?","webpack:///../../packages/plugin-ext/src/plugin/tabs.ts?","webpack:///../../packages/plugin-ext/src/common/plugin-ext-api-contribution.ts?","webpack:///../../packages/core/src/browser/menu/action-menu-node.ts?","webpack:///../../packages/terminal/src/common/shell-terminal-protocol.ts?","webpack:///../../packages/core/src/common/promise-util.ts?","webpack:///../../packages/core/src/common/contribution-filter/contribution-filter.ts?","webpack:///../../packages/plugin-ext/src/common/semantic-tokens-dto.ts?","webpack:///../../packages/plugin-ext/src/common/arrays.ts?","webpack:///../../packages/core/src/common/logger-watcher.ts?","webpack:///../../packages/plugin-ext/src/plugin/text-editors.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/definition.ts?","webpack:///../../packages/core/src/common/markdown-rendering/markdown-string.ts?","webpack:///../../packages/core/shared/vscode-languageserver-protocol/index.js?","webpack:///../../packages/plugin-ext/src/common/collections.ts?","webpack:///../../packages/plugin-ext/src/common/paths-util.ts?","webpack:///../../packages/core/src/common/array-utils.ts?","webpack:///../../packages/core/src/common/event.ts?","webpack:///../../packages/core/src/common/messaging/handler.ts?","webpack:///../../packages/core/src/common/encodings.ts?","webpack:///../../packages/plugin-ext/src/plugin/plugin-context.ts?","webpack:///../../packages/core/src/common/numbers.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/workspace-symbol.ts?","webpack:///../../packages/plugin-ext/src/plugin/window-state.ts?","webpack:///../../packages/core/src/common/tree-preference.ts?","webpack:///../../packages/debug/src/common/debug-adapter-session.ts?","webpack:///../../packages/plugin-ext/src/plugin/secrets-ext.ts?","webpack:///../../packages/core/src/common/contribution-filter/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/hover.ts?","webpack:///../../packages/core/src/common/stream.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/diagnostics.ts?","webpack:///../../packages/plugin-ext/src/plugin/terminal-ext.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/folding.ts?","webpack:///../../packages/core/src/common/preferences/preference-schema.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/inline-completion.ts?","webpack:///../../packages/plugin-ext/src/plugin/message-registry.ts?","webpack:///../../packages/core/src/common/menu/menu-model-registry.ts?","webpack:///../../packages/plugin-ext/src/plugin/plugin-icon-path.ts?","webpack:///../../packages/core/src/common/command.ts?","webpack:///../../packages/core/src/common/progress-service-protocol.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/evaluatable-expression.ts?","webpack:///../../packages/plugin-ext/src/plugin/debug/plugin-debug-adapter-session.ts?","webpack:///../../packages/core/src/common/performance/stopwatch.ts?","webpack:///../../packages/core/src/common/selection-service.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebook-editor.ts?","webpack:///../../packages/plugin-ext/src/plugin/decorations.ts?","webpack:///../../packages/plugin-ext/src/plugin/word-helper.ts?","webpack:///../../packages/core/src/common/version.ts?","webpack:///../../packages/plugin-ext/src/main/browser/hierarchy/hierarchy-types-converters.ts?","webpack:///../../packages/core/src/common/listener.ts?","webpack:///../../packages/plugin-ext/src/plugin/telemetry-ext.ts?","webpack:///../../packages/notebook/src/common/notebook-common.ts?","webpack:///../../packages/core/src/common/preferences/injectable-preference-proxy.ts?","webpack:///../../packages/core/src/common/supported-encodings.ts?","webpack:///../../packages/plugin-ext/src/plugin/prefix-sum-computer.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/inlay-hints.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/selection-range.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/implementation.ts?","webpack:///../../packages/plugin-ext/src/plugin/status-bar-message-registry.ts?","webpack:///../../packages/core/src/common/encoding-service.ts?","webpack:///../../packages/core/src/common/disposable.ts?","webpack:///../../packages/plugin-ext/src/common/disposable-util.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/linked-editing-range.ts?","webpack:///../../packages/plugin-ext/src/plugin/custom-editors.ts?","webpack:///../../packages/core/src/common/os.ts?","webpack:///../../packages/core/src/common/view-column.ts?","webpack:///../../packages/plugin-ext/src/common/types.ts?","webpack:///../../packages/plugin-ext/src/plugin/clipboard-ext.ts?","webpack:///../../packages/core/src/common/buffer.ts?","webpack:///../../packages/plugin-ext/src/common/lm-protocol.ts?","webpack:///../../packages/plugin-ext/src/common/errors.ts?","webpack:///../../packages/plugin-ext/src/plugin/theming.ts?","webpack:///../../packages/core/shared/inversify/index.js?","webpack:///../../packages/plugin-ext/src/plugin/plugin-manager.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebooks.ts?","webpack:///../../packages/plugin-ext/src/plugin/notification.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/type-hierarchy.ts?","webpack:///../../packages/core/src/common/messaging/connection-error-handler.ts?","webpack:///../../packages/core/src/common/message-rpc/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/timeline.ts?","webpack:///../../packages/plugin-ext/src/hosted/browser/worker/worker-plugin-module.ts?","webpack:///../../packages/core/shared/vscode-uri/index.js?","webpack:///../../packages/plugin-ext/src/common/plugin-api-rpc.ts?","webpack:///../../packages/core/src/common/path.ts?","webpack:///../../packages/plugin-ext/src/plugin/comments.ts?","webpack:///../../packages/plugin-ext/src/plugin/node/debug/plugin-node-debug-adapter-creator.ts?","webpack:///../../packages/core/src/common/preferences/preference-service.ts?","webpack:///../../packages/core/src/common/preferences/preference-proxy.ts?","webpack:///../../packages/core/src/common/application-error.ts?","webpack:///../../packages/plugin-ext/src/common/reference-map.ts?","webpack:///../../packages/core/src/common/contribution-filter/contribution-filter-registry.ts?","webpack:///../../packages/plugin-ext/src/common/object-identifier.ts?","webpack:///../../packages/plugin-ext/src/plugin/status-bar/status-bar-item.ts?","webpack:///../../packages/core/src/common/preferences/preference-provider.ts?","webpack:///../../packages/core/src/common/resource.ts?","webpack:///../../packages/core/src/common/preferences/defaults-preference-provider.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/signature.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/inline-values.ts?","webpack:///../../packages/filesystem/src/common/files.ts?","webpack:///../../packages/plugin-ext/src/plugin/document-data.ts?","webpack:///../../packages/core/src/browser/endpoint.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/type-definition.ts?","webpack:///../../packages/plugin-ext/src/common/rpc-protocol.ts?","webpack:///../../packages/core/src/common/message-rpc/channel.ts?","webpack:///../../packages/core/src/common/quick-pick-service.ts?","webpack:///../../packages/core/src/common/contribution-provider.ts?","webpack:///../../packages/plugin-ext/src/common/cache.ts?","webpack:///../../packages/plugin-ext/src/plugin/type-converters.ts?","webpack:///../../packages/core/src/common/preferences/preference-configurations.ts?","webpack:///../../packages/core/src/common/message-rpc/rpc-protocol.ts?","webpack:///../../packages/core/src/common/preferences/preference-language-override-service.ts?","webpack:///../../packages/plugin-ext/src/plugin/label-service.ts?","webpack:///../../packages/test/src/common/tree-delta.ts?","webpack:///../../packages/plugin-ext/src/common/plugin-protocol.ts?","webpack:///../../packages/plugin-ext/src/common/plugin-api-rpc-model.ts?","webpack:///../../packages/plugin-ext/src/plugin/file-system-ext-impl.ts?","webpack:///../../packages/plugin-ext/src/plugin/quick-open.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/document-formatting.ts?","webpack:///../../packages/core/src/common/preferences/preference-provider-impl.ts?","webpack:///../../packages/plugin-ext/src/common/test-types.ts?","webpack:///../../packages/core/src/common/uuid.ts?","webpack:///../../packages/plugin-ext/src/plugin/file-system-event-service-ext-impl.ts?","webpack:///../../packages/plugin-ext/src/plugin/markdown-string.ts?","webpack:///../../packages/core/src/common/selection.ts?","webpack:///../../packages/core/src/common/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/known-commands.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/on-type-formatting.ts?","webpack:///../../packages/core/src/common/telemetry.ts?","webpack:///../../packages/core/src/common/lsp-types.ts?","webpack:///../../packages/plugin-ext/src/plugin/debug/debug-ext.ts?","webpack:///../../packages/core/src/common/messaging/proxy-factory.ts?","webpack:///../../packages/core/src/common/messaging/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/link-provider.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/range-formatting.ts?","webpack:///../../packages/plugin-ext/src/common/connection.ts?","webpack:///../../packages/core/src/common/uri.ts?","webpack:///../../packages/core/src/common/cancellation.ts?","webpack:///../../packages/test/src/common/collections.ts?","webpack:///../../packages/plugin-ext/src/plugin/authentication-ext.ts?","webpack:///../../packages/plugin-ext/src/plugin/dialogs.ts?","webpack:///../../packages/plugin-ext/src/plugin/workspace.ts?","webpack:///../../packages/core/src/common/contribution-filter/filter.ts?","webpack:///../../packages/core/src/common/preferences/index.ts?","webpack:///../../packages/debug/src/common/inline-debug-adapter.ts?","webpack:///../../packages/plugin-ext/src/plugin/output-channel/output-channel-item.ts?","webpack:///../../packages/plugin-ext/src/plugin/output-channel-registry.ts?","webpack:///../../packages/core/src/common/logger.ts?","webpack:///../../packages/core/src/common/markdown-rendering/index.ts?","webpack:///../../packages/plugin-ext/src/hosted/browser/worker/plugin-manifest-loader.ts?","webpack:///../../packages/core/src/common/core-preferences.ts?","webpack:///../../packages/plugin-ext/src/common/editor-options.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/call-hierarchy.ts?","webpack:///../../packages/core/src/common/preferences/preference-scope.ts?","webpack:///../../packages/plugin-ext/src/plugin/command-registry.ts?","webpack:///../../packages/core/src/common/performance/index.ts?","webpack:///../../packages/plugin-ext/src/common/character-classifier.ts?","webpack:///../../packages/core/src/common/message-rpc/msg-pack-extension-manager.ts?","webpack:///../../packages/core/src/common/message-service.ts?","webpack:///../../packages/plugin-ext/src/plugin/lm-ext.ts?","webpack:///../../packages/plugin-ext/src/hosted/browser/worker/worker-main.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/completion.ts?","webpack:///../../packages/core/src/browser/menu/composite-menu-node.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/util.ts?","webpack:///../../packages/plugin-ext/src/plugin/tasks/tasks.ts?","webpack:///../../packages/core/src/common/performance/measurement-protocol.ts?","webpack:///../../packages/core/src/common/types.ts?","webpack:///../../packages/core/src/common/message-rpc/uint8-array-message-buffer.ts?","webpack:///../../packages/plugin-ext/src/plugin/uri-ext.ts?","webpack:///../../packages/core/src/common/logger-protocol.ts?","webpack:///../../packages/core/src/common/glob.ts?","webpack:///../../packages/plugin-ext/src/common/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/color.ts?","webpack:///../../packages/plugin-ext/src/plugin/types-impl.ts?","webpack:///../../packages/editor/src/common/language-selector.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebook-document.ts?","webpack:///../../packages/plugin-ext/src/plugin/output-channel/log-output-channel.ts?","webpack:///../../packages/debug/src/common/debug-uri-utils.ts?","webpack:///../../packages/plugin-ext/src/common/assert.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/declaration.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/lens.ts?","webpack:///../../packages/core/src/common/progress-service.ts?","webpack:///../../packages/plugin-ext/src/plugin/tests.ts?","webpack:///../../packages/core/src/common/collections.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages.ts?","webpack:///../../packages/plugin-ext/src/common/link-computer.ts?","webpack:///../../packages/plugin-ext/src/common/plugin-identifiers.ts?","webpack:///../../packages/plugin-ext/src/plugin/editors-and-documents.ts?","webpack:///../../packages/core/src/common/prioritizeable.ts?","webpack:///../../packages/core/src/common/inversify-utils.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebook-editors.ts?","webpack:///../../packages/plugin-ext/src/plugin/localization-ext.ts?","webpack:///../../packages/core/src/common/menu/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/debug/plugin-debug-adapter-tracker.ts?","webpack:///../../packages/debug/src/node/stream-debug-adapter.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/outline.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/document-highlight.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebook-documents.ts?","webpack:///../../packages/plugin-ext/src/common/uri-components.ts?","webpack:///../../packages/plugin-ext/src/plugin/tree/tree-views.ts?","webpack:///../../packages/core/src/common/hash.ts?","webpack:///../../packages/plugin-ext/src/common/uint.ts?","webpack:///../../packages/core/src/common/menu/menu-types.ts?","webpack:///../../packages/plugin-ext/src/plugin/logger.ts?","webpack:///../../packages/core/src/common/nls.ts?","webpack:///../../packages/core/src/common/strings.ts?","webpack:///../../packages/core/src/common/i18n/localization.ts?","webpack:///../../packages/plugin-ext/src/plugin/preference-registry.ts?","webpack:///../../packages/core/src/common/reference.ts?","webpack:///../../packages/plugin-ext/src/plugin/webviews.ts?","webpack:///../../packages/core/src/common/message-service-protocol.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages-utils.ts?","webpack:///../../packages/plugin-ext/src/plugin/scm.ts?","webpack:///../../packages/plugin-ext/src/plugin/text-editor.ts?","webpack:///../../packages/notebook/src/common/index.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/reference.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/document-drop-edit.ts?","webpack:///../../packages/core/src/common/preferences/preference-schema-service.ts?","webpack:///../../packages/plugin-ext/src/plugin/notebook/notebook-kernels.ts?","webpack:///../../packages/core/src/common/objects.ts?","webpack:///../../packages/plugin-ext/src/plugin/test-item.ts?","webpack:///../../packages/plugin-ext/src/common/objects.ts?","webpack:///../../packages/core/src/common/severity.ts?","webpack:///../../packages/plugin-ext/src/plugin/webview-views.ts?","webpack:///../../packages/core/src/common/paths.ts?","webpack:///../../packages/plugin-ext/src/common/id-generator.ts?","webpack:///../../packages/plugin-ext/src/plugin/env.ts?","webpack:///../../packages/plugin-ext/src/hosted/browser/worker/debug-stub.ts?","webpack:///../../packages/core/src/common/markdown-rendering/icon-utilities.ts?","webpack:///../../packages/plugin-ext/src/hosted/browser/worker/worker-env-ext.ts?","webpack:///../../packages/plugin-ext/src/plugin/path.ts?","webpack:///../../packages/plugin-ext/src/plugin/languages/semantic-highlighting.ts?","webpack:///webpack/bootstrap?","webpack:///webpack/runtime/define property getters?","webpack:///webpack/runtime/ensure chunk?","webpack:///webpack/runtime/get javascript chunk filename?","webpack:///webpack/runtime/global?","webpack:///webpack/runtime/hasOwnProperty shorthand?","webpack:///webpack/runtime/make namespace object?","webpack:///webpack/runtime/node module decorator?","webpack:///webpack/runtime/publicPath?","webpack:///webpack/runtime/importScripts chunk loading?","webpack:///webpack/startup?"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(136).then(next);\n};","module.exports = require('@lumino/coreutils');\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { Selection, WorkspaceEditDto } from '../../common/plugin-api-rpc';\nimport { Range, CodeActionContext, CodeAction } from '../../common/plugin-api-rpc-model';\nimport * as Converter from '../type-converters';\nimport { DocumentsExtImpl } from '../documents';\nimport { Diagnostics } from './diagnostics';\nimport { CodeActionKind } from '../types-impl';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { isObject } from '@theia/core/lib/common';\n\nexport class CodeActionAdapter {\n\n    constructor(\n        private readonly provider: theia.CodeActionProvider,\n        private readonly document: DocumentsExtImpl,\n        private readonly diagnostics: Diagnostics,\n        private readonly pluginId: string,\n        private readonly commands: CommandRegistryImpl\n    ) { }\n\n    private readonly cache = new Map<number, theia.CodeAction | theia.Command>();\n    private readonly disposables = new Map<number, DisposableCollection>();\n\n    private cacheId = 0;\n\n    async provideCodeAction(resource: URI, rangeOrSelection: Range | Selection,\n        context: CodeActionContext, token: theia.CancellationToken): Promise<CodeAction[] | undefined> {\n        const document = this.document.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const ran = CodeActionAdapter._isSelection(rangeOrSelection)\n            ? <theia.Selection>Converter.toSelection(rangeOrSelection)\n            : <theia.Range>Converter.toRange(rangeOrSelection);\n        const allDiagnostics: theia.Diagnostic[] = [];\n\n        for (const diagnostic of this.diagnostics.getDiagnostics(resource)) {\n            if (ran.intersection(diagnostic.range)) {\n                allDiagnostics.push(diagnostic);\n            }\n        }\n\n        const codeActionContext: theia.CodeActionContext = {\n            diagnostics: allDiagnostics,\n            only: context.only ? new CodeActionKind(context.only) : undefined,\n            triggerKind: Converter.toCodeActionTriggerKind(context.trigger)\n        };\n\n        const commandsOrActions = await this.provider.provideCodeActions(doc, ran, codeActionContext, token);\n\n        if (!Array.isArray(commandsOrActions) || commandsOrActions.length === 0) {\n            return undefined;\n        }\n        const result: CodeAction[] = [];\n        for (const candidate of commandsOrActions) {\n            if (!candidate) {\n                continue;\n            }\n\n            // Cache candidates and created commands.\n            const nextCacheId = this.nextCacheId();\n            const toDispose = new DisposableCollection();\n            this.cache.set(nextCacheId, candidate);\n            this.disposables.set(nextCacheId, toDispose);\n\n            if (CodeActionAdapter._isCommand(candidate)) {\n                result.push({\n                    cacheId: nextCacheId,\n                    title: candidate.title || '',\n                    command: this.commands.converter.toSafeCommand(candidate, toDispose)\n                });\n            } else {\n                if (codeActionContext.only) {\n                    if (!candidate.kind) {\n                        /* eslint-disable-next-line max-len */\n                        console.warn(`${this.pluginId} - Code actions of kind '${codeActionContext.only.value}' requested but returned code action does not have a 'kind'. Code action will be dropped. Please set 'CodeAction.kind'.`);\n                    } else if (!codeActionContext.only.contains(candidate.kind)) {\n                        /* eslint-disable-next-line max-len */\n                        console.warn(`${this.pluginId} - Code actions of kind '${codeActionContext.only.value}' requested but returned code action is of kind '${candidate.kind.value}'. Code action will be dropped. Please check 'CodeActionContext.only' to only return requested code action.`);\n                    }\n                }\n\n                result.push({\n                    cacheId: nextCacheId,\n                    title: candidate.title,\n                    command: this.commands.converter.toSafeCommand(candidate.command, toDispose),\n                    diagnostics: candidate.diagnostics && candidate.diagnostics.map(Converter.convertDiagnosticToMarkerData),\n                    edit: candidate.edit && Converter.fromWorkspaceEdit(candidate.edit),\n                    kind: candidate.kind && candidate.kind.value,\n                    disabled: candidate.disabled,\n                    isPreferred: candidate.isPreferred\n                });\n            }\n        }\n\n        return result;\n    }\n\n    async releaseCodeActions(cacheIds: number[]): Promise<void> {\n        cacheIds.forEach(id => {\n            this.cache.delete(id);\n            const toDispose = this.disposables.get(id);\n            if (toDispose) {\n                toDispose.dispose();\n                this.disposables.delete(id);\n            }\n        });\n    }\n\n    async resolveCodeAction(cacheId: number, token: theia.CancellationToken): Promise<WorkspaceEditDto | undefined> {\n        if (!this.provider.resolveCodeAction) {\n            return undefined;\n        }\n\n        // Code actions are only resolved if they are not legacy commands and don't have an edit property\n        // https://code.visualstudio.com/api/references/vscode-api#CodeActionProvider\n        const candidate = this.cache.get(cacheId);\n        if (!candidate || CodeActionAdapter._isCommand(candidate) || candidate.edit) {\n            return undefined;\n        }\n\n        const resolved = await this.provider.resolveCodeAction(candidate, token);\n        return resolved?.edit && Converter.fromWorkspaceEdit(resolved.edit);\n    }\n\n    private nextCacheId(): number {\n        return this.cacheId++;\n    }\n\n    private static _isCommand(arg: unknown): arg is theia.Command {\n        return isObject<theia.Command>(arg) && typeof arg.command === 'string';\n    }\n\n    private static _isSelection(arg: unknown): arg is Selection {\n        return isObject<Selection>(arg)\n            && typeof arg.selectionStartLineNumber === 'number'\n            && typeof arg.selectionStartColumn === 'number'\n            && typeof arg.positionLineNumber === 'number'\n            && typeof arg.positionColumn === 'number';\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { DebugAdapter } from '@theia/debug/lib/common/debug-model';\nimport { PluginPackageDebuggersContribution } from '../../common';\nimport { DebugAdapterInlineImplementation } from '../types-impl';\nimport { InlineDebugAdapter } from '@theia/debug/lib/common/inline-debug-adapter';\n\nexport class PluginDebugAdapterCreator {\n    public async resolveDebugAdapterExecutable(_pluginPath: string, _debuggerContribution: PluginPackageDebuggersContribution): Promise<theia.DebugAdapterExecutable | undefined> {\n        // Node is required to run the default executable\n        return undefined;\n    }\n\n    public async createDebugAdapter(\n        session: theia.DebugSession,\n        _debugConfiguration: theia.DebugConfiguration,\n        executable: theia.DebugAdapterExecutable | undefined,\n        descriptorFactory: theia.DebugAdapterDescriptorFactory | undefined\n    ): Promise<DebugAdapter> {\n        if (descriptorFactory) {\n            const descriptor = await descriptorFactory.createDebugAdapterDescriptor(session, executable);\n            if (descriptor) {\n                if (DebugAdapterInlineImplementation.is(descriptor)) {\n                    return this.connectInlineDebugAdapter(descriptor);\n                }\n            }\n        }\n\n        throw new Error('It is not possible to provide debug adapter executable.');\n    }\n\n    public connectInlineDebugAdapter(adapter: DebugAdapterInlineImplementation): InlineDebugAdapter {\n        return new InlineDebugAdapter(adapter.implementation);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * based on https://github.com/Microsoft/vscode/blob/bf9a27ec01f2ef82fc45f69e0c946c7d74a57d3e/src/vs/workbench/api/node/extHostDocumentSaveParticipant.ts\n */\nimport { DocumentsExt, ModelChangedEvent, PLUGIN_RPC_CONTEXT, DocumentsMain, SingleEditOperation } from '../common/plugin-api-rpc';\nimport { TextEdit, URI } from './types-impl';\nimport { UriComponents } from '../common/uri-components';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport * as theia from '@theia/plugin';\nimport { DocumentDataExt, setWordDefinitionFor } from './document-data';\nimport { EditorsAndDocumentsExtImpl } from './editors-and-documents';\nimport * as Converter from './type-converters';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Range, TextDocumentShowOptions } from '../common/plugin-api-rpc-model';\n\nexport class DocumentsExtImpl implements DocumentsExt {\n    private toDispose = new DisposableCollection();\n    private _onDidAddDocument = new Emitter<theia.TextDocument>();\n    private _onDidRemoveDocument = new Emitter<theia.TextDocument>();\n    private _onDidChangeDocument = new Emitter<theia.TextDocumentChangeEvent>();\n    private _onDidSaveTextDocument = new Emitter<theia.TextDocument>();\n    private _onWillSaveTextDocument = new Emitter<theia.TextDocumentWillSaveEvent>();\n\n    readonly onDidAddDocument: Event<theia.TextDocument> = this._onDidAddDocument.event;\n    readonly onDidRemoveDocument: Event<theia.TextDocument> = this._onDidRemoveDocument.event;\n    readonly onDidChangeDocument: Event<theia.TextDocumentChangeEvent> = this._onDidChangeDocument.event;\n    readonly onDidSaveTextDocument: Event<theia.TextDocument> = this._onDidSaveTextDocument.event;\n    readonly onWillSaveTextDocument: Event<theia.TextDocumentWillSaveEvent> = this._onWillSaveTextDocument.event;\n\n    private proxy: DocumentsMain;\n    private loadingDocuments = new Map<string, Promise<DocumentDataExt | undefined>>();\n\n    constructor(rpc: RPCProtocol, private editorsAndDocuments: EditorsAndDocumentsExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.DOCUMENTS_MAIN);\n        this.toDispose.push(\n            this.editorsAndDocuments.onDidAddDocuments(documents => {\n                for (const document of documents) {\n                    this._onDidAddDocument.fire(document.document);\n                }\n            })\n        );\n\n        this.toDispose.push(\n            this.editorsAndDocuments.onDidRemoveDocuments(documents => {\n                for (const data of documents) {\n                    this._onDidRemoveDocument.fire(data.document);\n                }\n            })\n        );\n    }\n    $acceptModelModeChanged(startUrl: UriComponents, oldModeId: string, newModeId: string): void {\n        const uri = URI.revive(startUrl);\n        const uriString = uri.toString();\n\n        const data = this.editorsAndDocuments.getDocument(uriString);\n        if (data) {\n            this._onDidRemoveDocument.fire(data.document);\n            data.acceptLanguageId(newModeId);\n            this._onDidAddDocument.fire(data.document);\n        }\n    }\n    $acceptModelSaved(strUrl: UriComponents): void {\n        const uri = URI.revive(strUrl);\n        const uriString = uri.toString();\n        const data = this.editorsAndDocuments.getDocument(uriString);\n        this.$acceptDirtyStateChanged(strUrl, false);\n        if (data) {\n            this._onDidSaveTextDocument.fire(data.document);\n        }\n    }\n\n    async $acceptModelWillSave(strUrl: UriComponents, reason: theia.TextDocumentSaveReason, saveTimeout: number): Promise<SingleEditOperation[]> {\n        const uri = URI.revive(strUrl).toString();\n        const operations: SingleEditOperation[] = [];\n        let didTimeout = false;\n        // try to timeout early to squeeze edits at least from some save participants\n        const didTimeoutHandle = setTimeout(() => didTimeout = true, saveTimeout - 250);\n        try {\n            await this._onWillSaveTextDocument.sequence(async fireEvent => {\n                if (didTimeout) {\n                    return false;\n                }\n                try {\n                    const documentData = this.editorsAndDocuments.getDocument(uri);\n                    if (documentData) {\n                        const { document } = documentData;\n                        await this.fireTextDocumentWillSaveEvent({\n                            document, reason, fireEvent,\n                            accept: operation => operations.push(operation)\n                        });\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n                return !didTimeout;\n            });\n        } finally {\n            clearTimeout(didTimeoutHandle);\n        }\n        return operations;\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    protected async fireTextDocumentWillSaveEvent({\n        document, reason, fireEvent, accept\n    }: {\n        document: theia.TextDocument,\n        reason: theia.TextDocumentSaveReason,\n        fireEvent: (e: theia.TextDocumentWillSaveEvent) => any,\n        accept: (operation: SingleEditOperation) => void\n    }): Promise<void> {\n\n        const promises: PromiseLike<TextEdit[] | any>[] = [];\n        fireEvent(Object.freeze({\n            document, reason,\n            waitUntil(p: PromiseLike<TextEdit[] | any>): void {\n                if (Object.isFrozen(promises)) {\n                    throw new Error('waitUntil can not be called async');\n                }\n                promises.push(p);\n            }\n        }));\n        Object.freeze(promises);\n\n        await Promise.all(promises).then(allEdits => allEdits.forEach(edits => {\n            if (Array.isArray(edits)) {\n                edits.forEach(edit => {\n                    if (TextEdit.isTextEdit(edit)) {\n                        accept(Converter.fromTextEdit(edit));\n                    }\n                });\n            }\n        }));\n    }\n    /* eslint-enable  @typescript-eslint/no-explicit-any */\n\n    $acceptDirtyStateChanged(strUrl: UriComponents, isDirty: boolean): void {\n        const uri = URI.revive(strUrl);\n        const uriString = uri.toString();\n        const data = this.editorsAndDocuments.getDocument(uriString);\n        if (!data) {\n            throw new Error('unknown document: ' + uriString);\n        }\n        data.acceptIsDirty(isDirty);\n        this._onDidChangeDocument.fire({\n            document: data.document,\n            contentChanges: [],\n            reason: undefined,\n        });\n    }\n    $acceptEncodingChanged(strUrl: UriComponents, encoding: string): void {\n        const uri = URI.revive(strUrl);\n        const uriString = uri.toString();\n        const data = this.editorsAndDocuments.getDocument(uriString);\n        if (!data) {\n            throw new Error('unknown document: ' + uriString);\n        }\n        data.acceptEncoding(encoding);\n        this._onDidChangeDocument.fire({\n            document: data.document,\n            contentChanges: [],\n            reason: undefined,\n        });\n    }\n    $acceptModelChanged(strUrl: UriComponents, e: ModelChangedEvent, isDirty: boolean): void {\n        const uri = URI.revive(strUrl);\n        const uriString = uri.toString();\n        const data = this.editorsAndDocuments.getDocument(uriString);\n        if (!data) {\n            throw new Error('unknown document: ' + uriString);\n        }\n        data.acceptIsDirty(isDirty);\n        data.onEvents(e);\n        this._onDidChangeDocument.fire({\n            document: data.document,\n            reason: e.reason,\n            contentChanges: e.changes.map(change => ({\n                range: Converter.toRange(change.range),\n                rangeOffset: change.rangeOffset,\n                rangeLength: change.rangeLength,\n                text: change.text\n            }))\n        });\n    }\n    getAllDocumentData(): DocumentDataExt[] {\n        return this.editorsAndDocuments.allDocuments();\n    }\n\n    getDocumentData(resource: theia.Uri): DocumentDataExt | undefined {\n        if (resource) {\n            return this.editorsAndDocuments.getDocument(resource.toString());\n        }\n\n        return undefined;\n    }\n\n    public getDocument(resource: theia.Uri): theia.TextDocument {\n        const data = this.getDocumentData(resource);\n        if (!data?.document) {\n            throw new Error(`Unable to retrieve document from URI '${resource}'`);\n        }\n        return data.document;\n    }\n\n    /**\n     * Retrieve document and open it in the editor if need.\n     *\n     * @param uri path to the resource\n     * @param options if options exists, resource will be opened in editor, otherwise only document object is returned\n     */\n    async showDocument(uri: URI, options?: theia.TextDocumentShowOptions): Promise<DocumentDataExt | undefined> {\n        // Determine whether the document is already loading\n        const loadingDocument = this.loadingDocuments.get(uri.toString());\n        if (loadingDocument) {\n            // return the promise if document is already loading\n            return loadingDocument;\n        }\n\n        try {\n            // start opening document\n            const document = this.loadDocument(uri, options);\n            // add loader to the map\n            this.loadingDocuments.set(uri.toString(), document);\n            // wait the document being opened\n            await document;\n            // return opened document\n            return document;\n        } catch (error) {\n            return Promise.reject(error);\n        } finally {\n            // remove loader from the map\n            this.loadingDocuments.delete(uri.toString());\n        }\n    }\n\n    async openDocument(uri: URI, options?: { language?: string; content?: string; encoding?: string }): Promise<DocumentDataExt | undefined> {\n        // If we have the document cached and no encoding options are provided,\n        // we should just return current document\n        const cached = this.editorsAndDocuments.getDocument(uri.toString());\n        if (cached) {\n            if (!options?.encoding || options.encoding === cached.document.encoding) {\n                return cached;\n            }\n        }\n        await this.proxy.$tryOpenDocument(uri, options?.encoding);\n        return this.editorsAndDocuments.getDocument(uri.toString());\n    }\n\n    private async loadDocument(uri: URI, options?: theia.TextDocumentShowOptions): Promise<DocumentDataExt | undefined> {\n        let documentOptions: TextDocumentShowOptions | undefined;\n        if (options) {\n            let selection: Range | undefined;\n            if (options.selection) {\n                const { start, end } = options.selection;\n                selection = {\n                    startLineNumber: start.line + 1,\n                    startColumn: start.character + 1,\n                    endLineNumber: end.line + 1,\n                    endColumn: end.character + 1\n                };\n            }\n            documentOptions = {\n                selection,\n                preserveFocus: options.preserveFocus,\n                preview: options.preview,\n                viewColumn: options.viewColumn\n            };\n        }\n        await this.proxy.$tryShowDocument(uri, documentOptions);\n        return this.editorsAndDocuments.getDocument(uri.toString());\n    }\n\n    async createDocumentData(options?: { language?: string; content?: string, encoding?: string }): Promise<URI> {\n        return this.proxy.$tryCreateDocument(options).then(data => URI.revive(data));\n    }\n\n    setWordDefinitionFor(modeId: string, wordDefinition: RegExp | null): void {\n        setWordDefinitionFor(modeId, wordDefinition);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Packr as MsgPack } from 'msgpackr';\nimport { ReadBuffer, WriteBuffer } from './message-buffer';\nimport { MsgPackExtensionManager } from './msg-pack-extension-manager';\n\n/**\n * This code lets you encode rpc protocol messages (request/reply/notification/error/cancel)\n * into a channel write buffer and decode the same messages from a read buffer.\n * Custom encoders/decoders can be registered to specially handling certain types of values\n * to be encoded. Clients are responsible for ensuring that the set of tags for encoders\n * is distinct and the same at both ends of a channel.\n */\n\nexport type RpcMessage = RequestMessage | ReplyMessage | ReplyErrMessage | CancelMessage | NotificationMessage;\n\nexport const enum RpcMessageType {\n    Request = 1,\n    Notification = 2,\n    Reply = 3,\n    ReplyErr = 4,\n    Cancel = 5,\n}\n\nexport interface CancelMessage {\n    type: RpcMessageType.Cancel;\n    id: number;\n}\n\nexport interface RequestMessage {\n    type: RpcMessageType.Request;\n    id: number;\n    method: string;\n    args: any[];\n}\n\nexport interface NotificationMessage {\n    type: RpcMessageType.Notification;\n    id?: number;\n    method: string;\n    args: any[];\n}\n\nexport interface ReplyMessage {\n    type: RpcMessageType.Reply;\n    id: number;\n    res: any;\n}\n\nexport interface ReplyErrMessage {\n    type: RpcMessageType.ReplyErr;\n    id: number;\n    err: any;\n}\n\nexport interface SerializedError {\n    readonly $isError: true;\n    readonly name: string;\n    readonly message: string;\n    readonly stack: string;\n}\n\n/**\n * A special error that can be returned in case a request\n * has failed. Provides additional information i.e. an error code\n * and additional error data.\n */\nexport class ResponseError extends Error {\n    constructor(readonly code: number, message: string, readonly data: any) {\n        super(message);\n    }\n}\n\n/**\n * Custom error thrown by the {@link RpcMessageEncoder} if an error occurred during the encoding and the\n * object could not be written to the given {@link WriteBuffer}\n */\nexport class EncodingError extends Error {\n    constructor(msg: string, public cause?: Error) {\n        super(msg);\n    }\n}\n\n/**\n * A `RpcMessageDecoder` parses a a binary message received via {@link ReadBuffer} into a {@link RpcMessage}\n */\nexport interface RpcMessageDecoder {\n    parse(buffer: ReadBuffer): RpcMessage;\n}\n\n/**\n * A `RpcMessageEncoder` writes {@link RpcMessage} objects to a {@link WriteBuffer}. Note that it is\n * up to clients to commit the message. This allows for multiple messages being\n * encoded before sending.\n */\nexport interface RpcMessageEncoder {\n    cancel(buf: WriteBuffer, requestId: number): void;\n\n    notification(buf: WriteBuffer, method: string, args: any[], id?: number): void\n\n    request(buf: WriteBuffer, requestId: number, method: string, args: any[]): void\n\n    replyOK(buf: WriteBuffer, requestId: number, res: any): void\n\n    replyErr(buf: WriteBuffer, requestId: number, err: any): void\n\n}\n\nexport const defaultMsgPack = new MsgPack({ moreTypes: true, encodeUndefinedAsNil: false, bundleStrings: false });\n\nexport class MsgPackMessageEncoder implements RpcMessageEncoder {\n\n    constructor(protected readonly msgPack: MsgPack = defaultMsgPack) { }\n\n    cancel(buf: WriteBuffer, requestId: number): void {\n        this.encode<CancelMessage>(buf, { type: RpcMessageType.Cancel, id: requestId });\n    }\n    notification(buf: WriteBuffer, method: string, args: any[], id?: number): void {\n        this.encode<NotificationMessage>(buf, { type: RpcMessageType.Notification, method, args, id });\n    }\n    request(buf: WriteBuffer, requestId: number, method: string, args: any[]): void {\n        this.encode<RequestMessage>(buf, { type: RpcMessageType.Request, id: requestId, method, args });\n    }\n    replyOK(buf: WriteBuffer, requestId: number, res: any): void {\n        this.encode<ReplyMessage>(buf, { type: RpcMessageType.Reply, id: requestId, res });\n    }\n    replyErr(buf: WriteBuffer, requestId: number, err: any): void {\n        this.encode<ReplyErrMessage>(buf, { type: RpcMessageType.ReplyErr, id: requestId, err });\n    }\n\n    encode<T = unknown>(buf: WriteBuffer, value: T): void {\n        try {\n            buf.writeBytes(this.msgPack.encode(value));\n        } catch (err) {\n            if (err instanceof Error) {\n                throw new EncodingError(`Error during encoding: '${err.message}'`, err);\n            }\n            throw err;\n        }\n    }\n}\n\nexport class MsgPackMessageDecoder implements RpcMessageDecoder {\n    constructor(protected readonly msgPack: MsgPack = defaultMsgPack) { }\n\n    decode<T = any>(buf: ReadBuffer): T {\n        const bytes = buf.readBytes();\n        return this.msgPack.decode(bytes);\n    }\n\n    parse(buffer: ReadBuffer): RpcMessage {\n        return this.decode(buffer);\n    }\n}\n\nexport function registerMsgPackExtensions(): void {\n    // Register custom msgPack extension for Errors.\n    MsgPackExtensionManager.getInstance().registerExtensions({\n        class: Error,\n        tag: 1,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        serialize: (error: any) => {\n            const { code, data, message, name } = error;\n            const stack = error.stacktrace ?? error.stack;\n            const isResponseError = error instanceof ResponseError;\n            return { code, data, message, name, stack, isResponseError };\n        },\n        deserialize: data => {\n            const error = data.isResponseError ? new ResponseError(data.code, data.message, data.data) : new Error(data.message);\n            error.name = data.name;\n            error.stack = data.stack;\n            return error;\n        }\n    });\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { TaskDto } from '../../common';\nimport * as Converter from '../type-converters';\n\nexport class TaskProviderAdapter {\n\n    constructor(private readonly provider: theia.TaskProvider) { }\n\n    provideTasks(token: theia.CancellationToken): Promise<TaskDto[]> {\n        return Promise.resolve(this.provider.provideTasks(token)).then(tasks => {\n            if (!Array.isArray(tasks)) {\n                return [];\n            }\n            const result: TaskDto[] = [];\n            for (const task of tasks) {\n                const data = Converter.fromTask(task);\n                if (!data) {\n                    continue;\n                }\n\n                result.push(data);\n            }\n            return result;\n        });\n    }\n\n    async resolveTask(task: TaskDto, token: theia.CancellationToken): Promise<TaskDto> {\n        if (typeof this.provider.resolveTask !== 'function') {\n            return task;\n        }\n\n        const item = Converter.toTask(task);\n        if (!item || item.execution) {\n            return task;\n        }\n\n        const resolved = await this.provider.resolveTask(item, token);\n        const converted = resolved ? Converter.fromTask(resolved) : Converter.fromTask(item);\n        return converted ?? task;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nconst isElectron: () => boolean = require('is-electron');\n\n/**\n * The electron specific environment.\n */\nclass ElectronEnv {\n\n    /**\n     * Environment variable that can be accessed on the `process` to check if running in electron or not.\n     */\n    readonly THEIA_ELECTRON_VERSION = 'THEIA_ELECTRON_VERSION';\n\n    /**\n     * `true` if running in electron. Otherwise, `false`.\n     *\n     * Can be called from both the `main` and the render process. Also works for forked cluster workers.\n     */\n    is(): boolean {\n        return isElectron();\n    }\n\n    /**\n     * `true` if running in Electron in development mode. Otherwise, `false`.\n     *\n     * Cannot be used from the browser. From the browser, it is always `false`.\n     */\n    isDevMode(): boolean {\n        return this.is()\n            && typeof process !== 'undefined'\n            // `defaultApp` does not exist on the Node.js API, but on electron (`electron.d.ts`).\n            && ((process as any).defaultApp || /node_modules[/\\\\]electron[/\\\\]/.test(process.execPath)); // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n\n    /**\n     * Creates and return with a new environment object which always contains the `ELECTRON_RUN_AS_NODE: 1` property pair.\n     * This should be used to `spawn` and `fork` a new Node.js process from the Node.js shipped with Electron. Otherwise, a new Electron\n     * process will be spawned which [has side-effects](https://github.com/eclipse-theia/theia/issues/5385).\n     *\n     * If called from the backend and the `env` argument is not defined, it falls back to `process.env` such as Node.js behaves\n     * with the [`SpawnOptions`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\n     * If `env` is defined, it will be shallow-copied.\n     *\n     * Calling this function from the frontend does not make any sense, hence throw an error.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    runAsNodeEnv(env?: any): any & { ELECTRON_RUN_AS_NODE: 1 } {\n        if (typeof process === 'undefined') {\n            throw new Error(\"'process' cannot be undefined.\");\n        }\n        return {\n            ...(env === undefined ? process.env : env),\n            ELECTRON_RUN_AS_NODE: 1\n        };\n    }\n\n}\n\nconst electron = new ElectronEnv();\nconst environment: Readonly<{ electron: ElectronEnv }> = { electron };\nexport { environment };\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { NotebookRenderersExt, NotebookRenderersMain, PLUGIN_RPC_CONTEXT } from '../../common';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { NotebooksExtImpl } from './notebooks';\nimport * as theia from '@theia/plugin';\nimport { NotebookEditor } from './notebook-editor';\nimport { Emitter } from '@theia/core';\n\nexport class NotebookRenderersExtImpl implements NotebookRenderersExt {\n    private readonly rendererMessageEmitters = new Map<string /* rendererId */, Emitter<{ editor: theia.NotebookEditor; message: unknown }>>();\n    private readonly proxy: NotebookRenderersMain;\n\n    constructor(rpc: RPCProtocol, private readonly notebooksExt: NotebooksExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTEBOOK_RENDERERS_MAIN);\n    }\n\n    public $postRendererMessage(editorId: string, rendererId: string, message: unknown): void {\n        const editor = this.notebooksExt.getEditorById(editorId);\n        this.rendererMessageEmitters.get(rendererId)?.fire({ editor: editor.apiEditor, message });\n    }\n\n    public createRendererMessaging(rendererId: string): theia.NotebookRendererMessaging {\n\n        const messaging: theia.NotebookRendererMessaging = {\n            onDidReceiveMessage: (listener, thisArg, disposables) => this.getOrCreateEmitterFor(rendererId).event(listener, thisArg, disposables),\n            postMessage: (message, editorOrAlias) => {\n                const extHostEditor = editorOrAlias && NotebookEditor.apiEditorsToExtHost.get(editorOrAlias);\n                return this.proxy.$postMessage(extHostEditor?.id, rendererId, message);\n            },\n        };\n\n        return messaging;\n    }\n\n    private getOrCreateEmitterFor(rendererId: string): Emitter<{ editor: theia.NotebookEditor, message: unknown }> {\n        let emitter = this.rendererMessageEmitters.get(rendererId);\n        if (emitter) {\n            return emitter;\n        }\n\n        emitter = new Emitter({\n            onLastListenerRemove: () => {\n                emitter?.dispose();\n                this.rendererMessageEmitters.delete(rendererId);\n            }\n        });\n\n        this.rendererMessageEmitters.set(rendererId, emitter);\n\n        return emitter;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Disposable, DisposableGroup, Event, Emitter } from '@theia/core';\nimport { PLUGIN_RPC_CONTEXT, StorageMain, StorageExt } from '../common/plugin-api-rpc';\nimport { KeysToAnyValues, KeysToKeysToAnyValue } from '../common/types';\nimport { RPCProtocol } from '../common/rpc-protocol';\n\nexport class Memento implements theia.Memento {\n\n    private cache: KeysToAnyValues;\n\n    constructor(\n        private readonly pluginId: string,\n        private readonly isPluginGlobalData: boolean,\n        private readonly storage: InternalStorageExt\n    ) {\n        this.cache = storage.getPerPluginData(pluginId, isPluginGlobalData);\n\n        if (!this.isPluginGlobalData) {\n            this.storage.storageDataChangedEvent((data: KeysToKeysToAnyValue) => {\n                this.cache = data[this.pluginId] ? data[this.pluginId] : {};\n            });\n        }\n    }\n\n    keys(): string[] {\n        return Object.entries(this.cache).filter(([, value]) => value !== undefined).map(([key]) => key);\n    }\n\n    get<T>(key: string): T | undefined;\n    get<T>(key: string, defaultValue: T): T;\n    get<T>(key: string, defaultValue?: T): T | undefined {\n        if (key && this.cache.hasOwnProperty(key)) {\n            return this.cache[key];\n        } else {\n            return defaultValue;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    update(key: string, value: any): Promise<void> {\n        if (value === undefined) {\n            delete this.cache[key];\n        } else {\n            this.cache[key] = value;\n        }\n        return this.storage.setPerPluginData(this.pluginId, this.cache, this.isPluginGlobalData).then(_ => undefined);\n    }\n}\n\nexport class GlobalState extends Memento {\n\n    /** @todo: API is not yet implemented. */\n    setKeysForSync(keys: readonly string[]): void { }\n}\n\nexport const InternalStorageExt = Symbol('InternalStorageExt');\nexport interface InternalStorageExt extends StorageExt {\n\n    init(initGlobalData: KeysToKeysToAnyValue, initWorkspaceData: KeysToKeysToAnyValue): void;\n\n    getPerPluginData(key: string, isGlobal: boolean): KeysToAnyValues;\n\n    setPerPluginData(key: string, value: KeysToAnyValues, isGlobal: boolean): Promise<boolean>;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    storageDataChangedEvent(listener: (e: KeysToKeysToAnyValue) => any, thisArgs?: any, disposables?: DisposableGroup): Disposable;\n\n    $updatePluginsWorkspaceData(workspaceData: KeysToKeysToAnyValue): void;\n\n}\n\n/**\n * Singleton.\n * Is used to proxy storage requests to main side.\n */\n@injectable()\nexport class KeyValueStorageProxy implements InternalStorageExt {\n\n    private storageDataChangedEmitter = new Emitter<KeysToKeysToAnyValue>();\n    public readonly storageDataChangedEvent: Event<KeysToKeysToAnyValue> = this.storageDataChangedEmitter.event;\n\n    private readonly proxy: StorageMain;\n\n    private globalDataCache: KeysToKeysToAnyValue;\n    private workspaceDataCache: KeysToKeysToAnyValue;\n\n    constructor(@inject(RPCProtocol) rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy<StorageMain>(PLUGIN_RPC_CONTEXT.STORAGE_MAIN);\n    }\n\n    init(initGlobalData: KeysToKeysToAnyValue, initWorkspaceData: KeysToKeysToAnyValue): void {\n        this.globalDataCache = initGlobalData;\n        this.workspaceDataCache = initWorkspaceData;\n    }\n\n    getPerPluginData(key: string, isGlobal: boolean): KeysToAnyValues {\n        if (isGlobal) {\n            const existed = this.globalDataCache[key];\n            return existed ? existed : {};\n        } else {\n            const existed = this.workspaceDataCache[key];\n            return existed ? existed : {};\n        }\n    }\n\n    setPerPluginData(key: string, value: KeysToAnyValues, isGlobal: boolean): Promise<boolean> {\n        if (isGlobal) {\n            this.globalDataCache[key] = value;\n        } else {\n            this.workspaceDataCache[key] = value;\n        }\n\n        return this.proxy.$set(key, value, isGlobal);\n    }\n\n    $updatePluginsWorkspaceData(workspaceData: KeysToKeysToAnyValue): void {\n        this.workspaceDataCache = workspaceData;\n        this.storageDataChangedEmitter.fire(workspaceData);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport * as Converter from '../type-converters';\nimport * as model from '../../common/plugin-api-rpc-model';\nimport { DocumentsExtImpl } from '../documents';\nimport { Position, WorkspaceEditDto } from '../../common/plugin-api-rpc';\nimport { Range } from '../types-impl';\nimport { isObject } from '../../common/types';\n\nexport class RenameAdapter {\n\n    static supportsResolving(provider: theia.RenameProvider): boolean {\n        return typeof provider.prepareRename === 'function';\n    }\n\n    constructor(\n        private readonly provider: theia.RenameProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideRenameEdits(resource: URI, position: Position, newName: string, token: theia.CancellationToken): Promise<WorkspaceEditDto | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const pos = Converter.toPosition(position);\n\n        return Promise.resolve(\n            this.provider.provideRenameEdits(doc, pos, newName, token)\n        ).then(value => {\n            if (!value) {\n                return undefined;\n            }\n\n            return Converter.fromWorkspaceEdit(value);\n        }, error => {\n            const rejectReason = RenameAdapter.asMessage(error);\n            if (rejectReason) {\n                return <WorkspaceEditDto>{\n                    rejectReason,\n                    edits: []\n                };\n            } else {\n                return Promise.reject<WorkspaceEditDto>(error);\n            }\n        });\n    }\n\n    resolveRenameLocation(resource: URI, position: Position, token: theia.CancellationToken): Promise<model.RenameLocation & model.Rejection | undefined> {\n        if (typeof this.provider.prepareRename !== 'function') {\n            return Promise.resolve(undefined);\n        }\n\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const pos = Converter.toPosition(position);\n\n        return Promise.resolve(\n            this.provider.prepareRename(doc, pos, token)\n        ).then(rangeOrLocation => {\n\n            let range: theia.Range | undefined;\n            let text: string;\n            if (rangeOrLocation && Range.isRange(rangeOrLocation)) {\n                range = rangeOrLocation;\n                text = doc.getText(rangeOrLocation);\n            } else if (rangeOrLocation && isObject(rangeOrLocation)) {\n                range = rangeOrLocation.range;\n                text = rangeOrLocation.placeholder;\n            }\n\n            if (!range) {\n                return undefined;\n            }\n            if (range.start.line > pos.line || range.end.line < pos.line) {\n                console.warn('INVALID rename location: position line must be within range start/end lines');\n                return undefined;\n            }\n            return {\n                range: Converter.fromRange(range)!,\n                text: text!\n            };\n        }, error => {\n            const rejectReason = RenameAdapter.asMessage(error);\n            if (rejectReason) {\n                return Promise.resolve(<model.RenameLocation & model.Rejection>{\n                    rejectReason,\n                    range: undefined!,\n                    text: undefined!\n                });\n            } else {\n                return Promise.reject(error);\n            }\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private static asMessage(err: any): string | undefined {\n        if (typeof err === 'string') {\n            return err;\n        } else if (err instanceof Error && typeof err.message === 'string') {\n            return err.message;\n        } else {\n            return undefined;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { Emitter } from '@theia/core';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { PLUGIN_RPC_CONTEXT, TabDto, TabGroupDto, TabInputKind, TabModelOperationKind, TabOperation, TabsExt, TabsMain } from '../common/plugin-api-rpc';\nimport {\n    CustomEditorTabInput,\n    InteractiveWindowInput,\n    NotebookDiffEditorTabInput,\n    NotebookEditorTabInput,\n    TerminalEditorTabInput,\n    TextDiffTabInput,\n    TextMergeTabInput,\n    TextTabInput,\n    URI,\n    WebviewEditorTabInput\n} from './types-impl';\nimport { assertIsDefined } from '../common/types';\nimport { diffSets } from '../common/collections';\nimport { ViewColumn } from './type-converters';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.71.2/src/vs/workbench/api/common/extHostEditorTabs.ts\n\ntype AnyTabInput =\n    TextTabInput |\n    TextDiffTabInput |\n    CustomEditorTabInput |\n    NotebookEditorTabInput |\n    NotebookDiffEditorTabInput |\n    WebviewEditorTabInput |\n    TerminalEditorTabInput |\n    InteractiveWindowInput;\n\nclass TabExt {\n    private tabApiObject: theia.Tab | undefined;\n    private tabDto!: TabDto;\n    private input: AnyTabInput | undefined;\n    private parentGroup: TabGroupExt;\n    private readonly activeTabIdGetter: () => string;\n\n    constructor(dto: TabDto, parentGroup: TabGroupExt, activeTabIdGetter: () => string) {\n        this.activeTabIdGetter = activeTabIdGetter;\n        this.parentGroup = parentGroup;\n        this.acceptDtoUpdate(dto);\n    }\n\n    get apiObject(): theia.Tab {\n        if (!this.tabApiObject) {\n            // Don't want to lose reference to parent `this` in the getters\n            const that = this;\n            const obj: theia.Tab = {\n                get isActive(): boolean {\n                    // We use a getter function here to always ensure at most 1 active tab per group and prevent iteration for being required\n                    return that.tabDto.id === that.activeTabIdGetter();\n                },\n                get label(): string {\n                    return that.tabDto.label;\n                },\n                get input(): AnyTabInput | undefined {\n                    return that.input;\n                },\n                get isDirty(): boolean {\n                    return that.tabDto.isDirty;\n                },\n                get isPinned(): boolean {\n                    return that.tabDto.isPinned;\n                },\n                get isPreview(): boolean {\n                    return that.tabDto.isPreview;\n                },\n                get group(): theia.TabGroup {\n                    return that.parentGroup.apiObject;\n                }\n            };\n            this.tabApiObject = Object.freeze<theia.Tab>(obj);\n        }\n        return this.tabApiObject;\n    }\n\n    get tabId(): string {\n        return this.tabDto.id;\n    }\n\n    acceptDtoUpdate(tabDto: TabDto): void {\n        this.tabDto = tabDto;\n        this.input = this.initInput();\n    }\n\n    private initInput(): AnyTabInput | undefined {\n        switch (this.tabDto.input.kind) {\n            case TabInputKind.TextInput:\n                return new TextTabInput(URI.revive(this.tabDto.input.uri));\n            case TabInputKind.TextDiffInput:\n                return new TextDiffTabInput(URI.revive(this.tabDto.input.original), URI.revive(this.tabDto.input.modified));\n            case TabInputKind.TextMergeInput:\n                return new TextMergeTabInput(\n                    URI.revive(this.tabDto.input.base),\n                    URI.revive(this.tabDto.input.input1),\n                    URI.revive(this.tabDto.input.input2),\n                    URI.revive(this.tabDto.input.result));\n            case TabInputKind.CustomEditorInput:\n                return new CustomEditorTabInput(URI.revive(this.tabDto.input.uri), this.tabDto.input.viewType);\n            case TabInputKind.WebviewEditorInput:\n                return new WebviewEditorTabInput(this.tabDto.input.viewType);\n            case TabInputKind.NotebookInput:\n                return new NotebookEditorTabInput(URI.revive(this.tabDto.input.uri), this.tabDto.input.notebookType);\n            case TabInputKind.NotebookDiffInput:\n                return new NotebookDiffEditorTabInput(URI.revive(this.tabDto.input.original), URI.revive(this.tabDto.input.modified), this.tabDto.input.notebookType);\n            case TabInputKind.TerminalEditorInput:\n                return new TerminalEditorTabInput();\n            case TabInputKind.InteractiveEditorInput:\n                return new InteractiveWindowInput(URI.revive(this.tabDto.input.uri), URI.revive(this.tabDto.input.inputBoxUri));\n            default:\n                return undefined;\n        }\n    }\n}\n\nclass TabGroupExt {\n\n    private tabGroupApiObject: theia.TabGroup | undefined;\n    private tabGroupDto: TabGroupDto;\n    private tabsArr: TabExt[] = [];\n    private activeTabId: string = '';\n    private activeGroupIdGetter: () => number | undefined;\n\n    constructor(dto: TabGroupDto, activeGroupIdGetter: () => number | undefined) {\n        this.tabGroupDto = dto;\n        this.activeGroupIdGetter = activeGroupIdGetter;\n        // Construct all tabs from the given dto\n        for (const tabDto of dto.tabs) {\n            if (tabDto.isActive) {\n                this.activeTabId = tabDto.id;\n            }\n            this.tabsArr.push(new TabExt(tabDto, this, () => this.getActiveTabId()));\n        }\n    }\n\n    get apiObject(): theia.TabGroup {\n        if (!this.tabGroupApiObject) {\n            // Don't want to lose reference to parent `this` in the getters\n            const that = this;\n            const obj: theia.TabGroup = {\n                get isActive(): boolean {\n                    // We use a getter function here to always ensure at most 1 active group and prevent iteration for being required\n                    return that.tabGroupDto.groupId === that.activeGroupIdGetter();\n                },\n                get viewColumn(): theia.ViewColumn {\n                    return ViewColumn.to(that.tabGroupDto.viewColumn);\n                },\n                get activeTab(): theia.Tab | undefined {\n                    return that.tabsArr.find(tab => tab.tabId === that.activeTabId)?.apiObject;\n                },\n                get tabs(): Readonly<theia.Tab[]> {\n                    return Object.freeze(that.tabsArr.map(tab => tab.apiObject));\n                }\n            };\n            this.tabGroupApiObject = Object.freeze<theia.TabGroup>(obj);\n        }\n        return this.tabGroupApiObject;\n    }\n\n    get groupId(): number {\n        return this.tabGroupDto.groupId;\n    }\n\n    get tabs(): TabExt[] {\n        return this.tabsArr;\n    }\n\n    acceptGroupDtoUpdate(dto: TabGroupDto): void {\n        this.tabGroupDto = dto;\n    }\n\n    acceptTabOperation(operation: TabOperation): TabExt {\n        // In the open case we add the tab to the group\n        if (operation.kind === TabModelOperationKind.TAB_OPEN) {\n            const tab = new TabExt(operation.tabDto, this, () => this.getActiveTabId());\n            // Insert tab at editor index\n            this.tabsArr.splice(operation.index, 0, tab);\n            if (operation.tabDto.isActive) {\n                this.activeTabId = tab.tabId;\n            }\n            return tab;\n        } else if (operation.kind === TabModelOperationKind.TAB_CLOSE) {\n            const tab = this.tabsArr.splice(operation.index, 1)[0];\n            if (!tab) {\n                throw new Error(`Tab close updated received for index ${operation.index} which does not exist`);\n            }\n            if (tab.tabId === this.activeTabId) {\n                this.activeTabId = '';\n            }\n            return tab;\n        } else if (operation.kind === TabModelOperationKind.TAB_MOVE) {\n            if (operation.oldIndex === undefined) {\n                throw new Error('Invalid old index on move IPC');\n            }\n            // Splice to remove at old index and insert at new index === moving the tab\n            const tab = this.tabsArr.splice(operation.oldIndex, 1)[0];\n            if (!tab) {\n                throw new Error(`Tab move updated received for index ${operation.oldIndex} which does not exist`);\n            }\n            this.tabsArr.splice(operation.index, 0, tab);\n            return tab;\n        }\n        const _tab = this.tabsArr.find(extHostTab => extHostTab.tabId === operation.tabDto.id);\n        if (!_tab) {\n            throw new Error('INVALID tab');\n        }\n        if (operation.tabDto.isActive) {\n            this.activeTabId = operation.tabDto.id;\n        } else if (this.activeTabId === operation.tabDto.id && !operation.tabDto.isActive) {\n            // Events aren't guaranteed to be in order so if we receive a dto that matches the active tab id\n            // but isn't active we mark the active tab id as empty. This prevent onDidActiveTabChange from\n            // firing incorrectly\n            this.activeTabId = '';\n        }\n        _tab.acceptDtoUpdate(operation.tabDto);\n        return _tab;\n    }\n\n    // Not a getter since it must be a function to be used as a callback for the tabs\n    getActiveTabId(): string {\n        return this.activeTabId;\n    }\n}\n\nexport class TabsExtImpl implements TabsExt {\n    declare readonly _serviceBrand: undefined;\n\n    private readonly proxy: TabsMain;\n    private readonly onDidChangeTabs = new Emitter<theia.TabChangeEvent>();\n    private readonly onDidChangeTabGroups = new Emitter<theia.TabGroupChangeEvent>();\n\n    // Have to use ! because this gets initialized via an RPC proxy\n    private activeGroupId!: number;\n\n    private tabGroupArr: TabGroupExt[] = [];\n\n    private apiObject: theia.TabGroups | undefined;\n\n    constructor(readonly rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TABS_MAIN);\n    }\n\n    get tabGroups(): theia.TabGroups {\n        if (!this.apiObject) {\n            const that = this;\n            const obj: theia.TabGroups = {\n                // never changes -> simple value\n                onDidChangeTabGroups: that.onDidChangeTabGroups.event,\n                onDidChangeTabs: that.onDidChangeTabs.event,\n                // dynamic -> getters\n                get all(): Readonly<theia.TabGroup[]> {\n                    return Object.freeze(that.tabGroupArr.map(group => group.apiObject));\n                },\n                get activeTabGroup(): theia.TabGroup {\n                    const activeTabGroupId = that.activeGroupId;\n                    const activeTabGroup = assertIsDefined(that.tabGroupArr.find(candidate => candidate.groupId === activeTabGroupId)?.apiObject);\n                    return activeTabGroup;\n                },\n                close: async (tabOrTabGroup: theia.Tab | readonly theia.Tab[] | theia.TabGroup | readonly theia.TabGroup[], preserveFocus?: boolean) => {\n                    const tabsOrTabGroups = Array.isArray(tabOrTabGroup) ? tabOrTabGroup : [tabOrTabGroup];\n                    if (!tabsOrTabGroups.length) {\n                        return true;\n                    }\n                    // Check which type was passed in and call the appropriate close\n                    // Casting is needed as typescript doesn't seem to infer enough from this\n                    if (isTabGroup(tabsOrTabGroups[0])) {\n                        return this._closeGroups(tabsOrTabGroups as theia.TabGroup[], preserveFocus);\n                    } else {\n                        return this._closeTabs(tabsOrTabGroups as theia.Tab[], preserveFocus);\n                    }\n                },\n            };\n            this.apiObject = Object.freeze(obj);\n        }\n        return this.apiObject;\n    }\n\n    $acceptEditorTabModel(tabGroups: TabGroupDto[]): void {\n        const groupIdsBefore = new Set(this.tabGroupArr.map(group => group.groupId));\n        const groupIdsAfter = new Set(tabGroups.map(dto => dto.groupId));\n        const diff = diffSets(groupIdsBefore, groupIdsAfter);\n\n        const closed: theia.TabGroup[] = this.tabGroupArr.filter(group => diff.removed.includes(group.groupId)).map(group => group.apiObject);\n        const opened: theia.TabGroup[] = [];\n        const changed: theia.TabGroup[] = [];\n        const tabsOpened: theia.Tab[] = [];\n\n        this.tabGroupArr = tabGroups.map(tabGroup => {\n            const group = new TabGroupExt(tabGroup, () => this.activeGroupId);\n            if (diff.added.includes(group.groupId)) {\n                opened.push({ activeTab: undefined, isActive: group.apiObject.isActive, tabs: [], viewColumn: group.apiObject.viewColumn });\n                tabsOpened.push(...group.apiObject.tabs);\n            } else {\n                changed.push(group.apiObject);\n            }\n            return group;\n        });\n\n        // Set the active tab group id. skip if no tabgroups are open\n        if (tabGroups.length > 0) {\n            const activeTabGroupId = assertIsDefined(tabGroups.find(group => group.isActive === true)?.groupId);\n            if (this.activeGroupId !== activeTabGroupId) {\n                this.activeGroupId = activeTabGroupId;\n            }\n        }\n\n        if (closed.length > 0 || opened.length > 0 || changed.length > 0) {\n            this.onDidChangeTabGroups.fire(Object.freeze({ opened, closed, changed }));\n        }\n        if (tabsOpened.length > 0) {\n            this.onDidChangeTabs.fire({ opened: tabsOpened, changed: [], closed: [] });\n        }\n    }\n\n    $acceptTabGroupUpdate(groupDto: TabGroupDto): void {\n        const group = this.tabGroupArr.find(tabGroup => tabGroup.groupId === groupDto.groupId);\n        if (!group) {\n            throw new Error('Update Group IPC call received before group creation.');\n        }\n        group.acceptGroupDtoUpdate(groupDto);\n        if (groupDto.isActive) {\n            this.activeGroupId = groupDto.groupId;\n        }\n        this.onDidChangeTabGroups.fire(Object.freeze({ changed: [group.apiObject], opened: [], closed: [] }));\n    }\n\n    $acceptTabOperation(operation: TabOperation): void {\n        const group = this.tabGroupArr.find(tabGroup => tabGroup.groupId === operation.groupId);\n        if (!group) {\n            throw new Error('Update Tabs IPC call received before group creation.');\n        }\n        const tab = group.acceptTabOperation(operation);\n\n        // Construct the tab change event based on the operation\n        switch (operation.kind) {\n            case TabModelOperationKind.TAB_OPEN:\n                this.onDidChangeTabs.fire(Object.freeze({\n                    opened: [tab.apiObject],\n                    closed: [],\n                    changed: []\n                }));\n                return;\n            case TabModelOperationKind.TAB_CLOSE:\n                this.onDidChangeTabs.fire(Object.freeze({\n                    opened: [],\n                    closed: [tab.apiObject],\n                    changed: []\n                }));\n                return;\n            case TabModelOperationKind.TAB_MOVE:\n            case TabModelOperationKind.TAB_UPDATE:\n                this.onDidChangeTabs.fire(Object.freeze({\n                    opened: [],\n                    closed: [],\n                    changed: [tab.apiObject]\n                }));\n                return;\n        }\n    }\n\n    private _findExtHostTabFromApi(apiTab: theia.Tab): TabExt | undefined {\n        for (const group of this.tabGroupArr) {\n            for (const tab of group.tabs) {\n                if (tab.apiObject === apiTab) {\n                    return tab;\n                }\n            }\n        }\n        return;\n    }\n\n    private _findExtHostTabGroupFromApi(apiTabGroup: theia.TabGroup): TabGroupExt | undefined {\n        return this.tabGroupArr.find(candidate => candidate.apiObject === apiTabGroup);\n    }\n\n    private async _closeTabs(tabs: theia.Tab[], preserveFocus?: boolean): Promise<boolean> {\n        const extHostTabIds: string[] = [];\n        for (const tab of tabs) {\n            const extHostTab = this._findExtHostTabFromApi(tab);\n            if (!extHostTab) {\n                throw new Error('Tab close: Invalid tab not found!');\n            }\n            extHostTabIds.push(extHostTab.tabId);\n        }\n        return this.proxy.$closeTab(extHostTabIds, preserveFocus);\n    }\n\n    private async _closeGroups(groups: theia.TabGroup[], preserveFocus?: boolean): Promise<boolean> {\n        const extHostGroupIds: number[] = [];\n        for (const group of groups) {\n            const extHostGroup = this._findExtHostTabGroupFromApi(group);\n            if (!extHostGroup) {\n                throw new Error('Group close: Invalid group not found!');\n            }\n            extHostGroupIds.push(extHostGroup.groupId);\n        }\n        return this.proxy.$closeGroup(extHostGroupIds, preserveFocus);\n    }\n}\n\n// #region Utils\nfunction isTabGroup(obj: unknown): obj is theia.TabGroup {\n    const tabGroup = obj as theia.TabGroup;\n    if (tabGroup.tabs !== undefined) {\n        return true;\n    }\n    return false;\n}\n// #endregion\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { RPCProtocol } from './rpc-protocol';\nimport { PluginManager, Plugin } from './plugin-api-rpc';\nimport { interfaces } from '@theia/core/shared/inversify';\n\nexport const ExtPluginApiProvider = 'extPluginApi';\n/**\n * Provider for extension API description.\n */\nexport interface ExtPluginApiProvider {\n    /**\n     * Provide API description.\n     */\n    provideApi(): ExtPluginApi;\n}\n\n/**\n * Provider for backend extension API description.\n */\nexport interface ExtPluginBackendApiProvider {\n    /**\n     * Provide API description.\n     */\n    provideApi(): ExtPluginBackendApi;\n}\n\n/**\n * Provider for frontend extension API description.\n */\nexport interface ExtPluginFrontendApiProvider {\n    /**\n     * Provide API description.\n     */\n    provideApi(): ExtPluginFrontendApi;\n}\n\n/**\n * Backend Plugin API extension description.\n * This interface describes a script for the backend(NodeJs) runtime.\n */\nexport interface ExtPluginBackendApi {\n\n    /**\n     * Path to the script which should be loaded to provide api, module should export `provideApi` function with\n     * [ExtPluginApiBackendInitializationFn](#ExtPluginApiBackendInitializationFn) signature\n     */\n    backendInitPath?: string;\n}\n\n/**\n * Frontend Plugin API extension description.\n * This interface describes a script for the frontend(WebWorker) runtime.\n */\nexport interface ExtPluginFrontendApi {\n\n    /**\n     * Initialization information for frontend part of Plugin API\n     */\n    frontendExtApi?: FrontendExtPluginApi;\n}\n\n/**\n * Plugin API extension description.\n * This interface describes scripts for both plugin runtimes: frontend(WebWorker) and backend(NodeJs)\n */\nexport interface ExtPluginApi extends ExtPluginBackendApi, ExtPluginFrontendApi { }\n\nexport interface ExtPluginApiFrontendInitializationFn {\n    (rpc: RPCProtocol, plugins: Map<string, Plugin>): void;\n}\n\nexport interface ExtPluginApiBackendInitializationFn {\n    (rpc: RPCProtocol, pluginManager: PluginManager): void;\n}\n\n/**\n * Interface contains information for frontend(WebWorker) Plugin API extension initialization\n */\nexport interface FrontendExtPluginApi {\n    /**\n     * path to js file\n     */\n    initPath: string;\n    /** global variable name */\n    initVariable: string;\n    /**\n     * init function name,\n     * function should have  [ExtPluginApiFrontendInitializationFn](#ExtPluginApiFrontendInitializationFn)\n     */\n    initFunction: string;\n}\n\nexport const MainPluginApiProvider = Symbol('mainPluginApi');\n\n/**\n * Implementation should contains main(Theia) part of new namespace in Plugin API.\n * [initialize](#initialize) will be called once per plugin runtime\n */\nexport interface MainPluginApiProvider {\n    initialize(rpc: RPCProtocol, container: interfaces.Container): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { KeybindingRegistry } from '../keybinding';\nimport { ContextKeyService } from '../context-key-service';\nimport { DisposableCollection, isObject, CommandRegistry, Emitter } from '../../common';\nimport { CommandMenu, ContextExpressionMatcher, MenuAction, MenuPath } from '../../common/menu/menu-types';\n\nexport interface AcceleratorSource {\n    getAccelerator(context: HTMLElement | undefined): string[];\n}\n\nexport namespace AcceleratorSource {\n    export function is(node: unknown): node is AcceleratorSource {\n        return isObject<AcceleratorSource>(node) && typeof node.getAccelerator === 'function';\n    }\n}\n\n/**\n * Node representing an action in the menu tree structure.\n * It's based on {@link MenuAction} for which it tries to determine the\n * best label, icon and sortString with the given data.\n */\nexport class ActionMenuNode implements CommandMenu {\n\n    protected readonly disposables = new DisposableCollection();\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n\n    onDidChange = this.onDidChangeEmitter.event;\n\n    constructor(\n        protected readonly action: MenuAction,\n        protected readonly commands: CommandRegistry,\n        protected readonly keybindingRegistry: KeybindingRegistry,\n        protected readonly contextKeyService: ContextKeyService\n    ) {\n        this.commands.getAllHandlers(action.commandId).forEach(handler => {\n            if (handler.onDidChangeEnabled) {\n                this.disposables.push(handler.onDidChangeEnabled(() => this.onDidChangeEmitter.fire()));\n            }\n        });\n\n        if (action.when) {\n            const contextKeys = new Set<string>();\n            this.contextKeyService.parseKeys(action.when)?.forEach(key => contextKeys.add(key));\n            if (contextKeys.size > 0) {\n                this.disposables.push(this.contextKeyService.onDidChange(change => {\n                    if (change.affects(contextKeys)) {\n                        this.onDidChangeEmitter.fire();\n                    }\n                }));\n            }\n        }\n    }\n\n    dispose(): void {\n        this.disposables.dispose();\n    }\n\n    isVisible<T>(effeciveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean {\n        if (!this.commands.isVisible(this.action.commandId, ...args)) {\n            return false;\n        }\n        if (this.action.when) {\n            return contextMatcher.match(this.action.when, context);\n        }\n        return true;\n    }\n\n    getAccelerator(context: HTMLElement | undefined): string[] {\n        const bindings = this.keybindingRegistry.getKeybindingsForCommand(this.action.commandId);\n        // Only consider the first active keybinding.\n        if (bindings.length) {\n            const binding = bindings.find(b => this.keybindingRegistry.isEnabledInScope(b, context));\n            if (binding) {\n                return this.keybindingRegistry.acceleratorFor(binding, '+', true);\n            }\n        }\n        return [];\n    }\n\n    isEnabled(effeciveMenuPath: MenuPath, ...args: unknown[]): boolean {\n        return this.commands.isEnabled(this.action.commandId, ...args);\n    }\n    isToggled(effeciveMenuPath: MenuPath, ...args: unknown[]): boolean {\n        return this.commands.isToggled(this.action.commandId, ...args);\n    }\n    async run(effeciveMenuPath: MenuPath, ...args: unknown[]): Promise<void> {\n        return this.commands.executeCommand(this.action.commandId, ...args);\n    }\n\n    get id(): string { return this.action.commandId; }\n\n    get label(): string {\n        if (this.action.label) {\n            return this.action.label;\n        }\n        const cmd = this.commands.getCommand(this.action.commandId);\n        if (!cmd) {\n            console.debug(`No label for action menu node: No command \"${this.action.commandId}\" exists.`);\n            return '';\n        }\n        return cmd.label || cmd.id;\n    }\n\n    get icon(): string | undefined {\n        if (this.action.icon) {\n            return this.action.icon;\n        }\n        const command = this.commands.getCommand(this.action.commandId);\n        return command && command.iconClass;\n    }\n\n    get sortString(): string { return this.action.order || this.label; }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { RpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\nimport { OS } from '@theia/core/lib/common/os';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n    getEnvVarCollectionDescriptionsByExtension(id: number): Promise<Map<string, (string | MarkdownString | undefined)[]>>;\n    getEnvVarCollections(): Promise<[string, string, boolean, SerializableEnvironmentVariableCollection][]>;\n\n    restorePersisted(jsonValue: string): void;\n    /**\n     * Sets an extension's environment variable collection.\n     */\n    setCollection(extensionIdentifier: string, rootUri: string, persistent: boolean,\n        collection: SerializableEnvironmentVariableCollection, description: string | MarkdownString | undefined): void;\n    /**\n     * Deletes an extension's environment variable collection.\n     */\n    deleteCollection(extensionIdentifier: string): void;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport type ShellTerminalOSPreferences<T> = {\n    [key in OS.Type]: T\n};\n\nexport interface IShellTerminalPreferences {\n    shell: ShellTerminalOSPreferences<string | undefined>,\n    shellArgs: ShellTerminalOSPreferences<string[]>\n};\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shell?: string,\n    args?: string[] | string,\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null },\n    strictEnv?: boolean,\n    isPseudo?: boolean,\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = RpcProxy<IShellTerminalServer>;\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariable.ts\n\nexport const NO_ROOT_URI = '<none>';\n\nexport interface EnvironmentVariableCollection {\n    readonly variableMutators: ReadonlyMap<string, EnvironmentVariableMutator>;\n    readonly description: string | MarkdownString | undefined;\n}\n\nexport interface EnvironmentVariableCollectionWithPersistence extends EnvironmentVariableCollection {\n    readonly persistent: boolean;\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\nexport interface EnvironmentVariableMutatorOptions {\n    applyAtProcessCreation?: boolean;\n}\n\nexport interface EnvironmentVariableMutator {\n    readonly value: string;\n    readonly type: EnvironmentVariableMutatorType;\n    readonly options: EnvironmentVariableMutatorOptions;\n}\n\nexport interface SerializableEnvironmentVariableCollection {\n    readonly description: string | MarkdownString | undefined;\n    readonly mutators: [string, EnvironmentVariableMutator][]\n};\n\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable } from './disposable';\nimport { Event } from './event';\nimport { CancellationToken, CancellationError, cancelled } from './cancellation';\nimport { isFunction, isObject } from './types';\n\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred<T = void> {\n    state: 'resolved' | 'rejected' | 'unresolved' = 'unresolved';\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (err?: unknown) => void;\n\n    promise = new Promise<T>((resolve, reject) => {\n        this.resolve = resolve;\n        this.reject = reject;\n    }).then(\n        res => (this.setState('resolved'), res),\n        err => (this.setState('rejected'), Promise.reject(err)),\n    );\n\n    protected setState(state: 'resolved' | 'rejected'): void {\n        if (this.state === 'unresolved') {\n            this.state = state;\n        }\n    }\n}\n\n/**\n * @returns resolves after a specified number of milliseconds\n * @throws cancelled if a given token is cancelled before a specified number of milliseconds\n */\nexport function timeout(ms: number, token = CancellationToken.None): Promise<void> {\n    const deferred = new Deferred<void>();\n    const handle = setTimeout(() => deferred.resolve(), ms);\n    token.onCancellationRequested(() => {\n        clearTimeout(handle);\n        deferred.reject(cancelled());\n    });\n    return deferred.promise;\n}\n\n/**\n * Creates a promise that is rejected after the given amount of time. A typical use case is to wait for another promise until a specified timeout using:\n * ```\n * Promise.race([ promiseToPerform, timeoutReject(timeout, 'Timeout error message') ]);\n * ```\n *\n * @param ms timeout in milliseconds\n * @param message error message on promise rejection\n * @returns rejection promise\n */\nexport function timeoutReject<T>(ms: number, message?: string): Promise<T> {\n    const deferred = new Deferred<T>();\n    setTimeout(() => deferred.reject(new Error(message)), ms);\n    return deferred.promise;\n}\n\nexport async function retry<T>(task: () => Promise<T>, retryDelay: number, retries: number): Promise<T> {\n    let lastError: Error | undefined;\n\n    for (let i = 0; i < retries; i++) {\n        try {\n            return await task();\n        } catch (error) {\n            lastError = error;\n\n            await timeout(retryDelay);\n        }\n    }\n\n    throw lastError;\n}\n\n/**\n * A function to allow a promise resolution to be delayed by a number of milliseconds. Usage is as follows:\n *\n * `const stringValue = await myPromise.then(delay(600)).then(value => value.toString());`\n *\n * @param ms the number of millisecond to delay\n * @returns a function that returns a promise that returns the given value, but delayed\n */\nexport function delay<T>(ms: number): (value: T) => Promise<T> {\n    return value => new Promise((resolve, reject) => { setTimeout(() => resolve(value), ms); });\n}\n\n/**\n * Constructs a promise that will resolve after a given delay.\n * @param ms the number of milliseconds to wait\n */\nexport async function wait(ms: number): Promise<void> {\n    await delay(ms)(undefined);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function waitForEvent<T>(event: Event<T>, ms: number, thisArg?: any, disposables?: Disposable[]): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n        const registration = setTimeout(() => {\n            listener.dispose();\n            reject(new CancellationError());\n        }, ms);\n\n        const listener = event((evt: T) => {\n            clearTimeout(registration);\n            listener.dispose();\n            resolve(evt);\n        }, thisArg, disposables);\n\n    });\n}\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n    return isObject<Promise<unknown>>(obj) && isFunction(obj.then);\n}\n\n/**\n * Returns with a promise that waits until the first promise resolves to `true`.\n */\n// Based on https://stackoverflow.com/a/51160727/5529090\nexport function firstTrue(...promises: readonly Promise<boolean>[]): Promise<boolean> {\n    const newPromises = promises.map(promise => new Promise<boolean>(\n        (resolve, reject) => promise.then(result => result && resolve(true), reject)\n    ));\n    newPromises.push(Promise.all(promises).then(() => false));\n    return Promise.race(newPromises);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from 'inversify';\nimport { Filter } from './filter';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ContributionType = interfaces.ServiceIdentifier<any>;\n\nexport const ContributionFilterRegistry = Symbol('ContributionFilterRegistry');\nexport interface ContributionFilterRegistry {\n\n    /**\n     * Add filters to be applied for every type of contribution.\n     */\n    addFilters(types: '*', filters: Filter<Object>[]): void;\n\n    /**\n     * Given a list of contribution types, register filters to apply.\n     * @param types types for which to register the filters.\n     */\n    addFilters(types: ContributionType[], filters: Filter<Object>[]): void;\n\n    /**\n     * Applies the filters for the given contribution type. Generic filters will be applied on any given type.\n     * @param toFilter the elements to filter\n     * @param type the contribution type for which potentially filters were registered\n     * @returns the filtered elements\n     */\n    applyFilters<T extends Object>(toFilter: T[], type: ContributionType): T[]\n}\n\nexport const FilterContribution = Symbol('FilterContribution');\n/**\n * Register filters to remove contributions.\n */\nexport interface FilterContribution {\n    /**\n     * Use the registry to register your contribution filters.\n     * * Note that filtering contributions based on their class (constructor) name is discouraged.\n     * Class names are minified in production builds and therefore not reliable.\n     * Use instance of checks or direct constructor comparison instead:\n     *\n     * ```ts\n     * registry.addFilters('*', [\n     *     contrib => !(contrib instanceof SampleFilteredCommandContribution)\n     * ]);\n     * ```\n     */\n    registerContributionFilters(registry: ContributionFilterRegistry): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// copied and modified from https://github.com/microsoft/vscode/blob/0eb3a02ca2bcfab5faa3dc6e52d7c079efafcab0/src/vs/workbench/api/common/shared/semanticTokensDto.ts\n\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian(): boolean {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\n\nexport interface IFullSemanticTokensDto {\n    id: number;\n    type: 'full';\n    data: Uint32Array;\n}\n\nexport interface IDeltaSemanticTokensDto {\n    id: number;\n    type: 'delta';\n    deltas: { start: number; deleteCount: number; data?: Uint32Array; }[];\n}\n\nexport type ISemanticTokensDto = IFullSemanticTokensDto | IDeltaSemanticTokensDto;\n\nconst enum EncodedSemanticTokensType {\n    Full = 1,\n    Delta = 2\n}\n\nfunction reverseEndianness(arr: Uint8Array): void {\n    for (let i = 0, len = arr.length; i < len; i += 4) {\n        // flip bytes 0<->3 and 1<->2\n        const b0 = arr[i + 0];\n        const b1 = arr[i + 1];\n        const b2 = arr[i + 2];\n        const b3 = arr[i + 3];\n        arr[i + 0] = b3;\n        arr[i + 1] = b2;\n        arr[i + 2] = b1;\n        arr[i + 3] = b0;\n    }\n}\n\nfunction toLittleEndianBuffer(arr: Uint32Array): BinaryBuffer {\n    const uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n    if (!isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    return BinaryBuffer.wrap(uint8Arr);\n}\n\nfunction fromLittleEndianBuffer(buff: BinaryBuffer): Uint32Array {\n    const uint8Arr = buff.buffer;\n    if (!isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    if (uint8Arr.byteOffset % 4 === 0) {\n        return new Uint32Array(uint8Arr.buffer, uint8Arr.byteOffset, uint8Arr.length / 4);\n    } else {\n        // unaligned memory access doesn't work on all platforms\n        const data = new Uint8Array(uint8Arr.byteLength);\n        data.set(uint8Arr);\n        return new Uint32Array(data.buffer, data.byteOffset, data.length / 4);\n    }\n}\n\nexport function encodeSemanticTokensDto(semanticTokens: ISemanticTokensDto): BinaryBuffer {\n    const dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n    let offset = 0;\n    dest[offset++] = semanticTokens.id;\n    if (semanticTokens.type === 'full') {\n        dest[offset++] = EncodedSemanticTokensType.Full;\n        dest[offset++] = semanticTokens.data.length;\n        dest.set(semanticTokens.data, offset); offset += semanticTokens.data.length;\n    } else {\n        dest[offset++] = EncodedSemanticTokensType.Delta;\n        dest[offset++] = semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            dest[offset++] = delta.start;\n            dest[offset++] = delta.deleteCount;\n            if (delta.data) {\n                dest[offset++] = delta.data.length;\n                dest.set(delta.data, offset); offset += delta.data.length;\n            } else {\n                dest[offset++] = 0;\n            }\n        }\n    }\n    return toLittleEndianBuffer(dest);\n}\n\nfunction encodeSemanticTokensDtoSize(semanticTokens: ISemanticTokensDto): number {\n    let result = 0;\n    result += (\n        + 1 // id\n        + 1 // type\n    );\n    if (semanticTokens.type === 'full') {\n        result += (\n            + 1 // data length\n            + semanticTokens.data.length\n        );\n    } else {\n        result += (\n            + 1 // delta count\n        );\n        result += (\n            + 1 // start\n            + 1 // deleteCount\n            + 1 // data length\n        ) * semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            if (delta.data) {\n                result += delta.data.length;\n            }\n        }\n    }\n    return result;\n}\n\nexport function decodeSemanticTokensDto(_buff: BinaryBuffer): ISemanticTokensDto {\n    const src = fromLittleEndianBuffer(_buff);\n    let offset = 0;\n    const id = src[offset++];\n    const type: EncodedSemanticTokensType = src[offset++];\n    if (type === EncodedSemanticTokensType.Full) {\n        const length = src[offset++];\n        const data = src.subarray(offset, offset + length); offset += length;\n        return {\n            id: id,\n            type: 'full',\n            data: data\n        };\n    }\n    const deltaCount = src[offset++];\n    const deltas: { start: number; deleteCount: number; data?: Uint32Array; }[] = [];\n    for (let i = 0; i < deltaCount; i++) {\n        const start = src[offset++];\n        const deleteCount = src[offset++];\n        const length = src[offset++];\n        let data: Uint32Array | undefined;\n        if (length > 0) {\n            data = src.subarray(offset, offset + length); offset += length;\n        }\n        deltas[i] = { start, deleteCount, data };\n    }\n    return {\n        id: id,\n        type: 'delta',\n        deltas: deltas\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/arrays.ts\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n    return <T[]>array.filter(e => !!e);\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n    return Array.isArray(obj) && obj.length > 0;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n    return (<T[]>[]).concat(...arr);\n}\n\nexport interface Splice<T> {\n    readonly start: number;\n    readonly deleteCount: number;\n    readonly toInsert: T[];\n}\n\n/**\n * @returns 'true' if the 'arg' is a 'ReadonlyArray'.\n */\nexport function isReadonlyArray(arg: unknown): arg is readonly unknown[] {\n    // Since Typescript does not properly narrow down typings for 'ReadonlyArray' we need to help it.\n    return Array.isArray(arg);\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/arrays.ts\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n    for (const value of array) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n\n    return undefined;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from './event';\nimport { ILoggerClient, ILogLevelChangedEvent } from './logger-protocol';\n\n@injectable()\nexport class LoggerWatcher {\n\n    getLoggerClient(): ILoggerClient {\n        const logLevelEmitter = this.onLogLevelChangedEmitter;\n        const logConfigEmitter = this.onLogConfigChangedEmitter;\n        return {\n            onLogLevelChanged(event: ILogLevelChangedEvent): void {\n                logLevelEmitter.fire(event);\n            },\n            onLogConfigChanged(): void {\n                logConfigEmitter.fire();\n            },\n        };\n    }\n\n    protected onLogLevelChangedEmitter = new Emitter<ILogLevelChangedEvent>();\n\n    get onLogLevelChanged(): Event<ILogLevelChangedEvent> {\n        return this.onLogLevelChangedEmitter.event;\n    }\n\n    protected onLogConfigChangedEmitter = new Emitter<void>();\n\n    get onLogConfigChanged(): Event<void> {\n        return this.onLogConfigChangedEmitter.event;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { TextEditorsExt, EditorChangedPropertiesData, TextEditorPositionData, TextEditorsMain, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport * as theia from '@theia/plugin';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { EditorsAndDocumentsExtImpl } from './editors-and-documents';\nimport { TextEditorExt } from './text-editor';\nimport * as Converters from './type-converters';\nimport { TextEditorSelectionChangeKind, URI } from './types-impl';\nimport { IdGenerator } from '../common/id-generator';\n\nexport class TextEditorsExtImpl implements TextEditorsExt {\n    private readonly _onDidChangeTextEditorSelection = new Emitter<theia.TextEditorSelectionChangeEvent>();\n    private readonly _onDidChangeTextEditorOptions = new Emitter<theia.TextEditorOptionsChangeEvent>();\n    private readonly _onDidChangeTextEditorVisibleRanges = new Emitter<theia.TextEditorVisibleRangesChangeEvent>();\n    private readonly _onDidChangeTextEditorViewColumn = new Emitter<theia.TextEditorViewColumnChangeEvent>();\n    private readonly _onDidChangeActiveTextEditor = new Emitter<theia.TextEditor | undefined>();\n    private readonly _onDidChangeVisibleTextEditors = new Emitter<theia.TextEditor[]>();\n\n    readonly onDidChangeTextEditorSelection: Event<theia.TextEditorSelectionChangeEvent> = this._onDidChangeTextEditorSelection.event;\n    readonly onDidChangeTextEditorOptions = this._onDidChangeTextEditorOptions.event;\n    readonly onDidChangeTextEditorVisibleRanges = this._onDidChangeTextEditorVisibleRanges.event;\n    readonly onDidChangeTextEditorViewColumn = this._onDidChangeTextEditorViewColumn.event;\n    readonly onDidChangeActiveTextEditor = this._onDidChangeActiveTextEditor.event;\n    readonly onDidChangeVisibleTextEditors = this._onDidChangeVisibleTextEditors.event;\n\n    private proxy: TextEditorsMain;\n\n    constructor(rpc: RPCProtocol, private editorsAndDocuments: EditorsAndDocumentsExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TEXT_EDITORS_MAIN);\n\n        this.editorsAndDocuments.onDidChangeActiveTextEditor(e => this._onDidChangeActiveTextEditor.fire(e));\n        this.editorsAndDocuments.onDidChangeVisibleTextEditors(e => this._onDidChangeVisibleTextEditors.fire(e));\n    }\n    $acceptEditorPropertiesChanged(id: string, props: EditorChangedPropertiesData): void {\n        const textEditor = this.editorsAndDocuments.getEditor(id);\n        if (!textEditor) {\n            return;\n        }\n\n        if (props.options) {\n            textEditor.acceptOptions(props.options);\n        }\n        if (props.selections) {\n            const selections = props.selections.selections.map(Converters.toSelection);\n            textEditor.acceptSelections(selections);\n        }\n\n        if (props.visibleRanges) {\n            const visibleRanges = props.visibleRanges.map(Converters.toRange);\n            textEditor.acceptVisibleRanges(visibleRanges);\n        }\n\n        if (props.options) {\n            this._onDidChangeTextEditorOptions.fire({\n                textEditor,\n                options: props.options\n            });\n        }\n\n        if (props.selections) {\n            const kind = TextEditorSelectionChangeKind.fromValue(props.selections.source);\n            const selections = props.selections.selections.map(Converters.toSelection);\n            this._onDidChangeTextEditorSelection.fire({\n                textEditor,\n                selections,\n                kind\n            });\n        }\n\n        if (props.visibleRanges) {\n            const visibleRanges = props.visibleRanges.map(Converters.toRange);\n            this._onDidChangeTextEditorVisibleRanges.fire({\n                textEditor,\n                visibleRanges\n            });\n        }\n    }\n    $acceptEditorPositionData(data: TextEditorPositionData): void {\n        for (const id in data) {\n            if (data.hasOwnProperty(id)) {\n                const textEditor = this.editorsAndDocuments.getEditor(id);\n                const viewColumn = Converters.toViewColumn(data[id]);\n                if (textEditor && viewColumn) {\n                    if (textEditor.viewColumn !== viewColumn) {\n                        textEditor.acceptViewColumn(viewColumn);\n                        this._onDidChangeTextEditorViewColumn.fire({ textEditor, viewColumn });\n                    }\n                }\n            }\n        }\n    }\n\n    getActiveEditor(): TextEditorExt | undefined {\n        return this.editorsAndDocuments.activeEditor();\n    }\n\n    async getDiffInformation(): Promise<theia.LineChange[]> {\n        const activeEditor = this.getActiveEditor();\n        if (!activeEditor) {\n            return [];\n        }\n        return activeEditor.getDiffInformation();\n    }\n\n    getVisibleTextEditors(): theia.TextEditor[] {\n        return this.editorsAndDocuments.allEditors();\n    }\n\n    createTextEditorDecorationType(options: theia.DecorationRenderOptions): theia.TextEditorDecorationType {\n        return new TextEditorDecorationType(this.proxy, options);\n    }\n\n    applyWorkspaceEdit(edit: theia.WorkspaceEdit, metadata?: theia.WorkspaceEditMetadata): Promise<boolean> {\n        const dto = Converters.fromWorkspaceEdit(edit, this.editorsAndDocuments);\n        return this.proxy.$tryApplyWorkspaceEdit(dto, metadata);\n    }\n\n    save(uri: theia.Uri): PromiseLike<theia.Uri | undefined> {\n        return this.proxy.$save(uri).then(components => URI.revive(components));\n    }\n\n    saveAs(uri: theia.Uri): PromiseLike<theia.Uri | undefined> {\n        return this.proxy.$saveAs(uri).then(components => URI.revive(components));\n    }\n\n    saveAll(includeUntitled?: boolean): PromiseLike<boolean> {\n        return this.proxy.$saveAll(includeUntitled);\n    }\n\n}\n\nexport class TextEditorDecorationType implements theia.TextEditorDecorationType {\n\n    private static readonly Keys = new IdGenerator('TextEditorDecorationType');\n\n    private proxy: TextEditorsMain;\n    public key: string;\n\n    constructor(proxy: TextEditorsMain, options: theia.DecorationRenderOptions) {\n        this.key = TextEditorDecorationType.Keys.nextId();\n        this.proxy = proxy;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.proxy.$registerTextEditorDecorationType(this.key, Converters.DecorationRenderOptions.from(options));\n    }\n\n    dispose(): void {\n        this.proxy.$removeTextEditorDecorationType(this.key);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as types from '../types-impl';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { Definition, LocationLink, Location } from '../../common/plugin-api-rpc-model';\nimport { isDefinitionLinkArray, isLocationArray } from './util';\n\nexport class DefinitionAdapter {\n\n    constructor(\n        private readonly delegate: theia.DefinitionProvider,\n        private readonly documents: DocumentsExtImpl) {\n\n    }\n\n    provideDefinition(resource: URI, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n\n        return Promise.resolve(this.delegate.provideDefinition(document, zeroBasedPosition, token)).then(definition => {\n            if (!definition) {\n                return undefined;\n            }\n\n            if (definition instanceof types.Location) {\n                return Converter.fromLocation(definition);\n            }\n\n            if (isLocationArray(definition)) {\n                const locations: Location[] = [];\n\n                for (const location of definition) {\n                    locations.push(Converter.fromLocation(location));\n                }\n\n                return locations;\n            }\n\n            if (isDefinitionLinkArray(definition)) {\n                const definitionLinks: LocationLink[] = [];\n\n                for (const definitionLink of definition) {\n                    definitionLinks.push(Converter.fromDefinitionLink(definitionLink));\n                }\n\n                return definitionLinks;\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { escapeRegExpCharacters } from '../strings';\nimport { UriComponents } from '../uri';\nimport { escapeIcons } from './icon-utilities';\nimport { isObject, isString } from '../types';\n\nexport interface MarkdownStringTrustedOptions {\n    readonly enabledCommands: readonly string[];\n}\n\nexport interface MarkdownString {\n    readonly value: string;\n    readonly isTrusted?: boolean | MarkdownStringTrustedOptions;\n    readonly supportThemeIcons?: boolean;\n    readonly supportHtml?: boolean;\n    readonly baseUri?: UriComponents;\n    uris?: { [href: string]: UriComponents };\n}\n\nexport enum MarkdownStringTextNewlineStyle {\n    Paragraph = 0,\n    Break = 1,\n}\n\nexport namespace MarkdownString {\n    /**\n     * @returns whether the candidate satisfies the interface of a markdown string\n     */\n    export function is(candidate: unknown): candidate is MarkdownString {\n        return isObject<MarkdownString>(candidate) && isString(candidate.value);\n    }\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/7d9b1c37f8e5ae3772782ba3b09d827eb3fdd833/src/vs/base/common/htmlContent.ts\n\nexport class MarkdownStringImpl implements MarkdownString {\n    public value: string;\n    public isTrusted?: boolean | MarkdownStringTrustedOptions;\n    public supportThemeIcons?: boolean;\n    public supportHtml?: boolean;\n    public baseUri?: UriComponents;\n\n    constructor(\n        value: string = '',\n        isTrustedOrOptions: boolean | { isTrusted?: boolean; supportThemeIcons?: boolean; supportHtml?: boolean } = false,\n    ) {\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw new Error('Illegal value for MarkdownString. Expected string, got ' + typeof this.value);\n        }\n\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        } else {\n            this.isTrusted = isTrustedOrOptions.isTrusted ?? undefined;\n            this.supportThemeIcons = isTrustedOrOptions.supportThemeIcons ?? false;\n            this.supportHtml = isTrustedOrOptions.supportHtml ?? false;\n        }\n    }\n\n    appendText(value: string, newlineStyle: MarkdownStringTextNewlineStyle = MarkdownStringTextNewlineStyle.Paragraph): MarkdownStringImpl {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n            .replace(/\\>/gm, '\\\\>')\n            .replace(/\\n/g, newlineStyle === MarkdownStringTextNewlineStyle.Break ? '\\\\\\n' : '\\n\\n');\n\n        return this;\n    }\n\n    appendMarkdown(value: string): MarkdownStringImpl {\n        this.value += value;\n        return this;\n    }\n\n    appendCodeblock(langId: string, code: string): MarkdownStringImpl {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n\n    appendLink(target: UriComponents | string, label: string, title?: string): MarkdownStringImpl {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n\n    private _escape(value: string, ch: string): string {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            } else {\n                return match;\n            }\n        });\n    }\n}\n\nexport function escapeMarkdownSyntaxTokens(text: string): string {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/htmlContent.ts\n\nexport function parseHrefAndDimensions(href: string): { href: string; dimensions: string[] } {\n    const dimensions: string[] = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","module.exports = require('vscode-languageserver-protocol');\n","// *****************************************************************************\n// Copyright (C) 2022 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.71.2/src/vs/base/common/collections.ts\n\nexport function diffSets<T>(before: Set<T>, after: Set<T>): { removed: T[]; added: T[] } {\n    const removed: T[] = [];\n    const added: T[] = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[]; added: V[] } {\n    const removed: V[] = [];\n    const added: V[] = [];\n    for (const [index, value] of before) {\n        if (!after.has(index)) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!before.has(index)) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// file copied from https://github.com/wjordan/browser-path/blob/master/src/node_path.ts\n// Original license:\n/*\n====\n\nCopyright (c) 2015 John Vilk and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n====\n*/\n\nimport { sep } from '@theia/core/lib/common/paths';\n\nconst replaceRegex = new RegExp('//+', 'g');\n\nexport function resolve(...paths: string[]): string {\n    let processed: string[] = [];\n    for (const p of paths) {\n        if (typeof p !== 'string') {\n            throw new TypeError('Invalid argument type to path.join: ' + (typeof p));\n        } else if (p !== '') {\n            if (p.charAt(0) === sep) {\n                processed = [];\n            }\n            processed.push(p);\n        }\n    }\n\n    const resolved = normalize(processed.join(sep));\n    if (resolved.length > 1 && resolved.charAt(resolved.length - 1) === sep) {\n        return resolved.substring(0, resolved.length - 1);\n    }\n\n    return resolved;\n}\n\nexport function relative(from: string, to: string): string {\n    let i: number;\n\n    from = resolve(from);\n    to = resolve(to);\n    const fromSegments = from.split(sep);\n    const toSegments = to.split(sep);\n\n    toSegments.shift();\n    fromSegments.shift();\n\n    let upCount = 0;\n    let downSegments: string[] = [];\n\n    for (i = 0; i < fromSegments.length; i++) {\n        const seg = fromSegments[i];\n        if (seg === toSegments[i]) {\n            continue;\n        }\n\n        upCount = fromSegments.length - i;\n        break;\n    }\n\n    downSegments = toSegments.slice(i);\n\n    if (fromSegments.length === 1 && fromSegments[0] === '') {\n        upCount = 0;\n    }\n\n    if (upCount > fromSegments.length) {\n        upCount = fromSegments.length;\n    }\n\n    let rv = '';\n    for (i = 0; i < upCount; i++) {\n        rv += '../';\n    }\n    rv += downSegments.join(sep);\n\n    if (rv.length > 1 && rv.charAt(rv.length - 1) === sep) {\n        rv = rv.substring(0, rv.length - 1);\n    }\n    return rv;\n}\nexport function normalize(p: string): string {\n\n    if (p === '') {\n        p = '.';\n    }\n\n    const absolute = p.charAt(0) === sep;\n\n    p = removeDuplicateSeparators(p);\n\n    const components = p.split(sep);\n    const goodComponents: string[] = [];\n    for (const c of components) {\n        if (c === '.') {\n            continue;\n        } else if (c === '..' && (absolute || (!absolute && goodComponents.length > 0 && goodComponents[0] !== '..'))) {\n            goodComponents.pop();\n        } else {\n            goodComponents.push(c);\n        }\n    }\n\n    if (!absolute && goodComponents.length < 2) {\n        switch (goodComponents.length) {\n            case 1:\n                if (goodComponents[0] === '') {\n                    goodComponents.unshift('.');\n                }\n                break;\n            default:\n                goodComponents.push('.');\n        }\n    }\n    p = goodComponents.join(sep);\n    if (absolute && p.charAt(0) !== sep) {\n        p = sep + p;\n    }\n    return p;\n}\n\nfunction removeDuplicateSeparators(p: string): string {\n    p = p.replace(replaceRegex, sep);\n    return p;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport namespace ArrayUtils {\n    export interface Head<T> extends Array<T> {\n        head(): T;\n    }\n\n    export interface Tail<T> extends Array<T> {\n        tail(): T;\n    }\n\n    export interface Children<T> extends Array<T> {\n        children(): Tail<T>\n    }\n\n    export const TailImpl = {\n        tail<T>(this: Array<T>): T {\n            return this[this.length - 1];\n        },\n    };\n\n    export const HeadAndChildrenImpl = {\n        head<T>(this: Array<T>): T {\n            return this[0];\n        },\n\n        children<T>(this: Array<T>): Tail<T> {\n            return Object.assign(this.slice(1), TailImpl);\n        }\n    };\n\n    export interface HeadAndTail<T> extends Head<T>, Tail<T>, Children<T> { }\n\n    export function asTail<T>(array: Array<T>): Tail<T> {\n        return Object.assign(array, TailImpl);\n    }\n\n    export function asHeadAndTail<T>(array: Array<T>): HeadAndTail<T> {\n        return Object.assign(array, HeadAndChildrenImpl, TailImpl);\n    }\n\n    export enum Sort {\n        LeftBeforeRight = -1,\n        RightBeforeLeft = 1,\n        Equal = 0,\n    }\n\n    // Copied from https://github.com/microsoft/vscode/blob/9c29becfad5f68270b9b23efeafb147722c5feba/src/vs/base/common/arrays.ts\n    /**\n     * Performs a binary search algorithm over a sorted collection. Useful for cases\n     * when we need to perform a binary search over something that isn't actually an\n     * array, and converting data to an array would defeat the use of binary search\n     * in the first place.\n     *\n     * @param length The collection length.\n     * @param compareToKey A function that takes an index of an element in the\n     *   collection and returns zero if the value at this index is equal to the\n     *   search key, a negative number if the value precedes the search key in the\n     *   sorting order, or a positive number if the search key precedes the value.\n     * @return A non-negative index of an element, if found. If not found, the\n     *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n     *   where the key should be inserted to maintain the sorting order.\n     */\n    export function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n        let low = 0;\n        let high = length - 1;\n\n        while (low <= high) {\n            const mid = ((low + high) / 2) | 0;\n            const comp = compareToKey(mid);\n            if (comp < 0) {\n                low = mid + 1;\n            } else if (comp > 0) {\n                high = mid - 1;\n            } else {\n                return mid;\n            }\n        }\n        return -(low + 1);\n    }\n\n    export function partition<T>(array: T[], filter: (e: T, idx: number, arr: T[]) => boolean | undefined): [T[], T[]] {\n        const pass: T[] = [];\n        const fail: T[] = [];\n        array.forEach((e, idx, arr) => (filter(e, idx, arr) ? pass : fail).push(e));\n        return [pass, fail];\n    }\n\n    /**\n     * @returns New array with all falsy values removed. The original array IS NOT modified.\n     */\n    export function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n        return <T[]>array.filter(e => !!e);\n    }\n\n    /**\n     * groups array elements through a comparator function\n     * @param data array of elements to group\n     * @param compare comparator function: return of 0 means should group, anything above means not group\n     * @returns array of arrays with grouped elements\n     */\n    export function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n        const result: T[][] = [];\n        let currentGroup: T[] | undefined = undefined;\n        for (const element of data.slice(0).sort(compare)) {\n            if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n                currentGroup = [element];\n                result.push(currentGroup);\n            } else {\n                currentGroup.push(element);\n            }\n        }\n        return result;\n    }\n\n    export function shallowEqual<T>(left: readonly T[], right: readonly T[]): boolean {\n        if (left.length !== right.length) {\n            return false;\n        }\n        for (let i = 0; i < left.length; i++) {\n            if (left[i] !== right[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    export function startsWith<T>(left: readonly T[], right: readonly T[]): boolean {\n        if (right.length > left.length) {\n            return false;\n        }\n\n        for (let i = 0; i < right.length; i++) {\n            if (left[i] !== right[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    export function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n        if (one === other) {\n            return true;\n        }\n\n        if (!one || !other) {\n            return false;\n        }\n\n        if (one.length !== other.length) {\n            return false;\n        }\n\n        for (let i = 0, len = one.length; i < len; i++) {\n            if (!itemEquals(one[i], other[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    export function findLast<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n        const idx = findLastIdx(array, predicate);\n        if (idx === -1) {\n            return undefined;\n        }\n        return array[idx];\n    }\n\n    export function findLastIdx<T>(array: readonly T[], predicate: (item: T) => boolean, fromIndex = array.length - 1): number {\n        for (let i = fromIndex; i >= 0; i--) {\n            const element = array[i];\n\n            if (predicate(element)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    export function checkAdjacentItems<T>(items: readonly T[], predicate: (item1: T, item2: T) => boolean): boolean {\n        for (let i = 0; i < items.length - 1; i++) {\n            const a = items[i];\n            const b = items[i + 1];\n            if (!predicate(a, b)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Disposable, DisposableGroup, DisposableCollection } from './disposable';\nimport { MaybePromise } from './types';\n\n/**\n * Represents a typed event.\n */\nexport interface Event<T> {\n\n    /**\n     *\n     * @param listener The listener function will be call when the event happens.\n     * @param thisArgs The 'this' which will be used when calling the event listener.\n     * @param disposables An array to which a {{IDisposable}} will be added.\n     * @return a disposable to remove the listener again.\n     */\n    (listener: (e: T) => any, thisArgs?: any, disposables?: DisposableGroup): Disposable;\n}\n\nexport namespace Event {\n    const _disposable = { dispose(): void { } };\n    export function getMaxListeners(event: Event<unknown>): number {\n        const { maxListeners } = event as any;\n        return typeof maxListeners === 'number' ? maxListeners : 0;\n    }\n    export function setMaxListeners<N extends number>(event: Event<unknown>, maxListeners: N): N {\n        if (typeof (event as any).maxListeners === 'number') {\n            return (event as any).maxListeners = maxListeners;\n        }\n        return maxListeners;\n    }\n    export function addMaxListeners(event: Event<unknown>, add: number): number {\n        if (typeof (event as any).maxListeners === 'number') {\n            return (event as any).maxListeners += add;\n        }\n        return add;\n    }\n    export const None: Event<any> = Object.assign(function (): { dispose(): void } { return _disposable; }, {\n        get maxListeners(): number { return 0; },\n        set maxListeners(maxListeners: number) { }\n    });\n\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    export function once<T>(event: Event<T>): Event<T> {\n        return (listener, thisArgs = undefined, disposables?) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result: Disposable | undefined = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                } else if (result) {\n                    result.dispose();\n                } else {\n                    didFire = true;\n                }\n\n                return listener.call(thisArgs, e);\n            }, undefined, disposables);\n\n            if (didFire) {\n                result.dispose();\n            }\n\n            return result;\n        };\n    }\n\n    export function toPromise<T>(event: Event<T>): Promise<T> {\n        return new Promise(resolve => once(event)(resolve));\n    }\n\n    export function filter<T>(event: Event<T>, predicate: (e: T) => unknown): Event<T>;\n    export function filter<T, S extends T>(event: Event<T>, predicate: (e: T) => e is S): Event<S>;\n    export function filter<T>(event: Event<T>, predicate: (e: T) => unknown): Event<T> {\n        return (listener, thisArg, disposables) => event(e => predicate(e) && listener.call(thisArg, e), undefined, disposables);\n    }\n\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * through the mapping function.\n     */\n    export function map<I, O>(event: Event<I>, mapFunc: (i: I) => O): Event<O> {\n        return Object.assign((listener: (e: O) => any, thisArgs?: any, disposables?: Disposable[]) => event(i => listener.call(thisArgs, mapFunc(i)), undefined, disposables), {\n            get maxListeners(): number { return 0; },\n            set maxListeners(maxListeners: number) { }\n        });\n    }\n\n    /**\n     * Given a collection of events, returns a single event which emits whenever any of the provided events emit.\n     */\n    export function any<T>(...events: Event<T>[]): Event<T>;\n    export function any(...events: Event<any>[]): Event<void>;\n    export function any<T>(...events: Event<T>[]): Event<T> {\n        return (listener, thisArgs = undefined, disposables?: Disposable[]) =>\n            new DisposableCollection(...events.map(event => event(e => listener.call(thisArgs, e), undefined, disposables)));\n    }\n}\n\ntype Callback = (...args: any[]) => any;\nclass CallbackList implements Iterable<Callback> {\n\n    private _callbacks: Function[] | undefined;\n    private _contexts: any[] | undefined;\n\n    get length(): number {\n        return this._callbacks && this._callbacks.length || 0;\n    }\n\n    public add(callback: Function, context: any = undefined, bucket?: Disposable[]): void {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts!.push(context);\n\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n\n    public remove(callback: Function, context: any = undefined): void {\n        if (!this._callbacks) {\n            return;\n        }\n\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0; i < this._callbacks.length; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts![i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts!.splice(i, 1);\n                    return;\n                } else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n\n    // tslint:disable-next-line:typedef\n    public [Symbol.iterator]() {\n        if (!this._callbacks) {\n            return [][Symbol.iterator]();\n        }\n        const callbacks = this._callbacks.slice(0);\n        const contexts = this._contexts!.slice(0);\n\n        return callbacks.map((callback, i) =>\n            (...args: any[]) => callback.apply(contexts[i], args)\n        )[Symbol.iterator]();\n    }\n\n    public invoke(...args: any[]): any[] {\n        const ret: any[] = [];\n        for (const callback of this) {\n            try {\n                ret.push(callback(...args));\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        return ret;\n    }\n\n    public isEmpty(): boolean {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n\n    public dispose(): void {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\n\nexport interface EmitterOptions {\n    onFirstListenerAdd?: Function;\n    onLastListenerRemove?: Function;\n}\n\nexport class Emitter<T = any> {\n\n    private static LEAK_WARNING_THRESHHOLD = 175;\n\n    private static _noop = function (): void { };\n\n    private _event: Event<T>;\n    protected _callbacks: CallbackList | undefined;\n    private _disposed = false;\n\n    private _leakingStacks: Map<string, number> | undefined;\n    private _leakWarnCountdown = 0;\n\n    constructor(\n        private _options?: EmitterOptions\n    ) { }\n\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event(): Event<T> {\n        if (!this._event) {\n            this._event = Object.assign((listener: (e: T) => any, thisArgs?: any, disposables?: DisposableGroup) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const removeMaxListenersCheck = this.checkMaxListeners(Event.getMaxListeners(this._event));\n\n                const result: Disposable = {\n                    dispose: () => {\n                        if (removeMaxListenersCheck) {\n                            removeMaxListenersCheck();\n                        }\n                        result.dispose = Emitter._noop;\n                        if (!this._disposed) {\n                            this._callbacks!.remove(listener, thisArgs);\n                            result.dispose = Emitter._noop;\n                            if (this._options && this._options.onLastListenerRemove && this._callbacks!.isEmpty()) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                };\n                if (DisposableGroup.canPush(disposables)) {\n                    disposables.push(result);\n                } else if (DisposableGroup.canAdd(disposables)) {\n                    disposables.add(result);\n                }\n\n                return result;\n            }, {\n                maxListeners: Emitter.LEAK_WARNING_THRESHHOLD\n            });\n        }\n        return this._event;\n    }\n\n    protected checkMaxListeners(maxListeners: number): (() => void) | undefined {\n        if (maxListeners === 0 || !this._callbacks) {\n            return undefined;\n        }\n        const listenerCount = this._callbacks.length;\n        if (listenerCount <= maxListeners) {\n            return undefined;\n        }\n\n        const popStack = this.pushLeakingStack();\n\n        this._leakWarnCountdown -= 1;\n        if (this._leakWarnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._leakWarnCountdown = maxListeners * 0.5;\n\n            let topStack: string;\n            let topCount = 0;\n            this._leakingStacks!.forEach((stackCount, stack) => {\n                if (!topStack || topCount < stackCount) {\n                    topStack = stack;\n                    topCount = stackCount;\n                }\n            });\n\n            // eslint-disable-next-line max-len\n            console.warn(`Possible Emitter memory leak detected. ${listenerCount} listeners added. Use event.maxListeners to increase the limit (${maxListeners}). MOST frequent listener (${topCount}):`);\n            console.warn(topStack!);\n        }\n\n        return popStack;\n    }\n\n    protected pushLeakingStack(): () => void {\n        if (!this._leakingStacks) {\n            this._leakingStacks = new Map();\n        }\n        const stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n        const count = (this._leakingStacks.get(stack) || 0);\n        this._leakingStacks.set(stack, count + 1);\n        return () => this.popLeakingStack(stack);\n    }\n\n    protected popLeakingStack(stack: string): void {\n        if (!this._leakingStacks) {\n            return;\n        }\n        const count = (this._leakingStacks.get(stack) || 0);\n        this._leakingStacks.set(stack, count - 1);\n    }\n\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event: T): any {\n        if (this._callbacks) {\n            return this._callbacks.invoke(event);\n        }\n    }\n\n    /**\n     * Process each listener one by one.\n     * Return `false` to stop iterating over the listeners, `true` to continue.\n     */\n    async sequence(processor: (listener: (e: T) => any) => MaybePromise<boolean>): Promise<void> {\n        if (this._callbacks) {\n            for (const listener of this._callbacks) {\n                if (!await processor(listener)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    dispose(): void {\n        if (this._leakingStacks) {\n            this._leakingStacks.clear();\n            this._leakingStacks = undefined;\n        }\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n        this._disposed = true;\n    }\n}\n\nexport type WaitUntilData<T> = Omit<T, 'waitUntil' | 'token'>;\n\nexport interface WaitUntilEvent {\n    /**\n     * A cancellation token.\n     */\n    token: CancellationToken;\n    /**\n     * Allows to pause the event loop until the provided thenable resolved.\n     *\n     * *Note:* It can only be called during event dispatch and not in an asynchronous manner\n     *\n     * @param thenable A thenable that delays execution.\n     */\n    waitUntil(thenable: Promise<any>): void;\n}\nexport namespace WaitUntilEvent {\n    /**\n     * Fire all listeners in the same tick.\n     *\n     * Use `AsyncEmitter.fire` to fire listeners async one after another.\n     */\n    export async function fire<T extends WaitUntilEvent>(\n        emitter: Emitter<T>,\n        event: WaitUntilData<T>,\n        timeout?: number,\n        token = CancellationToken.None\n    ): Promise<void> {\n        const waitables: Promise<void>[] = [];\n        const asyncEvent = Object.assign(event, {\n            token,\n            waitUntil: (thenable: Promise<any>) => {\n                if (Object.isFrozen(waitables)) {\n                    throw new Error('waitUntil cannot be called asynchronously.');\n                }\n                waitables.push(thenable);\n            }\n        }) as T;\n        try {\n            emitter.fire(asyncEvent);\n            // Asynchronous calls to `waitUntil` should fail.\n            Object.freeze(waitables);\n        } finally {\n            delete (asyncEvent as any)['waitUntil'];\n        }\n        if (!waitables.length) {\n            return;\n        }\n        if (timeout !== undefined) {\n            await Promise.race([Promise.all(waitables), new Promise(resolve => setTimeout(resolve, timeout))]);\n        } else {\n            await Promise.all(waitables);\n        }\n    }\n}\n\nimport { CancellationToken } from './cancellation';\n\nexport class AsyncEmitter<T extends WaitUntilEvent> extends Emitter<T> {\n\n    protected deliveryQueue: Promise<void> | undefined;\n\n    /**\n     * Fire listeners async one after another.\n     */\n    override fire(event: WaitUntilData<T>, token: CancellationToken = CancellationToken.None,\n        promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n        const callbacks = this._callbacks;\n        if (!callbacks) {\n            return Promise.resolve();\n        }\n        const listeners = [...callbacks];\n        if (this.deliveryQueue) {\n            return this.deliveryQueue = this.deliveryQueue.then(() => this.deliver(listeners, event, token, promiseJoin));\n        }\n        return this.deliveryQueue = this.deliver(listeners, event, token, promiseJoin);\n    }\n\n    protected async deliver(listeners: Callback[], event: WaitUntilData<T>, token: CancellationToken,\n        promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n        for (const listener of listeners) {\n            if (token.isCancellationRequested) {\n                return;\n            }\n            const waitables: Promise<void>[] = [];\n            const asyncEvent = Object.assign(event, {\n                token,\n                waitUntil: (thenable: Promise<any>) => {\n                    if (Object.isFrozen(waitables)) {\n                        throw new Error('waitUntil cannot be called asynchronously.');\n                    }\n                    if (promiseJoin) {\n                        thenable = promiseJoin(thenable, listener);\n                    }\n                    waitables.push(thenable);\n                }\n            }) as T;\n            try {\n                listener(event);\n                // Asynchronous calls to `waitUntil` should fail.\n                Object.freeze(waitables);\n            } catch (e) {\n                console.error(e);\n            } finally {\n                delete (asyncEvent as any)['waitUntil'];\n            }\n            if (!waitables.length) {\n                continue;\n            }\n            try {\n                await Promise.all(waitables);\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n}\n\nexport class QueueableEmitter<T> extends Emitter<T[]> {\n\n    currentQueue?: T[];\n\n    queue(...arg: T[]): void {\n        if (!this.currentQueue) {\n            this.currentQueue = [];\n        }\n        this.currentQueue.push(...arg);\n    }\n\n    override fire(): void {\n        super.fire(this.currentQueue || []);\n        this.currentQueue = undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Channel } from '../message-rpc/channel';\n\nexport const servicesPath = '/services';\n\nexport const ConnectionHandler = Symbol('ConnectionHandler');\n\nexport interface ConnectionHandler {\n    readonly path: string;\n    onConnection(connection: Channel): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const UTF8 = 'utf8';\nexport const UTF8_with_bom = 'utf8bom';\nexport const UTF16be = 'utf16be';\nexport const UTF16le = 'utf16le';\n\nexport const UTF16be_BOM = [0xFE, 0xFF];\nexport const UTF16le_BOM = [0xFF, 0xFE];\nexport const UTF8_BOM = [0xEF, 0xBB, 0xBF];\n","// *****************************************************************************\n// Copyright (C) 2018-2022 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* tslint:disable:typedef */\n\nimport type * as theia from '@theia/plugin';\nimport { CommandRegistryImpl } from './command-registry';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { CancellationError, CancellationToken, CancellationTokenSource } from '@theia/core/lib/common/cancellation';\nimport { QuickOpenExtImpl } from './quick-open';\nimport {\n    MAIN_RPC_CONTEXT,\n    Plugin as InternalPlugin,\n    PluginManager,\n    PluginAPIFactory,\n    MainMessageType,\n    DebugConfigurationProviderTriggerKind,\n    PLUGIN_RPC_CONTEXT\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { MessageRegistryExt } from './message-registry';\nimport { StatusBarMessageRegistryExt } from './status-bar-message-registry';\nimport { WindowStateExtImpl } from './window-state';\nimport { WorkspaceExtImpl } from './workspace';\nimport { EnvExtImpl } from './env';\nimport { QueryParameters } from '../common/env';\nimport {\n    ConfigurationTarget,\n    Disposable,\n    Position,\n    Range,\n    Selection,\n    ViewColumn,\n    TextEditorSelectionChangeKind,\n    EndOfLine,\n    SnippetString,\n    ThemeColor,\n    ThemeIcon,\n    TextEditorRevealType,\n    TextEditorLineNumbersStyle,\n    DecorationRangeBehavior,\n    OverviewRulerLane,\n    StatusBarAlignment,\n    RelativePattern,\n    IndentAction,\n    SyntaxTokenType,\n    CompletionItem,\n    CompletionItemKind,\n    CompletionList,\n    TextEdit,\n    SnippetTextEdit,\n    CompletionTriggerKind,\n    Diagnostic,\n    DiagnosticRelatedInformation,\n    DebugConsoleMode,\n    DiagnosticSeverity,\n    DiagnosticTag,\n    CompletionItemTag,\n    Location,\n    LogLevel,\n    Progress,\n    ProgressOptions,\n    ProgressLocation,\n    ParameterInformation,\n    SignatureInformation,\n    SignatureHelp,\n    SignatureHelpTriggerKind,\n    Hover,\n    EvaluatableExpression,\n    InlineValueEvaluatableExpression,\n    InlineValueText,\n    InlineValueVariableLookup,\n    InlineValueContext,\n    DocumentHighlightKind,\n    DocumentHighlight,\n    MultiDocumentHighlight,\n    DocumentLink,\n    DocumentDropEdit,\n    CodeLens,\n    CodeActionKind,\n    CodeActionTrigger,\n    CodeActionTriggerKind,\n    TextDocumentSaveReason,\n    CodeAction,\n    DataTransferItem,\n    DataTransfer,\n    TreeItem,\n    TreeItemCollapsibleState,\n    TreeItemCheckboxState,\n    DocumentSymbol,\n    SymbolTag,\n    WorkspaceEdit,\n    SymbolInformation,\n    FileType,\n    FileChangeType,\n    ShellQuoting,\n    ShellExecution,\n    ProcessExecution,\n    CustomExecution,\n    TaskScope,\n    TaskPanelKind,\n    TaskRevealKind,\n    TaskGroup,\n    Task,\n    Task2,\n    DebugAdapterExecutable,\n    DebugAdapterServer,\n    DebugAdapterNamedPipeServer,\n    DebugAdapterInlineImplementation,\n    Breakpoint,\n    SourceBreakpoint,\n    FunctionBreakpoint,\n    DebugStackFrame,\n    DebugThread,\n    FoldingRange,\n    FoldingRangeKind,\n    SelectionRange,\n    Color,\n    ColorInformation,\n    ColorPresentation,\n    OperatingSystem,\n    WebviewPanelTargetArea,\n    UIKind,\n    FileSystemError,\n    CommentThreadState,\n    CommentThreadCollapsibleState,\n    QuickInputButtons,\n    QuickPickItemKind,\n    CommentMode,\n    CallHierarchyItem,\n    CallHierarchyIncomingCall,\n    CallHierarchyOutgoingCall,\n    TypeHierarchyItem,\n    TimelineItem,\n    EnvironmentVariableMutatorType,\n    SemanticTokensLegend,\n    SemanticTokensBuilder,\n    SemanticTokens,\n    SemanticTokensEdits,\n    SemanticTokensEdit,\n    ColorThemeKind,\n    SourceControlInputBoxValidationType,\n    URI,\n    FileDecoration,\n    ExtensionMode,\n    LinkedEditingRanges,\n    LanguageStatusSeverity,\n    TextDocumentChangeReason,\n    InputBoxValidationSeverity,\n    TerminalLink,\n    TerminalLocation,\n    TerminalExitReason,\n    TerminalProfile,\n    InlayHint,\n    InlayHintKind,\n    InlayHintLabelPart,\n    TelemetryTrustedValue,\n    NotebookCellKind,\n    NotebookCellExecutionState,\n    NotebookCellStatusBarAlignment,\n    NotebookEditorRevealType,\n    NotebookControllerAffinity,\n    NotebookCellData,\n    NotebookCellOutput,\n    NotebookCellOutputItem,\n    NotebookData,\n    NotebookRange,\n    NotebookCellStatusBarItem,\n    NotebookEdit,\n    NotebookKernelSourceAction,\n    NotebookRendererScript,\n    TestRunProfileKind,\n    TestTag,\n    TestRunRequest,\n    TestMessage,\n    TestMessageStackFrame,\n    ExtensionKind,\n    InlineCompletionItem,\n    InlineCompletionList,\n    InlineCompletionTriggerKind,\n    TextTabInput,\n    CustomEditorTabInput,\n    NotebookDiffEditorTabInput,\n    NotebookEditorTabInput,\n    TerminalEditorTabInput,\n    TextDiffTabInput,\n    TextMergeTabInput,\n    WebviewEditorTabInput,\n    DocumentPasteEdit,\n    DocumentPasteEditKind,\n    DocumentPasteTriggerKind,\n    DocumentDropOrPasteEditKind,\n    ExternalUriOpenerPriority,\n    EditSessionIdentityMatch,\n    TerminalOutputAnchor,\n    TerminalQuickFixTerminalCommand,\n    TerminalQuickFixOpener,\n    TestResultState,\n    BranchCoverage,\n    DeclarationCoverage,\n    FileCoverage,\n    StatementCoverage,\n    TestCoverageCount,\n    ChatRequestTurn,\n    ChatResponseTurn,\n    ChatResponseAnchorPart,\n    ChatResponseCommandButtonPart,\n    ChatResponseFileTreePart,\n    ChatResponseMarkdownPart,\n    ChatResponseProgressPart,\n    ChatResponseReferencePart,\n    ChatResultFeedbackKind,\n    LanguageModelChatMessage,\n    LanguageModelChatMessageRole,\n    LanguageModelChatToolMode,\n    LanguageModelError,\n    LanguageModelPromptTsxPart,\n    LanguageModelTextPart,\n    LanguageModelToolCallPart,\n    LanguageModelToolResult,\n    LanguageModelToolResultPart,\n    PortAutoForwardAction,\n    PortAttributes,\n    DebugVisualization,\n    TerminalShellExecutionCommandLineConfidence,\n    TerminalCompletionItemKind,\n    TerminalCompletionList,\n    McpHttpServerDefinition,\n    McpStdioServerDefinition,\n    InteractiveWindowInput\n} from './types-impl';\nimport { AuthenticationExtImpl } from './authentication-ext';\nimport { SymbolKind } from '../common/plugin-api-rpc-model';\nimport { EditorsAndDocumentsExtImpl } from './editors-and-documents';\nimport { TextEditorsExtImpl } from './text-editors';\nimport { DocumentsExtImpl } from './documents';\nimport { TextEditorCursorStyle } from '../common/editor-options';\nimport { PreferenceRegistryExtImpl } from './preference-registry';\nimport { OutputChannelRegistryExtImpl } from './output-channel-registry';\nimport { TerminalServiceExtImpl, TerminalExtImpl } from './terminal-ext';\nimport { LanguagesExtImpl } from './languages';\nimport { fromDocumentSelector, pluginToPluginInfo, fromGlobPattern } from './type-converters';\nimport { DialogsExtImpl } from './dialogs';\nimport { NotificationExtImpl } from './notification';\nimport { score } from '@theia/editor/lib/common/language-selector';\nimport { MarkdownString } from './markdown-string';\nimport { TreeViewsExtImpl } from './tree/tree-views';\nimport { ConnectionImpl } from '../common/connection';\nimport { TasksExtImpl } from './tasks/tasks';\nimport { DebugExtImpl } from './debug/debug-ext';\nimport { FileSystemExtImpl } from './file-system-ext-impl';\nimport { ScmExtImpl } from './scm';\nimport { DecorationsExtImpl } from './decorations';\nimport { TextEditorExt } from './text-editor';\nimport { ClipboardExt } from './clipboard-ext';\nimport { WebviewsExtImpl } from './webviews';\nimport { ExtHostFileSystemEventService } from './file-system-event-service-ext-impl';\nimport { LabelServiceExtImpl } from '../plugin/label-service';\nimport { TimelineExtImpl } from './timeline';\nimport { ThemingExtImpl } from './theming';\nimport { CommentsExtImpl } from './comments';\nimport { CustomEditorsExtImpl } from './custom-editors';\nimport { WebviewViewsExtImpl } from './webview-views';\nimport { PluginPackage } from '../common';\nimport { Endpoint } from '@theia/core/lib/browser/endpoint';\nimport { FilePermission } from '@theia/filesystem/lib/common/files';\nimport { TabsExtImpl } from './tabs';\nimport { LocalizationExtImpl } from './localization-ext';\nimport { NotebooksExtImpl } from './notebook/notebooks';\nimport { TelemetryExtImpl } from './telemetry-ext';\nimport { NotebookDocument } from './notebook/notebook-document';\nimport { NotebookRenderersExtImpl } from './notebook/notebook-renderers';\nimport { NotebookKernelsExtImpl } from './notebook/notebook-kernels';\nimport { NotebookDocumentsExtImpl } from './notebook/notebook-documents';\nimport { NotebookEditorsExtImpl } from './notebook/notebook-editors';\nimport { TestingExtImpl } from './tests';\nimport { UriExtImpl } from './uri-ext';\nimport { PluginLogger } from './logger';\nimport { LmExtImpl } from './lm-ext';\n\nexport function createAPIObject<T extends Object>(rawObject: T): T {\n    return new Proxy(rawObject, {\n        get(target, p, receiver) {\n            const isOwnProperty = !!Object.getOwnPropertyDescriptor(target, p);\n            const val = Reflect.get(target, p);\n            if (!isOwnProperty && typeof val === 'function') {\n                // bind functions that are inherited from the prototype to the object itself.\n                // This should handle the case of events.\n                return val.bind(target);\n            }\n            return val;\n        },\n    }) as T;\n}\n\nexport function createAPIFactory(\n    rpc: RPCProtocol,\n    pluginManager: PluginManager,\n    envExt: EnvExtImpl,\n    debugExt: DebugExtImpl,\n    preferenceRegistryExt: PreferenceRegistryExtImpl,\n    editorsAndDocumentsExt: EditorsAndDocumentsExtImpl,\n    workspaceExt: WorkspaceExtImpl,\n    messageRegistryExt: MessageRegistryExt,\n    clipboard: ClipboardExt,\n    webviewExt: WebviewsExtImpl,\n    localizationExt: LocalizationExtImpl\n): PluginAPIFactory {\n\n    const authenticationExt = rpc.set(MAIN_RPC_CONTEXT.AUTHENTICATION_EXT, new AuthenticationExtImpl(rpc));\n    const commandRegistry = rpc.set(MAIN_RPC_CONTEXT.COMMAND_REGISTRY_EXT, new CommandRegistryImpl(rpc));\n    const quickOpenExt = rpc.set(MAIN_RPC_CONTEXT.QUICK_OPEN_EXT, new QuickOpenExtImpl(rpc));\n    const dialogsExt = new DialogsExtImpl(rpc);\n    const windowStateExt = rpc.set(MAIN_RPC_CONTEXT.WINDOW_STATE_EXT, new WindowStateExtImpl(rpc));\n    const notificationExt = rpc.set(MAIN_RPC_CONTEXT.NOTIFICATION_EXT, new NotificationExtImpl(rpc));\n    const editors = rpc.set(MAIN_RPC_CONTEXT.TEXT_EDITORS_EXT, new TextEditorsExtImpl(rpc, editorsAndDocumentsExt));\n    const documents = rpc.set(MAIN_RPC_CONTEXT.DOCUMENTS_EXT, new DocumentsExtImpl(rpc, editorsAndDocumentsExt));\n    const notebooksExt = rpc.set(MAIN_RPC_CONTEXT.NOTEBOOKS_EXT, new NotebooksExtImpl(rpc, commandRegistry, editorsAndDocumentsExt, documents));\n    const notebookEditors = rpc.set(MAIN_RPC_CONTEXT.NOTEBOOK_EDITORS_EXT, new NotebookEditorsExtImpl(notebooksExt));\n    const notebookRenderers = rpc.set(MAIN_RPC_CONTEXT.NOTEBOOK_RENDERERS_EXT, new NotebookRenderersExtImpl(rpc, notebooksExt));\n    const notebookKernels = rpc.set(MAIN_RPC_CONTEXT.NOTEBOOK_KERNELS_EXT, new NotebookKernelsExtImpl(rpc, notebooksExt, commandRegistry, webviewExt, workspaceExt));\n    const notebookDocuments = rpc.set(MAIN_RPC_CONTEXT.NOTEBOOK_DOCUMENTS_EXT, new NotebookDocumentsExtImpl(notebooksExt));\n    const statusBarMessageRegistryExt = new StatusBarMessageRegistryExt(rpc, commandRegistry);\n    const terminalExt = rpc.set(MAIN_RPC_CONTEXT.TERMINAL_EXT, new TerminalServiceExtImpl(rpc));\n    const outputChannelRegistryExt = rpc.set(MAIN_RPC_CONTEXT.OUTPUT_CHANNEL_REGISTRY_EXT, new OutputChannelRegistryExtImpl(rpc));\n    const treeViewsExt = rpc.set(MAIN_RPC_CONTEXT.TREE_VIEWS_EXT, new TreeViewsExtImpl(rpc, commandRegistry));\n    const tasksExt = rpc.set(MAIN_RPC_CONTEXT.TASKS_EXT, new TasksExtImpl(rpc, terminalExt));\n    const connectionExt = rpc.set(MAIN_RPC_CONTEXT.CONNECTION_EXT, new ConnectionImpl(rpc.getProxy(PLUGIN_RPC_CONTEXT.CONNECTION_MAIN)));\n    const fileSystemExt = rpc.set(MAIN_RPC_CONTEXT.FILE_SYSTEM_EXT, new FileSystemExtImpl(rpc));\n    const languagesExt = rpc.set(MAIN_RPC_CONTEXT.LANGUAGES_EXT, new LanguagesExtImpl(rpc, documents, commandRegistry, fileSystemExt));\n    const extHostFileSystemEvent = rpc.set(MAIN_RPC_CONTEXT.ExtHostFileSystemEventService, new ExtHostFileSystemEventService(rpc, editorsAndDocumentsExt));\n    const scmExt = rpc.set(MAIN_RPC_CONTEXT.SCM_EXT, new ScmExtImpl(rpc, commandRegistry));\n    const decorationsExt = rpc.set(MAIN_RPC_CONTEXT.DECORATIONS_EXT, new DecorationsExtImpl(rpc));\n    const labelServiceExt = rpc.set(MAIN_RPC_CONTEXT.LABEL_SERVICE_EXT, new LabelServiceExtImpl(rpc));\n    const timelineExt = rpc.set(MAIN_RPC_CONTEXT.TIMELINE_EXT, new TimelineExtImpl(rpc, commandRegistry));\n    const themingExt = rpc.set(MAIN_RPC_CONTEXT.THEMING_EXT, new ThemingExtImpl(rpc));\n    const commentsExt = rpc.set(MAIN_RPC_CONTEXT.COMMENTS_EXT, new CommentsExtImpl(rpc, commandRegistry, documents));\n    const tabsExt = rpc.set(MAIN_RPC_CONTEXT.TABS_EXT, new TabsExtImpl(rpc));\n    const customEditorExt = rpc.set(MAIN_RPC_CONTEXT.CUSTOM_EDITORS_EXT, new CustomEditorsExtImpl(rpc, documents, webviewExt));\n    const webviewViewsExt = rpc.set(MAIN_RPC_CONTEXT.WEBVIEW_VIEWS_EXT, new WebviewViewsExtImpl(rpc, webviewExt));\n    const telemetryExt = rpc.set(MAIN_RPC_CONTEXT.TELEMETRY_EXT, new TelemetryExtImpl());\n    const testingExt = rpc.set(MAIN_RPC_CONTEXT.TESTING_EXT, new TestingExtImpl(rpc, commandRegistry));\n    const uriExt = rpc.set(MAIN_RPC_CONTEXT.URI_EXT, new UriExtImpl(rpc));\n    const lmExt = rpc.set(MAIN_RPC_CONTEXT.MCP_SERVER_DEFINITION_REGISTRY_EXT, new LmExtImpl(rpc));\n    rpc.set(MAIN_RPC_CONTEXT.DEBUG_EXT, debugExt);\n\n    const commandLogger = new PluginLogger(rpc, 'commands-plugin');\n\n    return function (plugin: InternalPlugin): typeof theia {\n        const authentication: typeof theia.authentication = {\n            registerAuthenticationProvider(id: string, label: string, provider: theia.AuthenticationProvider, options?: theia.AuthenticationProviderOptions): theia.Disposable {\n                return authenticationExt.registerAuthenticationProvider(id, label, provider, options);\n            },\n            getSession(providerId: string, scopes: string[], options: theia.AuthenticationGetSessionOptions) {\n                return authenticationExt.getSession(plugin, providerId, scopes, options as any);\n            },\n            get onDidChangeSessions(): theia.Event<theia.AuthenticationSessionsChangeEvent> {\n                return authenticationExt.onDidChangeSessions;\n            },\n            getAccounts(providerId: string): Thenable<readonly theia.AuthenticationSessionAccountInformation[]> {\n                return authenticationExt.getAccounts(providerId);\n            }\n        };\n        function commandIsDeclaredInPackage(id: string, model: PluginPackage): boolean {\n            const rawCommands = model.contributes?.commands;\n            if (!rawCommands) { return false; }\n            return Array.isArray(rawCommands) ? rawCommands.some(candidate => candidate.command === id) : rawCommands.command === id;\n        }\n        const commands: typeof theia.commands = {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            registerCommand(command: theia.CommandDescription | string, handler?: <T>(...args: any[]) => T | Thenable<T | undefined>, thisArg?: any): Disposable {\n                // use of the ID when registering commands\n                if (typeof command === 'string') {\n                    if (handler && commandIsDeclaredInPackage(command, plugin.rawModel)) {\n                        return commandRegistry.registerHandler(command, handler, thisArg);\n                    }\n                    return commandRegistry.registerCommand({ id: command }, handler, thisArg);\n                }\n                return commandRegistry.registerCommand(command, handler, thisArg);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            executeCommand<T>(commandId: string, ...args: any[]): PromiseLike<T | undefined> {\n                return commandRegistry.executeCommand<T>(commandId, ...args);\n            },\n            registerTextEditorCommand(command: string, handler: (textEditor: theia.TextEditor, edit: theia.TextEditorEdit, ...arg: any[]) => void, thisArg?: any): Disposable {\n                const internalHandler = (...args: any[]): any => {\n                    const activeTextEditor = editors.getActiveEditor();\n                    if (!activeTextEditor) {\n                        commandLogger.warn('Cannot execute ' + command + ' because there is no active text editor.');\n                        return undefined;\n                    }\n\n                    return activeTextEditor.edit((edit: theia.TextEditorEdit) => {\n                        args.unshift(activeTextEditor, edit);\n                        handler.apply(thisArg, args);\n                    }).then(result => {\n                        if (!result) {\n                            commandLogger.warn('Edits from command ' + command + ' were not applied.');\n                        }\n                    }, err => {\n                        commandLogger.warn('An error occurred while running command ' + command, err);\n                    });\n                };\n                return commandIsDeclaredInPackage(command, plugin.rawModel)\n                    ? commandRegistry.registerHandler(command, internalHandler)\n                    : commandRegistry.registerCommand({ id: command }, internalHandler);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            registerHandler(commandId: string, handler: (...args: any[]) => any, thisArg?: any): Disposable {\n                return commandRegistry.registerHandler(commandId, handler, thisArg);\n            },\n            getKeyBinding(commandId: string): PromiseLike<theia.CommandKeyBinding[] | undefined> {\n                return commandRegistry.getKeyBinding(commandId);\n            },\n            getCommands(filterInternal: boolean = false): PromiseLike<string[]> {\n                return commandRegistry.getCommands(filterInternal);\n            },\n            registerDiffInformationCommand(command: string, callback: (diff: theia.LineChange[], ...args: any[]) => any, thisArg?: any): Disposable {\n                const internalHandler = async (...args: any[]): Promise<undefined> => {\n                    const activeTextEditor = editors.getActiveEditor();\n                    if (!activeTextEditor) {\n                        commandLogger.warn('Cannot execute ' + command + ' because there is no active text editor.');\n                        return undefined;\n                    }\n                    const lineChanges = await activeTextEditor.getDiffInformation();\n                    callback.apply(thisArg, [lineChanges, ...args]);\n                };\n                if (commandIsDeclaredInPackage(command, plugin.rawModel)) {\n                    return commandRegistry.registerHandler(\n                        command,\n                        internalHandler,\n                        thisArg,\n                    );\n                }\n                return commandRegistry.registerCommand({ id: command }, internalHandler, thisArg);\n            }\n        };\n\n        const { onDidChangeActiveTerminal, onDidChangeTerminalState, onDidCloseTerminal, onDidOpenTerminal } = terminalExt;\n        const showInformationMessage = messageRegistryExt.showMessage.bind(messageRegistryExt, MainMessageType.Info);\n        const showWarningMessage = messageRegistryExt.showMessage.bind(messageRegistryExt, MainMessageType.Warning);\n        const showErrorMessage = messageRegistryExt.showMessage.bind(messageRegistryExt, MainMessageType.Error);\n        const window: typeof theia.window = {\n\n            get activeTerminal(): TerminalExtImpl | undefined {\n                return terminalExt.activeTerminal;\n            },\n            get activeTextEditor(): TextEditorExt | undefined {\n                return editors.getActiveEditor();\n            },\n            get visibleTextEditors(): theia.TextEditor[] {\n                return editors.getVisibleTextEditors();\n            },\n            get terminals(): TerminalExtImpl[] {\n                return terminalExt.terminals;\n            },\n            onDidChangeActiveTerminal,\n            onDidChangeActiveTextEditor(listener, thisArg?, disposables?) {\n                return editors.onDidChangeActiveTextEditor(listener, thisArg, disposables);\n            },\n            onDidChangeVisibleTextEditors(listener, thisArg?, disposables?) {\n                return editors.onDidChangeVisibleTextEditors(listener, thisArg, disposables);\n            },\n            onDidChangeTextEditorSelection(listener, thisArg?, disposables?) {\n                return editors.onDidChangeTextEditorSelection(listener, thisArg, disposables);\n            },\n            onDidChangeTextEditorOptions(listener, thisArg?, disposables?) {\n                return editors.onDidChangeTextEditorOptions(listener, thisArg, disposables);\n            },\n            onDidChangeTextEditorViewColumn(listener, thisArg?, disposables?) {\n                return editors.onDidChangeTextEditorViewColumn(listener, thisArg, disposables);\n            },\n            onDidChangeTextEditorVisibleRanges(listener, thisArg?, disposables?) {\n                return editors.onDidChangeTextEditorVisibleRanges(listener, thisArg, disposables);\n            },\n            async showTextDocument(documentArg: theia.TextDocument | URI,\n                columnOrOptions?: theia.TextDocumentShowOptions | theia.ViewColumn,\n                preserveFocus?: boolean\n            ): Promise<theia.TextEditor> {\n                let documentOptions: theia.TextDocumentShowOptions | undefined;\n                const uri: URI = documentArg instanceof URI ? documentArg : documentArg.uri;\n                if (typeof columnOrOptions === 'number') {\n                    documentOptions = {\n                        viewColumn: columnOrOptions\n                    };\n                } else if (columnOrOptions && (columnOrOptions.preserveFocus || columnOrOptions.preview || columnOrOptions.selection || columnOrOptions.viewColumn)) {\n                    documentOptions = {\n                        ...columnOrOptions\n                    };\n                }\n                if (preserveFocus) {\n                    if (documentOptions) {\n                        documentOptions.preserveFocus = preserveFocus;\n                    } else {\n                        documentOptions = { preserveFocus };\n                    }\n                }\n                await documents.showDocument(uri, documentOptions);\n                const textEditor = editors.getVisibleTextEditors().find(editor => editor.document.uri.toString() === uri.toString());\n                if (textEditor) {\n                    return Promise.resolve(textEditor);\n                } else {\n                    throw new Error(`Failed to show text document ${documentArg.toString()}`);\n                }\n            },\n            get visibleNotebookEditors(): theia.NotebookEditor[] {\n                return notebooksExt.visibleApiNotebookEditors;\n            },\n            onDidChangeVisibleNotebookEditors(listener, thisArg?, disposables?) {\n                return notebooksExt.onDidChangeVisibleNotebookEditors(listener, thisArg, disposables);\n            },\n            get activeNotebookEditor(): theia.NotebookEditor | undefined {\n                return notebooksExt.activeApiNotebookEditor;\n            }, onDidChangeActiveNotebookEditor(listener, thisArg?, disposables?) {\n                return notebooksExt.onDidChangeActiveNotebookEditor(listener, thisArg, disposables);\n            },\n            onDidChangeNotebookEditorSelection(listener, thisArg?, disposables?) {\n                return notebookEditors.onDidChangeNotebookEditorSelection(listener, thisArg, disposables);\n            },\n            onDidChangeNotebookEditorVisibleRanges(listener, thisArg?, disposables?) {\n                return notebookEditors.onDidChangeNotebookEditorVisibleRanges(listener, thisArg, disposables);\n            },\n            showNotebookDocument(document: theia.NotebookDocument, options?: theia.NotebookDocumentShowOptions) {\n                return notebooksExt.showNotebookDocument(document, options);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            showQuickPick(items: any, options?: theia.QuickPickOptions, token?: theia.CancellationToken): any {\n                return quickOpenExt.showQuickPick(plugin, items, options, token);\n            },\n            createQuickPick<T extends theia.QuickPickItem>(): theia.QuickPick<T> {\n\n                return createAPIObject(quickOpenExt.createQuickPick(plugin));\n            },\n            showWorkspaceFolderPick(options?: theia.WorkspaceFolderPickOptions): PromiseLike<theia.WorkspaceFolder | undefined> {\n                return workspaceExt.pickWorkspaceFolder(options);\n            },\n            showInformationMessage,\n            showWarningMessage,\n            showErrorMessage,\n            showOpenDialog(options: theia.OpenDialogOptions): PromiseLike<URI[] | undefined> {\n                return dialogsExt.showOpenDialog(options);\n            },\n            showSaveDialog(options: theia.SaveDialogOptions): PromiseLike<URI | undefined> {\n                return dialogsExt.showSaveDialog(options);\n            },\n            showUploadDialog(options: theia.UploadDialogOptions): PromiseLike<URI[] | undefined> {\n                return dialogsExt.showUploadDialog(options);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            setStatusBarMessage(text: string, arg?: number | PromiseLike<any>): Disposable {\n                return statusBarMessageRegistryExt.setStatusBarMessage(text, arg);\n            },\n            showInputBox(options?: theia.InputBoxOptions, token?: theia.CancellationToken): PromiseLike<string | undefined> {\n                return quickOpenExt.showInput(options, token);\n            },\n            createStatusBarItem(alignmentOrId?: theia.StatusBarAlignment | string, priorityOrAlignment?: number | theia.StatusBarAlignment,\n                priorityArg?: number): theia.StatusBarItem {\n                let id: string | undefined;\n                let alignment: number | undefined;\n                let priority: number | undefined;\n\n                if (typeof alignmentOrId === 'string') {\n                    id = alignmentOrId;\n                    alignment = priorityOrAlignment;\n                    priority = priorityArg;\n                } else {\n                    alignment = alignmentOrId;\n                    priority = priorityOrAlignment;\n                }\n\n                // TODO: here\n                return statusBarMessageRegistryExt.createStatusBarItem(alignment, priority, id);\n            },\n            createOutputChannel(name: string, options?: { log: true }): any {\n\n                // TODO: here\n                return !options\n                    ? outputChannelRegistryExt.createOutputChannel(name, pluginToPluginInfo(plugin))\n                    : outputChannelRegistryExt.createOutputChannel(name, pluginToPluginInfo(plugin), options);\n            },\n            createWebviewPanel(viewType: string,\n                title: string,\n                showOptions: theia.ViewColumn | theia.WebviewPanelShowOptions,\n                options: theia.WebviewPanelOptions & theia.WebviewOptions = {}): theia.WebviewPanel {\n                return createAPIObject(webviewExt.createWebview(viewType, title, showOptions, options, plugin));\n            },\n            registerWebviewPanelSerializer(viewType: string, serializer: theia.WebviewPanelSerializer): theia.Disposable {\n                return webviewExt.registerWebviewPanelSerializer(viewType, serializer, plugin);\n            },\n            registerCustomEditorProvider(viewType: string,\n                provider: theia.CustomTextEditorProvider | theia.CustomReadonlyEditorProvider,\n                options: { webviewOptions?: theia.WebviewPanelOptions, supportsMultipleEditorsPerDocument?: boolean } = {}): theia.Disposable {\n                return customEditorExt.registerCustomEditorProvider(viewType, provider, options, plugin);\n            },\n            registerWebviewViewProvider(viewType: string,\n                provider: theia.WebviewViewProvider,\n                options?: {\n                    webviewOptions?: {\n                        retainContextWhenHidden?: boolean\n                    }\n                }): theia.Disposable {\n                return webviewViewsExt.registerWebviewViewProvider(viewType, provider, plugin, options?.webviewOptions);\n            },\n            get state(): theia.WindowState {\n                return windowStateExt.getWindowState();\n            },\n            onDidChangeWindowState(listener, thisArg?, disposables?): theia.Disposable {\n                return windowStateExt.onDidChangeWindowState(listener, thisArg, disposables);\n            },\n            createTerminal(nameOrOptions: theia.TerminalOptions | theia.ExtensionTerminalOptions | theia.ExtensionTerminalOptions | (string | undefined),\n                shellPath?: string,\n                shellArgs?: string[] | string): theia.Terminal {\n                return createAPIObject(terminalExt.createTerminal(plugin, nameOrOptions, shellPath, shellArgs));\n            },\n            onDidChangeTerminalState,\n            onDidCloseTerminal,\n            onDidOpenTerminal,\n            createTextEditorDecorationType(options: theia.DecorationRenderOptions): theia.TextEditorDecorationType {\n                return createAPIObject(editors.createTextEditorDecorationType(options));\n            },\n            registerTreeDataProvider<T>(viewId: string, treeDataProvider: theia.TreeDataProvider<T>): Disposable {\n                return treeViewsExt.registerTreeDataProvider(plugin, viewId, treeDataProvider);\n            },\n            createTreeView<T>(viewId: string, options: theia.TreeViewOptions<T>): theia.TreeView<T> {\n                return createAPIObject(treeViewsExt.createTreeView(plugin, viewId, options));\n            },\n            withScmProgress<R>(task: (progress: theia.Progress<number>) => Thenable<R>) {\n                const options: ProgressOptions = { location: ProgressLocation.SourceControl };\n                return notificationExt.withProgress(options, () => task({ report() { /* noop */ } }));\n            },\n            withProgress<R>(\n                options: ProgressOptions,\n                task: (progress: Progress<{ message?: string; increment?: number }>, token: theia.CancellationToken) => PromiseLike<R>\n            ): PromiseLike<R> {\n                return notificationExt.withProgress(options, task);\n            },\n            registerFileDecorationProvider(provider: theia.FileDecorationProvider): theia.Disposable {\n                return decorationsExt.registerFileDecorationProvider(provider, pluginToPluginInfo(plugin));\n            },\n            registerUriHandler(handler: theia.UriHandler): theia.Disposable {\n                return uriExt.registerUriHandler(handler, pluginToPluginInfo(plugin));\n            },\n            createInputBox(): theia.InputBox {\n                return createAPIObject(quickOpenExt.createInputBox(plugin));\n            },\n            registerTerminalLinkProvider(provider: theia.TerminalLinkProvider): theia.Disposable {\n                return terminalExt.registerTerminalLinkProvider(provider);\n            },\n            registerTerminalProfileProvider(id: string, provider: theia.TerminalProfileProvider): theia.Disposable {\n                return terminalExt.registerTerminalProfileProvider(id, provider);\n            },\n            get activeColorTheme(): theia.ColorTheme {\n                return themingExt.activeColorTheme;\n            },\n            onDidChangeActiveColorTheme(listener, thisArg?, disposables?) {\n                return themingExt.onDidChangeActiveColorTheme(listener, thisArg, disposables);\n            },\n            get tabGroups(): theia.TabGroups {\n                return tabsExt.tabGroups;\n            },\n            /** @stubbed ExternalUriOpener */\n            registerExternalUriOpener(id: string, opener: theia.ExternalUriOpener, metadata: theia.ExternalUriOpenerMetadata): theia.Disposable {\n                return Disposable.NULL;\n            },\n            /** @stubbed ProfileContentHandler */\n            registerProfileContentHandler(id: string, profileContentHandler: theia.ProfileContentHandler): theia.Disposable {\n                return Disposable.NULL;\n            },\n            /** @stubbed TerminalCompletionProvider */\n            registerTerminalCompletionProvider<T extends theia.TerminalCompletionItem>(\n                provider: theia.TerminalCompletionProvider<T>,\n                ...triggerCharacters: string[]\n            ): theia.Disposable {\n                return Disposable.NULL;\n            },\n            /** @stubbed TerminalQuickFixProvider */\n            registerTerminalQuickFixProvider(id: string, provider: theia.TerminalQuickFixProvider): theia.Disposable {\n                return terminalExt.registerTerminalQuickFixProvider(id, provider);\n            },\n\n            /** Theia-specific TerminalObserver */\n            registerTerminalObserver(observer: theia.TerminalObserver): theia.Disposable {\n                return terminalExt.registerTerminalObserver(observer);\n            },\n\n            /** @stubbed ShareProvider */\n            registerShareProvider: () => Disposable.NULL,\n            /** @stubbed Terminal Shell Ingration */\n            onDidChangeTerminalShellIntegration: Event.None,\n            /** @stubbed Terminal Shell Ingration */\n            onDidEndTerminalShellExecution: Event.None,\n            /** @stubbed Terminal Shell Ingration */\n            onDidStartTerminalShellExecution: Event.None\n        };\n\n        function createFileSystemWatcher(pattern: theia.GlobPattern, ignoreCreateEvents?: boolean, ignoreChangeEvents?:\n            boolean, ignoreDeleteEvents?: boolean): theia.FileSystemWatcher {\n            return createAPIObject(\n                extHostFileSystemEvent.createFileSystemWatcher(fromGlobPattern(pattern),\n                    ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents));\n\n        }\n        const workspace: typeof theia.workspace = {\n\n            get fs(): theia.FileSystem {\n                return fileSystemExt.fileSystem.apiObject;\n            },\n\n            get rootPath(): string | undefined {\n                return workspaceExt.rootPath;\n            },\n            get workspaceFolders(): theia.WorkspaceFolder[] | undefined {\n                return workspaceExt.workspaceFolders;\n            },\n            get workspaceFile(): URI | undefined {\n                return workspaceExt.workspaceFile;\n            },\n            get name(): string | undefined {\n                return workspaceExt.name;\n            },\n            onDidChangeWorkspaceFolders(listener, thisArg?, disposables?): theia.Disposable {\n                return workspaceExt.onDidChangeWorkspaceFolders(listener, thisArg, disposables);\n            },\n            get notebookDocuments(): theia.NotebookDocument[] {\n                return notebooksExt.getAllApiDocuments();\n            },\n            get textDocuments(): theia.TextDocument[] {\n                return documents.getAllDocumentData().map(data => data.document);\n            },\n            onDidChangeTextDocument(listener, thisArg?, disposables?) {\n                return documents.onDidChangeDocument(listener, thisArg, disposables);\n            },\n            onDidCloseTextDocument(listener, thisArg?, disposables?) {\n                return documents.onDidRemoveDocument(listener, thisArg, disposables);\n            },\n            onDidOpenNotebookDocument(listener, thisArg?, disposables?) {\n                return notebooksExt.onDidOpenNotebookDocument(listener, thisArg, disposables);\n            },\n            onDidCloseNotebookDocument(listener, thisArg?, disposables?) {\n                return notebooksExt.onDidCloseNotebookDocument(listener, thisArg, disposables);\n            },\n            onWillSaveNotebookDocument(listener, thisArg?, disposables?) {\n                return Disposable.NULL;\n            },\n            onDidSaveNotebookDocument(listener, thisArg, disposables) {\n                return notebookDocuments.onDidSaveNotebookDocument(listener, thisArg, disposables);\n            },\n            onDidChangeNotebookDocument(listener, thisArg, disposables) {\n                return notebookDocuments.onDidChangeNotebookDocument(listener, thisArg, disposables);\n            },\n            onDidOpenTextDocument(listener, thisArg?, disposables?) {\n                return documents.onDidAddDocument(listener, thisArg, disposables);\n            },\n            onWillSaveTextDocument(listener, thisArg?, disposables?) {\n                return documents.onWillSaveTextDocument(listener, thisArg, disposables);\n            },\n            onDidSaveTextDocument(listener, thisArg?, disposables?) {\n                return documents.onDidSaveTextDocument(listener, thisArg, disposables);\n            },\n            onDidCreateFiles: (listener, thisArg, disposables) => extHostFileSystemEvent.onDidCreateFile(listener, thisArg, disposables),\n            onDidDeleteFiles: (listener, thisArg, disposables) => extHostFileSystemEvent.onDidDeleteFile(listener, thisArg, disposables),\n            onDidRenameFiles: (listener, thisArg, disposables) => extHostFileSystemEvent.onDidRenameFile(listener, thisArg, disposables),\n            onWillCreateFiles: (listener: (e: theia.FileWillCreateEvent) => any, thisArg?: any, disposables?: theia.Disposable[]) =>\n                extHostFileSystemEvent.getOnWillCreateFileEvent(plugin)(listener, thisArg, disposables),\n            onWillDeleteFiles: (listener: (e: theia.FileWillDeleteEvent) => any, thisArg?: any, disposables?: theia.Disposable[]) =>\n                extHostFileSystemEvent.getOnWillDeleteFileEvent(plugin)(listener, thisArg, disposables),\n            onWillRenameFiles: (listener: (e: theia.FileWillRenameEvent) => any, thisArg?: any, disposables?: theia.Disposable[]) =>\n                extHostFileSystemEvent.getOnWillRenameFileEvent(plugin)(listener, thisArg, disposables),\n            getConfiguration(section, resource): theia.WorkspaceConfiguration {\n                return preferenceRegistryExt.getConfiguration(section, resource);\n            },\n            onDidChangeConfiguration(listener, thisArgs?, disposables?): theia.Disposable {\n                return preferenceRegistryExt.onDidChangeConfiguration(listener, thisArgs, disposables);\n            },\n            decode(content: Uint8Array, options?: { uri?: theia.Uri; encoding?: string }) {\n                return workspaceExt.decode(content, options);\n            },\n            encode(content: string, options?: { uri?: theia.Uri; encoding?: string }) {\n                return workspaceExt.encode(content, options);\n            },\n            async openTextDocument(\n                uriOrPathOrOptions?: theia.Uri | string | { language?: string; content?: string; encoding?: string },\n                options?: { readonly encoding?: string }\n            ): Promise<theia.TextDocument | undefined> {\n                let uri: URI;\n                let documentOptions: { language?: string; content?: string; encoding?: string } | undefined;\n\n                if (typeof uriOrPathOrOptions === 'string') {\n                    // It's a file path\n                    uri = URI.file(uriOrPathOrOptions);\n                    documentOptions = options;\n                } else if (URI.isUri(uriOrPathOrOptions)) {\n                    // It's a URI\n                    uri = uriOrPathOrOptions;\n                    documentOptions = options;\n                } else if (!uriOrPathOrOptions || typeof uriOrPathOrOptions === 'object') {\n                    // It's options for creating a new document\n                    documentOptions = uriOrPathOrOptions as { language?: string; content?: string; encoding?: string };\n                    uri = await documents.createDocumentData(documentOptions);\n                } else {\n                    return Promise.reject(new Error('illegal argument - uriOrPathOrOptions'));\n                }\n\n                // If we have options with encoding from any source, we need to pass them to openDocument\n                const data = await documents.openDocument(uri, documentOptions);\n                return data && data.document;\n            },\n            async openNotebookDocument(uriOrType: theia.Uri | string, content?: NotebookData): Promise<theia.NotebookDocument | undefined> {\n                let uri: URI;\n                if (URI.isUri(uriOrType)) {\n                    uri = uriOrType;\n                    await notebooksExt.openNotebookDocument(uriOrType as URI);\n                } else if (typeof uriOrType === 'string') {\n                    uri = URI.revive(await notebooksExt.createNotebookDocument({ viewType: uriOrType, content }));\n                } else {\n                    throw new Error('Invalid arguments');\n                }\n                // Notebook extension will create a document in openNotebookDocument() or create openNotebookDocument()\n                return notebooksExt.getNotebookDocument(uri).apiNotebook;\n            },\n            createFileSystemWatcher,\n            findFiles(include: theia.GlobPattern, exclude?: theia.GlobPattern | null, maxResults?: number, token?: CancellationToken): PromiseLike<URI[]> {\n                return workspaceExt.findFiles(include, exclude, maxResults, token);\n            },\n            findTextInFiles(query: theia.TextSearchQuery, optionsOrCallback: theia.FindTextInFilesOptions | ((result: theia.TextSearchResult) => void),\n                callbackOrToken?: CancellationToken | ((result: theia.TextSearchResult) => void), token?: CancellationToken): Promise<theia.TextSearchComplete> {\n                return workspaceExt.findTextInFiles(query, optionsOrCallback, callbackOrToken, token);\n            },\n            save(uri: theia.Uri): PromiseLike<theia.Uri | undefined> {\n                return editors.save(uri);\n            },\n\n            saveAs(uri: theia.Uri): PromiseLike<theia.Uri | undefined> {\n                return editors.saveAs(uri);\n            },\n            saveAll(includeUntitled?: boolean): PromiseLike<boolean> {\n                return editors.saveAll(includeUntitled);\n            },\n            applyEdit(edit: theia.WorkspaceEdit, metadata?: theia.WorkspaceEditMetadata): PromiseLike<boolean> {\n                return editors.applyWorkspaceEdit(edit, metadata);\n            },\n            registerTextDocumentContentProvider(scheme: string, provider: theia.TextDocumentContentProvider): theia.Disposable {\n                return workspaceExt.registerTextDocumentContentProvider(scheme, provider);\n            },\n            registerFileSystemProvider(scheme: string, provider: theia.FileSystemProvider, options?: { isCaseSensitive?: boolean, isReadonly?: boolean | MarkdownString }):\n                theia.Disposable {\n                return fileSystemExt.registerFileSystemProvider(scheme, provider, options);\n            },\n            getWorkspaceFolder(uri: theia.Uri): theia.WorkspaceFolder | undefined {\n                return workspaceExt.getWorkspaceFolder(uri);\n            },\n            asRelativePath(pathOrUri: theia.Uri | string, includeWorkspace?: boolean): string | undefined {\n                return workspaceExt.getRelativePath(pathOrUri, includeWorkspace);\n            },\n            updateWorkspaceFolders: (index, deleteCount, ...workspaceFoldersToAdd) =>\n                workspaceExt.updateWorkspaceFolders(index, deleteCount || 0, ...workspaceFoldersToAdd)\n            ,\n            registerTaskProvider(type: string, provider: theia.TaskProvider): theia.Disposable {\n                return tasks.registerTaskProvider(type, provider);\n            },\n            registerResourceLabelFormatter(formatter: theia.ResourceLabelFormatter): theia.Disposable {\n                return labelServiceExt.$registerResourceLabelFormatter(formatter);\n            },\n            registerTimelineProvider(scheme: string | string[], provider: theia.TimelineProvider): theia.Disposable {\n                return timelineExt.registerTimelineProvider(plugin, scheme, provider);\n            },\n            registerNotebookSerializer(notebookType: string, serializer: theia.NotebookSerializer, options?: theia.NotebookDocumentContentOptions): theia.Disposable {\n                return notebooksExt.registerNotebookSerializer(plugin, notebookType, serializer, options);\n            },\n            get isTrusted(): boolean {\n                return workspaceExt.trusted;\n            },\n            async requestWorkspaceTrust(options?: theia.WorkspaceTrustRequestOptions): Promise<boolean | undefined> {\n                return workspaceExt.requestWorkspaceTrust(options);\n            },\n            get onDidGrantWorkspaceTrust(): theia.Event<void> {\n                return workspaceExt.onDidGrantWorkspaceTrust;\n            },\n            registerEditSessionIdentityProvider(scheme: string, provider: theia.EditSessionIdentityProvider) {\n                return workspaceExt.$registerEditSessionIdentityProvider(scheme, provider);\n            },\n            /**\n             * @stubbed\n             * This is a stub implementation, that should minimally satisfy vscode built-in extensions\n             * that currently use this proposed API.\n             */\n            onWillCreateEditSessionIdentity: () => Disposable.NULL,\n            registerCanonicalUriProvider(scheme: string, provider: theia.CanonicalUriProvider): theia.Disposable {\n                return workspaceExt.registerCanonicalUriProvider(scheme, provider);\n            },\n            getCanonicalUri(uri: theia.Uri, options: theia.CanonicalUriRequestOptions, token: CancellationToken): theia.ProviderResult<theia.Uri> {\n                return workspaceExt.getCanonicalUri(uri, options, token);\n            },\n            /**\n             * @stubbed\n             * This is a stub implementation, that should minimally satisfy vscode extensions\n             * that currently use this proposed API.\n             */\n            registerPortAttributesProvider: () => Disposable.NULL\n        };\n\n        const onDidChangeLogLevel = new Emitter<theia.LogLevel>();\n        const env: typeof theia.env = Object.freeze({\n            get appName(): string { return envExt.appName; },\n            get appRoot(): string { return envExt.appRoot; },\n            get appHost(): string { return envExt.appHost; },\n            get language(): string { return envExt.language; },\n            get isNewAppInstall(): boolean { return envExt.isNewAppInstall; },\n            get isTelemetryEnabled(): boolean { return telemetryExt.isTelemetryEnabled; },\n            get onDidChangeTelemetryEnabled(): theia.Event<boolean> {\n                return telemetryExt.onDidChangeTelemetryEnabled;\n            },\n            createTelemetryLogger(sender: theia.TelemetrySender, options?: theia.TelemetryLoggerOptions): theia.TelemetryLogger {\n                return createAPIObject(telemetryExt.createTelemetryLogger(sender, options));\n            },\n            get remoteName(): string | undefined { return envExt.remoteName; },\n            get machineId(): string { return envExt.machineId; },\n            get sessionId(): string { return envExt.sessionId; },\n            get uriScheme(): string { return envExt.uriScheme; },\n            get shell(): string { return terminalExt.defaultShell; },\n            get onDidChangeShell(): theia.Event<string> {\n                return terminalExt.onDidChangeShell;\n            },\n            get uiKind(): theia.UIKind { return envExt.uiKind; },\n            clipboard,\n            getEnvVariable(envVarName: string): PromiseLike<string | undefined> {\n                return envExt.getEnvVariable(envVarName);\n            },\n            getQueryParameter(queryParamName: string): string | string[] | undefined {\n                return envExt.getQueryParameter(queryParamName);\n            },\n            getQueryParameters(): QueryParameters {\n                return envExt.getQueryParameters();\n            },\n            getClientOperatingSystem(): PromiseLike<theia.OperatingSystem> {\n                return envExt.getClientOperatingSystem();\n            },\n            openExternal(uri: theia.Uri): PromiseLike<boolean> {\n                return windowStateExt.openUri(uri);\n            },\n            asExternalUri(target: theia.Uri): PromiseLike<theia.Uri> {\n                return windowStateExt.asExternalUri(target);\n            },\n            get logLevel(): theia.LogLevel { return LogLevel.Info; },\n            get onDidChangeLogLevel(): theia.Event<theia.LogLevel> { return onDidChangeLogLevel.event; }\n        });\n\n        const extensions: typeof theia.extensions = Object.freeze({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            getExtension<T = any>(extensionId: string, includeFromDifferentExtensionHosts: boolean = false): theia.Extension<T | undefined> | undefined {\n                includeFromDifferentExtensionHosts = false;\n                const plg = pluginManager.getPluginById(extensionId.toLowerCase());\n                if (plg) {\n                    return new PluginExt(pluginManager, plg);\n                }\n                return undefined;\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            get all(): readonly theia.Extension<any>[] {\n                return pluginManager.getAllPlugins().map(plg => new PluginExt(pluginManager, plg));\n            },\n            get allAcrossExtensionHosts(): readonly theia.Extension<any>[] {\n                // we only support one extension host ATM so equivalent to calling \"all()\"\n                return this.all;\n            },\n            get onDidChange(): theia.Event<void> {\n                return pluginManager.onDidChange;\n            }\n        });\n\n        const languages: typeof theia.languages = {\n            getLanguages(): PromiseLike<string[]> {\n                return languagesExt.getLanguages();\n            },\n            setTextDocumentLanguage(document: theia.TextDocument, languageId: string): PromiseLike<theia.TextDocument> {\n                return languagesExt.changeLanguage(document.uri, languageId);\n            },\n            match(selector: theia.DocumentSelector, document: theia.TextDocument): number {\n                return score(fromDocumentSelector(selector), document.uri.scheme, document.uri.path, document.languageId, true);\n            },\n            get onDidChangeDiagnostics(): theia.Event<theia.DiagnosticChangeEvent> {\n                return languagesExt.onDidChangeDiagnostics;\n            },\n            getDiagnostics(resource?: URI) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                return <any>languagesExt.getDiagnostics(resource);\n            },\n            createDiagnosticCollection(name?: string): theia.DiagnosticCollection {\n                return createAPIObject(languagesExt.createDiagnosticCollection(name));\n            },\n            setLanguageConfiguration(language: string, configuration: theia.LanguageConfiguration): theia.Disposable {\n                return languagesExt.setLanguageConfiguration(language, configuration);\n            },\n            registerCompletionItemProvider(selector: theia.DocumentSelector, provider: theia.CompletionItemProvider, ...triggerCharacters: string[]): theia.Disposable {\n                return languagesExt.registerCompletionItemProvider(selector, provider, triggerCharacters, pluginToPluginInfo(plugin));\n            },\n            registerInlineCompletionItemProvider(selector: theia.DocumentSelector, provider: theia.InlineCompletionItemProvider): theia.Disposable {\n                return languagesExt.registerInlineCompletionsProvider(selector, provider);\n            },\n            registerDefinitionProvider(selector: theia.DocumentSelector, provider: theia.DefinitionProvider): theia.Disposable {\n                return languagesExt.registerDefinitionProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerDeclarationProvider(selector: theia.DocumentSelector, provider: theia.DeclarationProvider): theia.Disposable {\n                return languagesExt.registerDeclarationProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerSignatureHelpProvider(\n                selector: theia.DocumentSelector, provider: theia.SignatureHelpProvider, first?: string | theia.SignatureHelpProviderMetadata, ...remaining: string[]\n            ): theia.Disposable {\n                let metadata: theia.SignatureHelpProviderMetadata;\n                if (typeof first === 'object') {\n                    metadata = first;\n                } else {\n                    const triggerCharacters: string[] = [];\n                    metadata = { triggerCharacters, retriggerCharacters: [] };\n                    if (first) {\n                        triggerCharacters.push(first, ...remaining);\n                    }\n                }\n                return languagesExt.registerSignatureHelpProvider(selector, provider, metadata, pluginToPluginInfo(plugin));\n            },\n            registerTypeDefinitionProvider(selector: theia.DocumentSelector, provider: theia.TypeDefinitionProvider): theia.Disposable {\n                return languagesExt.registerTypeDefinitionProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerImplementationProvider(selector: theia.DocumentSelector, provider: theia.ImplementationProvider): theia.Disposable {\n                return languagesExt.registerImplementationProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerHoverProvider(selector: theia.DocumentSelector, provider: theia.HoverProvider): theia.Disposable {\n                return languagesExt.registerHoverProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerEvaluatableExpressionProvider(selector: theia.DocumentSelector, provider: theia.EvaluatableExpressionProvider): theia.Disposable {\n                return languagesExt.registerEvaluatableExpressionProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerInlineValuesProvider(selector: theia.DocumentSelector, provider: theia.InlineValuesProvider): theia.Disposable {\n                return languagesExt.registerInlineValuesProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerDocumentHighlightProvider(selector: theia.DocumentSelector, provider: theia.DocumentHighlightProvider): theia.Disposable {\n                return languagesExt.registerDocumentHighlightProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            /**\n             * @stubbed\n             * @monaco-uplift: wait until API is available in Monaco (1.85.0+)\n             */\n            registerMultiDocumentHighlightProvider(selector: theia.DocumentSelector, provider: theia.MultiDocumentHighlightProvider): theia.Disposable {\n                return Disposable.NULL;\n            },\n            registerWorkspaceSymbolProvider(provider: theia.WorkspaceSymbolProvider): theia.Disposable {\n                return languagesExt.registerWorkspaceSymbolProvider(provider, pluginToPluginInfo(plugin));\n            },\n            registerDocumentFormattingEditProvider(selector: theia.DocumentSelector, provider: theia.DocumentFormattingEditProvider): theia.Disposable {\n                return languagesExt.registerDocumentFormattingEditProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerDocumentRangeFormattingEditProvider(selector: theia.DocumentSelector, provider: theia.DocumentRangeFormattingEditProvider): theia.Disposable {\n                return languagesExt.registerDocumentRangeFormattingEditProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerOnTypeFormattingEditProvider(\n                selector: theia.DocumentSelector,\n                provider: theia.OnTypeFormattingEditProvider,\n                firstTriggerCharacter: string,\n                ...moreTriggerCharacters: string[]\n            ): theia.Disposable {\n                return languagesExt.registerOnTypeFormattingEditProvider(selector, provider, [firstTriggerCharacter].concat(moreTriggerCharacters), pluginToPluginInfo(plugin));\n            },\n            registerDocumentDropEditProvider(selector: theia.DocumentSelector, provider: theia.DocumentDropEditProvider, metadata?: theia.DocumentDropEditProviderMetadata) {\n                return languagesExt.registerDocumentDropEditProvider(selector, provider, metadata);\n            },\n            registerDocumentLinkProvider(selector: theia.DocumentSelector, provider: theia.DocumentLinkProvider): theia.Disposable {\n                return languagesExt.registerDocumentLinkProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerCodeActionsProvider(selector: theia.DocumentSelector, provider: theia.CodeActionProvider, metadata?: theia.CodeActionProviderMetadata): theia.Disposable {\n                return languagesExt.registerCodeActionsProvider(selector, provider, plugin.model, pluginToPluginInfo(plugin), metadata);\n            },\n            registerCodeLensProvider(selector: theia.DocumentSelector, provider: theia.CodeLensProvider): theia.Disposable {\n                return languagesExt.registerCodeLensProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerReferenceProvider(selector: theia.DocumentSelector, provider: theia.ReferenceProvider): theia.Disposable {\n                return languagesExt.registerReferenceProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerDocumentSymbolProvider(selector: theia.DocumentSelector, provider: theia.DocumentSymbolProvider,\n                metadata?: theia.DocumentSymbolProviderMetadata): theia.Disposable {\n                return languagesExt.registerDocumentSymbolProvider(selector, provider, pluginToPluginInfo(plugin), metadata);\n            },\n            registerColorProvider(selector: theia.DocumentSelector, provider: theia.DocumentColorProvider): theia.Disposable {\n                return languagesExt.registerColorProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerInlayHintsProvider(selector: theia.DocumentSelector, provider: theia.InlayHintsProvider): theia.Disposable {\n                return languagesExt.registerInlayHintsProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerFoldingRangeProvider(selector: theia.DocumentSelector, provider: theia.FoldingRangeProvider): theia.Disposable {\n                return languagesExt.registerFoldingRangeProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerSelectionRangeProvider(selector: theia.DocumentSelector, provider: theia.SelectionRangeProvider): theia.Disposable {\n                return languagesExt.registerSelectionRangeProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerRenameProvider(selector: theia.DocumentSelector, provider: theia.RenameProvider): theia.Disposable {\n                return languagesExt.registerRenameProvider(selector, provider, pluginToPluginInfo(plugin));\n            },\n            registerDocumentSemanticTokensProvider(selector: theia.DocumentSelector, provider: theia.DocumentSemanticTokensProvider, legend: theia.SemanticTokensLegend):\n                theia.Disposable {\n                return languagesExt.registerDocumentSemanticTokensProvider(selector, provider, legend, pluginToPluginInfo(plugin));\n            },\n            registerDocumentRangeSemanticTokensProvider(selector: theia.DocumentSelector, provider: theia.DocumentRangeSemanticTokensProvider, legend: theia.SemanticTokensLegend):\n                theia.Disposable {\n                return languagesExt.registerDocumentRangeSemanticTokensProvider(selector, provider, legend, pluginToPluginInfo(plugin));\n            },\n            registerCallHierarchyProvider(selector: theia.DocumentSelector, provider: theia.CallHierarchyProvider): theia.Disposable {\n                return languagesExt.registerCallHierarchyProvider(selector, provider);\n            },\n            registerTypeHierarchyProvider(selector: theia.DocumentSelector, provider: theia.TypeHierarchyProvider): theia.Disposable {\n                return languagesExt.registerTypeHierarchyProvider(selector, provider);\n            },\n            registerLinkedEditingRangeProvider(selector: theia.DocumentSelector, provider: theia.LinkedEditingRangeProvider): theia.Disposable {\n                return languagesExt.registerLinkedEditingRangeProvider(selector, provider);\n            },\n            createLanguageStatusItem(id: string, selector: theia.DocumentSelector): theia.LanguageStatusItem {\n                return languagesExt.createLanguageStatusItem(plugin, id, selector);\n            },\n            registerDocumentPasteEditProvider(\n                selector: theia.DocumentSelector, provider: theia.DocumentPasteEditProvider, metadata: theia.DocumentPasteProviderMetadata\n            ): theia.Disposable {\n                return languagesExt.registerDocumentPasteEditProvider(plugin, selector, provider, metadata);\n            }\n        };\n\n        const tests: typeof theia.tests = {\n            createTestController(id, label: string) {\n                return createAPIObject(testingExt.createTestController(id, label));\n            }\n        };\n        /* End of Tests API */\n\n        const plugins: typeof theia.plugins = {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            get all(): theia.Plugin<any>[] {\n                return pluginManager.getAllPlugins().map(plg => new PluginExt(pluginManager, plg));\n            },\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            getPlugin(pluginId: string): theia.Plugin<any> | undefined {\n                const plg = pluginManager.getPluginById(pluginId.toLowerCase());\n                if (plg) {\n                    return new PluginExt(pluginManager, plg);\n                }\n                return undefined;\n            },\n            get onDidChange(): theia.Event<void> {\n                return pluginManager.onDidChange;\n            }\n        };\n\n        const debuggersContributions = plugin.rawModel.contributes && plugin.rawModel.contributes.debuggers || [];\n        debugExt.assistedInject(connectionExt, commandRegistry);\n        debugExt.registerDebuggersContributions(plugin.pluginFolder, plugin.model.entryPoint.frontend ? 'frontend' : 'backend', debuggersContributions);\n        const debug: typeof theia.debug = {\n            get activeDebugSession(): theia.DebugSession | undefined {\n                return debugExt.activeDebugSession;\n            },\n            get activeDebugConsole(): theia.DebugConsole {\n                return debugExt.activeDebugConsole;\n            },\n            get breakpoints(): theia.Breakpoint[] {\n                return debugExt.breakpoints;\n            },\n            get onDidChangeActiveDebugSession(): theia.Event<theia.DebugSession | undefined> {\n                return debugExt.onDidChangeActiveDebugSession;\n            },\n            get onDidStartDebugSession(): theia.Event<theia.DebugSession> {\n                return debugExt.onDidStartDebugSession;\n            },\n            get onDidReceiveDebugSessionCustomEvent(): theia.Event<theia.DebugSessionCustomEvent> {\n                return debugExt.onDidReceiveDebugSessionCustomEvent;\n            },\n            get onDidTerminateDebugSession(): theia.Event<theia.DebugSession> {\n                return debugExt.onDidTerminateDebugSession;\n            },\n            get onDidChangeBreakpoints(): theia.Event<theia.BreakpointsChangeEvent> {\n                return debugExt.onDidChangeBreakpoints;\n            },\n            get activeStackItem(): DebugThread | DebugStackFrame | undefined {\n                return debugExt.activeStackItem;\n            },\n            get onDidChangeActiveStackItem(): theia.Event<DebugThread | DebugStackFrame | undefined> {\n                return debugExt.onDidChangeActiveStackItem;\n            },\n            registerDebugAdapterDescriptorFactory(debugType: string, factory: theia.DebugAdapterDescriptorFactory): Disposable {\n                return debugExt.registerDebugAdapterDescriptorFactory(debugType, factory);\n            },\n            registerDebugConfigurationProvider(\n                debugType: string,\n                provider: theia.DebugConfigurationProvider,\n                triggerKind?: theia.DebugConfigurationProviderTriggerKind\n            ): Disposable {\n                return debugExt.registerDebugConfigurationProvider(debugType, provider, triggerKind || DebugConfigurationProviderTriggerKind.Initial);\n            },\n            registerDebugAdapterTrackerFactory(debugType: string, factory: theia.DebugAdapterTrackerFactory): Disposable {\n                return debugExt.registerDebugAdapterTrackerFactory(debugType, factory);\n            },\n            startDebugging(\n                folder: theia.WorkspaceFolder | undefined,\n                nameOrConfiguration: string | theia.DebugConfiguration,\n                parentSessionOrOptions?: theia.DebugSession | theia.DebugSessionOptions\n            ): Thenable<boolean> {\n                if (!parentSessionOrOptions || (typeof parentSessionOrOptions === 'object' && 'configuration' in parentSessionOrOptions)) {\n                    return debugExt.startDebugging(folder, nameOrConfiguration, { parentSession: parentSessionOrOptions });\n                }\n                return debugExt.startDebugging(folder, nameOrConfiguration, parentSessionOrOptions || {});\n            },\n            stopDebugging(session?: theia.DebugSession): Thenable<void> {\n                return debugExt.stopDebugging(session);\n            },\n            addBreakpoints(breakpoints: readonly theia.Breakpoint[]): void {\n                debugExt.addBreakpoints(breakpoints);\n            },\n            removeBreakpoints(breakpoints: readonly theia.Breakpoint[]): void {\n                debugExt.removeBreakpoints(breakpoints);\n            },\n            asDebugSourceUri(source: theia.DebugProtocolSource, session?: theia.DebugSession): theia.Uri {\n                return debugExt.asDebugSourceUri(source, session);\n            },\n            /** @stubbed Due to proposed API */\n            registerDebugVisualizationProvider: () => Disposable.NULL,\n            /** @stubbed Due to proposed API */\n            registerDebugVisualizationTreeProvider: () => Disposable.NULL\n        };\n\n        const tasks: typeof theia.tasks = {\n            registerTaskProvider(type: string, provider: theia.TaskProvider): theia.Disposable {\n                return tasksExt.registerTaskProvider(type, provider);\n            },\n\n            fetchTasks(filter?: theia.TaskFilter): Thenable<theia.Task[]> {\n                return tasksExt.fetchTasks(filter);\n            },\n\n            executeTask(task: theia.Task): Thenable<theia.TaskExecution> {\n                return tasksExt.executeTask(task);\n            },\n\n            get taskExecutions(): ReadonlyArray<theia.TaskExecution> {\n                // TODO: here\n                return tasksExt.taskExecutions;\n            },\n            onDidStartTask(listener, thisArg?, disposables?) {\n                return tasksExt.onDidStartTask(listener, thisArg, disposables);\n            },\n            onDidEndTask(listener, thisArg?, disposables?) {\n                return tasksExt.onDidEndTask(listener, thisArg, disposables);\n            },\n            onDidStartTaskProcess(listener, thisArg?, disposables?) {\n                return tasksExt.onDidStartTaskProcess(listener, thisArg, disposables);\n            },\n            onDidEndTaskProcess(listener, thisArg?, disposables?) {\n                return tasksExt.onDidEndTaskProcess(listener, thisArg, disposables);\n            }\n        };\n\n        const scm: typeof theia.scm = {\n            get inputBox(): theia.SourceControlInputBox {\n                const inputBox = scmExt.getLastInputBox(plugin);\n                if (inputBox) {\n                    return inputBox.apiObject;\n                } else {\n                    throw new Error('Input box not found!');\n                }\n            },\n            createSourceControl(id: string, label: string, rootUri?: URI): theia.SourceControl {\n                return createAPIObject(scmExt.createSourceControl(plugin, id, label, rootUri));\n            }\n        };\n\n        const comments: typeof theia.comments = {\n            createCommentController(id: string, label: string): theia.CommentController {\n                return createAPIObject(commentsExt.createCommentController(plugin, id, label));\n            }\n        };\n\n        const l10n: typeof theia.l10n = {\n            // eslint-disable-next-line max-len\n            t(...params: [message: string, ...args: Array<string | number | boolean>] | [message: string, args: Record<string, any>] | [{ message: string; args?: Array<string | number | boolean> | Record<string, any>; comment: string | string[] }]): string {\n                if (typeof params[0] === 'string') {\n                    const key = params.shift() as string;\n\n                    // We have either rest args which are Array<string | number | boolean> or an array with a single Record<string, any>.\n                    // This ensures we get a Record<string | number, any> which will be formatted correctly.\n                    const argsFormatted = !params || typeof params[0] !== 'object' ? params : params[0];\n                    return localizationExt.translateMessage(plugin.model.id, { message: key, args: argsFormatted as Record<string | number, any> | undefined });\n                }\n                return localizationExt.translateMessage(plugin.model.id, params[0]);\n            },\n            get bundle() {\n                return localizationExt.getBundle(plugin.model.id);\n            },\n            get uri() {\n                return localizationExt.getBundleUri(plugin.model.id);\n            }\n        };\n\n        // notebooks API (@stubbed)\n        // The following implementation is temporarily `@stubbed` and marked as such under `theia.d.ts`\n        const notebooks: typeof theia.notebooks = {\n            createNotebookController(\n                id,\n                notebookType,\n                label,\n                handler?: (cells: theia.NotebookCell[],\n                    notebook: theia.NotebookDocument,\n                    controller: theia.NotebookController) => void | Thenable<void>,\n                rendererScripts?: NotebookRendererScript[]\n            ) {\n                return notebookKernels.createNotebookController(plugin.model, id, notebookType, label, handler, rendererScripts);\n            },\n            createRendererMessaging(rendererId) {\n                return notebookRenderers.createRendererMessaging(rendererId);\n            },\n            registerNotebookCellStatusBarItemProvider(\n                notebookType,\n                provider\n            ) {\n                return notebooksExt.registerNotebookCellStatusBarItemProvider(notebookType, provider);\n            },\n            onDidChangeNotebookCellExecutionState: notebookKernels.onDidChangeNotebookCellExecutionState,\n\n            createNotebookControllerDetectionTask(notebookType: string) {\n                return notebookKernels.createNotebookControllerDetectionTask(notebookType);\n            },\n            registerKernelSourceActionProvider(notebookType: string, provider: theia.NotebookKernelSourceActionProvider) {\n                return notebookKernels.registerKernelSourceActionProvider(notebookType, provider);\n            }\n        };\n\n        const chat: typeof theia.chat = {\n            /** @stubbed MappedEditsProvider */\n            registerMappedEditsProvider(documentSelector: theia.DocumentSelector, provider: theia.MappedEditsProvider): Disposable {\n                return Disposable.NULL;\n            },\n            /** @stubbed MappedEditsProvider */\n            registerMappedEditsProvider2(provider: theia.MappedEditsProvider2) {\n                return Disposable.NULL;\n            },\n            /** @stubbed ChatRequestHandler */\n            createChatParticipant(id: string, handler: theia.ChatRequestHandler): theia.ChatParticipant {\n                return {\n                    id,\n                    requestHandler: handler,\n                    dispose() { },\n                    onDidReceiveFeedback: (listener, thisArgs?, disposables?) => Event.None(listener, thisArgs, disposables)\n                };\n            }\n        };\n\n        const mcpContributions = plugin.rawModel.contributes && plugin.rawModel.contributes.mcpServerDefinitionProviders || [];\n        lmExt.registerMcpContributions(mcpContributions);\n\n        const lm: typeof theia.lm = {\n            /** @stubbed LanguageModelChat */\n            selectChatModels(selector?: theia.LanguageModelChatSelector): Thenable<theia.LanguageModelChat[]> {\n                return Promise.resolve([]);\n            },\n            /** @stubbed LanguageModelChat */\n            onDidChangeChatModels: (listener, thisArgs?, disposables?) => Event.None(listener, thisArgs, disposables),\n            /** @stubbed LanguageModelTool */\n            invokeTool(name: string, options: theia.LanguageModelToolInvocationOptions<object>, token?: CancellationToken): Thenable<theia.LanguageModelToolResult> {\n                return Promise.resolve({ content: [] });\n            },\n            /** @stubbed LanguageModelTool */\n            registerTool<T>(name: string, tool: theia.LanguageModelTool<T>): Disposable {\n                return Disposable.NULL;\n            },\n            /** @stubbed LanguageModelTool */\n            tools: [],\n            registerMcpServerDefinitionProvider(id: string, provider: any): theia.Disposable {\n                return lmExt.registerMcpServerDefinitionProvider(id, provider);\n            }\n        };\n\n        return <typeof theia>{\n            version: require('../../package.json').version,\n            authentication,\n            chat,\n            commands,\n            comments,\n            window,\n            workspace,\n            env,\n            extensions,\n            languages,\n            plugins,\n            debug,\n            tasks,\n            scm,\n            notebooks,\n            l10n,\n            tests,\n            lm,\n            // Types\n            StatusBarAlignment: StatusBarAlignment,\n            Disposable: Disposable,\n            EventEmitter: Emitter,\n            CancellationTokenSource: CancellationTokenSource,\n            MarkdownString,\n            Position: Position,\n            Range: Range,\n            Selection: Selection,\n            ViewColumn: ViewColumn,\n            TextEditorSelectionChangeKind: TextEditorSelectionChangeKind,\n            Uri: URI,\n            EndOfLine,\n            TextEditorRevealType,\n            TextEditorCursorStyle,\n            TextEditorLineNumbersStyle,\n            ThemeColor,\n            ThemeIcon,\n            SnippetString,\n            DecorationRangeBehavior,\n            OverviewRulerLane,\n            ConfigurationTarget,\n            RelativePattern,\n            IndentAction,\n            SyntaxTokenType,\n            CompletionItem,\n            CompletionItemKind,\n            CompletionList,\n            DebugConsoleMode,\n            DiagnosticSeverity,\n            DiagnosticRelatedInformation,\n            LanguageStatusSeverity,\n            Location,\n            LogLevel,\n            DiagnosticTag,\n            CompletionItemTag,\n            Diagnostic,\n            CompletionTriggerKind,\n            TextEdit,\n            SnippetTextEdit,\n            ProgressLocation,\n            ProgressOptions,\n            Progress,\n            ParameterInformation,\n            QuickPickItemKind,\n            SignatureInformation,\n            SignatureHelp,\n            SignatureHelpTriggerKind,\n            Hover,\n            EvaluatableExpression,\n            InlineValueEvaluatableExpression,\n            InlineValueText,\n            InlineValueVariableLookup,\n            InlineValueContext,\n            DocumentHighlightKind,\n            DocumentHighlight,\n            MultiDocumentHighlight,\n            DocumentLink,\n            DocumentDropEdit,\n            DocumentDropOrPasteEditKind,\n            CodeLens,\n            CodeActionKind,\n            CodeActionTrigger,\n            CodeActionTriggerKind,\n            TextDocumentSaveReason,\n            CodeAction,\n            DataTransferItem,\n            DataTransfer,\n            TreeItem,\n            TreeItemCollapsibleState,\n            TreeItemCheckboxState,\n            SymbolKind,\n            SymbolTag,\n            DocumentSymbol,\n            WorkspaceEdit,\n            SymbolInformation,\n            FileType,\n            FilePermission,\n            FileChangeType,\n            ShellQuoting,\n            ShellExecution,\n            ProcessExecution,\n            CustomExecution,\n            TaskScope,\n            TaskRevealKind,\n            TaskPanelKind,\n            TaskGroup,\n            Task,\n            Task2,\n            DebugAdapterExecutable,\n            DebugAdapterServer,\n            DebugAdapterNamedPipeServer,\n            DebugAdapterInlineImplementation,\n            DebugConfigurationProviderTriggerKind,\n            Breakpoint,\n            SourceBreakpoint,\n            FunctionBreakpoint,\n            DebugStackFrame,\n            DebugThread,\n            Color,\n            ColorInformation,\n            ColorPresentation,\n            FoldingRange,\n            SelectionRange,\n            FoldingRangeKind,\n            OperatingSystem,\n            WebviewPanelTargetArea,\n            UIKind,\n            FileSystemError,\n            CommentThreadState,\n            CommentThreadCollapsibleState,\n            QuickInputButtons,\n            CommentMode,\n            CallHierarchyItem,\n            CallHierarchyIncomingCall,\n            CallHierarchyOutgoingCall,\n            TypeHierarchyItem,\n            TimelineItem,\n            EnvironmentVariableMutatorType,\n            SemanticTokensLegend,\n            SemanticTokensBuilder,\n            SemanticTokens,\n            SemanticTokensEdits,\n            SemanticTokensEdit,\n            TextDocumentChangeReason,\n            ColorThemeKind,\n            SourceControlInputBoxValidationType,\n            FileDecoration,\n            TerminalLink,\n            TerminalProfile,\n            CancellationError,\n            ExtensionMode,\n            LinkedEditingRanges,\n            InputBoxValidationSeverity,\n            InlayHint,\n            InlayHintKind,\n            InlayHintLabelPart,\n            TelemetryTrustedValue,\n            NotebookCellData,\n            NotebookCellExecutionState,\n            NotebookCellKind,\n            NotebookCellOutput,\n            NotebookCellOutputItem,\n            NotebookCellStatusBarAlignment,\n            NotebookCellStatusBarItem,\n            NotebookControllerAffinity,\n            NotebookData,\n            NotebookEditorRevealType,\n            NotebookDocument,\n            NotebookRange,\n            NotebookEdit,\n            NotebookKernelSourceAction,\n            NotebookRendererScript,\n            TestRunProfileKind,\n            TestTag,\n            TestRunRequest,\n            TestMessage,\n            TestMessageStackFrame,\n            ExtensionKind,\n            InlineCompletionItem,\n            InlineCompletionList,\n            InlineCompletionTriggerKind,\n            TabInputText: TextTabInput,\n            TabInputTextDiff: TextDiffTabInput,\n            TabInputTextMerge: TextMergeTabInput,\n            TabInputCustom: CustomEditorTabInput,\n            TabInputNotebook: NotebookEditorTabInput,\n            TabInputNotebookDiff: NotebookDiffEditorTabInput,\n            TabInputWebview: WebviewEditorTabInput,\n            TabInputTerminal: TerminalEditorTabInput,\n            TerminalLocation,\n            TerminalOutputAnchor,\n            TerminalExitReason,\n            DocumentPasteEdit,\n            DocumentPasteEditKind,\n            DocumentPasteTriggerKind,\n            ExternalUriOpenerPriority,\n            TerminalQuickFixTerminalCommand,\n            TerminalQuickFixOpener,\n            EditSessionIdentityMatch,\n            TestResultState,\n            BranchCoverage,\n            DeclarationCoverage,\n            FileCoverage,\n            StatementCoverage,\n            TestCoverageCount,\n            ChatRequestTurn,\n            ChatResponseTurn,\n            ChatResponseAnchorPart,\n            ChatResponseCommandButtonPart,\n            ChatResponseFileTreePart,\n            ChatResponseMarkdownPart,\n            ChatResponseProgressPart,\n            ChatResponseReferencePart,\n            ChatResultFeedbackKind,\n            LanguageModelChatMessage,\n            LanguageModelChatMessageRole,\n            LanguageModelError,\n            LanguageModelChatToolMode,\n            LanguageModelPromptTsxPart,\n            LanguageModelTextPart,\n            LanguageModelToolCallPart,\n            LanguageModelToolResult,\n            LanguageModelToolResultPart,\n            PortAutoForwardAction,\n            PortAttributes,\n            DebugVisualization,\n            TerminalShellExecutionCommandLineConfidence,\n            TerminalCompletionItemKind,\n            TerminalCompletionList,\n            McpHttpServerDefinition,\n            McpStdioServerDefinition,\n            TabInputInteractiveWindow: InteractiveWindowInput,\n        };\n    };\n}\n\n/**\n * Represents a Theia plugin as well as a VSCode extension.\n */\nexport interface ExtensionPlugin<T> extends theia.Plugin<T> {\n    /**\n     * The uri of the directory containing the extension. Same as {@linkcode theia.Plugin.pluginUri}.\n     */\n    readonly extensionUri: theia.Uri;\n\n    /**\n     * The absolute file path of the directory containing this extension.\n     * Same as {@linkcode theia.Plugin.pluginPath}.\n     */\n    readonly extensionPath: string;\n\n    /**\n     * The extension kind describes if an extension runs where the UI runs\n     * or if an extension runs where the remote extension host runs. The extension kind\n     * is defined in the `package.json`-file of extensions. When no remote extension host exists,\n     * the value is {@linkcode ExtensionKind.UI}.\n     */\n    extensionKind: theia.ExtensionKind;\n}\n\nexport class Plugin<T> implements theia.Plugin<T> {\n    #pluginManager: PluginManager;\n\n    id: string;\n    pluginPath: string;\n    pluginUri: theia.Uri;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    packageJSON: any;\n    pluginType: theia.PluginType;\n\n    constructor(pluginManager: PluginManager, plugin: InternalPlugin) {\n        this.#pluginManager = pluginManager;\n\n        this.id = plugin.model.id;\n        this.pluginPath = plugin.pluginFolder;\n        this.packageJSON = plugin.rawModel;\n        this.pluginType = plugin.model.entryPoint.frontend ? 'frontend' : 'backend';\n\n        if (this.pluginType === 'frontend') {\n            const { origin } = new Endpoint();\n            this.pluginUri = URI.parse(origin + '/' + PluginPackage.toPluginUrl(plugin.model, ''));\n        } else {\n            this.pluginUri = URI.parse(plugin.pluginUri);\n        }\n    }\n\n    get isActive(): boolean {\n        return this.#pluginManager.isActive(this.id);\n    }\n\n    get exports(): T {\n        return <T>this.#pluginManager.getPluginExport(this.id);\n    }\n\n    activate(): PromiseLike<T> {\n        return this.#pluginManager.activatePlugin(this.id).then(() => this.exports);\n    }\n}\n\nexport class PluginExt<T> extends Plugin<T> implements ExtensionPlugin<T> {\n    #pluginManager: PluginManager;\n\n    extensionPath: string;\n    extensionUri: theia.Uri;\n    extensionKind: ExtensionKind;\n    isFromDifferentExtensionHost: boolean;\n\n    constructor(pluginManager: PluginManager, plugin: InternalPlugin, isFromDifferentExtensionHost = false) {\n        super(pluginManager, plugin);\n        this.#pluginManager = pluginManager;\n\n        this.extensionPath = this.pluginPath;\n        this.extensionUri = this.pluginUri;\n        this.extensionKind = pluginManager.getPluginKind();\n        this.isFromDifferentExtensionHost = isFromDifferentExtensionHost;\n    }\n\n    override get isActive(): boolean {\n        return this.#pluginManager.isActive(this.id);\n    }\n\n    override get exports(): T {\n        return <T>this.#pluginManager.getPluginExport(this.id);\n    }\n\n    override activate(): PromiseLike<T> {\n        return this.#pluginManager.activatePlugin(this.id).then(() => this.exports);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * The maximum safe integer (`2^32-1`) is used as a placeholder for large numbers which are not allowed to be floats.\n * For example as line/column arguments for monaco-ranges.\n */\nexport const MAX_SAFE_INTEGER = 2147483647;\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { SymbolInformation } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as theia from '@theia/plugin';\nimport * as Converter from '../type-converters';\n\nexport class WorkspaceSymbolAdapter {\n\n    constructor(\n        private readonly provider: theia.WorkspaceSymbolProvider\n    ) { }\n\n    provideWorkspaceSymbols(query: string, token: theia.CancellationToken): Promise<SymbolInformation[]> {\n        return Promise.resolve(this.provider.provideWorkspaceSymbols(query, token)).then(workspaceSymbols => {\n            if (!workspaceSymbols) {\n                return [];\n            }\n\n            const newSymbols: SymbolInformation[] = [];\n            for (const sym of workspaceSymbols) {\n                const convertedSymbol = Converter.fromSymbolInformation(sym);\n                if (convertedSymbol) {\n                    newSymbols.push(convertedSymbol);\n                }\n            }\n            return newSymbols;\n        });\n    }\n\n    resolveWorkspaceSymbol(symbol: SymbolInformation, token: theia.CancellationToken): Promise<SymbolInformation> {\n        if (this.provider.resolveWorkspaceSymbol && typeof this.provider.resolveWorkspaceSymbol === 'function') {\n            const theiaSymbol = Converter.toSymbolInformation(symbol);\n            if (!theiaSymbol) {\n                return Promise.resolve(symbol);\n            } else {\n                return Promise.resolve(this.provider.resolveWorkspaceSymbol(theiaSymbol, token)).then(workspaceSymbol => {\n                    if (!workspaceSymbol) {\n                        return symbol;\n                    }\n\n                    const converted = Converter.fromSymbolInformation(workspaceSymbol);\n                    if (converted) {\n                        return converted;\n                    }\n                    return symbol;\n                });\n            }\n        }\n        return Promise.resolve(symbol);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from './types-impl';\nimport { WindowState } from '@theia/plugin';\nimport { WindowStateExt, WindowMain, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { RPCProtocol } from '../common/rpc-protocol';\n\nexport class WindowStateExtImpl implements WindowStateExt {\n\n    private windowStateCached: WindowState;\n\n    private windowStateChangedEmitter = new Emitter<WindowState>();\n    public readonly onDidChangeWindowState: Event<WindowState> = this.windowStateChangedEmitter.event;\n\n    private readonly proxy: WindowMain;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.WINDOW_MAIN);\n        this.windowStateCached = { focused: true, active: true }; // supposed tab is active on start\n    }\n\n    getWindowState(): WindowState {\n        return this.windowStateCached;\n    }\n\n    $onDidChangeWindowFocus(focused: boolean): void {\n        this.onDidChangeWindowProperty('focused', focused);\n    }\n\n    $onDidChangeWindowActive(active: boolean): void {\n        this.onDidChangeWindowProperty('active', active);\n    }\n\n    onDidChangeWindowProperty(property: keyof WindowState, value: boolean): void {\n        if (value === this.windowStateCached[property]) {\n            return;\n        }\n\n        this.windowStateCached = { ...this.windowStateCached, [property]: value };\n        this.windowStateChangedEmitter.fire(this.windowStateCached);\n    }\n\n    async openUri(uriOrString: URI | string): Promise<boolean> {\n        let uri: URI;\n        if (typeof uriOrString === 'string') {\n            uri = URI.parse(uriOrString);\n        } else {\n            uri = uriOrString;\n        }\n        if (!uri.scheme.trim().length) {\n            throw new Error('Invalid scheme - cannot be empty');\n        }\n\n        return this.proxy.$openUri(uri);\n    }\n\n    async asExternalUri(target: URI): Promise<URI> {\n        if (!target.scheme.trim().length) {\n            throw new Error('Invalid scheme - cannot be empty');\n        }\n\n        const uri = await this.proxy.$asExternalUri(target);\n        return URI.revive(uri);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2024 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from 'inversify';\nimport { nls } from './nls';\nimport { PreferenceSchema, PreferenceProxy, PreferenceProxyFactory, PreferenceContribution } from './preferences';\n\nexport const PREFERENCE_NAME_TREE_INDENT = 'workbench.tree.indent';\n\nexport const treePreferencesSchema: PreferenceSchema = {\n    properties: {\n        [PREFERENCE_NAME_TREE_INDENT]: {\n            description: nls.localizeByDefault('Controls tree indentation in pixels.'),\n            type: 'number',\n            default: 8,\n            minimum: 4,\n            maximum: 40\n        },\n    }\n};\n\nexport class TreeConfiguration {\n    [PREFERENCE_NAME_TREE_INDENT]: number;\n}\n\nexport const TreePreferences = Symbol('treePreferences');\nexport type TreePreferences = PreferenceProxy<TreeConfiguration>;\n\nexport function bindTreePreferences(bind: interfaces.Bind): void {\n    bind(TreePreferences).toDynamicValue(ctx => {\n        const factory = ctx.container.get<PreferenceProxyFactory>(PreferenceProxyFactory);\n        return factory(treePreferencesSchema);\n    }).inSingletonScope();\n    bind(PreferenceContribution).toConstantValue({ schema: treePreferencesSchema });\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Some entities copied and modified from https://github.com/Microsoft/vscode-debugadapter-node/blob/master/adapter/src/protocol.ts\n\nimport {\n    DebugAdapter,\n    DebugAdapterSession\n} from './debug-model';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { DebugChannel } from './debug-service';\n\n/**\n * [DebugAdapterSession](#DebugAdapterSession) implementation.\n */\nexport class DebugAdapterSessionImpl implements DebugAdapterSession {\n\n    private channel: DebugChannel | undefined;\n    private isClosed: boolean = false;\n\n    constructor(\n        readonly id: string,\n        protected readonly debugAdapter: DebugAdapter\n    ) {\n        this.debugAdapter.onMessageReceived((message: string) => this.send(message));\n        this.debugAdapter.onClose(() => this.onDebugAdapterExit());\n        this.debugAdapter.onError(error => this.onDebugAdapterError(error));\n    }\n\n    async start(channel: DebugChannel): Promise<void> {\n\n        console.debug(`starting debug adapter session '${this.id}'`);\n        if (this.channel) {\n            throw new Error('The session has already been started, id: ' + this.id);\n        }\n        this.channel = channel;\n        this.channel.onMessage((message: string) => this.write(message));\n        this.channel.onClose(() => this.channel = undefined);\n\n    }\n\n    protected onDebugAdapterExit(): void {\n        this.isClosed = true;\n        console.debug(`onDebugAdapterExit session: '${this.id}'`);\n        if (this.channel) {\n            this.channel.close();\n            this.channel = undefined;\n        }\n    }\n\n    protected onDebugAdapterError(error: Error): void {\n        console.debug(`error in debug adapter session: '${this.id}': ${JSON.stringify(error)}`);\n        const event: DebugProtocol.Event = {\n            type: 'event',\n            event: 'error',\n            seq: -1,\n            body: error\n        };\n        this.send(JSON.stringify(event));\n    }\n\n    protected send(message: string): void {\n        if (this.channel) {\n            this.channel.send(message);\n        }\n    }\n\n    protected write(message: string): void {\n        if (!this.isClosed) {\n            this.debugAdapter.send(message);\n        }\n    }\n\n    async stop(): Promise<void> {\n        console.debug(`stopping debug adapter session: '${this.id}'`);\n\n        if (!this.isClosed) {\n            await this.debugAdapter.stop();\n        }\n        this.channel?.close();\n        this.channel = undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// code copied and modified from https://github.com/microsoft/vscode/blob/1.55.2/src/vs/workbench/api/common/extHostSecrets.ts\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Plugin, PLUGIN_RPC_CONTEXT, SecretsExt, SecretsMain } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableGroup } from '@theia/core';\nimport * as theia from '@theia/plugin';\n\nexport interface PasswordChange {\n    extensionId: string;\n    key: string;\n}\n\nexport const InternalSecretsExt = Symbol('InternalSecretsExt');\nexport interface InternalSecretsExt extends SecretsExt {\n    get(extensionId: string, key: string): Promise<string | undefined>;\n\n    store(extensionId: string, key: string, value: string): Promise<void>;\n\n    delete(extensionId: string, key: string): Promise<void>;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onDidChangePassword(listener: (e: PasswordChange) => any, thisArgs?: any, disposables?: DisposableGroup): Disposable;\n}\n\n@injectable()\nexport class SecretsExtImpl implements InternalSecretsExt {\n    private proxy: SecretsMain;\n    private onDidChangePasswordEmitter = new Emitter<PasswordChange>();\n    readonly onDidChangePassword = this.onDidChangePasswordEmitter.event;\n\n    constructor(@inject(RPCProtocol) rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.SECRETS_MAIN);\n    }\n\n    async $onDidChangePassword(e: { extensionId: string, key: string }): Promise<void> {\n        this.onDidChangePasswordEmitter.fire(e);\n    }\n\n    get(extensionId: string, key: string): Promise<string | undefined> {\n        return this.proxy.$getPassword(extensionId, key);\n    }\n\n    store(extensionId: string, key: string, value: string): Promise<void> {\n        return this.proxy.$setPassword(extensionId, key, value);\n    }\n\n    delete(extensionId: string, key: string): Promise<void> {\n        return this.proxy.$deletePassword(extensionId, key);\n    }\n}\n\nexport class SecretStorageExt implements theia.SecretStorage {\n\n    protected readonly id: string;\n    readonly secretState: InternalSecretsExt;\n\n    private onDidChangeEmitter = new Emitter<theia.SecretStorageChangeEvent>();\n    readonly onDidChange: Event<theia.SecretStorageChangeEvent> = this.onDidChangeEmitter.event;\n\n    constructor(pluginDescription: Plugin, secretState: InternalSecretsExt) {\n        this.id = pluginDescription.model.id.toLowerCase();\n        this.secretState = secretState;\n\n        this.secretState.onDidChangePassword(e => {\n            if (e.extensionId === this.id) {\n                this.onDidChangeEmitter.fire({ key: e.key });\n            }\n        });\n    }\n\n    get(key: string): Promise<string | undefined> {\n        return this.secretState.get(this.id, key);\n    }\n\n    store(key: string, value: string): Promise<void> {\n        return this.secretState.store(this.id, key, value);\n    }\n\n    delete(key: string): Promise<void> {\n        return this.secretState.delete(this.id, key);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './contribution-filter';\nexport * from './contribution-filter-registry';\nexport * from './filter';\n","\n// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport { Hover } from '../../common/plugin-api-rpc-model';\nimport * as Converter from '../type-converters';\nimport { Range } from '../types-impl';\nimport { Position } from '../../common/plugin-api-rpc';\n\nexport class HoverAdapter {\n\n    constructor(\n        private readonly provider: theia.HoverProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    public provideHover(resource: URI, position: Position, token: theia.CancellationToken): Promise<Hover | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const pos = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideHover(doc, pos, token)).then(value => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (!value || !Array.isArray(value.contents) || (value.contents as Array<any>).length === 0) {\n                return undefined;\n            }\n            if (!value.range) {\n                value.range = doc.getWordRangeAtPosition(pos);\n            }\n            if (!value.range) {\n                value.range = new Range(pos, pos);\n            }\n\n            return Converter.fromHover(value);\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/stream.ts\n\n/* eslint-disable max-len */\n/* eslint-disable no-null/no-null */\n/* eslint-disable @typescript-eslint/tslint/config */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { DisposableCollection, Disposable } from './disposable';\n\nexport interface ReadableStreamEvents<T> {\n\n    /**\n     * The 'data' event is emitted whenever the stream is\n     * relinquishing ownership of a chunk of data to a consumer.\n     */\n    on(event: 'data', callback: (data: T) => void): void;\n\n    /**\n     * Emitted when any error occurs.\n     */\n    on(event: 'error', callback: (err: Error) => void): void;\n\n    /**\n     * The 'end' event is emitted when there is no more data\n     * to be consumed from the stream. The 'end' event will\n     * not be emitted unless the data is completely consumed.\n     */\n    on(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n    /**\n     * Stops emitting any events until resume() is called.\n     */\n    pause(): void;\n\n    /**\n     * Starts emitting events again after pause() was called.\n     */\n    resume(): void;\n\n    /**\n     * Destroys the stream and stops emitting any event.\n     */\n    destroy(): void;\n\n    /**\n     * Allows to remove a listener that was previously added.\n     */\n    removeListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n    /**\n     * Read data from the underlying source. Will return\n     * null to indicate that no more data can be read.\n     */\n    read(): T | null;\n}\nexport namespace Readable {\n    export function fromString(value: string): Readable<string> {\n        let done = false;\n\n        return {\n            read(): string | null {\n                if (!done) {\n                    done = true;\n\n                    return value;\n                }\n\n                return null;\n            }\n        };\n    }\n    export function toString(readable: Readable<string>): string {\n        let result = '';\n        let chunk: string | null;\n        while ((chunk = readable.read()) != null) {\n            result += chunk;\n        }\n        return result;\n    }\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n    /**\n     * Writing data to the stream will trigger the on('data')\n     * event listener if the stream is flowing and buffer the\n     * data otherwise until the stream is flowing.\n     *\n     * If a `highWaterMark` is configured and writing to the\n     * stream reaches this mark, a promise will be returned\n     * that should be awaited on before writing more data.\n     * Otherwise there is a risk of buffering a large number\n     * of data chunks without consumer.\n     */\n    write(data: T): void | Promise<void>;\n\n    /**\n     * Signals an error to the consumer of the stream via the\n     * on('error') handler if the stream is flowing.\n     */\n    error(error: Error): void;\n\n    /**\n     * Signals the end of the stream to the consumer. If the\n     * result is not an error, will trigger the on('data') event\n     * listener if the stream is flowing and buffer the data\n     * otherwise until the stream is flowing.\n     *\n     * In case of an error, the on('error') event will be used\n     * if the stream is flowing.\n     */\n    end(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n    /**\n     * The original stream that is being read.\n     */\n    stream: ReadableStream<T>;\n\n    /**\n     * An array of chunks already read from this stream.\n     */\n    buffer: T[];\n\n    /**\n     * Signals if the stream has ended or not. If not, consumers\n     * should continue to read from the stream until consumed.\n     */\n    ended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n    const candidate = obj as ReadableStream<T>;\n\n    return candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n    const candidate = obj as ReadableBufferedStream<T>;\n\n    return candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface Reducer<T> {\n    (data: T[]): T;\n}\n\nexport interface DataTransformer<Original, Transformed> {\n    (data: Original): Transformed;\n}\n\nexport interface ErrorTransformer {\n    (error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n    data: DataTransformer<Original, Transformed>;\n    error?: ErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: Reducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n    return new WriteableStreamImpl<T>(reducer);\n}\n\nexport interface WriteableStreamOptions {\n\n    /**\n     * The number of objects to buffer before WriteableStream#write()\n     * signals back that the buffer is full. Can be used to reduce\n     * the memory pressure when the stream is not flowing.\n     */\n    highWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n    private readonly state = {\n        flowing: false,\n        ended: false,\n        destroyed: false\n    };\n\n    private readonly buffer = {\n        data: [] as T[],\n        error: [] as Error[]\n    };\n\n    private readonly listeners = {\n        data: [] as { (data: T): void }[],\n        error: [] as { (error: Error): void }[],\n        end: [] as { (): void }[]\n    };\n\n    private readonly pendingWritePromises: Function[] = [];\n\n    constructor(private reducer: Reducer<T>, private options?: WriteableStreamOptions) { }\n\n    pause(): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        this.state.flowing = false;\n    }\n\n    resume(): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        if (!this.state.flowing) {\n            this.state.flowing = true;\n\n            // emit buffered events\n            this.flowData();\n            this.flowErrors();\n            this.flowEnd();\n        }\n    }\n\n    write(data: T): void | Promise<void> {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        // flowing: directly send the data to listeners\n        if (this.state.flowing) {\n            this.listeners.data.forEach(listener => listener(data));\n        }\n\n        // not yet flowing: buffer data until flowing\n        else {\n            this.buffer.data.push(data);\n\n            // highWaterMark: if configured, signal back when buffer reached limits\n            if (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n                return new Promise(resolve => this.pendingWritePromises.push(resolve));\n            }\n        }\n    }\n\n    error(error: Error): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        // flowing: directly send the error to listeners\n        if (this.state.flowing) {\n            this.listeners.error.forEach(listener => listener(error));\n        }\n\n        // not yet flowing: buffer errors until flowing\n        else {\n            this.buffer.error.push(error);\n        }\n    }\n\n    end(result?: T | Error): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        // end with data or error if provided\n        if (result instanceof Error) {\n            this.error(result);\n        } else if (result) {\n            this.write(result);\n        }\n\n        // flowing: send end event to listeners\n        if (this.state.flowing) {\n            this.listeners.end.forEach(listener => listener());\n\n            this.destroy();\n        }\n\n        // not yet flowing: remember state\n        else {\n            this.state.ended = true;\n        }\n    }\n\n    on(event: 'data', callback: (data: T) => void): void;\n    on(event: 'error', callback: (err: Error) => void): void;\n    on(event: 'end', callback: () => void): void;\n    on(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        switch (event) {\n            case 'data':\n                this.listeners.data.push(callback);\n\n                // switch into flowing mode as soon as the first 'data'\n                // listener is added and we are not yet in flowing mode\n                this.resume();\n\n                break;\n\n            case 'end':\n                this.listeners.end.push(callback);\n\n                // emit 'end' event directly if we are flowing\n                // and the end has already been reached\n                //\n                // finish() when it went through\n                if (this.state.flowing && this.flowEnd()) {\n                    this.destroy();\n                }\n\n                break;\n\n            case 'error':\n                this.listeners.error.push(callback);\n\n                // emit buffered 'error' events unless done already\n                // now that we know that we have at least one listener\n                if (this.state.flowing) {\n                    this.flowErrors();\n                }\n\n                break;\n        }\n    }\n\n    removeListener(event: string, callback: Function): void {\n        if (this.state.destroyed) {\n            return;\n        }\n\n        let listeners: unknown[] | undefined = undefined;\n\n        switch (event) {\n            case 'data':\n                listeners = this.listeners.data;\n                break;\n\n            case 'end':\n                listeners = this.listeners.end;\n                break;\n\n            case 'error':\n                listeners = this.listeners.error;\n                break;\n        }\n\n        if (listeners) {\n            const index = listeners.indexOf(callback);\n            if (index >= 0) {\n                listeners.splice(index, 1);\n            }\n        }\n    }\n\n    private flowData(): void {\n        if (this.buffer.data.length > 0) {\n            const fullDataBuffer = this.reducer(this.buffer.data);\n\n            this.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n            this.buffer.data.length = 0;\n\n            // When the buffer is empty, resolve all pending writers\n            const pendingWritePromises = [...this.pendingWritePromises];\n            this.pendingWritePromises.length = 0;\n            pendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n        }\n    }\n\n    private flowErrors(): void {\n        if (this.listeners.error.length > 0) {\n            for (const error of this.buffer.error) {\n                this.listeners.error.forEach(listener => listener(error));\n            }\n\n            this.buffer.error.length = 0;\n        }\n    }\n\n    private flowEnd(): boolean {\n        if (this.state.ended) {\n            this.listeners.end.forEach(listener => listener());\n\n            return this.listeners.end.length > 0;\n        }\n\n        return false;\n    }\n\n    destroy(): void {\n        if (!this.state.destroyed) {\n            this.state.destroyed = true;\n            this.state.ended = true;\n\n            this.buffer.data.length = 0;\n            this.buffer.error.length = 0;\n\n            this.listeners.data.length = 0;\n            this.listeners.error.length = 0;\n            this.listeners.end.length = 0;\n\n            this.pendingWritePromises.length = 0;\n        }\n    }\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: Reducer<T>): T {\n    const chunks: T[] = [];\n\n    let chunk: T | null;\n    while ((chunk = readable.read()) !== null) {\n        chunks.push(chunk);\n    }\n\n    return reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function consumeReadableWithLimit<T>(readable: Readable<T>, reducer: Reducer<T>, maxChunks: number): T | Readable<T> {\n    const chunks: T[] = [];\n\n    let chunk: T | null | undefined = undefined;\n    while ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n        chunks.push(chunk);\n    }\n\n    // If the last chunk is null, it means we reached the end of\n    // the readable and return all the data at once\n    if (chunk === null && chunks.length > 0) {\n        return reducer(chunks);\n    }\n\n    // Otherwise, we still have a chunk, it means we reached the maxChunks\n    // value and as such we return a new Readable that first returns\n    // the existing read chunks and then continues with reading from\n    // the underlying readable.\n    return {\n        read: () => {\n\n            // First consume chunks from our array\n            if (chunks.length > 0) {\n                return chunks.shift()!;\n            }\n\n            // Then ensure to return our last read chunk\n            if (typeof chunk !== 'undefined') {\n                const lastReadChunk = chunk;\n\n                // explicitly use undefined here to indicate that we consumed\n                // the chunk, which could have either been null or valued.\n                chunk = undefined;\n\n                return lastReadChunk;\n            }\n\n            // Finally delegate back to the Readable\n            return readable.read();\n        }\n    };\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: Reducer<T>, maxChunks: number): T | Readable<T> {\n    const chunks: T[] = [];\n\n    let chunk: T | null | undefined = undefined;\n    while ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n        chunks.push(chunk);\n    }\n\n    // If the last chunk is null, it means we reached the end of\n    // the readable and return all the data at once\n    if (chunk === null && chunks.length > 0) {\n        return reducer(chunks);\n    }\n\n    // Otherwise, we still have a chunk, it means we reached the maxChunks\n    // value and as such we return a new Readable that first returns\n    // the existing read chunks and then continues with reading from\n    // the underlying readable.\n    return {\n        read: () => {\n\n            // First consume chunks from our array\n            if (chunks.length > 0) {\n                return chunks.shift()!;\n            }\n\n            // Then ensure to return our last read chunk\n            if (typeof chunk !== 'undefined') {\n                const lastReadChunk = chunk;\n\n                // explicitly use undefined here to indicate that we consumed\n                // the chunk, which could have either been null or valued.\n                chunk = undefined;\n\n                return lastReadChunk;\n            }\n\n            // Finally delegate back to the Readable\n            return readable.read();\n        }\n    };\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStream<T>, reducer: Reducer<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n        const chunks: T[] = [];\n\n        stream.on('data', data => chunks.push(data));\n        stream.on('error', error => reject(error));\n        stream.on('end', () => resolve(reducer(chunks)));\n    });\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n    return new Promise((resolve, reject) => {\n        const streamListeners = new DisposableCollection();\n\n        // Data Listener\n        const buffer: T[] = [];\n        const dataListener = (chunk: T) => {\n\n            // Add to buffer\n            buffer.push(chunk);\n\n            // We reached maxChunks and thus need to return\n            if (buffer.length > maxChunks) {\n\n                // Dispose any listeners and ensure to pause the\n                // stream so that it can be consumed again by caller\n                streamListeners.dispose();\n                stream.pause();\n\n                return resolve({ stream, buffer, ended: false });\n            }\n        };\n\n        streamListeners.push(Disposable.create(() => stream.removeListener('data', dataListener)));\n        stream.on('data', dataListener);\n\n        // Error Listener\n        const errorListener = (error: Error) => reject(error);\n\n        streamListeners.push(Disposable.create(() => stream.removeListener('error', errorListener)));\n        stream.on('error', errorListener);\n\n        const endListener = () => resolve({ stream, buffer, ended: true });\n\n        streamListeners.push(Disposable.create(() => stream.removeListener('end', endListener)));\n        stream.on('end', endListener);\n    });\n}\n\n/**\n * Helper to read a T stream up to a maximum of chunks. If the limit is\n * reached, will return a stream instead to ensure all data can still\n * be read.\n */\nexport function consumeStreamWithLimit<T>(stream: ReadableStream<T>, reducer: Reducer<T>, maxChunks: number): Promise<T | ReadableStream<T>> {\n    return new Promise((resolve, reject) => {\n        const chunks: T[] = [];\n\n        let wrapperStream: WriteableStream<T> | undefined = undefined;\n\n        stream.on('data', data => {\n\n            // If we reach maxChunks, we start to return a stream\n            // and make sure that any data we have already read\n            // is in it as well\n            if (!wrapperStream && chunks.length === maxChunks) {\n                wrapperStream = newWriteableStream(reducer);\n                while (chunks.length) {\n                    wrapperStream.write(chunks.shift()!);\n                }\n\n                wrapperStream.write(data);\n\n                return resolve(wrapperStream);\n            }\n\n            if (wrapperStream) {\n                wrapperStream.write(data);\n            } else {\n                chunks.push(data);\n            }\n        });\n\n        stream.on('error', error => {\n            if (wrapperStream) {\n                wrapperStream.error(error);\n            } else {\n                return reject(error);\n            }\n        });\n\n        stream.on('end', () => {\n            if (wrapperStream) {\n                while (chunks.length) {\n                    wrapperStream.write(chunks.shift()!);\n                }\n\n                wrapperStream.end();\n            } else {\n                return resolve(reducer(chunks));\n            }\n        });\n    });\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: Reducer<T>): ReadableStream<T> {\n    const stream = newWriteableStream<T>(reducer);\n\n    stream.end(t);\n\n    return stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n    let consumed = false;\n\n    return {\n        read: () => {\n            if (consumed) {\n                return null;\n            }\n\n            consumed = true;\n\n            return t;\n        }\n    };\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: Reducer<Transformed>): ReadableStream<Transformed> {\n    const target = newWriteableStream<Transformed>(reducer);\n\n    stream.on('data', data => target.write(transformer.data(data)));\n    stream.on('end', () => target.end());\n    stream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n    return target;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { convertDiagnosticToMarkerData } from '../type-converters';\nimport { DiagnosticSeverity, MarkerSeverity } from '../types-impl';\nimport { MarkerData } from '../../common/plugin-api-rpc-model';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { PLUGIN_RPC_CONTEXT, LanguagesMain } from '../../common/plugin-api-rpc';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { generateUuid } from '@theia/core/lib/common/uuid';\n\nexport class DiagnosticCollection implements theia.DiagnosticCollection {\n    private static DIAGNOSTICS_PRIORITY = [\n        DiagnosticSeverity.Error, DiagnosticSeverity.Warning, DiagnosticSeverity.Information, DiagnosticSeverity.Hint\n    ];\n\n    private collectionName: string;\n    private diagnosticsLimitPerResource: number;\n    private proxy: LanguagesMain;\n    private onDidChangeDiagnosticsEmitter: Emitter<theia.DiagnosticChangeEvent>;\n\n    private diagnostics: Map<string, theia.Diagnostic[]>; // uri -> diagnostics\n    private isDisposed: boolean;\n    private onDisposeCallback: (() => void) | undefined;\n\n    constructor(name: string, maxCountPerFile: number, proxy: LanguagesMain, onDidChangeDiagnosticsEmitter: Emitter<theia.DiagnosticChangeEvent>) {\n        this.collectionName = name;\n        this.diagnosticsLimitPerResource = maxCountPerFile;\n        this.proxy = proxy;\n        this.onDidChangeDiagnosticsEmitter = onDidChangeDiagnosticsEmitter;\n\n        this.diagnostics = new Map<string, theia.Diagnostic[]>();\n        this.isDisposed = false;\n        this.onDisposeCallback = undefined;\n    }\n\n    get name(): string {\n        return this.collectionName;\n    }\n\n    set(uri: theia.Uri, diagnostics: theia.Diagnostic[] | undefined): void;\n    set(entries: [theia.Uri, theia.Diagnostic[] | undefined][]): void;\n    set(arg: theia.Uri | [theia.Uri, theia.Diagnostic[] | undefined][], diagnostics?: theia.Diagnostic[] | undefined): void {\n        this.ensureNotDisposed();\n\n        if (arg instanceof URI) {\n            this.setDiagnosticsForUri(arg, diagnostics);\n        } else if (!arg) {\n            this.clear();\n        } else if (arg instanceof Array) {\n            this.setDiagnostics(arg);\n        }\n    }\n\n    private setDiagnosticsForUri(uri: URI, diagnostics?: theia.Diagnostic[]): void {\n        if (!diagnostics) {\n            this.diagnostics.delete(uri.toString());\n        } else {\n            this.diagnostics.set(uri.toString(), diagnostics);\n        }\n        this.fireDiagnosticChangeEvent(uri);\n        this.sendChangesToEditor([uri]);\n    }\n\n    private setDiagnostics(entries: [URI, theia.Diagnostic[] | undefined][]): void {\n        const delta: URI[] = [];\n\n        // clear old diagnostics for given resources\n        for (const [uri] of entries) {\n            this.diagnostics.delete(uri.toString());\n        }\n\n        for (const [uri, diagnostics] of entries) {\n            const uriString = uri.toString();\n\n            if (!diagnostics) {\n                // clear existed\n                this.diagnostics.delete(uriString);\n                delta.push(uri);\n            } else {\n                // merge with existed if any\n                const existedDiagnostics = this.diagnostics.get(uriString);\n                if (existedDiagnostics) {\n                    existedDiagnostics.push(...diagnostics);\n                } else {\n                    this.diagnostics.set(uriString, diagnostics);\n                }\n            }\n\n            if (delta.indexOf(uri) === -1) {\n                delta.push(uri);\n            }\n        }\n\n        this.fireDiagnosticChangeEvent(delta);\n        this.sendChangesToEditor(delta);\n    }\n\n    delete(uri: URI): void {\n        if (this.has(uri)) {\n            this.fireDiagnosticChangeEvent(uri);\n            this.diagnostics.delete(uri.toString());\n            this.proxy.$changeDiagnostics(this.name, [[uri.toString(), []]]);\n        }\n    }\n\n    clear(): void {\n        this.ensureNotDisposed();\n        this.fireDiagnosticChangeEvent(this.getAllResourcesUris());\n        this.diagnostics.clear();\n        this.proxy.$clearDiagnostics(this.name);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    forEach(callback: (uri: URI, diagnostics: theia.Diagnostic[], collection: theia.DiagnosticCollection) => any, thisArg?: any): void {\n        this.ensureNotDisposed();\n        this.diagnostics.forEach((diagnostics, uriString) => {\n            const uri = URI.parse(uriString);\n            callback.apply(thisArg, [uri, this.getDiagnosticsByUri(uri), this]);\n        });\n    }\n\n    *[Symbol.iterator](): IterableIterator<[uri: theia.Uri, diagnostics: readonly theia.Diagnostic[]]> {\n        this.ensureNotDisposed();\n        for (const [uriString, diag] of this.diagnostics.entries()) {\n            yield [URI.parse(uriString), diag instanceof Array ? Object.freeze(diag) : []];\n        }\n    }\n\n    get(uri: URI): theia.Diagnostic[] {\n        this.ensureNotDisposed();\n        return this.getDiagnosticsByUri(uri) || [];\n    }\n\n    has(uri: URI): boolean {\n        this.ensureNotDisposed();\n        return (this.diagnostics.get(uri.toString()) instanceof Array);\n    }\n\n    dispose(): void {\n        if (!this.isDisposed) {\n            if (this.onDisposeCallback) {\n                this.onDisposeCallback();\n            }\n            this.clear();\n            this.isDisposed = true;\n        }\n    }\n\n    setOnDisposeCallback(onDisposeCallback: (() => void) | undefined): void {\n        this.onDisposeCallback = onDisposeCallback;\n    }\n\n    private ensureNotDisposed(): void {\n        if (this.isDisposed) {\n            throw new Error('Diagnostic collection with name \"' + this.name + '\" is already disposed.');\n        }\n    }\n\n    private getAllResourcesUris(): string[] {\n        const resourcesUris: string[] = [];\n        this.diagnostics.forEach((diagnostics, uri) => resourcesUris.push(uri));\n        return resourcesUris;\n    }\n\n    private getDiagnosticsByUri(uri: URI): theia.Diagnostic[] | undefined {\n        const diagnostics = this.diagnostics.get(uri.toString());\n        return (diagnostics instanceof Array) ? <theia.Diagnostic[]>Object.freeze(diagnostics) : undefined;\n    }\n\n    private fireDiagnosticChangeEvent(arg: string | string[] | URI | URI[]): void {\n        this.onDidChangeDiagnosticsEmitter.fire({ uris: this.toUrisArray(arg) });\n    }\n\n    private toUrisArray(arg: string | string[] | URI | URI[]): URI[] {\n        if (arg instanceof Array) {\n            if (arg.length === 0) {\n                return [];\n            }\n\n            if (arg[0] instanceof URI) {\n                return arg as URI[];\n            } else {\n                const result: URI[] = [];\n                for (const uriString of arg as string[]) {\n                    result.push(URI.parse(uriString));\n                }\n                return result;\n            }\n        } else {\n            if (arg instanceof URI) {\n                return [arg];\n            } else {\n                return [URI.parse(arg)];\n            }\n        }\n    }\n\n    private sendChangesToEditor(uris: URI[]): void {\n        const markers: [string, MarkerData[]][] = [];\n        nextUri:\n        for (const uri of uris) {\n            const uriMarkers: MarkerData[] = [];\n            const uriDiagnostics = this.diagnostics.get(uri.toString());\n            if (uriDiagnostics) {\n                if (uriDiagnostics.length > this.diagnosticsLimitPerResource) {\n                    for (const severity of DiagnosticCollection.DIAGNOSTICS_PRIORITY) {\n                        for (const diagnostic of uriDiagnostics) {\n                            if (severity === diagnostic.severity) {\n                                if (uriMarkers.push(convertDiagnosticToMarkerData(diagnostic)) + 1 === this.diagnosticsLimitPerResource) {\n                                    const lastMarker = uriMarkers[uriMarkers.length - 1];\n                                    uriMarkers.push({\n                                        severity: MarkerSeverity.Info,\n                                        message: 'Limit of diagnostics is reached. ' + (uriDiagnostics.length - this.diagnosticsLimitPerResource) + ' items are hidden',\n                                        startLineNumber: lastMarker.startLineNumber,\n                                        startColumn: lastMarker.startColumn,\n                                        endLineNumber: lastMarker.endLineNumber,\n                                        endColumn: lastMarker.endColumn\n                                    });\n                                    markers.push([uri.toString(), uriMarkers]);\n                                    continue nextUri;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    uriDiagnostics.forEach(diagnostic => uriMarkers.push(convertDiagnosticToMarkerData(diagnostic)));\n                    markers.push([uri.toString(), uriMarkers]);\n                }\n            } else {\n                markers.push([uri.toString(), []]);\n            }\n        }\n\n        this.proxy.$changeDiagnostics(this.name, markers);\n    }\n}\n\nexport class Diagnostics {\n    public static MAX_DIAGNOSTICS_PER_FILE = 1000;\n    private static GENERATED_DIAGNOSTIC_COLLECTION_NAME_PREFIX = '_generated_diagnostic_collection_name_#';\n\n    private proxy: LanguagesMain;\n    private diagnosticCollections: Map<string, DiagnosticCollection>; // id -> diagnostic collection\n\n    private diagnosticsChangedEmitter = new Emitter<theia.DiagnosticChangeEvent>();\n    public readonly onDidChangeDiagnostics: Event<theia.DiagnosticChangeEvent> = this.diagnosticsChangedEmitter.event;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.LANGUAGES_MAIN);\n\n        this.diagnosticCollections = new Map<string, DiagnosticCollection>();\n    }\n\n    getDiagnostics(resource: theia.Uri): theia.Diagnostic[];\n    getDiagnostics(): [theia.Uri, theia.Diagnostic[]][];\n    getDiagnostics(resource?: URI): theia.Diagnostic[] | [URI, theia.Diagnostic[]][] {\n        if (resource) {\n            return this.getAllDiagnosticsForResource(resource);\n        } else {\n            return this.getAllDiagnostics();\n        }\n    }\n\n    createDiagnosticCollection(name?: string): theia.DiagnosticCollection {\n        if (!name) {\n            do {\n                name = Diagnostics.GENERATED_DIAGNOSTIC_COLLECTION_NAME_PREFIX + this.getNextId();\n            } while (this.diagnosticCollections.has(name));\n        } else if (this.diagnosticCollections.has(name)) {\n            console.warn(`Diagnostic collection with name '${name}' already exist.`);\n        }\n\n        const diagnosticCollection = new DiagnosticCollection(name, Diagnostics.MAX_DIAGNOSTICS_PER_FILE, this.proxy, this.diagnosticsChangedEmitter);\n        diagnosticCollection.setOnDisposeCallback(() => {\n            this.diagnosticCollections.delete(name!);\n        });\n        this.diagnosticCollections.set(name, diagnosticCollection);\n        return diagnosticCollection;\n    }\n\n    private getNextId(): string {\n        return generateUuid();\n    }\n\n    private getAllDiagnosticsForResource(uri: URI): theia.Diagnostic[] {\n        let result: theia.Diagnostic[] = [];\n        this.diagnosticCollections.forEach(diagnosticCollection => {\n            const diagnostics = diagnosticCollection.get(uri);\n            if (diagnostics) {\n                result = result.concat(...diagnostics);\n            }\n        });\n        return result;\n    }\n\n    private getAllDiagnostics(): [URI, theia.Diagnostic[]][] {\n        const result: [URI, theia.Diagnostic[]][] = [];\n        // Holds uri index in result array of tuples.\n        const urisIndexes = new Map<string, number>();\n        let nextIndex = 0;\n        this.diagnosticCollections.forEach(diagnosticsCollection =>\n            diagnosticsCollection.forEach((uri, diagnostics) => {\n                let uriIndex = urisIndexes.get(uri.toString());\n                if (uriIndex === undefined) {\n                    uriIndex = nextIndex++;\n                    urisIndexes.set(uri.toString(), uriIndex);\n                    result.push([uri, [...diagnostics]]);\n                } else {\n                    result[uriIndex][1] = result[uriIndex][1].concat(...diagnostics);\n                }\n            })\n        );\n        return result;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { UUID } from '@theia/core/shared/@lumino/coreutils';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { TerminalServiceExt, TerminalServiceMain, PLUGIN_RPC_CONTEXT, Plugin, TerminalOptions } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { MultiKeyMap } from '@theia/core/lib/common/collections';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport * as theia from '@theia/plugin';\nimport * as Converter from './type-converters';\nimport { Disposable, EnvironmentVariableMutatorType, TerminalExitReason, ThemeIcon } from './types-impl';\nimport { NO_ROOT_URI, SerializableEnvironmentVariableCollection } from '@theia/terminal/lib/common/shell-terminal-protocol';\nimport { ProvidedTerminalLink } from '../common/plugin-api-rpc-model';\nimport { PluginIconPath } from './plugin-icon-path';\n\n/**\n * Provides high level terminal plugin api to use in the Theia plugins.\n * This service allow(with help proxy) create and use terminal emulator.\n */\n@injectable()\nexport class TerminalServiceExtImpl implements TerminalServiceExt {\n    private readonly proxy: TerminalServiceMain;\n\n    private readonly _terminals = new Map<string, TerminalExtImpl>();\n\n    private readonly _pseudoTerminals = new Map<string, PseudoTerminal>();\n\n    private static nextProviderId = 0;\n    private readonly terminalLinkProviders = new Map<string, theia.TerminalLinkProvider>();\n    private readonly terminalObservers = new Map<string, theia.TerminalObserver>();\n    private readonly terminalProfileProviders = new Map<string, theia.TerminalProfileProvider>();\n    private readonly onDidCloseTerminalEmitter = new Emitter<theia.Terminal>();\n    readonly onDidCloseTerminal: theia.Event<theia.Terminal> = this.onDidCloseTerminalEmitter.event;\n\n    private readonly onDidOpenTerminalEmitter = new Emitter<theia.Terminal>();\n    readonly onDidOpenTerminal: theia.Event<theia.Terminal> = this.onDidOpenTerminalEmitter.event;\n\n    private readonly onDidChangeActiveTerminalEmitter = new Emitter<theia.Terminal | undefined>();\n    readonly onDidChangeActiveTerminal: theia.Event<theia.Terminal | undefined> = this.onDidChangeActiveTerminalEmitter.event;\n\n    private readonly onDidChangeTerminalStateEmitter = new Emitter<theia.Terminal>();\n    readonly onDidChangeTerminalState: theia.Event<theia.Terminal> = this.onDidChangeTerminalStateEmitter.event;\n\n    protected environmentVariableCollections: MultiKeyMap<string, EnvironmentVariableCollectionImpl> = new MultiKeyMap(2);\n\n    private shell: string;\n    private readonly onDidChangeShellEmitter = new Emitter<string>();\n    readonly onDidChangeShell: theia.Event<string> = this.onDidChangeShellEmitter.event;\n\n    constructor(@inject(RPCProtocol) rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TERMINAL_MAIN);\n    }\n\n    get terminals(): TerminalExtImpl[] {\n        return [...this._terminals.values()];\n    }\n\n    get defaultShell(): string {\n        return this.shell || '';\n    }\n\n    async $setShell(shell: string): Promise<void> {\n        if (this.shell !== shell) {\n            this.shell = shell;\n            this.onDidChangeShellEmitter.fire(shell);\n        }\n    }\n\n    createTerminal(\n        plugin: Plugin,\n        nameOrOptions: theia.TerminalOptions | theia.PseudoTerminalOptions | theia.ExtensionTerminalOptions | string | undefined,\n        shellPath?: string, shellArgs?: string[] | string\n    ): theia.Terminal {\n        const id = `plugin-terminal-${UUID.uuid4()}`;\n        let options: TerminalOptions;\n        let pseudoTerminal: theia.Pseudoterminal | undefined = undefined;\n        if (typeof nameOrOptions === 'object') {\n            if ('pty' in nameOrOptions) {\n                pseudoTerminal = nameOrOptions.pty;\n                options = {\n                    name: nameOrOptions.name,\n                };\n                this._pseudoTerminals.set(id, new PseudoTerminal(id, this.proxy, pseudoTerminal));\n            } else {\n                options = nameOrOptions;\n            }\n        } else {\n            options = {\n                name: nameOrOptions,\n                shellPath: shellPath,\n                shellArgs: shellArgs\n            };\n        }\n\n        let parentId;\n        if (options.location && typeof options.location === 'object' && 'parentTerminal' in options.location) {\n            const parentTerminal = options.location.parentTerminal;\n            if (parentTerminal instanceof TerminalExtImpl) {\n                for (const [k, v] of this._terminals) {\n                    if (v === parentTerminal) {\n                        parentId = k;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (typeof nameOrOptions === 'object' && 'iconPath' in nameOrOptions) {\n            const iconPath = nameOrOptions.iconPath;\n            options.iconUrl = PluginIconPath.toUrl(iconPath, plugin) ?? ThemeIcon.get(iconPath);\n        }\n\n        if (typeof nameOrOptions === 'object' && 'color' in nameOrOptions) {\n            options.color = nameOrOptions.color;\n        }\n\n        this.proxy.$createTerminal(id, options, parentId, !!pseudoTerminal);\n\n        let creationOptions: theia.TerminalOptions | theia.ExtensionTerminalOptions = options;\n        // make sure to pass ExtensionTerminalOptions as creation options\n        if (typeof nameOrOptions === 'object' && 'pty' in nameOrOptions) {\n            creationOptions = nameOrOptions;\n        }\n        return this.obtainTerminal(id, options.name || 'Terminal', creationOptions);\n    }\n\n    attachPtyToTerminal(terminalId: number, pty: theia.Pseudoterminal): void {\n        this._pseudoTerminals.set(terminalId.toString(), new PseudoTerminal(terminalId, this.proxy, pty, true));\n    }\n\n    protected obtainTerminal(id: string, name: string, options?: theia.TerminalOptions | theia.ExtensionTerminalOptions): TerminalExtImpl {\n        let terminal = this._terminals.get(id);\n        if (!terminal) {\n            terminal = new TerminalExtImpl(this.proxy, options ?? {});\n            this._terminals.set(id, terminal);\n        }\n        terminal.name = name;\n        return terminal;\n    }\n\n    $terminalOnInput(id: string, data: string): void {\n        const terminal = this._pseudoTerminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        terminal.emitOnInput(data);\n    }\n\n    $terminalOnInteraction(id: string): void {\n        const terminal = this._terminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        if (!terminal.state.isInteractedWith) {\n            terminal.state = { ...terminal.state, isInteractedWith: true };\n            this.onDidChangeTerminalStateEmitter.fire(terminal);\n        }\n    }\n\n    $terminalShellTypeChanged(id: string, shellType: string): void {\n        const terminal = this._terminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        if (terminal.state.shell !== shellType) {\n            terminal.state = { ...terminal.state, shell: shellType };\n            this.onDidChangeTerminalStateEmitter.fire(terminal);\n        }\n    }\n\n    $terminalSizeChanged(id: string, clos: number, rows: number): void {\n        const terminal = this._pseudoTerminals.get(id);\n        if (!terminal) {\n            return;\n        }\n        terminal.emitOnResize(clos, rows);\n    }\n\n    $terminalCreated(id: string, name: string): void {\n        const terminal = this.obtainTerminal(id, name);\n        terminal.id.resolve(id);\n        this.onDidOpenTerminalEmitter.fire(terminal);\n    }\n\n    $terminalNameChanged(id: string, name: string): void {\n        const terminal = this._terminals.get(id);\n        if (terminal) {\n            terminal.name = name;\n        }\n    }\n\n    $terminalOpened(id: string, processId: number, terminalId: number, cols: number, rows: number): void {\n        const terminal = this._terminals.get(id);\n        if (terminal) {\n            // resolve for existing clients\n            terminal.deferredProcessId.resolve(processId);\n            // install new if terminal is reconnected\n            terminal.deferredProcessId = new Deferred<number>();\n            terminal.deferredProcessId.resolve(processId);\n        }\n\n        // Switch the pseudoterminal keyed by terminalId to be keyed by terminal ID\n        const tId = terminalId.toString();\n        if (this._pseudoTerminals.has(tId)) {\n            const pseudo = this._pseudoTerminals.get(tId);\n            if (pseudo) {\n                this._pseudoTerminals.set(id, pseudo);\n            }\n            this._pseudoTerminals.delete(tId);\n        }\n\n        const pseudoTerminal = this._pseudoTerminals.get(id);\n        if (pseudoTerminal) {\n            pseudoTerminal.emitOnOpen(cols, rows);\n        }\n    }\n\n    $terminalClosed(id: string, exitStatus: theia.TerminalExitStatus | undefined): void {\n        const terminal = this._terminals.get(id);\n        if (terminal) {\n            terminal.exitStatus = exitStatus ?? { code: undefined, reason: TerminalExitReason.Unknown };\n            this.onDidCloseTerminalEmitter.fire(terminal);\n            this._terminals.delete(id);\n        }\n        const pseudoTerminal = this._pseudoTerminals.get(id);\n        if (pseudoTerminal) {\n            pseudoTerminal.emitOnClose();\n            this._pseudoTerminals.delete(id);\n        }\n    }\n\n    private activeTerminalId: string | undefined;\n    get activeTerminal(): TerminalExtImpl | undefined {\n        return this.activeTerminalId && this._terminals.get(this.activeTerminalId) || undefined;\n    }\n    $currentTerminalChanged(id: string | undefined): void {\n        this.activeTerminalId = id;\n        this.onDidChangeActiveTerminalEmitter.fire(this.activeTerminal);\n    }\n\n    registerTerminalLinkProvider(provider: theia.TerminalLinkProvider): theia.Disposable {\n        const providerId = (TerminalServiceExtImpl.nextProviderId++).toString();\n        this.terminalLinkProviders.set(providerId, provider);\n        this.proxy.$registerTerminalLinkProvider(providerId);\n        return Disposable.create(() => {\n            this.proxy.$unregisterTerminalLinkProvider(providerId);\n            this.terminalLinkProviders.delete(providerId);\n        });\n    }\n\n    registerTerminalProfileProvider(id: string, provider: theia.TerminalProfileProvider): theia.Disposable {\n        this.terminalProfileProviders.set(id, provider);\n        return Disposable.create(() => {\n            this.terminalProfileProviders.delete(id);\n        });\n    }\n\n    /** @stubbed */\n    registerTerminalQuickFixProvider(id: string, provider: theia.TerminalQuickFixProvider): theia.Disposable {\n        return Disposable.NULL;\n    }\n\n    registerTerminalObserver(observer: theia.TerminalObserver): theia.Disposable {\n        const id = (TerminalServiceExtImpl.nextProviderId++).toString();\n        this.terminalObservers.set(id, observer);\n        this.proxy.$registerTerminalObserver(id, observer.nrOfLinesToMatch, observer.outputMatcherRegex);\n        return Disposable.create(() => {\n            this.proxy.$unregisterTerminalObserver(id);\n            this.terminalObservers.delete(id);\n        });\n    }\n\n    $reportOutputMatch(observerId: string, groups: string[]): void {\n        const observer = this.terminalObservers.get(observerId);\n        if (observer) {\n            observer.matchOccurred(groups);\n        } else {\n            throw new Error(`reporting matches for unregistered observer: ${observerId} `);\n        }\n    }\n\n    protected isExtensionTerminalOptions(options: theia.TerminalOptions | theia.ExtensionTerminalOptions): options is theia.ExtensionTerminalOptions {\n        return 'pty' in options;\n    }\n\n    async $startProfile(profileId: string, cancellationToken: theia.CancellationToken): Promise<string> {\n        const provider = this.terminalProfileProviders.get(profileId);\n        if (!provider) {\n            throw new Error(`No terminal profile provider with id '${profileId}'`);\n        }\n        const profile = await provider.provideTerminalProfile(cancellationToken);\n        if (!profile) {\n            throw new Error(`Profile with id ${profileId} could not be created`);\n        }\n        const id = `plugin-terminal-${UUID.uuid4()}`;\n        const options = profile.options;\n        if (this.isExtensionTerminalOptions(options)) {\n            this._pseudoTerminals.set(id, new PseudoTerminal(id, this.proxy, options.pty));\n            return this.proxy.$createTerminal(id, { name: options.name }, undefined, true);\n        } else {\n            return this.proxy.$createTerminal(id, profile.options);\n        }\n    }\n\n    async $provideTerminalLinks(line: string, terminalId: string, token: theia.CancellationToken): Promise<ProvidedTerminalLink[]> {\n        const links: ProvidedTerminalLink[] = [];\n        const terminal = this._terminals.get(terminalId);\n        if (terminal) {\n            for (const [providerId, provider] of this.terminalLinkProviders) {\n                const providedLinks = await provider.provideTerminalLinks({ line, terminal }, token);\n                if (providedLinks) {\n                    links.push(...providedLinks.map(link => ({ ...link, providerId })));\n                }\n            }\n        }\n        return links;\n    }\n\n    async $handleTerminalLink(link: ProvidedTerminalLink): Promise<void> {\n        const provider = this.terminalLinkProviders.get(link.providerId);\n        if (!provider) {\n            throw Error('Terminal link provider not found');\n        }\n        await provider.handleTerminalLink(link);\n    }\n\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    // some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/api/common/extHostTerminalService.ts\n\n    getEnvironmentVariableCollection(extensionIdentifier: string, rootUri: string = NO_ROOT_URI): theia.GlobalEnvironmentVariableCollection {\n        const that = this;\n        let collection = this.environmentVariableCollections.get([extensionIdentifier, rootUri]);\n        if (!collection) {\n            collection = new class extends EnvironmentVariableCollectionImpl {\n                override getScoped(scope: theia.EnvironmentVariableScope): theia.EnvironmentVariableCollection {\n                    return that.getEnvironmentVariableCollection(extensionIdentifier, scope.workspaceFolder?.uri.toString());\n                }\n            }(true);\n            this.setEnvironmentVariableCollection(extensionIdentifier, rootUri, collection);\n        }\n        return collection;\n    }\n\n    private syncEnvironmentVariableCollection(extensionIdentifier: string, rootUri: string, collection: EnvironmentVariableCollectionImpl): void {\n        const serialized = [...collection.map.entries()];\n        this.proxy.$setEnvironmentVariableCollection(collection.persistent, extensionIdentifier,\n            rootUri,\n            {\n                mutators: serialized,\n                description: Converter.fromMarkdownOrString(collection.description)\n            });\n    }\n\n    private setEnvironmentVariableCollection(pluginIdentifier: string, rootUri: string, collection: EnvironmentVariableCollectionImpl): void {\n        this.environmentVariableCollections.set([pluginIdentifier, rootUri], collection);\n        collection.onDidChangeCollection(() => {\n            // When any collection value changes send this immediately, this is done to ensure\n            // following calls to createTerminal will be created with the new environment. It will\n            // result in more noise by sending multiple updates when called but collections are\n            // expected to be small.\n            this.syncEnvironmentVariableCollection(pluginIdentifier, rootUri, collection);\n        });\n    }\n\n    $initEnvironmentVariableCollections(collections: [string, string, boolean, SerializableEnvironmentVariableCollection][]): void {\n        collections.forEach(entry => {\n            const extensionIdentifier = entry[0];\n            const rootUri = entry[1];\n            const collection = new EnvironmentVariableCollectionImpl(entry[2], entry[3]);\n            this.setEnvironmentVariableCollection(extensionIdentifier, rootUri, collection);\n        });\n    }\n\n}\n\nexport class EnvironmentVariableCollectionImpl implements theia.GlobalEnvironmentVariableCollection {\n    readonly map: Map<string, theia.EnvironmentVariableMutator> = new Map();\n    private _description?: string | theia.MarkdownString;\n    private _persistent: boolean = true;\n\n    public get description(): string | theia.MarkdownString | undefined { return this._description; }\n    public set description(value: string | theia.MarkdownString | undefined) {\n        this._description = value;\n        this.onDidChangeCollectionEmitter.fire();\n    }\n\n    public get persistent(): boolean { return this._persistent; }\n    public set persistent(value: boolean) {\n        this._persistent = value;\n        this.onDidChangeCollectionEmitter.fire();\n    }\n\n    protected readonly onDidChangeCollectionEmitter: Emitter<void> = new Emitter<void>();\n    onDidChangeCollection: Event<void> = this.onDidChangeCollectionEmitter.event;\n\n    constructor(\n        persistent: boolean,\n        serialized?: SerializableEnvironmentVariableCollection\n    ) {\n        this._persistent = persistent;\n        this.map = new Map(serialized?.mutators);\n    }\n\n    getScoped(scope: theia.EnvironmentVariableScope): theia.EnvironmentVariableCollection {\n        throw new Error('Cannot get scoped from a regular env var collection');\n    }\n\n    get size(): number {\n        return this.map.size;\n    }\n\n    replace(variable: string, value: string, options?: theia.EnvironmentVariableMutatorOptions): void {\n        this._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Replace, options: options ?? { applyAtProcessCreation: true } });\n    }\n\n    append(variable: string, value: string, options?: theia.EnvironmentVariableMutatorOptions): void {\n        this._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Append, options: options ?? { applyAtProcessCreation: true } });\n    }\n\n    prepend(variable: string, value: string, options?: theia.EnvironmentVariableMutatorOptions): void {\n        this._setIfDiffers(variable, { value, type: EnvironmentVariableMutatorType.Prepend, options: options ?? { applyAtProcessCreation: true } });\n    }\n\n    private _setIfDiffers(variable: string, mutator: theia.EnvironmentVariableMutator): void {\n        const current = this.map.get(variable);\n        if (!current || current.value !== mutator.value || current.type !== mutator.type) {\n            this.map.set(variable, mutator);\n            this.onDidChangeCollectionEmitter.fire();\n        }\n    }\n\n    get(variable: string): theia.EnvironmentVariableMutator | undefined {\n        return this.map.get(variable);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    forEach(callback: (variable: string, mutator: theia.EnvironmentVariableMutator, collection: theia.EnvironmentVariableCollection) => any, thisArg?: any): void {\n        this.map.forEach((value, key) => callback.call(thisArg, key, value, this));\n    }\n\n    delete(variable: string): void {\n        this.map.delete(variable);\n        this.onDidChangeCollectionEmitter.fire();\n    }\n\n    clear(): void {\n        this.map.clear();\n        this.onDidChangeCollectionEmitter.fire();\n    }\n}\n\nexport class TerminalExtImpl implements theia.Terminal {\n\n    name: string;\n\n    readonly id = new Deferred<string>();\n\n    exitStatus: theia.TerminalExitStatus | undefined;\n\n    deferredProcessId = new Deferred<number>();\n\n    get processId(): Thenable<number> {\n        return this.deferredProcessId.promise;\n    }\n\n    readonly creationOptions: Readonly<theia.TerminalOptions | theia.ExtensionTerminalOptions>;\n\n    state: theia.TerminalState = { isInteractedWith: false, shell: undefined };\n\n    constructor(private readonly proxy: TerminalServiceMain, private readonly options: theia.TerminalOptions | theia.ExtensionTerminalOptions) {\n        this.creationOptions = this.options;\n    }\n\n    /** @stubbed Terminal Shell Ingration */\n    shellIntegration: theia.TerminalShellIntegration | undefined = undefined;\n\n    sendText(text: string, shouldExecute: boolean = true): void {\n        this.id.promise.then(id => this.proxy.$sendText(id, text, shouldExecute));\n    }\n\n    show(preserveFocus?: boolean): void {\n        this.id.promise.then(id => this.proxy.$show(id, preserveFocus));\n    }\n\n    hide(): void {\n        this.id.promise.then(id => this.proxy.$hide(id));\n    }\n\n    dispose(): void {\n        this.id.promise.then(id => this.proxy.$dispose(id));\n    }\n}\n\nexport class PseudoTerminal {\n    constructor(\n        id: string | number,\n        private readonly proxy: TerminalServiceMain,\n        private readonly pseudoTerminal: theia.Pseudoterminal,\n        waitOnExit?: boolean | string\n    ) {\n\n        pseudoTerminal.onDidWrite(data => {\n            if (typeof id === 'string') {\n                this.proxy.$write(id, data);\n            } else {\n                this.proxy.$writeByTerminalId(id, data);\n            }\n        });\n        if (pseudoTerminal.onDidClose) {\n            pseudoTerminal.onDidClose((e: number | void = undefined) => {\n                if (typeof id === 'string') {\n                    this.proxy.$dispose(id);\n                } else {\n                    this.proxy.$disposeByTerminalId(id, waitOnExit);\n                }\n            });\n        }\n        if (pseudoTerminal.onDidOverrideDimensions) {\n            pseudoTerminal.onDidOverrideDimensions(e => {\n                if (e) {\n                    if (typeof id === 'string') {\n                        this.proxy.$resize(id, e.columns, e.rows);\n                    } else {\n                        this.proxy.$resizeByTerminalId(id, e.columns, e.rows);\n                    }\n                }\n            });\n        }\n        if (pseudoTerminal.onDidChangeName) {\n            pseudoTerminal.onDidChangeName(name => {\n                if (typeof id === 'string') {\n                    this.proxy.$setName(id, name);\n                } else {\n                    this.proxy.$setNameByTerminalId(id, name);\n                }\n            });\n        }\n    }\n\n    emitOnClose(): void {\n        this.pseudoTerminal.close();\n    }\n\n    emitOnInput(data: string): void {\n        if (this.pseudoTerminal.handleInput) {\n            this.pseudoTerminal.handleInput(data);\n        }\n    }\n\n    emitOnOpen(cols: number, rows: number): void {\n        this.pseudoTerminal.open({\n            rows,\n            columns: cols,\n        });\n    }\n\n    emitOnResize(cols: number, rows: number): void {\n        if (this.pseudoTerminal.setDimensions) {\n            this.pseudoTerminal.setDimensions({ columns: cols, rows });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as Converter from '../type-converters';\nimport * as model from '../../common/plugin-api-rpc-model';\n\nexport class FoldingProviderAdapter {\n\n    constructor(\n        private readonly provider: theia.FoldingRangeProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideFoldingRanges(resource: URI, context: model.FoldingContext, token: theia.CancellationToken): Promise<model.FoldingRange[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n\n        return Promise.resolve(this.provider.provideFoldingRanges(doc, context, token)).then(ranges => {\n            if (!Array.isArray(ranges)) {\n                return undefined;\n            }\n\n            return ranges.map(Converter.fromFoldingRange);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { JSONObject, JSONValue } from '@lumino/coreutils';\nimport { IJSONSchema } from '../json-schema';\nimport { PreferenceScope } from './preference-scope';\nimport { Event } from '../event';\nimport { Disposable } from '../disposable';\n\nexport const PreferenceContribution = Symbol('PreferenceContribution');\n/**\n * A {@link PreferenceContribution} allows adding additional custom preferences.\n * For this, the {@link PreferenceContribution} has to provide a valid `PrefernceSchema` specifying which preferences\n * are available including their types and description.\n *\n * ### Example usage\n * ```typescript\n * const MyPreferencesSchema: PreferenceSchema = {\n *     'scope': PreferenceScope.Folder,\n *     'properties': {\n *         'myext.decorations.enabled': {\n *             'type': 'boolean',\n *             'description': 'Show file status',\n *             'default': true\n *         },\n *         // [...]\n *     }\n * }\n * @injectable()\n * export class MyPreferenceContribution implements PreferenceContribution{\n *     schema= MyPreferencesSchema;\n * }\n * ```\n */\nexport interface PreferenceContribution {\n    readonly schema?: PreferenceSchema;\n    /**\n     * Allows to do additional intialisation of the preference schema, for example registering overrides\n     * @param service the preference schema service\n     */\n    initSchema?(service: PreferenceSchemaService): Promise<void>\n}\n\nexport interface IndexedAccess<T> {\n    [name: string]: T;\n}\n\nexport interface PreferenceSchema {\n    /** The default scope for properties in this schema */\n    scope?: PreferenceScope,\n    /** Optional title to be used in UI */\n    title?: string,\n    /** Whether properties in this schema are overridable by default. Defaults to false. */\n    defaultOverridable?: boolean;\n    properties: IndexedAccess<PreferenceDataProperty>;\n}\n\nexport interface PreferenceDataProperty extends IJSONSchema {\n    /**\n     * Whether distinct values can be defined for language override identifers. E.g. values valid when editing typescript files vs.\n     * when editing Java files\n     */\n    overridable?: boolean;\n    /** If false, the preference will not be included in the schema or the UI. E.g. OS-Specific prefs */\n    included?: boolean;\n    /** If true, this item will registered as part of the preference schema, but hidden in the preference editor UI. */\n    hidden?: boolean;\n    /** The maximum scope where values for this property can be set. */\n    scope?: PreferenceScope;\n    /** Metadata intended for custom renderers */\n    typeDetails?: any;\n    /** Tags can be searched for in the UI */\n    tags?: string[]\n}\n\nexport interface DefaultValueChangedEvent {\n    /** The preference key */\n    key: string;\n    /** The override identifier that the default changed for */\n    overrideIdentifier?: string;\n    /**\n     * When the default for the base property changes, indicates which override identifiers will be affected\n     */\n    otherAffectedOverrides: string[];\n    oldValue: JSONValue | undefined;\n    newValue: JSONValue | undefined;\n}\n\nexport const PreferenceSchemaService = Symbol('PreferenceSchemaService');\n\nexport interface PreferenceSchemaService {\n    /**\n     * Resolves after static contributions have been processed\n     */\n    readonly ready: Promise<void>;\n    /**\n     * Register an override identifier for language specific preferences\n     * @param overrideIdentifier The identifier to register\n     * @returns A disposable to unregister the identifier\n     */\n    registerOverrideIdentifier(overrideIdentifier: string): Disposable;\n    readonly overrideIdentifiers: ReadonlySet<string>;\n\n    /**\n     * Add a preference schema. It is an error to register the same property in two different schemas\n     * @param schema The schema to add\n     * @returns A disposable to remove the schema\n     */\n    addSchema(schema: PreferenceSchema): Disposable;\n\n    /**\n     * The scopes which this preference schema service handles. Any properties that are not applicable within the\n     * valid scopes will be ignored\n     */\n    readonly validScopes: readonly PreferenceScope[];\n    /**\n     * Check if a preference is valid in a specific scope\n     * @param preferenceName The preference name\n     * @param scope The scope to check\n     * @returns True if the preference is valid in the given scope\n     */\n    isValidInScope(preferenceName: string, scope: PreferenceScope): boolean;\n    getSchemaProperty(key: string): PreferenceDataProperty | undefined;\n    getSchemaProperties(): ReadonlyMap<string, PreferenceDataProperty>;\n\n    /**\n     * Update a property in the schema. The corresponding JSON Schemas, etc. will be updated\n     * @param key The property key\n     * @param property The updated property\n     */\n    updateSchemaProperty(key: string, property: PreferenceDataProperty): void;\n\n    /**\n     * Register an override for a preference default value. If multiple overrides are registered for the same value,\n     * the last override will be in effect. Removing the last override will make the second-to-last override active, etc.\n     * @param key The preference key\n     * @param overrideIdentifier The override identifier, undefined for global default\n     * @param value The default value\n     * @returns A disposable to unregister the override\n     */\n    registerOverride(key: string, overrideIdentifier: string | undefined, value: JSONValue): Disposable;\n    /**\n     * Get the default value for a preference. This is the value a client will see for the given key/override\n     * @param key The preference key\n     * @param overrideIdentifier The override identifier, undefined for global default\n     * @returns The default value or undefined if not found\n     */\n    getDefaultValue(key: string, overrideIdentifier: string | undefined): JSONValue | undefined;\n    /**\n     * Gets the default value for a preference. This method not fall back to the global value if no override is given\n     * @param key The preference key\n     * @param overrideIdentifier The override identifier, undefined for global default\n     * @returns The default value or undefined if not found\n     */\n    inspectDefaultValue(key: string, overrideIdentifier: string | undefined): JSONValue | undefined;\n\n    /**\n     * Gets a JSON schema a preference.json file for the given scope.\n     * @param scope The scope to generate schema for\n     * @returns The JSON schema\n     */\n    getJSONSchema(scope: PreferenceScope): IJSONSchema;\n    /**\n     * Get the collection of all defined default values as JSONObject of the form like in a preferences.json\n     *\n     * #### Example usage\n     * ```json\n     * {\n     *   \"my.preference\": \"a string default\",\n     *   \"[typescript]\": {\n     *      \"another.preference\": 39\n     *   }\n     * }\n     */\n    getDefaultValues(): JSONObject;\n\n    // Public events\n    onDidChangeDefaultValue: Event<DefaultValueChangedEvent>;\n    onDidChangeSchema: Event<void>;\n}\n\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// copied from https://github.com/microsoft/vscode/blob/6261075646f055b99068d3688932416f2346dd3b/src/vs/workbench/api/common/extHostLanguageFeatures.ts#L1069-L1185.\n\nimport * as theia from '@theia/plugin';\nimport * as Converter from '../type-converters';\nimport { DocumentsExtImpl } from '../documents';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { ReferenceMap } from '../../common/reference-map';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { InlineCompletionTriggerKind as TriggerKind } from '../../plugin/types-impl';\nimport { Command, InlineCompletionContext, InlineCompletionTriggerKind } from '../../common/plugin-api-rpc-model';\nimport { IdentifiableInlineCompletion, IdentifiableInlineCompletions, Position } from '../../common/plugin-api-rpc';\n\nexport class InlineCompletionAdapterBase {\n\n    async provideInlineCompletions(\n        _resource: URI,\n        _position: Position,\n        _context: InlineCompletionContext,\n        _token: theia.CancellationToken\n    ): Promise<IdentifiableInlineCompletions | undefined> {\n        return undefined;\n    }\n\n    disposeCompletions(pid: number): void { return; };\n}\n\nexport class InlineCompletionAdapter extends InlineCompletionAdapterBase {\n\n    private readonly references = new ReferenceMap<{\n        dispose(): void;\n        items: readonly theia.InlineCompletionItem[];\n    }>();\n\n    constructor(\n        private readonly documents: DocumentsExtImpl,\n        private readonly provider: theia.InlineCompletionItemProvider,\n        private readonly commands: CommandRegistryImpl,\n    ) {\n        super();\n    }\n\n    private readonly languageTriggerKindToVSCodeTriggerKind: Record<InlineCompletionTriggerKind, TriggerKind> = {\n        [InlineCompletionTriggerKind.Automatic]: TriggerKind.Automatic,\n        [InlineCompletionTriggerKind.Explicit]: TriggerKind.Invoke,\n    };\n\n    override async provideInlineCompletions(\n        resource: URI,\n        position: Position,\n        context: InlineCompletionContext,\n        token: theia.CancellationToken\n    ): Promise<IdentifiableInlineCompletions | undefined> {\n        const doc = this.documents.getDocument(resource);\n        const pos = Converter.toPosition(position);\n\n        const result = await this.provider.provideInlineCompletionItems(doc, pos, {\n            selectedCompletionInfo:\n                context.selectedSuggestionInfo\n                    ? {\n                        range: Converter.toRange(context.selectedSuggestionInfo.range),\n                        text: context.selectedSuggestionInfo.text\n                    }\n                    : undefined,\n            triggerKind: this.languageTriggerKindToVSCodeTriggerKind[context.triggerKind]\n        }, token);\n\n        if (!result || token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const normalizedResult = Array.isArray(result) ? result : result.items;\n\n        let disposableCollection: DisposableCollection | undefined = undefined;\n        const pid = this.references.createReferenceId({\n            dispose(): void {\n                disposableCollection?.dispose();\n            },\n            items: normalizedResult\n        });\n\n        return {\n            pid,\n            items: normalizedResult.map<IdentifiableInlineCompletion>((item, idx) => {\n                let command: Command | undefined = undefined;\n                if (item.command) {\n                    if (!disposableCollection) {\n                        disposableCollection = new DisposableCollection();\n                    }\n                    command = this.commands.converter.toSafeCommand(item.command, disposableCollection);\n                }\n\n                const insertText = item.insertText;\n                return ({\n                    insertText: typeof insertText === 'string' ? insertText : { snippet: insertText.value },\n                    filterText: item.filterText,\n                    range: item.range ? Converter.fromRange(item.range) : undefined,\n                    command,\n                    idx: idx\n                });\n            })\n        };\n    }\n\n    override disposeCompletions(pid: number): void {\n        const data = this.references.disposeReferenceId(pid);\n        data?.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    PLUGIN_RPC_CONTEXT as Ext, MessageRegistryMain, MainMessageOptions, MainMessageType\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { MessageItem, MessageOptions } from '@theia/plugin';\n\n@injectable()\nexport class MessageRegistryExt {\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    private proxy: MessageRegistryMain;\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(Ext.MESSAGE_REGISTRY_MAIN);\n    }\n\n    async showMessage(type: MainMessageType, message: string,\n        optionsOrFirstItem?: MessageOptions | string | MessageItem,\n        ...rest: (string | MessageItem)[]): Promise<string | MessageItem | undefined> {\n        const options: MainMessageOptions = {};\n        const actions: MessageItem[] = [];\n        const items: (string | MessageItem)[] = [];\n        const pushItem = (item: string | MessageItem) => {\n            items.push(item);\n            if (typeof item === 'string') {\n                actions.push({ title: item });\n            } else {\n                actions.push({ title: item.title, isCloseAffordance: item.isCloseAffordance });\n                if (item.isCloseAffordance) {\n                    options.onCloseActionHandle = actions.length - 1;\n                }\n            }\n        };\n        if (optionsOrFirstItem) {\n            if (typeof optionsOrFirstItem === 'string' || 'title' in optionsOrFirstItem) {\n                pushItem(optionsOrFirstItem);\n            } else {\n                if ('modal' in optionsOrFirstItem) {\n                    options.modal = optionsOrFirstItem.modal;\n                    if ('detail' in optionsOrFirstItem) {\n                        options.detail = optionsOrFirstItem.detail;\n                    }\n                }\n            }\n        }\n        for (const item of rest) {\n            pushItem(item);\n        }\n        const actionHandle = await this.proxy.$showMessage(type, message, options, actions);\n        return actionHandle !== undefined ? items[actionHandle] : undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named } from 'inversify';\nimport { CommandMenu, CompoundMenuNode, Group, MAIN_MENU_BAR, MenuAction, MenuNode, MenuPath, MutableCompoundMenuNode, Submenu } from './menu-types';\nimport { Event } from 'vscode-languageserver-protocol';\nimport { ContributionProvider } from '../contribution-provider';\nimport { Command, CommandRegistry } from '../command';\nimport { Emitter } from '../event';\nimport { Disposable } from '../disposable';\n\nexport const MenuContribution = Symbol('MenuContribution');\n\n/**\n * Representation of a menu contribution.\n *\n * Note that there are also convenience classes which combine multiple contributions into one.\n * For example to register a view together with a menu and keybinding you could use\n * {@link AbstractViewContribution} instead.\n *\n * ### Example usage\n *\n * ```ts\n * import { MenuContribution, MenuModelRegistry, MAIN_MENU_BAR } from '@theia/core';\n *\n * @injectable()\n * export class NewMenuContribution implements MenuContribution {\n *    registerMenus(menus: MenuModelRegistry): void {\n *         const menuPath = [...MAIN_MENU_BAR, '99_mymenu'];\n *         menus.registerSubmenu(menuPath, 'My Menu');\n *\n *         menus.registerMenuAction(menuPath, {\n *            commandId: MyCommand.id,\n *            label: 'My Action'\n *         });\n *     }\n * }\n * ```\n */\nexport interface MenuContribution {\n    /**\n     * Registers menus.\n     * @param menus the menu model registry.\n     */\n    registerMenus(menus: MenuModelRegistry): void;\n}\n\nexport enum ChangeKind {\n    ADDED,\n    REMOVED,\n    CHANGED,\n    LINKED\n}\n\nexport interface MenuChangedEvent {\n    kind: ChangeKind;\n    path: MenuPath\n}\n\nexport interface StructuralMenuChange extends MenuChangedEvent {\n    kind: ChangeKind.ADDED | ChangeKind.REMOVED | ChangeKind.LINKED;\n    affectedChildId: string\n}\n\nexport namespace StructuralMenuChange {\n    export function is(evt: MenuChangedEvent): evt is StructuralMenuChange {\n        return evt.kind !== ChangeKind.CHANGED;\n    }\n}\nexport const MenuNodeFactory = Symbol('MenuNodeFactory');\n\nexport interface MenuNodeFactory {\n    createGroup(id: string, orderString?: string, when?: string): Group & MutableCompoundMenuNode;\n    createCommandMenu(item: MenuAction): CommandMenu;\n    createSubmenu(id: string, label: string, contextKeyOverlays: Record<string, string> | undefined,\n        orderString?: string, icon?: string, when?: string): Submenu & MutableCompoundMenuNode\n    createSubmenuLink(delegate: Submenu, sortString?: string, when?: string): MenuNode;\n}\n\n/**\n * The MenuModelRegistry allows to register and unregister menus, submenus and actions\n * via strings and {@link MenuAction}s without the need to access the underlying UI\n * representation.\n */\n@injectable()\nexport class MenuModelRegistry {\n    protected root: Group & MutableCompoundMenuNode;\n\n    protected readonly onDidChangeEmitter = new Emitter<MenuChangedEvent>();\n\n    constructor(\n        @inject(ContributionProvider) @named(MenuContribution)\n        protected readonly contributions: ContributionProvider<MenuContribution>,\n        @inject(CommandRegistry)\n        protected readonly commands: CommandRegistry,\n        @inject(MenuNodeFactory)\n        protected readonly menuNodeFactory: MenuNodeFactory) {\n        this.root = this.menuNodeFactory.createGroup('root', 'root');\n        this.root.addNode(this.menuNodeFactory.createGroup(MAIN_MENU_BAR[0]));\n    }\n\n    get onDidChange(): Event<MenuChangedEvent> {\n        return this.onDidChangeEmitter.event;\n    }\n\n    protected isReady = false;\n\n    onStart(): void {\n        for (const contrib of this.contributions.getContributions()) {\n            contrib.registerMenus(this);\n        }\n        this.isReady = true;\n    }\n\n    /**\n     * Adds the given menu action to the menu denoted by the given path.\n     *\n     * @returns a disposable which, when called, will remove the menu action again.\n     */\n    registerCommandMenu(menuPath: MenuPath, item: CommandMenu): Disposable {\n        const parent = this.root.getOrCreate(menuPath, 0, menuPath.length);\n        parent.addNode(item);\n        return Disposable.create(() => {\n            parent.removeNode(item);\n            this.fireChangeEvent({\n                kind: ChangeKind.REMOVED,\n                path: menuPath.slice(0, menuPath.length - 1),\n                affectedChildId: item.id\n            });\n        });\n    }\n\n    /**\n     * Adds the given menu action to the menu denoted by the given path.\n     *\n     * @returns a disposable which, when called, will remove the menu action again.\n     */\n    registerMenuAction(menuPath: MenuPath, item: MenuAction): Disposable {\n        const parent = this.root.getOrCreate(menuPath, 0, menuPath.length);\n        const node = this.menuNodeFactory.createCommandMenu(item);\n        parent.addNode(node);\n        return Disposable.create(() => {\n            parent.removeNode(node);\n            this.fireChangeEvent({\n                kind: ChangeKind.REMOVED,\n                path: menuPath.slice(0, menuPath.length - 1),\n                affectedChildId: node.id\n            });\n        });\n\n    }\n\n    /**\n     * Register a new menu at the given path with the given label.\n     * (If the menu already exists without a label, iconClass or order this method can be used to set them.)\n     *\n     * @param menuPath the path for which a new submenu shall be registered.\n     * @param label the label to be used for the new submenu.\n     * @param options optionally allows to set an icon class and specify the order of the new menu.\n     *\n     * @returns if the menu was successfully created a disposable will be returned which,\n     * when called, will remove the menu again. If the menu already existed a no-op disposable\n     * will be returned.\n     *\n     * Note that if the menu already existed and was registered with a different label an error\n     * will be thrown.\n     */\n    registerSubmenu(menuPath: MenuPath, label: string,\n        options: { sortString?: string, icon?: string, when?: string, contextKeyOverlay?: Record<string, string> } = {}): Disposable {\n        const { contextKeyOverlay, sortString, icon, when } = options;\n\n        const parent = this.root.getOrCreate(menuPath, 0, menuPath.length - 1);\n        const existing = parent.children.find(node => node.id === menuPath[menuPath.length - 1]);\n        if (Group.is(existing)) {\n            parent.removeNode(existing);\n            const newMenu = this.menuNodeFactory.createSubmenu(menuPath[menuPath.length - 1], label, contextKeyOverlay, sortString, icon, when);\n            newMenu.addNode(...existing.children);\n            parent.addNode(newMenu);\n            this.fireChangeEvent({\n                kind: ChangeKind.CHANGED,\n                path: menuPath\n            });\n            return Disposable.create(() => {\n                parent.removeNode(newMenu);\n                this.fireChangeEvent({\n                    kind: ChangeKind.REMOVED,\n                    path: menuPath.slice(0, menuPath.length - 1),\n                    affectedChildId: newMenu.id\n                });\n            });\n        } else {\n            const newMenu = this.menuNodeFactory.createSubmenu(menuPath[menuPath.length - 1], label, contextKeyOverlay, sortString, icon, when);\n            parent.addNode(newMenu);\n            this.fireChangeEvent({\n                kind: ChangeKind.ADDED,\n                path: menuPath.slice(0, menuPath.length - 1),\n                affectedChildId: newMenu.id\n            });\n            return Disposable.create(() => {\n                parent.removeNode(newMenu);\n                this.fireChangeEvent({\n                    kind: ChangeKind.REMOVED,\n                    path: menuPath.slice(0, menuPath.length - 1),\n                    affectedChildId: newMenu.id\n                });\n            });\n        }\n    }\n\n    linkCompoundMenuNode(params: { newParentPath: MenuPath, submenuPath: MenuPath, order?: string, when?: string }): Disposable {\n        const { newParentPath, submenuPath, order, when } = params;\n        // add a wrapper here\n        let i = 0;\n        while (i < newParentPath.length && i < submenuPath.length && newParentPath[i] === submenuPath[i]) {\n            i++;\n        }\n\n        if (i === newParentPath.length || i === submenuPath.length) {\n            throw new Error(`trying to recursively link ${JSON.stringify(submenuPath)} into ${JSON.stringify(newParentPath)}`);\n        }\n\n        const child = this.getMenu(submenuPath) as Submenu;\n        if (!child) {\n            throw new Error(`Not a menu node: ${JSON.stringify(submenuPath)}`);\n        }\n        const newParent = this.root.getOrCreate(newParentPath, 0, newParentPath.length);\n        if (MutableCompoundMenuNode.is(newParent)) {\n            const link = this.menuNodeFactory.createSubmenuLink(child, order, when);\n            newParent.addNode(link);\n            this.fireChangeEvent({\n                kind: ChangeKind.LINKED,\n                path: newParentPath,\n                affectedChildId: child.id\n            });\n            return Disposable.create(() => {\n                newParent.removeNode(link);\n                this.fireChangeEvent({\n                    kind: ChangeKind.REMOVED,\n                    path: newParentPath,\n                    affectedChildId: child.id\n                });\n            });\n        } else {\n            throw new Error(`Not a compound menu node: ${JSON.stringify(newParentPath)}`);\n        }\n    }\n\n    /**\n     * Unregister all menu nodes with the same id as the given menu action.\n     *\n     * @param item the item whose id will be used.\n     * @param menuPath if specified only nodes within the path will be unregistered.\n     */\n    unregisterMenuAction(item: MenuAction, menuPath?: MenuPath): void;\n    /**\n     * Unregister all menu nodes with the same id as the given command.\n     *\n     * @param command the command whose id will be used.\n     * @param menuPath if specified only nodes within the path will be unregistered.\n     */\n    unregisterMenuAction(command: Command, menuPath?: MenuPath): void;\n    /**\n     * Unregister all menu nodes with the given id.\n     *\n     * @param id the id which shall be removed.\n     * @param menuPath if specified only nodes within the path will be unregistered.\n     */\n    unregisterMenuAction(id: string, menuPath?: MenuPath): void;\n    unregisterMenuAction(itemOrCommandOrId: MenuAction | Command | string, menuPath: MenuPath = []): void {\n        const id = MenuAction.is(itemOrCommandOrId) ? itemOrCommandOrId.commandId\n            : Command.is(itemOrCommandOrId) ? itemOrCommandOrId.id\n                : itemOrCommandOrId;\n\n        const parent = this.findInNode(this.root, menuPath, 0);\n        if (parent) {\n            this.removeActionInSubtree(parent, id);\n        }\n    }\n\n    protected removeActionInSubtree(parent: MenuNode, id: string): void {\n        if (MutableCompoundMenuNode.is(parent) && CompoundMenuNode.is(parent)) {\n            const action = parent.children.find(child => child.id === id);\n            if (action) {\n                parent.removeNode(action);\n            }\n            parent.children.forEach(child => this.removeActionInSubtree(child, id));\n        }\n    }\n\n    protected findInNode(root: MenuNode, menuPath: MenuPath, pathIndex: number): MenuNode | undefined {\n        if (pathIndex === menuPath.length) {\n            return root;\n        }\n        if (CompoundMenuNode.is(root)) {\n            const child = root.children.find(c => c.id === menuPath[pathIndex]);\n            if (child) {\n                return this.findInNode(child, menuPath, pathIndex + 1);\n            }\n        }\n        return undefined;\n    }\n\n    getMenuNode(menuPath: string[]): MenuNode | undefined {\n        return this.findInNode(this.root, menuPath, 0);\n    }\n\n    getMenu(menuPath: MenuPath): CompoundMenuNode | undefined {\n        const node = this.getMenuNode(menuPath);\n        if (!node) {\n            return undefined;\n        }\n        if (!CompoundMenuNode.is(node)) {\n            throw new Error(`not a compound menu node: ${JSON.stringify(menuPath)}`);\n        }\n        return node;\n    }\n\n    static removeSingleRootNodes(fullMenuModel: CompoundMenuNode): CompoundMenuNode {\n        let current = fullMenuModel;\n        let previous = undefined;\n        while (current !== previous) {\n            previous = current;\n            current = this.removeSingleRootNode(current);\n        }\n        return current;\n    }\n\n    /**\n     * Checks the given menu model whether it will show a menu with a single submenu.\n     *\n     * @param fullMenuModel the menu model to analyze\n     * @param menuPath the menu's path\n     * @returns if the menu will show a single submenu this returns a menu that will show the child elements of the submenu,\n     * otherwise the given `fullMenuModel` is return\n     */\n    static removeSingleRootNode(fullMenuModel: CompoundMenuNode): CompoundMenuNode {\n\n        let singleChild = undefined;\n\n        for (const child of fullMenuModel.children) {\n            if (CompoundMenuNode.is(child)) {\n                if (!MenuModelRegistry.isEmpty(child)) {\n                    if (singleChild) {\n                        return fullMenuModel;\n                    } else {\n                        singleChild = child;\n                    }\n                }\n            } else {\n                return fullMenuModel;\n            }\n        }\n        return singleChild || fullMenuModel;\n    }\n\n    static isEmpty(node: MenuNode): boolean {\n        if (CompoundMenuNode.is(node)) {\n            if (node.children.length === 0) {\n                return true;\n            }\n            for (const child of node.children) {\n                if (!MenuModelRegistry.isEmpty(child)) {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n        return true;\n    }\n\n    protected fireChangeEvent<T extends MenuChangedEvent>(evt: T): void {\n        if (this.isReady) {\n            this.onDidChangeEmitter.fire(evt);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as path from 'path';\nimport { URI } from './types-impl';\nimport { IconUrl, PluginPackage } from '../common/plugin-protocol';\nimport { Plugin } from '../common/plugin-api-rpc';\n\nexport type PluginIconPath = string | URI | {\n    light: string | URI,\n    dark: string | URI\n};\nexport namespace PluginIconPath {\n    export function toUrl(iconPath: unknown, plugin: Plugin): IconUrl | undefined {\n        if (!is(iconPath)) {\n            return undefined;\n        }\n        if (typeof iconPath === 'object' && 'light' in iconPath) {\n            return {\n                light: asString(iconPath.light, plugin),\n                dark: asString(iconPath.dark, plugin)\n            };\n        }\n        return asString(iconPath, plugin);\n    }\n    export function is(item: unknown): item is PluginIconPath {\n        return typeof item === 'string' || item instanceof URI || typeof item === 'object' && !!item && 'light' in item && 'dark' in item;\n    }\n    export function asString(arg: string | URI, plugin: Plugin): string {\n        arg = arg instanceof URI && arg.scheme === 'file' ? arg.fsPath : arg;\n        if (typeof arg !== 'string') {\n            return arg.toString(true);\n        }\n        const { packagePath } = plugin.rawModel;\n        const absolutePath = path.isAbsolute(arg) ? arg : path.join(packagePath, arg);\n        const normalizedPath = path.normalize(absolutePath);\n        const relativePath = path.relative(packagePath, normalizedPath);\n        return PluginPackage.toPluginUrl(plugin.rawModel, relativePath);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named } from 'inversify';\nimport { Event, Emitter, WaitUntilEvent } from './event';\nimport { Disposable, DisposableCollection } from './disposable';\nimport { ContributionProvider } from './contribution-provider';\nimport { nls } from './nls';\nimport debounce = require('p-debounce');\nimport { isObject } from './types';\n\n/**\n * A command is a unique identifier of a function\n * which can be executed by a user via a keyboard shortcut,\n * a menu action or directly.\n */\nexport interface Command {\n    /**\n     * A unique identifier of this command.\n     */\n    id: string;\n    /**\n     * A label of this command.\n     */\n    label?: string;\n    originalLabel?: string;\n    /**\n     * An icon class of this command.\n     */\n    iconClass?: string;\n    /**\n     * A short title used for display in menus.\n     */\n    shortTitle?: string;\n    /**\n     * A category of this command.\n     */\n    category?: string;\n    originalCategory?: string;\n}\n\nexport namespace Command {\n    /* Determine whether object is a Command */\n    export function is(arg: unknown): arg is Command {\n        return isObject(arg) && 'id' in arg;\n    }\n\n    /** Utility function to easily translate commands */\n    export function toLocalizedCommand(command: Command, nlsLabelKey: string = command.id, nlsCategoryKey?: string): Command {\n        return {\n            ...command,\n            label: command.label && nls.localize(nlsLabelKey, command.label),\n            originalLabel: command.label,\n            category: nlsCategoryKey && command.category && nls.localize(nlsCategoryKey, command.category) || command.category,\n            originalCategory: command.category,\n        };\n    }\n\n    export function toDefaultLocalizedCommand(command: Command): Command {\n        return {\n            ...command,\n            label: command.label && nls.localizeByDefault(command.label),\n            originalLabel: command.label,\n            category: command.category && nls.localizeByDefault(command.category),\n            originalCategory: command.category,\n        };\n    }\n\n    /** Comparator function for when sorting commands */\n    export function compareCommands(a: Command, b: Command): number {\n        if (a.label && b.label) {\n            const aCommand = (a.category ? `${a.category}: ${a.label}` : a.label).toLowerCase();\n            const bCommand = (b.category ? `${b.category}: ${b.label}` : b.label).toLowerCase();\n            return (aCommand).localeCompare(bCommand);\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Determine if two commands are equal.\n     *\n     * @param a the first command for comparison.\n     * @param b the second command for comparison.\n     */\n    export function equals(a: Command, b: Command): boolean {\n        return (\n            a.id === b.id &&\n            a.label === b.label &&\n            a.iconClass === b.iconClass &&\n            a.category === b.category\n        );\n    }\n}\n\n/**\n * A command handler is an implementation of a command.\n *\n * A command can have multiple handlers\n * but they should be active in different contexts,\n * otherwise first active will be executed.\n */\nexport interface CommandHandler {\n    /**\n     * Execute this handler.\n     *\n     * Don't call it directly, use `CommandService.executeCommand` instead.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(...args: any[]): any;\n    /**\n     * Test whether this handler is enabled (active).\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEnabled?(...args: any[]): boolean;\n    onDidChangeEnabled?: Event<void>;\n    /**\n     * Test whether menu items for this handler should be visible.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isVisible?(...args: any[]): boolean;\n    /**\n     * Test whether menu items for this handler should be toggled.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isToggled?(...args: any[]): boolean;\n}\n\nexport const CommandContribution = Symbol('CommandContribution');\n/**\n * The command contribution should be implemented to register custom commands and handler.\n */\nexport interface CommandContribution {\n    /**\n     * Register commands and handlers.\n     */\n    registerCommands(commands: CommandRegistry): void;\n}\n\nexport interface CommandEvent {\n    commandId: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args: any[]\n}\n\nexport interface WillExecuteCommandEvent extends WaitUntilEvent, CommandEvent {\n}\n\nexport const commandServicePath = '/services/commands';\nexport const CommandService = Symbol('CommandService');\n/**\n * The command service should be used to execute commands.\n */\nexport interface CommandService {\n    /**\n     * Execute the active handler for the given command and arguments.\n     *\n     * Reject if a command cannot be executed.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    executeCommand<T>(command: string, ...args: any[]): Promise<T | undefined>;\n    /**\n     * An event is emitted when a command is about to be executed.\n     *\n     * It can be used to install or activate a command handler.\n     */\n    readonly onWillExecuteCommand: Event<WillExecuteCommandEvent>;\n    /**\n     * An event is emitted when a command was executed.\n     */\n    readonly onDidExecuteCommand: Event<CommandEvent>;\n}\n\n/**\n * The command registry manages commands and handlers.\n */\n@injectable()\nexport class CommandRegistry implements CommandService {\n\n    protected readonly _commands: { [id: string]: Command } = {};\n    protected readonly _handlers: { [id: string]: CommandHandler[] } = {};\n\n    protected readonly toUnregisterCommands = new Map<string, Disposable>();\n\n    // List of recently used commands.\n    protected _recent: string[] = [];\n\n    protected readonly onWillExecuteCommandEmitter = new Emitter<WillExecuteCommandEvent>();\n    readonly onWillExecuteCommand = this.onWillExecuteCommandEmitter.event;\n\n    protected readonly onDidExecuteCommandEmitter = new Emitter<CommandEvent>();\n    readonly onDidExecuteCommand = this.onDidExecuteCommandEmitter.event;\n\n    protected readonly onCommandsChangedEmitter = new Emitter<void>();\n    readonly onCommandsChanged = this.onCommandsChangedEmitter.event;\n\n    constructor(\n        @inject(ContributionProvider) @named(CommandContribution)\n        protected readonly contributionProvider: ContributionProvider<CommandContribution>\n    ) { }\n\n    onStart(): void {\n        const contributions = this.contributionProvider.getContributions();\n        for (const contrib of contributions) {\n            contrib.registerCommands(this);\n        }\n    }\n\n    *getAllCommands(): IterableIterator<Readonly<Command & { handlers: CommandHandler[] }>> {\n        for (const command of Object.values(this._commands)) {\n            yield { ...command, handlers: this._handlers[command.id] ?? [] };\n        }\n    }\n\n    /**\n     * Register the given command and handler if present.\n     *\n     * Throw if a command is already registered for the given command identifier.\n     */\n    registerCommand(command: Command, handler?: CommandHandler): Disposable {\n        if (this._commands[command.id]) {\n            console.warn(`A command ${command.id} is already registered.`);\n            return Disposable.NULL;\n        }\n        const toDispose = new DisposableCollection(this.doRegisterCommand(command));\n        if (handler) {\n            toDispose.push(this.registerHandler(command.id, handler));\n        }\n        this.toUnregisterCommands.set(command.id, toDispose);\n        toDispose.push(Disposable.create(() => this.toUnregisterCommands.delete(command.id)));\n        return toDispose;\n    }\n\n    protected doRegisterCommand(command: Command): Disposable {\n        this._commands[command.id] = command;\n        return {\n            dispose: () => {\n                delete this._commands[command.id];\n            }\n        };\n    }\n\n    /**\n     * Unregister command from the registry\n     *\n     * @param command\n     */\n    unregisterCommand(command: Command): void;\n    /**\n     * Unregister command from the registry\n     *\n     * @param id\n     */\n    unregisterCommand(id: string): void;\n    unregisterCommand(commandOrId: Command | string): void {\n        const id = Command.is(commandOrId) ? commandOrId.id : commandOrId;\n        const toUnregister = this.toUnregisterCommands.get(id);\n        if (toUnregister) {\n            toUnregister.dispose();\n        }\n    }\n\n    /**\n     * Register the given handler for the given command identifier.\n     *\n     * If there is already a handler for the given command\n     * then the given handler is registered as more specific, and\n     * has higher priority during enablement, visibility and toggle state evaluations.\n     */\n    registerHandler(commandId: string, handler: CommandHandler): Disposable {\n        let handlers = this._handlers[commandId];\n        if (!handlers) {\n            this._handlers[commandId] = handlers = [];\n        }\n        handlers.unshift(handler);\n        this.fireDidChange();\n        return {\n            dispose: () => {\n                const idx = handlers.indexOf(handler);\n                if (idx >= 0) {\n                    handlers.splice(idx, 1);\n                    this.fireDidChange();\n                }\n            }\n        };\n    }\n\n    protected fireDidChange = debounce(() => this.doFireDidChange(), 0);\n\n    protected doFireDidChange(): void {\n        this.onCommandsChangedEmitter.fire();\n    }\n\n    /**\n     * Test whether there is an active handler for the given command.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEnabled(command: string, ...args: any[]): boolean {\n        return typeof this.getActiveHandler(command, ...args) !== 'undefined';\n    }\n\n    /**\n     * Test whether there is a visible handler for the given command.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isVisible(command: string, ...args: any[]): boolean {\n        return typeof this.getVisibleHandler(command, ...args) !== 'undefined';\n    }\n\n    /**\n     * Test whether there is a toggled handler for the given command.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isToggled(command: string, ...args: any[]): boolean {\n        return typeof this.getToggledHandler(command, ...args) !== 'undefined';\n    }\n\n    /**\n     * Execute the active handler for the given command and arguments.\n     *\n     * Reject if a command cannot be executed.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async executeCommand<T>(commandId: string, ...args: any[]): Promise<T | undefined> {\n        const handler = this.getActiveHandler(commandId, ...args);\n        if (handler) {\n            await this.fireWillExecuteCommand(commandId, args);\n            const result = await handler.execute(...args);\n            this.onDidExecuteCommandEmitter.fire({ commandId, args });\n            return result;\n        }\n        throw Object.assign(new Error(`The command '${commandId}' cannot be executed. There are no active handlers available for the command.`), { code: 'NO_ACTIVE_HANDLER' });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async fireWillExecuteCommand(commandId: string, args: any[] = []): Promise<void> {\n        await WaitUntilEvent.fire(this.onWillExecuteCommandEmitter, { commandId, args }, 30000);\n    }\n\n    /**\n     * Get a visible handler for the given command or `undefined`.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getVisibleHandler(commandId: string, ...args: any[]): CommandHandler | undefined {\n        const handlers = this._handlers[commandId];\n        if (handlers) {\n            for (const handler of handlers) {\n                try {\n                    if (!handler.isVisible || handler.isVisible(...args)) {\n                        return handler;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Get an active handler for the given command or `undefined`.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getActiveHandler(commandId: string, ...args: any[]): CommandHandler | undefined {\n        const handlers = this._handlers[commandId];\n        if (handlers) {\n            for (const handler of handlers) {\n                try {\n                    if (!handler.isEnabled || handler.isEnabled(...args)) {\n                        return handler;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Get a toggled handler for the given command or `undefined`.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getToggledHandler(commandId: string, ...args: any[]): CommandHandler | undefined {\n        const handlers = this._handlers[commandId];\n        if (handlers) {\n            for (const handler of handlers) {\n                try {\n                    if (handler.isToggled && handler.isToggled(...args)) {\n                        return handler;\n                    }\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns with all handlers for the given command. If the command does not have any handlers,\n     * or the command is not registered, returns an empty array.\n     */\n    getAllHandlers(commandId: string): CommandHandler[] {\n        const handlers = this._handlers[commandId];\n        return handlers ? handlers.slice() : [];\n    }\n\n    /**\n     * Get all registered commands.\n     */\n    get commands(): Command[] {\n        return Object.values(this._commands);\n    }\n\n    /**\n     * Get a command for the given command identifier.\n     */\n    getCommand(id: string): Command | undefined {\n        return this._commands[id];\n    }\n\n    /**\n     * Get all registered commands identifiers.\n     */\n    get commandIds(): string[] {\n        return Object.keys(this._commands);\n    }\n\n    /**\n     * Get the list of recently used commands.\n     */\n    get recent(): Command[] {\n        const commands: Command[] = [];\n        for (const recentId of this._recent) {\n            const command = this.getCommand(recentId);\n            if (command) {\n                commands.push(command);\n            }\n        }\n        return commands;\n    }\n\n    /**\n     * Set the list of recently used commands.\n     * @param commands the list of recently used commands.\n     */\n    set recent(commands: Command[]) {\n        this._recent = Array.from(new Set(commands.map(e => e.id)));\n    }\n\n    /**\n     * Adds a command to recently used list.\n     * Prioritizes commands that were recently executed to be most recent.\n     *\n     * @param recent a recent command, or array of recent commands.\n     */\n    addRecentCommand(recent: Command | Command[]): void {\n        for (const recentCommand of Array.isArray(recent) ? recent : [recent]) {\n            // Determine if the command currently exists in the recently used list.\n            const index = this._recent.findIndex(commandId => commandId === recentCommand.id);\n            // If the command exists, remove it from the array so it can later be placed at the top.\n            if (index >= 0) { this._recent.splice(index, 1); }\n            // Add the recent command to the beginning of the array (most recent).\n            this._recent.unshift(recentCommand.id);\n        }\n    }\n\n    /**\n     * Clear the list of recently used commands.\n     */\n    clearCommandHistory(): void {\n        this.recent = [];\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    ProgressUpdate,\n    ProgressMessage\n} from './message-service-protocol';\nimport { CancellationToken } from './cancellation';\n\nexport const ProgressClient = Symbol('ProgressClient');\nexport interface ProgressClient {\n\n    /**\n     * Show a progress message with possible actions to user.\n     */\n    showProgress(progressId: string, message: ProgressMessage, cancellationToken: CancellationToken): Promise<string | undefined>;\n\n    /**\n     * Update a previously created progress message.\n     */\n    reportProgress(progressId: string, update: ProgressUpdate, message: ProgressMessage, cancellationToken: CancellationToken): Promise<void>;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { EvaluatableExpression } from '../../common/plugin-api-rpc-model';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\n\nexport class EvaluatableExpressionAdapter {\n\n    constructor(\n        private readonly provider: theia.EvaluatableExpressionProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    async provideEvaluatableExpression(resource: URI, position: Position, token: theia.CancellationToken): Promise<EvaluatableExpression | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document data for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const pos = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideEvaluatableExpression(document, pos, token)).then(expression => {\n            if (!expression) {\n                return undefined;\n            }\n            return Converter.fromEvaluatableExpression(expression);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DebugAdapterSessionImpl } from '@theia/debug/lib/common/debug-adapter-session';\nimport * as theia from '@theia/plugin';\nimport { DebugAdapter } from '@theia/debug/lib/common/debug-model';\nimport { DebugChannel } from '@theia/debug/lib/common/debug-service';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Server debug adapter session.\n */\nexport class PluginDebugAdapterSession extends DebugAdapterSessionImpl implements theia.DebugSession {\n\n    constructor(\n        override readonly debugAdapter: DebugAdapter,\n        protected readonly tracker: theia.DebugAdapterTracker,\n        protected readonly theiaSession: theia.DebugSession) {\n\n        super(theiaSession.id, debugAdapter);\n    }\n\n    get parentSession(): theia.DebugSession | undefined {\n        return this.theiaSession.parentSession;\n    }\n\n    get type(): string {\n        return this.theiaSession.type;\n    }\n    get name(): string {\n        return this.theiaSession.name;\n    };\n    get workspaceFolder(): theia.WorkspaceFolder | undefined {\n        return this.theiaSession.workspaceFolder;\n    };\n    get configuration(): theia.DebugConfiguration {\n        return this.theiaSession.configuration;\n    };\n\n    override async start(channel: DebugChannel): Promise<void> {\n        if (this.tracker.onWillStartSession) {\n            this.tracker.onWillStartSession();\n        }\n        await super.start(channel);\n    }\n\n    override async stop(): Promise<void> {\n        if (this.tracker.onWillStopSession) {\n            this.tracker.onWillStopSession();\n        }\n        await super.stop();\n    }\n\n    async customRequest(command: string, args?: any): Promise<any> {\n        return this.theiaSession.customRequest(command, args);\n    }\n\n    async getDebugProtocolBreakpoint(breakpoint: theia.Breakpoint): Promise<theia.DebugProtocolBreakpoint | undefined> {\n        return this.theiaSession.getDebugProtocolBreakpoint(breakpoint);\n    }\n\n    protected override onDebugAdapterError(error: Error): void {\n        if (this.tracker.onError) {\n            this.tracker.onError(error);\n        }\n        super.onDebugAdapterError(error);\n    }\n\n    protected override send(message: string): void {\n        try {\n            super.send(message);\n        } finally {\n            if (this.tracker.onDidSendMessage) {\n                this.tracker.onDidSendMessage(JSON.parse(message));\n            }\n        }\n    }\n\n    protected override write(message: string): void {\n        if (this.tracker.onWillReceiveMessage) {\n            this.tracker.onWillReceiveMessage(JSON.parse(message));\n        }\n        super.write(message);\n    }\n\n    protected override onDebugAdapterExit(): void {\n        if (this.tracker.onExit) {\n            this.tracker.onExit(undefined, undefined);\n        }\n        super.onDebugAdapterExit();\n    }\n}\n","/********************************************************************************\n* Copyright (c) 2021 STMicroelectronics and others.\n*\n* This program and the accompanying materials are made available under the\n* terms of the Eclipse Public License 2.0 which is available at\n* http://www.eclipse.org/legal/epl-2.0.\n*\n* This Source Code may also be made available under the following Secondary\n* Licenses when the conditions for such availability set forth in the Eclipse\n* Public License v. 2.0 are satisfied: GNU General Public License, version 2\n* with the GNU Classpath Exception which is available at\n* https://www.gnu.org/software/classpath/license.html.\n*\n* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n*******************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, unmanaged } from 'inversify';\nimport { ILogger, LogLevel } from '../logger';\nimport { MaybePromise } from '../types';\nimport { Measurement, MeasurementOptions, MeasurementResult } from './measurement';\nimport { Emitter, Event } from '../event';\n\n/** The default log level for measurements that are not otherwise configured with a default. */\nconst DEFAULT_LOG_LEVEL = LogLevel.INFO;\n\n/**\n * Configuration of the log messages written by a {@link Measurement}.\n */\ninterface LogOptions extends MeasurementOptions {\n    /** A function that computes the current time, in millis, since the start of the application. */\n    now: () => number;\n\n    /** An optional label for the application the start of which (in real time) is the basis of all measurements. */\n    owner?: string;\n\n    /** An optional log level to override any default or dynamic log level for a specific log message. */\n    levelOverride?: LogLevel;\n\n    /** Optional arguments to the log message. The 'optionalArgs' coming in from the {@link Measurement} API are slotted in here. */\n    arguments?: any[];\n}\n\n/**\n * A factory of {@link Measurement}s for performance logging.\n */\n@injectable()\nexport abstract class Stopwatch {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    protected _storedMeasurements: MeasurementResult[] = [];\n\n    protected onDidAddMeasurementResultEmitter = new Emitter<MeasurementResult>();\n    get onDidAddMeasurementResult(): Event<MeasurementResult> {\n        return this.onDidAddMeasurementResultEmitter.event;\n    }\n\n    constructor(@unmanaged() protected readonly defaultLogOptions: LogOptions) {\n        if (!defaultLogOptions.defaultLogLevel) {\n            defaultLogOptions.defaultLogLevel = DEFAULT_LOG_LEVEL;\n        }\n        if (defaultLogOptions.storeResults === undefined) {\n            defaultLogOptions.storeResults = true;\n        }\n    }\n\n    /**\n     * Create a {@link Measurement} that will compute its elapsed time when logged.\n     *\n     * @param name the {@link Measurement.name measurement name}\n     * @param options optional configuration of the new measurement\n     * @returns a self-timing measurement\n     */\n    public abstract start(name: string, options?: MeasurementOptions): Measurement;\n\n    /**\n     * Wrap an asynchronous function in a {@link Measurement} that logs itself on completion.\n     * If obtaining and awaiting the `computation` runs too long according to the threshold\n     * set in the `options`, then the log message is a warning, otherwise a debug log.\n     *\n     * @param name the {@link Measurement.name name of the measurement} to wrap around the function\n     * @param description a description of what the function does, to be included in the log\n     * @param computation a supplier of the asynchronous function to wrap\n     * @param options optional addition configuration as for {@link measure}\n     * @returns the wrapped `computation`\n     *\n     * @see {@link MeasurementOptions.thresholdMillis}\n     */\n    public async startAsync<T>(name: string, description: string, computation: () => MaybePromise<T>, options?: MeasurementOptions): Promise<T> {\n        const threshold = options?.thresholdMillis ?? Number.POSITIVE_INFINITY;\n\n        const measure = this.start(name, options);\n        const result = await computation();\n        if (measure.stop() > threshold) {\n            measure.warn(`${description} took longer than the expected maximum ${threshold} milliseconds`);\n        } else {\n            measure.log(description);\n        }\n        return result;\n    }\n\n    protected createMeasurement(name: string, measure: () => { startTime: number, duration: number }, options?: MeasurementOptions): Measurement {\n        const logOptions = this.mergeLogOptions(options);\n\n        const measurement: Measurement = {\n            name,\n            stop: () => {\n                if (measurement.elapsed === undefined) {\n                    const { startTime, duration } = measure();\n                    measurement.elapsed = duration;\n                    const result: MeasurementResult = {\n                        name,\n                        elapsed: duration,\n                        startTime,\n                        owner: logOptions.owner\n                    };\n                    if (logOptions.storeResults) {\n                        this._storedMeasurements.push(result);\n                    }\n                    this.onDidAddMeasurementResultEmitter.fire(result);\n                }\n                return measurement.elapsed;\n            },\n            log: (activity: string, ...optionalArgs: any[]) => this.log(measurement, activity, this.atLevel(logOptions, undefined, optionalArgs)),\n            debug: (activity: string, ...optionalArgs: any[]) => this.log(measurement, activity, this.atLevel(logOptions, LogLevel.DEBUG, optionalArgs)),\n            info: (activity: string, ...optionalArgs: any[]) => this.log(measurement, activity, this.atLevel(logOptions, LogLevel.INFO, optionalArgs)),\n            warn: (activity: string, ...optionalArgs: any[]) => this.log(measurement, activity, this.atLevel(logOptions, LogLevel.WARN, optionalArgs)),\n            error: (activity: string, ...optionalArgs: any[]) => this.log(measurement, activity, this.atLevel(logOptions, LogLevel.ERROR, optionalArgs)),\n        };\n\n        return measurement;\n    }\n\n    protected mergeLogOptions(logOptions?: Partial<LogOptions>): LogOptions {\n        const result: LogOptions = { ...this.defaultLogOptions };\n        if (logOptions) {\n            Object.assign(result, logOptions);\n        }\n        return result;\n    }\n\n    protected atLevel(logOptions: LogOptions, levelOverride?: LogLevel, optionalArgs?: any[]): LogOptions {\n        return { ...logOptions, levelOverride, arguments: optionalArgs };\n    }\n\n    protected logLevel(elapsed: number, options?: Partial<LogOptions>): LogLevel {\n        if (options?.levelOverride) {\n            return options.levelOverride;\n        }\n\n        return options?.defaultLogLevel ?? this.defaultLogOptions.defaultLogLevel ?? DEFAULT_LOG_LEVEL;\n    }\n\n    protected log(measurement: Measurement, activity: string, options: LogOptions): void {\n        const elapsed = measurement.stop();\n        const level = this.logLevel(elapsed, options);\n\n        if (Number.isNaN(elapsed)) {\n            switch (level) {\n                case LogLevel.ERROR:\n                case LogLevel.FATAL:\n                    // Always log errors, even if NaN duration from native API preventing a measurement\n                    break;\n                default:\n                    // Measurement was prevented by native API, do not log NaN duration\n                    return;\n            }\n        }\n\n        const start = options.owner ? `${options.owner} start` : 'start';\n        const timeFromStart = `Finished ${(options.now() / 1000).toFixed(3)} s after ${start}`;\n        const whatWasMeasured = options.context ? `[${options.context}] ${activity}` : activity;\n        this.logger.log(level, `${whatWasMeasured}: ${elapsed.toFixed(1)} ms [${timeFromStart}]`, ...(options.arguments ?? []));\n    }\n\n    get storedMeasurements(): ReadonlyArray<MeasurementResult> {\n        return this._storedMeasurements;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from '../common/event';\n\n/**\n * `SelectionProvider` is implemented by services to notify listeners about selection changes.\n */\nexport interface SelectionProvider<T> {\n    onSelectionChanged: Event<T | undefined>;\n}\n\n/**\n * Singleton service that is used to share the current selection globally in a Theia application.\n * On each change of selection, subscribers are notified and receive the updated selection object.\n */\n@injectable()\nexport class SelectionService implements SelectionProvider<Object | undefined> {\n\n    private currentSelection: Object | undefined;\n\n    protected readonly onSelectionChangedEmitter = new Emitter<any>();\n    readonly onSelectionChanged: Event<any> = this.onSelectionChangedEmitter.event;\n\n    get selection(): Object | undefined {\n        return this.currentSelection;\n    }\n\n    set selection(selection: Object | undefined) {\n        this.currentSelection = selection;\n        this.onSelectionChangedEmitter.fire(this.currentSelection);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as theia from '@theia/plugin';\nimport { NotebookDocument } from './notebook-document';\n\nexport class NotebookEditor {\n\n    public static readonly apiEditorsToExtHost = new WeakMap<theia.NotebookEditor, NotebookEditor>();\n\n    private selections: theia.NotebookRange[] = [];\n    private visibleRanges: theia.NotebookRange[] = [];\n    private viewColumn?: theia.ViewColumn;\n\n    private internalVisible: boolean = false;\n\n    private editor?: theia.NotebookEditor;\n\n    constructor(\n        readonly id: string,\n        // private readonly _proxy: MainThreadNotebookEditorsShape,\n        readonly notebookData: NotebookDocument,\n        visibleRanges: theia.NotebookRange[],\n        selections: theia.NotebookRange[],\n        viewColumn: theia.ViewColumn | undefined\n    ) {\n        this.selections = selections;\n        this.visibleRanges = visibleRanges;\n        this.viewColumn = viewColumn;\n    }\n\n    get apiEditor(): theia.NotebookEditor {\n        if (!this.editor) {\n            const that = this;\n            this.editor = {\n                get notebook(): theia.NotebookDocument {\n                    return that.notebookData.apiNotebook;\n                },\n                get selection(): theia.NotebookRange {\n                    return that.selections[0];\n                },\n                set selection(selection: theia.NotebookRange) {\n                    this.selections = [selection];\n                },\n                get selections(): theia.NotebookRange[] {\n                    return that.selections;\n                },\n                set selections(value: theia.NotebookRange[]) {\n                    // if (!Array.isArray(value) || !value.every(extHostTypes.NotebookRange.isNotebookRange)) {\n                    //     throw illegalArgument('selections');\n                    // }\n                    that.selections = value;\n                    that.trySetSelections(value);\n                },\n                get visibleRanges(): theia.NotebookRange[] {\n                    return that.visibleRanges;\n                },\n                revealRange(range, revealType): void {\n                    // that._proxy.$tryRevealRange(\n                    //     that.id,\n                    //     extHostConverter.NotebookRange.from(range),\n                    //     revealType ?? extHostTypes.NotebookEditorRevealType.Default\n                    // );\n                },\n                get viewColumn(): theia.ViewColumn | undefined {\n                    return that.viewColumn;\n                },\n            };\n\n            NotebookEditor.apiEditorsToExtHost.set(this.editor, this);\n        }\n        return this.editor;\n    }\n\n    get visible(): boolean {\n        return this.internalVisible;\n    }\n\n    acceptVisibility(value: boolean): void {\n        this.internalVisible = value;\n    }\n\n    acceptVisibleRanges(value: theia.NotebookRange[]): void {\n        this.visibleRanges = value;\n    }\n\n    acceptSelections(selections: theia.NotebookRange[]): void {\n        this.selections = selections;\n    }\n\n    private trySetSelections(value: theia.NotebookRange[]): void {\n        // NB Unimplemented: implement \"selections\"\n        // this._proxy.$trySetSelections(this.id, value.map(extHostConverter.NotebookRange.from));\n    }\n\n    acceptViewColumn(value: theia.ViewColumn | undefined): void {\n        this.viewColumn = value;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport {\n    DecorationData,\n    DecorationReply,\n    DecorationRequest,\n    DecorationsExt,\n    DecorationsMain,\n    PLUGIN_RPC_CONTEXT, PluginInfo\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Disposable, FileDecoration, URI } from './types-impl';\nimport { CancellationToken } from '@theia/core/lib/common';\nimport { dirname } from 'path';\nimport { PluginLogger } from './logger';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.52.1/src/vs/workbench/api/common/extHostDecorations.ts#L39-L38\n\ninterface ProviderData {\n    provider: theia.FileDecorationProvider;\n    pluginInfo: PluginInfo;\n}\n\nexport class DecorationsExtImpl implements DecorationsExt {\n    private static handle = 0;\n    private static maxEventSize = 250;\n\n    private readonly providersMap: Map<number, ProviderData>;\n    private readonly proxy: DecorationsMain;\n    private readonly logger: PluginLogger;\n\n    constructor(readonly rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.DECORATIONS_MAIN);\n        this.logger = new PluginLogger(rpc, 'decorations-plugin');\n        this.providersMap = new Map();\n    }\n\n    registerFileDecorationProvider(provider: theia.FileDecorationProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const handle = DecorationsExtImpl.handle++;\n        this.providersMap.set(handle, { provider, pluginInfo });\n        this.proxy.$registerDecorationProvider(handle);\n\n        const listener = provider.onDidChangeFileDecorations && provider.onDidChangeFileDecorations(e => {\n            if (!e) {\n                this.proxy.$onDidChange(handle, null);\n                return;\n            }\n            const array = Array.isArray(e) ? e : [e];\n            if (array.length <= DecorationsExtImpl.maxEventSize) {\n                this.proxy.$onDidChange(handle, array);\n                return;\n            }\n\n            // too many resources per event. pick one resource per folder, starting\n            // with parent folders\n            const mapped = array.map(uri => ({ uri, rank: (uri.path.match(/\\//g) || []).length }));\n            const groups = groupBy(mapped, (a, b) => a.rank - b.rank);\n            const picked: URI[] = [];\n            outer: for (const uris of groups) {\n                let lastDirname: string | undefined;\n                for (const obj of uris) {\n                    const myDirname = dirname(obj.uri.path);\n                    if (lastDirname !== myDirname) {\n                        lastDirname = myDirname;\n                        if (picked.push(obj.uri) >= DecorationsExtImpl.maxEventSize) {\n                            break outer;\n                        }\n                    }\n                }\n            }\n            this.proxy.$onDidChange(handle, picked);\n        });\n\n        return new Disposable(() => {\n            listener?.dispose();\n            this.proxy.$unregisterDecorationProvider(handle);\n            this.providersMap.delete(handle);\n        });\n\n        function groupBy<T>(data: ReadonlyArray<T>, compareFn: (a: T, b: T) => number): T[][] {\n            const result: T[][] = [];\n            let currentGroup: T[] | undefined = undefined;\n            for (const element of data.slice(0).sort(compareFn)) {\n                if (!currentGroup || compareFn(currentGroup[0], element) !== 0) {\n                    currentGroup = [element];\n                    result.push(currentGroup);\n                } else {\n                    currentGroup.push(element);\n                }\n            }\n            return result;\n        }\n    }\n\n    async $provideDecorations(handle: number, requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply> {\n        if (!this.providersMap.has(handle)) {\n            // might have been unregistered in the meantime\n            return Object.create(null);\n        }\n\n        const result: DecorationReply = Object.create(null);\n        const { provider, pluginInfo } = this.providersMap.get(handle)!;\n\n        await Promise.all(requests.map(async request => {\n            try {\n                const { uri, id } = request;\n                const data = await Promise.resolve(provider.provideFileDecoration(URI.revive(uri), token));\n                if (!data) {\n                    return;\n                }\n                try {\n                    FileDecoration.validate(data);\n                    result[id] = <DecorationData>[data.propagate, data.tooltip, data.badge, data.color];\n                } catch (e) {\n                    this.logger.warn(`INVALID decoration from extension '${pluginInfo.name}': ${e}`);\n                }\n            } catch (err) {\n                this.logger.error(err);\n            }\n        }));\n\n        return result;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Word inside a model.\n */\nexport interface WordAtPosition {\n    /**\n     * The word.\n     */\n    readonly word: string;\n    /**\n     * The column where the word starts.\n     */\n    readonly startColumn: number;\n    /**\n     * The column where the word ends.\n     */\n    readonly endColumn: number;\n}\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (let i = 0; i < USUAL_WORD_SEPARATORS.length; i++) {\n        if (allowInWords.indexOf(USUAL_WORD_SEPARATORS[i]) >= 0) {\n            continue;\n        }\n        source += '\\\\' + USUAL_WORD_SEPARATORS[i];\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp): RegExp {\n    let result: RegExp = DEFAULT_WORD_REGEXP;\n\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        } else {\n            result = wordDefinition;\n        }\n    }\n\n    result.lastIndex = 0;\n\n    return result;\n}\n\nfunction getWordAtPosFast(column: number, wordDefinition: RegExp, text: string, textOffset: number): WordAtPosition | undefined {\n    // find whitespace enclosed text around column and match from there\n\n    const pos = column - 1 - textOffset;\n    const start = text.lastIndexOf(' ', pos - 1) + 1;\n    let end = text.indexOf(' ', pos);\n    if (end === -1) {\n        end = text.length;\n    }\n\n    wordDefinition.lastIndex = start;\n    let match: RegExpMatchArray | null;\n    while (match = wordDefinition.exec(text)) {\n        if (match.index! <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index!,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n\n    return undefined;\n}\n\nfunction getWordAtPosSlow(column: number, wordDefinition: RegExp, text: string, textOffset: number): WordAtPosition | undefined {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n\n    const pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n\n    let match: RegExpMatchArray | null;\n    while (match = wordDefinition.exec(text)) {\n\n        if (match.index! > pos) {\n            // |nW -> matched only after the pos\n            return undefined;\n\n        } else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + match.index!,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n\n    return undefined;\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number): WordAtPosition | undefined {\n\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    const match = wordDefinition.exec(text);\n    if (!match) {\n        return undefined;\n    }\n    // todo@joh the `match` could already be the (first) word\n    const ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n\n    return ret;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const THEIA_VERSION: string = require('../../package.json').version;\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CallHierarchyIncomingCall, CallHierarchyItem, CallHierarchyOutgoingCall } from '@theia/callhierarchy/lib/browser';\nimport * as languageProtocol from '@theia/core/shared/vscode-languageserver-protocol';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { TypeHierarchyItem } from '@theia/typehierarchy/lib/browser';\nimport * as rpc from '../../../common/plugin-api-rpc';\nimport * as model from '../../../common/plugin-api-rpc-model';\nimport { UriComponents } from '../../../common/uri-components';\n\nexport function toUriComponents(uri: string): UriComponents {\n    return URI.parse(uri);\n}\n\nexport function fromUriComponents(uri: UriComponents): string {\n    return URI.revive(uri).toString();\n}\n\nexport function fromLocation(location: languageProtocol.Location): model.Location {\n    return <model.Location>{\n        uri: URI.parse(location.uri),\n        range: fromRange(location.range)\n    };\n}\n\nexport function toLocation(uri: UriComponents, range: model.Range): languageProtocol.Location {\n    return {\n        uri: URI.revive(uri).toString(),\n        range: toRange(range)\n    };\n}\n\nexport function fromPosition(position: languageProtocol.Position): rpc.Position {\n    return <rpc.Position>{\n        lineNumber: position.line,\n        column: position.character\n    };\n}\n\nexport function fromRange(range: languageProtocol.Range): model.Range {\n    const { start, end } = range;\n    return {\n        startLineNumber: start.line + 1,\n        startColumn: start.character + 1,\n        endLineNumber: end.line + 1,\n        endColumn: end.character + 1,\n    };\n}\n\nexport function toRange(range: model.Range): languageProtocol.Range {\n    return languageProtocol.Range.create(\n        range.startLineNumber - 1,\n        range.startColumn - 1,\n        range.endLineNumber - 1,\n        range.endColumn - 1,\n    );\n}\n\nexport namespace SymbolKindConverter {\n    export function fromSymbolKind(kind: languageProtocol.SymbolKind): model.SymbolKind {\n        switch (kind) {\n            case languageProtocol.SymbolKind.File: return model.SymbolKind.File;\n            case languageProtocol.SymbolKind.Module: return model.SymbolKind.Module;\n            case languageProtocol.SymbolKind.Namespace: return model.SymbolKind.Namespace;\n            case languageProtocol.SymbolKind.Package: return model.SymbolKind.Package;\n            case languageProtocol.SymbolKind.Class: return model.SymbolKind.Class;\n            case languageProtocol.SymbolKind.Method: return model.SymbolKind.Method;\n            case languageProtocol.SymbolKind.Property: return model.SymbolKind.Property;\n            case languageProtocol.SymbolKind.Field: return model.SymbolKind.Field;\n            case languageProtocol.SymbolKind.Constructor: return model.SymbolKind.Constructor;\n            case languageProtocol.SymbolKind.Enum: return model.SymbolKind.Enum;\n            case languageProtocol.SymbolKind.Interface: return model.SymbolKind.Interface;\n            case languageProtocol.SymbolKind.Function: return model.SymbolKind.Function;\n            case languageProtocol.SymbolKind.Variable: return model.SymbolKind.Variable;\n            case languageProtocol.SymbolKind.Constant: return model.SymbolKind.Constant;\n            case languageProtocol.SymbolKind.String: return model.SymbolKind.String;\n            case languageProtocol.SymbolKind.Number: return model.SymbolKind.Number;\n            case languageProtocol.SymbolKind.Boolean: return model.SymbolKind.Boolean;\n            case languageProtocol.SymbolKind.Array: return model.SymbolKind.Array;\n            case languageProtocol.SymbolKind.Object: return model.SymbolKind.Object;\n            case languageProtocol.SymbolKind.Key: return model.SymbolKind.Key;\n            case languageProtocol.SymbolKind.Null: return model.SymbolKind.Null;\n            case languageProtocol.SymbolKind.EnumMember: return model.SymbolKind.EnumMember;\n            case languageProtocol.SymbolKind.Struct: return model.SymbolKind.Struct;\n            case languageProtocol.SymbolKind.Event: return model.SymbolKind.Event;\n            case languageProtocol.SymbolKind.Operator: return model.SymbolKind.Operator;\n            case languageProtocol.SymbolKind.TypeParameter: return model.SymbolKind.TypeParameter;\n            default: return model.SymbolKind.Property;\n        }\n    }\n    export function toSymbolKind(kind: model.SymbolKind): languageProtocol.SymbolKind {\n        switch (kind) {\n            case model.SymbolKind.File: return languageProtocol.SymbolKind.File;\n            case model.SymbolKind.Module: return languageProtocol.SymbolKind.Module;\n            case model.SymbolKind.Namespace: return languageProtocol.SymbolKind.Namespace;\n            case model.SymbolKind.Package: return languageProtocol.SymbolKind.Package;\n            case model.SymbolKind.Class: return languageProtocol.SymbolKind.Class;\n            case model.SymbolKind.Method: return languageProtocol.SymbolKind.Method;\n            case model.SymbolKind.Property: return languageProtocol.SymbolKind.Property;\n            case model.SymbolKind.Field: return languageProtocol.SymbolKind.Field;\n            case model.SymbolKind.Constructor: return languageProtocol.SymbolKind.Constructor;\n            case model.SymbolKind.Enum: return languageProtocol.SymbolKind.Enum;\n            case model.SymbolKind.Interface: return languageProtocol.SymbolKind.Interface;\n            case model.SymbolKind.Function: return languageProtocol.SymbolKind.Function;\n            case model.SymbolKind.Variable: return languageProtocol.SymbolKind.Variable;\n            case model.SymbolKind.Constant: return languageProtocol.SymbolKind.Constant;\n            case model.SymbolKind.String: return languageProtocol.SymbolKind.String;\n            case model.SymbolKind.Number: return languageProtocol.SymbolKind.Number;\n            case model.SymbolKind.Boolean: return languageProtocol.SymbolKind.Boolean;\n            case model.SymbolKind.Array: return languageProtocol.SymbolKind.Array;\n            case model.SymbolKind.Object: return languageProtocol.SymbolKind.Object;\n            case model.SymbolKind.Key: return languageProtocol.SymbolKind.Key;\n            case model.SymbolKind.Null: return languageProtocol.SymbolKind.Null;\n            case model.SymbolKind.EnumMember: return languageProtocol.SymbolKind.EnumMember;\n            case model.SymbolKind.Struct: return languageProtocol.SymbolKind.Struct;\n            case model.SymbolKind.Event: return languageProtocol.SymbolKind.Event;\n            case model.SymbolKind.Operator: return languageProtocol.SymbolKind.Operator;\n            case model.SymbolKind.TypeParameter: return languageProtocol.SymbolKind.TypeParameter;\n            default: return languageProtocol.SymbolKind.Property;\n        }\n    }\n}\n\nexport function toItemHierarchyDefinition(modelItem: model.HierarchyItem): TypeHierarchyItem | CallHierarchyItem {\n    return {\n        ...modelItem,\n        kind: SymbolKindConverter.toSymbolKind(modelItem.kind),\n        range: toRange(modelItem.range),\n        selectionRange: toRange(modelItem.selectionRange),\n    };\n}\n\nexport function fromItemHierarchyDefinition(definition: TypeHierarchyItem | CallHierarchyItem): model.HierarchyItem {\n    return {\n        ...definition,\n        kind: SymbolKindConverter.fromSymbolKind(definition.kind),\n        range: fromRange(definition.range),\n        selectionRange: fromRange(definition.range),\n    };\n}\n\nexport function toCaller(caller: model.CallHierarchyIncomingCall): CallHierarchyIncomingCall {\n    return {\n        from: toItemHierarchyDefinition(caller.from),\n        fromRanges: caller.fromRanges.map(toRange)\n    };\n}\n\nexport function fromCaller(caller: CallHierarchyIncomingCall): model.CallHierarchyIncomingCall {\n    return {\n        from: fromItemHierarchyDefinition(caller.from),\n        fromRanges: caller.fromRanges.map(fromRange)\n    };\n}\n\nexport function toCallee(callee: model.CallHierarchyOutgoingCall): CallHierarchyOutgoingCall {\n    return {\n        to: toItemHierarchyDefinition(callee.to),\n        fromRanges: callee.fromRanges.map(toRange),\n    };\n}\n\nexport function fromCallHierarchyCallerToModelCallHierarchyIncomingCall(caller: CallHierarchyIncomingCall): model.CallHierarchyIncomingCall {\n    return {\n        from: fromItemHierarchyDefinition(caller.from),\n        fromRanges: caller.fromRanges.map(fromRange),\n    };\n}\n\nexport function fromCallHierarchyCalleeToModelCallHierarchyOutgoingCall(callee: CallHierarchyOutgoingCall): model.CallHierarchyOutgoingCall {\n    return {\n        to: fromItemHierarchyDefinition(callee.to),\n        fromRanges: callee.fromRanges.map(fromRange),\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2025 ST Microelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable } from './disposable';\n\n/**\n * Ths code in this file implements a list of listeners that can be invoked sequentially with a callback to handle\n * the results of the listener invocation.\n */\n\ntype Listener<T, U> = (e: T) => U;\ninterface ListenerRegistration<T, U> {\n    id: number,\n    listener: Listener<T, U>;\n}\n\nexport namespace Listener {\n    export type Registration<T, U = void> = (listener: (e: T) => U) => Disposable;\n    export const None: Registration<void, void> = () => Disposable.NULL;\n\n    /**\n     * Convenience function to await all listener invocations\n     * @param value The value to invoke the listeners with\n     * @param list the listener list to invoke\n     * @returns the return values from the listener invocation\n     */\n    export async function await<T, U>(value: T, list: ListenerList<T, Promise<U>>): Promise<U[]> {\n        const promises: Promise<U>[] = [];\n        list.invoke(value, promise => {\n            promises.push(promise);\n        });\n        return await Promise.all(promises);\n    }\n}\n\nexport class ListenerList<T, U> {\n    private listeners: ListenerRegistration<T, U> | (ListenerRegistration<T, U>)[] | undefined;\n    private registeredCount = 1; // start at 1 to prevent falsy madness\n\n    registration: Listener.Registration<T, U> = this.register.bind(this);\n\n    private register(listener: Listener<T, U>): Disposable {\n        const reg: ListenerRegistration<T, U> = { id: this.registeredCount++, listener };\n        if (!this.listeners) {\n            this.listeners = reg;\n        } else if (Array.isArray(this.listeners)) {\n            this.listeners.push(reg as ListenerRegistration<T, U>);\n        } else {\n            this.listeners = [this.listeners, reg];\n        }\n        return Disposable.create(() => {\n            this.remove(reg.id);\n        });\n    }\n    private remove(id: number): void {\n        if (Array.isArray(this.listeners)) {\n            const index = this.listeners.findIndex(v => v.id === id);\n            if (index >= 0) {\n                this.listeners.splice(index, 1);\n            }\n        } else if (this.listeners && this.listeners.id === id) {\n            this.listeners = undefined;\n        }\n    }\n\n    invoke(e: T, callback: (value: U) => void): void {\n        if (Array.isArray(this.listeners)) {\n            for (const l of this.listeners) {\n                callback(l.listener(e));\n            }\n        } else if (this.listeners) {\n            callback(this.listeners.listener(e));\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { cloneAndChange } from '@theia/core';\nimport { mixin } from '../common/types';\nimport { TelemetryTrustedValue, TelemetryLoggerOptions } from './types-impl';\n\nexport class TelemetryExtImpl {\n\n    _isTelemetryEnabled: boolean = false; // telemetry not activated by default\n    private readonly onDidChangeTelemetryEnabledEmitter = new Emitter<boolean>();\n    readonly onDidChangeTelemetryEnabled: Event<boolean> = this.onDidChangeTelemetryEnabledEmitter.event;\n\n    get isTelemetryEnabled(): boolean {\n        return this._isTelemetryEnabled;\n    }\n\n    set isTelemetryEnabled(isTelemetryEnabled: boolean) {\n        if (this._isTelemetryEnabled !== isTelemetryEnabled) {\n            this._isTelemetryEnabled = isTelemetryEnabled;\n            this.onDidChangeTelemetryEnabledEmitter.fire(this._isTelemetryEnabled);\n        }\n    }\n\n    createTelemetryLogger(sender: TelemetrySender, options?: TelemetryLoggerOptions | undefined): TelemetryLogger {\n        const logger = new TelemetryLogger(sender, this._isTelemetryEnabled, options);\n        this.onDidChangeTelemetryEnabled(isEnabled => {\n            logger.telemetryEnabled = isEnabled;\n        });\n        return logger;\n    }\n}\n\nexport class TelemetryLogger {\n    private sender: TelemetrySender | undefined;\n    readonly options: TelemetryLoggerOptions | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly commonProperties: Record<string, any>;\n    telemetryEnabled: boolean;\n\n    private readonly onDidChangeEnableStatesEmitter: Emitter<TelemetryLogger> = new Emitter();\n    readonly onDidChangeEnableStates: Event<TelemetryLogger> = this.onDidChangeEnableStatesEmitter.event;\n    private _isUsageEnabled: boolean;\n    private _isErrorsEnabled: boolean;\n\n    constructor(sender: TelemetrySender, telemetryEnabled: boolean, options?: TelemetryLoggerOptions) {\n        this.sender = sender;\n        this.options = options;\n        this.commonProperties = this.getCommonProperties();\n        this._isErrorsEnabled = true;\n        this._isUsageEnabled = true;\n        this.telemetryEnabled = telemetryEnabled;\n    }\n\n    get isUsageEnabled(): boolean {\n        return this._isUsageEnabled;\n    }\n\n    set isUsageEnabled(isUsageEnabled: boolean) {\n        if (this._isUsageEnabled !== isUsageEnabled) {\n            this._isUsageEnabled = isUsageEnabled;\n            this.onDidChangeEnableStatesEmitter.fire(this);\n        }\n    }\n\n    get isErrorsEnabled(): boolean {\n        return this._isErrorsEnabled;\n    }\n\n    set isErrorsEnabled(isErrorsEnabled: boolean) {\n        if (this._isErrorsEnabled !== isErrorsEnabled) {\n            this._isErrorsEnabled = isErrorsEnabled;\n            this.onDidChangeEnableStatesEmitter.fire(this);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logUsage(eventName: string, data?: Record<string, any | TelemetryTrustedValue<any>>): void {\n        if (!this.telemetryEnabled || !this.isUsageEnabled) {\n            return;\n        }\n        this.logEvent(eventName, data);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logError(eventNameOrException: string | Error, data?: Record<string, any | TelemetryTrustedValue<any>>): void {\n        if (!this.telemetryEnabled || !this.isErrorsEnabled || !this.sender) {\n            // no sender available or error shall not be sent\n            return;\n        }\n        if (typeof eventNameOrException === 'string') {\n            this.logEvent(eventNameOrException, data);\n        } else {\n            this.sender.sendErrorData(eventNameOrException, data);\n        }\n    }\n\n    dispose(): void {\n        if (this.sender?.flush) {\n            let tempSender: TelemetrySender | undefined = this.sender;\n            this.sender = undefined;\n            Promise.resolve(tempSender.flush!()).then(tempSender = undefined);\n        } else {\n            this.sender = undefined;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private logEvent(eventName: string, data?: Record<string, any>): void {\n        // No sender means likely disposed of, we should no-op\n        if (!this.sender) {\n            return;\n        }\n        data = mixInCommonPropsAndCleanData(data || {}, this.options?.additionalCommonProperties, this.options?.ignoreBuiltInCommonProperties ? undefined : this.commonProperties);\n        this.sender?.sendEventData(eventName, data);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private getCommonProperties(): Record<string, any> {\n        return [];\n    }\n}\n\ninterface TelemetrySender {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendEventData(eventName: string, data?: Record<string, any>): void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendErrorData(error: Error, data?: Record<string, any>): void;\n    flush?(): void | Thenable<void>;\n}\n\n// copied and modified from https://github.com/microsoft/vscode/blob/1.76.0/src/vs/workbench/api/common/extHostTelemetry.ts\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction mixInCommonPropsAndCleanData(data: Record<string, any>, additionalProperties?: Record<string, any>, commonProperties?: Record<string, any>): Record<string, any> {\n    let updatedData = data.properties ?? data;\n\n    // We don't clean measurements since they are just numbers\n    updatedData = cleanData(updatedData, []);\n\n    if (additionalProperties) {\n        updatedData = mixin(updatedData, additionalProperties);\n    }\n\n    if (commonProperties) {\n        updatedData = mixin(updatedData, commonProperties);\n    }\n\n    if (data.properties) {\n        data.properties = updatedData;\n    } else {\n        data = updatedData;\n    }\n\n    return data;\n}\n\n// copied and modified from https://github.com/microsoft/vscode/blob/1.76.0/src/vs/platform/telemetry/common/telemetryUtils.ts#L321-L442\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Cleans a given stack of possible paths\n * @param stack The stack to sanitize\n * @param cleanupPatterns Cleanup patterns to remove from the stack\n * @returns The cleaned stack\n */\nfunction anonymizeFilePaths(stack: string, cleanupPatterns: RegExp[]): string {\n\n    // Fast check to see if it is a file path to avoid doing unnecessary heavy regex work\n    if (!stack || (!stack.includes('/') && !stack.includes('\\\\'))) {\n        return stack;\n    }\n\n    let updatedStack = stack;\n\n    const cleanUpIndexes: [number, number][] = [];\n    for (const regexp of cleanupPatterns) {\n        while (true) {\n            const result = regexp.exec(stack);\n            if (!result) {\n                break;\n            }\n            cleanUpIndexes.push([result.index, regexp.lastIndex]);\n        }\n    }\n\n    const nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n    const fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n    let lastIndex = 0;\n    updatedStack = '';\n\n    while (true) {\n        const result = fileRegex.exec(stack);\n        if (!result) {\n            break;\n        }\n\n        // Check to see if the any cleanupIndexes partially overlap with this match\n        const overlappingRange = cleanUpIndexes.some(([start, end]) => result.index < end && start < fileRegex.lastIndex);\n\n        // anonymize user file paths that do not need to be retained or cleaned up.\n        if (!nodeModulesRegex.test(result[0]) && !overlappingRange) {\n            updatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n            lastIndex = fileRegex.lastIndex;\n        }\n    }\n    if (lastIndex < stack.length) {\n        updatedStack += stack.substring(lastIndex);\n    }\n\n    return updatedStack;\n}\n\n/**\n * Attempts to remove commonly leaked PII\n * @param property The property which will be removed if it contains user data\n * @returns The new value for the property\n */\nfunction removePropertiesWithPossibleUserInfo(property: string): string {\n    // If for some reason it is undefined we skip it (this shouldn't be possible);\n    if (!property) {\n        return property;\n    }\n\n    const value = property.toLowerCase();\n\n    const userDataRegexes = [\n        { label: 'Google API Key', regex: /AIza[0-9A-Za-z-_]{35}/ },\n        { label: 'Slack Token', regex: /xox[pbar]\\-[A-Za-z0-9]/ },\n        { label: 'Generic Secret', regex: /(key|token|sig|secret|signature|password|passwd|pwd|android:value)[^a-zA-Z0-9]/ },\n        { label: 'Email', regex: /@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+/ } // Regex which matches @*.site\n    ];\n\n    // Check for common user data in the telemetry events\n    for (const secretRegex of userDataRegexes) {\n        if (secretRegex.regex.test(value)) {\n            return `<REDACTED: ${secretRegex.label}>`;\n        }\n    }\n\n    return property;\n}\n\n/**\n * Does a best possible effort to clean a data object from any possible PII.\n * @param data The data object to clean\n * @param paths Any additional patterns that should be removed from the data set\n * @returns A new object with the PII removed\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function cleanData(data: Record<string, any>, cleanUpPatterns: RegExp[]): Record<string, any> {\n    return cloneAndChange(data, value => {\n\n        // If it's a trusted value it means it's okay to skip cleaning so we don't clean it\n        if (value instanceof TelemetryTrustedValue) {\n            return value.value;\n        }\n\n        // We only know how to clean strings\n        if (typeof value === 'string') {\n            let updatedProperty = value.replace(/%20/g, ' ');\n\n            // First we anonymize any possible file paths\n            updatedProperty = anonymizeFilePaths(updatedProperty, cleanUpPatterns);\n\n            // Then we do a simple regex replace with the defined patterns\n            for (const regexp of cleanUpPatterns) {\n                updatedProperty = updatedProperty.replace(regexp, '');\n            }\n\n            // Lastly, remove commonly leaked PII\n            updatedProperty = removePropertiesWithPossibleUserInfo(updatedProperty);\n\n            return updatedProperty;\n        }\n        return undefined;\n    });\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Command, URI, isObject } from '@theia/core';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering/markdown-string';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { UriComponents } from '@theia/core/lib/common/uri';\n\nexport interface NotebookCommand extends Command {\n    title?: string;\n    tooltip?: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    arguments?: any[];\n}\n\nexport enum CellKind {\n    Markup = 1,\n    Code = 2\n}\n\nexport interface NotebookCellMetadata {\n    /**\n     * custom metadata\n     */\n    [key: string]: unknown;\n}\n\nexport interface NotebookCellInternalMetadata {\n    executionId?: string;\n    executionOrder?: number;\n    lastRunSuccess?: boolean;\n    runStartTime?: number;\n    runStartTimeAdjustment?: number;\n    runEndTime?: number;\n    renderDuration?: { [key: string]: number };\n}\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport interface NotebookCellStatusBarItem {\n    readonly alignment: CellStatusbarAlignment;\n    readonly priority?: number;\n    readonly text: string;\n    // readonly color?: string | ThemeColor;\n    // readonly backgroundColor?: string | ThemeColor;\n    readonly tooltip?: string | MarkdownString;\n    readonly command?: string | Command;\n    // readonly accessibilityInformation?: IAccessibilityInformation;\n    readonly opacity?: string;\n    readonly onlyShowWhenActive?: boolean;\n}\n\nexport const enum CellStatusbarAlignment {\n    Left = 1,\n    Right = 2\n}\n\nexport type TransientCellMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type CellContentMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { readonly [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n    readonly transientOutputs: boolean;\n    readonly transientCellMetadata: TransientCellMetadata;\n    readonly transientDocumentMetadata: TransientDocumentMetadata;\n}\n\nexport interface CellOutputItem {\n    readonly mime: string;\n    readonly data: BinaryBuffer;\n}\n\nexport interface CellOutput {\n    outputId: string;\n    outputs: CellOutputItem[];\n    metadata?: Record<string, unknown>;\n}\n\nexport interface NotebookCellCollapseState {\n    inputCollapsed?: boolean;\n    outputCollapsed?: boolean;\n}\n\nexport interface CellData {\n    source: string;\n    language: string;\n    cellKind: CellKind;\n    outputs: CellOutput[];\n    metadata?: NotebookCellMetadata;\n    internalMetadata?: NotebookCellInternalMetadata;\n    collapseState?: NotebookCellCollapseState;\n}\n\nexport interface NotebookDocumentMetadataEdit {\n    editType: CellEditType.DocumentMetadata;\n    metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookData {\n    readonly cells: CellData[];\n    readonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookContributionData {\n    extension?: string;\n    providerDisplayName: string;\n    displayName: string;\n    filenamePattern: (string)[];\n    exclusive: boolean;\n}\n\nexport interface NotebookCellTextModelSplice<T> {\n    start: number,\n    deleteCount: number,\n    newItems: T[]\n    /**\n     * In case of e.g. deletion, the handle of the first cell that was deleted.\n     * -1 in case of new Cells are added at the end.\n     */\n    startHandle: number,\n};\n\nexport enum NotebookCellsChangeType {\n    ModelChange = 1,\n    Move = 2,\n    ChangeCellLanguage = 5,\n    Initialize = 6,\n    ChangeCellMetadata = 7,\n    Output = 8,\n    OutputItem = 9,\n    ChangeCellContent = 10,\n    ChangeDocumentMetadata = 11,\n    ChangeCellInternalMetadata = 12,\n    // ChangeCellMime = 13,\n    Unknown = 100\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n    readonly kind: NotebookCellsChangeType.ChangeCellLanguage;\n    readonly index: number;\n    readonly language: string;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n    readonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n    readonly index: number;\n    readonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookCellsChangeInternalMetadataEvent {\n    readonly kind: NotebookCellsChangeType.ChangeCellInternalMetadata;\n    readonly index: number;\n    readonly internalMetadata: NotebookCellInternalMetadata;\n}\n\nexport interface NotebookCellContentChangeEvent {\n    readonly kind: NotebookCellsChangeType.ChangeCellContent;\n    readonly index: number;\n}\n\nexport interface NotebookModelResource {\n    notebookModelUri: URI;\n}\n\nexport namespace NotebookModelResource {\n    export function is(item: unknown): item is NotebookModelResource {\n        return isObject<NotebookModelResource>(item) && item.notebookModelUri instanceof URI;\n    }\n    export function create(uri: URI): NotebookModelResource {\n        return { notebookModelUri: uri };\n    }\n}\n\nexport interface NotebookCellModelResource {\n    notebookCellModelUri: URI;\n}\n\nexport namespace NotebookCellModelResource {\n    export function is(item: unknown): item is NotebookCellModelResource {\n        return isObject<NotebookCellModelResource>(item) && item.notebookCellModelUri instanceof URI;\n    }\n    export function create(uri: URI): NotebookCellModelResource {\n        return { notebookCellModelUri: uri };\n    }\n}\n\nexport enum NotebookCellExecutionState {\n    Unconfirmed = 1,\n    Pending = 2,\n    Executing = 3\n}\n\nexport enum CellExecutionUpdateType {\n    Output = 1,\n    OutputItems = 2,\n    ExecutionState = 3,\n}\n\nexport interface CellExecuteOutputEdit {\n    editType: CellExecutionUpdateType.Output;\n    cellHandle: number;\n    append?: boolean;\n    outputs: CellOutput[];\n}\n\nexport interface CellExecuteOutputItemEdit {\n    editType: CellExecutionUpdateType.OutputItems;\n    append?: boolean;\n    outputId: string,\n    items: CellOutputItem[];\n}\n\nexport interface CellExecutionStateUpdateDto {\n    editType: CellExecutionUpdateType.ExecutionState;\n    executionOrder?: number;\n    runStartTime?: number;\n    didPause?: boolean;\n    isPaused?: boolean;\n}\n\nexport interface CellMetadataEdit {\n    editType: CellEditType.Metadata;\n    index: number;\n    metadata: NotebookCellMetadata;\n}\n\nexport const enum CellEditType {\n    Replace = 1,\n    Output = 2,\n    Metadata = 3,\n    CellLanguage = 4,\n    DocumentMetadata = 5,\n    Move = 6,\n    OutputItems = 7,\n    PartialMetadata = 8,\n    PartialInternalMetadata = 9,\n}\n\nexport interface NotebookKernelSourceAction {\n    readonly label: string;\n    readonly description?: string;\n    readonly detail?: string;\n    readonly command?: string | Command;\n    readonly documentation?: UriComponents | string;\n}\n\n/**\n * Whether the provided mime type is a text stream like `stdout`, `stderr`.\n */\nexport function isTextStreamMime(mimeType: string): boolean {\n    return ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\n\nexport namespace CellUri {\n\n    export const cellUriScheme = 'vscode-notebook-cell';\n    export const outputUriScheme = 'vscode-notebook-cell-output';\n\n    const _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\n    const _padRegexp = new RegExp(`^[${_lengths.join('')}]+`);\n    const _radix = 7;\n\n    export function generate(notebook: URI, handle: number): URI {\n\n        const s = handle.toString(_radix);\n        const p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n\n        const fragment = `${p}${s}s${Buffer.from(BinaryBuffer.fromString(notebook.scheme).buffer).toString('base64')}`;\n        return notebook.withScheme(cellUriScheme).withFragment(fragment);\n    }\n\n    export function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n        if (cell.scheme !== cellUriScheme) {\n            return undefined;\n        }\n\n        const idx = cell.fragment.indexOf('s');\n        if (idx < 0) {\n            return undefined;\n        }\n\n        const handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n        const parsedScheme = Buffer.from(cell.fragment.substring(idx + 1), 'base64').toString();\n\n        if (isNaN(handle)) {\n            return undefined;\n        }\n        return {\n            handle,\n            notebook: cell.withScheme(parsedScheme).withoutFragment()\n        };\n    }\n\n    export function generateCellOutputUri(notebook: URI, outputId?: string): URI {\n        return notebook\n            .withScheme(outputUriScheme)\n            .withQuery(`op${outputId ?? ''},${notebook.scheme !== 'file' ? notebook.scheme : ''}`);\n    };\n\n    export function parseCellOutputUri(uri: URI): { notebook: URI; outputId?: string } | undefined {\n        if (uri.scheme !== outputUriScheme) {\n            return;\n        }\n\n        const match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.query);\n        if (!match) {\n            return undefined;\n        }\n\n        const outputId = match[1] || undefined;\n        const scheme = match[2];\n        return {\n            outputId,\n            notebook: uri.withScheme(scheme || 'file').withoutQuery()\n        };\n    }\n\n    export function generateCellPropertyUri(notebook: URI, handle: number, cellScheme: string): URI {\n        return CellUri.generate(notebook, handle).withScheme(cellScheme);\n    }\n\n    export function parseCellPropertyUri(uri: URI, propertyScheme: string): { notebook: URI; handle: number } | undefined {\n        if (uri.scheme !== propertyScheme) {\n            return undefined;\n        }\n\n        return CellUri.parse(uri.withScheme(cellUriScheme));\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { PreferenceSchema } from '../../common/preferences/preference-schema';\nimport { Disposable, DisposableCollection, Emitter, Event, isObject, MaybePromise, PreferenceScope } from '../../common';\nimport { PreferenceChangeEvent, PreferenceEventEmitter, PreferenceProxy, PreferenceProxyOptions, PreferenceRetrieval } from './preference-proxy';\nimport { PreferenceChange, PreferenceChangeImpl, PreferenceChanges, PreferenceService } from './preference-service';\nimport { JSONValue } from '@lumino/coreutils';\nimport { PreferenceProviderDataChange } from './preference-provider';\nimport { OverridePreferenceName } from '../../common/preferences/preference-language-override-service';\n\nexport const PreferenceProxySchema = Symbol('PreferenceProxySchema');\nexport interface PreferenceProxyFactory {\n    <T>(schema: MaybePromise<PreferenceSchema>, options?: PreferenceProxyOptions): PreferenceProxy<T>;\n}\nexport const PreferenceProxyFactory = Symbol('PreferenceProxyFactory');\n\nexport class PreferenceProxyChange extends PreferenceChangeImpl {\n    constructor(change: PreferenceProviderDataChange, protected readonly overrideIdentifier?: string) {\n        super(change);\n    }\n\n    override affects(resourceUri?: string, overrideIdentifier?: string): boolean {\n        if (overrideIdentifier !== this.overrideIdentifier) {\n            return false;\n        }\n        return super.affects(resourceUri);\n    }\n}\n\n@injectable()\nexport class InjectablePreferenceProxy<T extends Record<string, JSONValue>> implements\n    ProxyHandler<T>, ProxyHandler<Disposable>, ProxyHandler<PreferenceEventEmitter<T>>, ProxyHandler<PreferenceRetrieval<T>> {\n\n    @inject(PreferenceProxyOptions) protected readonly options: PreferenceProxyOptions;\n    @inject(PreferenceService) protected readonly preferences: PreferenceService;\n    @inject(PreferenceProxySchema) protected readonly promisedSchema: () => PreferenceSchema | Promise<PreferenceSchema>;\n    @inject(PreferenceProxyFactory) protected readonly factory: PreferenceProxyFactory;\n    protected toDispose = new DisposableCollection();\n    protected _onPreferenceChangedEmitter: Emitter<PreferenceChangeEvent<T>> | undefined;\n    protected schema: PreferenceSchema | undefined;\n\n    protected get prefix(): string {\n        return this.options.prefix ?? '';\n    }\n\n    protected get style(): Required<PreferenceProxyOptions>['style'] {\n        return this.options.style ?? 'flat';\n    }\n\n    protected get resourceUri(): PreferenceProxyOptions['resourceUri'] {\n        return this.options.resourceUri;\n    }\n\n    protected get overrideIdentifier(): PreferenceProxyOptions['overrideIdentifier'] {\n        return this.options.overrideIdentifier;\n    }\n\n    protected get isDeep(): boolean {\n        const { style } = this;\n        return style === 'deep' || style === 'both';\n    }\n\n    protected get isFlat(): boolean {\n        const { style } = this;\n        return style === 'flat' || style === 'both';\n    }\n\n    protected get onPreferenceChangedEmitter(): Emitter<PreferenceChangeEvent<T>> {\n        if (!this._onPreferenceChangedEmitter) {\n            this._onPreferenceChangedEmitter = new Emitter();\n            this.subscribeToChangeEvents();\n            this.toDispose.push(this._onPreferenceChangedEmitter);\n        }\n        return this._onPreferenceChangedEmitter;\n    }\n\n    get onPreferenceChanged(): Event<PreferenceChangeEvent<T>> {\n        return this.onPreferenceChangedEmitter.event;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        const schema = this.promisedSchema();\n        if (schema instanceof Promise) {\n            schema.then(resolvedSchema => this.schema = resolvedSchema);\n        } else {\n            this.schema = schema;\n        }\n    }\n\n    get(target: unknown, property: string, receiver: unknown): unknown {\n        if (typeof property !== 'string') {\n            throw new Error(`Unexpected property: ${String(property)}`);\n        }\n        const preferenceName = this.prefix + property;\n        if (this.schema && (this.isFlat || !property.includes('.')) && this.schema.properties[preferenceName]) {\n            const { overrideIdentifier } = this;\n            const toGet = overrideIdentifier ? this.preferences.overridePreferenceName({ overrideIdentifier, preferenceName }) : preferenceName;\n            return this.getValue(toGet as keyof T & string, undefined!);\n        }\n        switch (property) {\n            case 'onPreferenceChanged':\n                return this.onPreferenceChanged;\n            case 'dispose':\n                return this.dispose.bind(this);\n            case 'ready':\n                return Promise.all([this.preferences.ready, this.promisedSchema]).then(() => undefined);\n            case 'get':\n                return this.getValue.bind(this);\n            case 'toJSON':\n                return this.toJSON.bind(this);\n            case 'ownKeys':\n                return this.ownKeys.bind(this);\n        }\n        if (this.schema && this.isDeep) {\n            const prefix = `${preferenceName}.`;\n            if (Object.keys(this.schema.properties).some(key => key.startsWith(prefix))) {\n                const { style, resourceUri, overrideIdentifier } = this;\n                return this.factory(this.schema, { prefix, resourceUri, style, overrideIdentifier });\n            }\n            let value: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n            let parentSegment = preferenceName;\n            const segments = [];\n            do {\n                const index = parentSegment.lastIndexOf('.');\n                segments.push(parentSegment.substring(index + 1));\n                parentSegment = parentSegment.substring(0, index);\n                if (parentSegment in this.schema.properties) {\n                    value = this.get(target, parentSegment, receiver);\n                }\n            } while (parentSegment && value === undefined);\n\n            let segment;\n            while (isObject(value) && (segment = segments.pop())) {\n                value = value[segment];\n            }\n            return segments.length ? undefined : value;\n        }\n    }\n\n    set(target: unknown, property: string, value: unknown, receiver: unknown): boolean {\n        if (typeof property !== 'string') {\n            throw new Error(`Unexpected property: ${String(property)}`);\n        }\n        const { style, schema, prefix, resourceUri, overrideIdentifier } = this;\n        if (style === 'deep' && property.indexOf('.') !== -1) {\n            return false;\n        }\n        if (schema) {\n            const fullProperty = prefix ? prefix + property : property;\n            if (schema.properties[fullProperty]) {\n                this.preferences.set(fullProperty, value, PreferenceScope.Default);\n                return true;\n            }\n            const newPrefix = fullProperty + '.';\n            for (const p of Object.keys(schema.properties)) {\n                if (p.startsWith(newPrefix)) {\n                    const subProxy = this.factory<T>(schema, {\n                        prefix: newPrefix,\n                        resourceUri,\n                        overrideIdentifier,\n                        style\n                    }) as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n                    const valueAsContainer = value as T;\n                    for (const k of Object.keys(valueAsContainer)) {\n                        subProxy[k as keyof T] = valueAsContainer[k as keyof T];\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    ownKeys(): string[] {\n        const properties = [];\n        if (this.schema) {\n            const { isDeep, isFlat, prefix } = this;\n            for (const property of Object.keys(this.schema.properties)) {\n                if (property.startsWith(prefix)) {\n                    const idx = property.indexOf('.', prefix.length);\n                    if (idx !== -1 && isDeep) {\n                        const pre = property.substring(prefix.length, idx);\n                        if (properties.indexOf(pre) === -1) {\n                            properties.push(pre);\n                        }\n                    }\n                    const prop = property.substring(prefix.length);\n                    if (isFlat || prop.indexOf('.') === -1) {\n                        properties.push(prop);\n                    }\n                }\n            }\n        }\n        return properties;\n    }\n\n    getOwnPropertyDescriptor(target: unknown, property: string): PropertyDescriptor {\n        if (this.ownKeys().includes(property)) {\n            return {\n                enumerable: true,\n                configurable: true\n            };\n        }\n        return {};\n    }\n\n    deleteProperty(): never {\n        throw new Error('Unsupported operation');\n    }\n\n    defineProperty(): never {\n        throw new Error('Unsupported operation');\n    }\n\n    toJSON(): JSONValue {\n        const result: JSONValue = {};\n        for (const key of this.ownKeys()) {\n            result[key] = this.get(undefined, key, undefined) as JSONValue;\n        }\n        return result;\n    };\n\n    protected subscribeToChangeEvents(): void {\n        this.toDispose.push(this.preferences.onPreferencesChanged(changes => this.handlePreferenceChanges(changes)));\n    }\n\n    protected handlePreferenceChanges(changes: PreferenceChanges): void {\n        if (this.schema) {\n            for (const change of Object.values(changes)) {\n                const overrideInfo = this.preferences.overriddenPreferenceName(change.preferenceName);\n                if (this.isRelevantChange(change, overrideInfo)) {\n                    this.fireChangeEvent(this.buildNewChangeEvent(change, overrideInfo));\n                }\n            }\n        }\n    }\n\n    protected isRelevantChange(change: PreferenceChange, overrideInfo?: OverridePreferenceName): boolean {\n        const preferenceName = overrideInfo?.preferenceName ?? change.preferenceName;\n        return preferenceName.startsWith(this.prefix)\n            && (!this.overrideIdentifier || overrideInfo?.overrideIdentifier === this.overrideIdentifier)\n            && Boolean(this.schema?.properties[preferenceName]);\n    }\n\n    protected fireChangeEvent(change: PreferenceChangeEvent<T>): void {\n        this.onPreferenceChangedEmitter.fire(change);\n    }\n\n    protected buildNewChangeEvent(change: PreferenceProviderDataChange, overrideInfo?: OverridePreferenceName): PreferenceChangeEvent<T> {\n        const preferenceName = (overrideInfo?.preferenceName ?? change.preferenceName) as keyof T & string;\n        const { newValue, oldValue, scope, domain } = change;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new PreferenceProxyChange({ newValue, oldValue, preferenceName, scope, domain }, overrideInfo?.overrideIdentifier) as any;\n    }\n\n    protected getValue<K extends keyof T & string>(\n        preferenceIdentifier: K | OverridePreferenceName & { preferenceName: K }, defaultValue: T[K], resourceUri = this.resourceUri\n    ): T[K] {\n        const preferenceName = OverridePreferenceName.is(preferenceIdentifier) ? this.preferences.overridePreferenceName(preferenceIdentifier) : preferenceIdentifier as string;\n        return this.preferences.get(preferenceName, defaultValue, resourceUri);\n    }\n\n    dispose(): void {\n        if (this.options.isDisposable) {\n            this.toDispose.dispose();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Xuye Cai and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// copied from vscode: https://github.com/microsoft/vscode/blob/master/src/vs/workbench/services/textfile/common/textfiles.ts\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const SUPPORTED_ENCODINGS: { [encoding: string]: { labelLong: string; labelShort: string; order: number; encodeOnly?: boolean; alias?: string } } = {\n    utf8: {\n        labelLong: 'UTF-8',\n        labelShort: 'UTF-8',\n        order: 1,\n        alias: 'utf8bom'\n    },\n    utf8bom: {\n        labelLong: 'UTF-8 with BOM',\n        labelShort: 'UTF-8 with BOM',\n        encodeOnly: true,\n        order: 2,\n        alias: 'utf8'\n    },\n    utf16le: {\n        labelLong: 'UTF-16 LE',\n        labelShort: 'UTF-16 LE',\n        order: 3\n    },\n    utf16be: {\n        labelLong: 'UTF-16 BE',\n        labelShort: 'UTF-16 BE',\n        order: 4\n    },\n    windows1252: {\n        labelLong: 'Western (Windows 1252)',\n        labelShort: 'Windows 1252',\n        order: 5\n    },\n    iso88591: {\n        labelLong: 'Western (ISO 8859-1)',\n        labelShort: 'ISO 8859-1',\n        order: 6\n    },\n    iso88593: {\n        labelLong: 'Western (ISO 8859-3)',\n        labelShort: 'ISO 8859-3',\n        order: 7\n    },\n    iso885915: {\n        labelLong: 'Western (ISO 8859-15)',\n        labelShort: 'ISO 8859-15',\n        order: 8\n    },\n    macroman: {\n        labelLong: 'Western (Mac Roman)',\n        labelShort: 'Mac Roman',\n        order: 9\n    },\n    cp437: {\n        labelLong: 'DOS (CP 437)',\n        labelShort: 'CP437',\n        order: 10\n    },\n    windows1256: {\n        labelLong: 'Arabic (Windows 1256)',\n        labelShort: 'Windows 1256',\n        order: 11\n    },\n    iso88596: {\n        labelLong: 'Arabic (ISO 8859-6)',\n        labelShort: 'ISO 8859-6',\n        order: 12\n    },\n    windows1257: {\n        labelLong: 'Baltic (Windows 1257)',\n        labelShort: 'Windows 1257',\n        order: 13\n    },\n    iso88594: {\n        labelLong: 'Baltic (ISO 8859-4)',\n        labelShort: 'ISO 8859-4',\n        order: 14\n    },\n    iso885914: {\n        labelLong: 'Celtic (ISO 8859-14)',\n        labelShort: 'ISO 8859-14',\n        order: 15\n    },\n    windows1250: {\n        labelLong: 'Central European (Windows 1250)',\n        labelShort: 'Windows 1250',\n        order: 16\n    },\n    iso88592: {\n        labelLong: 'Central European (ISO 8859-2)',\n        labelShort: 'ISO 8859-2',\n        order: 17\n    },\n    cp852: {\n        labelLong: 'Central European (CP 852)',\n        labelShort: 'CP 852',\n        order: 18\n    },\n    windows1251: {\n        labelLong: 'Cyrillic (Windows 1251)',\n        labelShort: 'Windows 1251',\n        order: 19\n    },\n    cp866: {\n        labelLong: 'Cyrillic (CP 866)',\n        labelShort: 'CP 866',\n        order: 20\n    },\n    iso88595: {\n        labelLong: 'Cyrillic (ISO 8859-5)',\n        labelShort: 'ISO 8859-5',\n        order: 21\n    },\n    koi8r: {\n        labelLong: 'Cyrillic (KOI8-R)',\n        labelShort: 'KOI8-R',\n        order: 22\n    },\n    koi8u: {\n        labelLong: 'Cyrillic (KOI8-U)',\n        labelShort: 'KOI8-U',\n        order: 23\n    },\n    iso885913: {\n        labelLong: 'Estonian (ISO 8859-13)',\n        labelShort: 'ISO 8859-13',\n        order: 24\n    },\n    windows1253: {\n        labelLong: 'Greek (Windows 1253)',\n        labelShort: 'Windows 1253',\n        order: 25\n    },\n    iso88597: {\n        labelLong: 'Greek (ISO 8859-7)',\n        labelShort: 'ISO 8859-7',\n        order: 26\n    },\n    windows1255: {\n        labelLong: 'Hebrew (Windows 1255)',\n        labelShort: 'Windows 1255',\n        order: 27\n    },\n    iso88598: {\n        labelLong: 'Hebrew (ISO 8859-8)',\n        labelShort: 'ISO 8859-8',\n        order: 28\n    },\n    iso885910: {\n        labelLong: 'Nordic (ISO 8859-10)',\n        labelShort: 'ISO 8859-10',\n        order: 29\n    },\n    iso885916: {\n        labelLong: 'Romanian (ISO 8859-16)',\n        labelShort: 'ISO 8859-16',\n        order: 30\n    },\n    windows1254: {\n        labelLong: 'Turkish (Windows 1254)',\n        labelShort: 'Windows 1254',\n        order: 31\n    },\n    iso88599: {\n        labelLong: 'Turkish (ISO 8859-9)',\n        labelShort: 'ISO 8859-9',\n        order: 32\n    },\n    windows1258: {\n        labelLong: 'Vietnamese (Windows 1258)',\n        labelShort: 'Windows 1258',\n        order: 33\n    },\n    gbk: {\n        labelLong: 'Simplified Chinese (GBK)',\n        labelShort: 'GBK',\n        order: 34\n    },\n    gb18030: {\n        labelLong: 'Simplified Chinese (GB18030)',\n        labelShort: 'GB18030',\n        order: 35\n    },\n    cp950: {\n        labelLong: 'Traditional Chinese (Big5)',\n        labelShort: 'Big5',\n        order: 36\n    },\n    big5hkscs: {\n        labelLong: 'Traditional Chinese (Big5-HKSCS)',\n        labelShort: 'Big5-HKSCS',\n        order: 37\n    },\n    shiftjis: {\n        labelLong: 'Japanese (Shift JIS)',\n        labelShort: 'Shift JIS',\n        order: 38\n    },\n    eucjp: {\n        labelLong: 'Japanese (EUC-JP)',\n        labelShort: 'EUC-JP',\n        order: 39\n    },\n    euckr: {\n        labelLong: 'Korean (EUC-KR)',\n        labelShort: 'EUC-KR',\n        order: 40\n    },\n    windows874: {\n        labelLong: 'Thai (Windows 874)',\n        labelShort: 'Windows 874',\n        order: 41\n    },\n    iso885911: {\n        labelLong: 'Latin/Thai (ISO 8859-11)',\n        labelShort: 'ISO 8859-11',\n        order: 42\n    },\n    koi8ru: {\n        labelLong: 'Cyrillic (KOI8-RU)',\n        labelShort: 'KOI8-RU',\n        order: 43\n    },\n    koi8t: {\n        labelLong: 'Tajik (KOI8-T)',\n        labelShort: 'KOI8-T',\n        order: 44\n    },\n    gb2312: {\n        labelLong: 'Simplified Chinese (GB 2312)',\n        labelShort: 'GB 2312',\n        order: 45\n    },\n    cp865: {\n        labelLong: 'Nordic DOS (CP 865)',\n        labelShort: 'CP 865',\n        order: 46\n    },\n    cp850: {\n        labelLong: 'Western European DOS (CP 850)',\n        labelShort: 'CP 850',\n        order: 47\n    }\n};\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// Copied from https://github.com/Microsoft/vscode/blob/master/src/vs/editor/common/viewModel/prefixSumComputer.ts\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Max unsigned integer that fits on 32 bits.\n */\nconst MAX_UINT_32 = 4294967295; // 2^32 - 1\n\nexport function toUint32(v: number): number {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > MAX_UINT_32) {\n        return MAX_UINT_32;\n    }\n    return v | 0;\n}\n\nexport class PrefixSumIndexOfResult {\n    _prefixSumIndexOfResultBrand: void;\n\n    index: number;\n    remainder: number;\n\n    constructor(index: number, remainder: number) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n\nexport class PrefixSumComputer {\n\n    /**\n     * values[i] is the value at index i\n     */\n    private values: Uint32Array;\n\n    /**\n     * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n     */\n    private prefixSum: Uint32Array;\n\n    /**\n     * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n     */\n    private prefixSumValidIndex: Int32Array;\n\n    constructor(values: Uint32Array) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n\n    public getCount(): number {\n        return this.values.length;\n    }\n\n    public insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n\n        if (insertValuesLen === 0) {\n            return false;\n        }\n\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n\n    public changeValue(index: number, value: number): boolean {\n        index = toUint32(index);\n        value = toUint32(value);\n\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n\n    public removeValues(startIndex: number, count: number): boolean {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n\n        if (count === 0) {\n            return false;\n        }\n\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n\n    public getTotalValue(): number {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    }\n\n    public getAccumulatedValue(index: number): number {\n        if (index < 0) {\n            return 0;\n        }\n\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    }\n\n    private _getAccumulatedValue(index: number): number {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n\n    public getIndexOf(accumulatedValue: number): PrefixSumIndexOfResult {\n        accumulatedValue = Math.floor(accumulatedValue);\n\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid: number;\n        let midStop: number;\n        let midStart: number;\n\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            } else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            } else {\n                break;\n            }\n        }\n\n        return new PrefixSumIndexOfResult(mid!, accumulatedValue - midStart!);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// copied and modified from https://github.com/microsoft/vscode/blob/1.65.0/src/vs/workbench/api/common/extHostLanguageFeatures.ts#L1178-L1288\n\nimport * as theia from '@theia/plugin';\nimport * as Converter from '../type-converters';\nimport { Cache } from '../../common/cache';\nimport { ChainedCacheId, InlayHint, InlayHintLabelPart, Range } from '../../common/plugin-api-rpc-model';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { DocumentsExtImpl } from '../documents';\nimport { InlayHintDto, InlayHintsDto } from '../../common';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { isLocationArray } from './util';\n\nexport class InlayHintsAdapter {\n\n    private cache = new Cache<theia.InlayHint>('InlayHints');\n    private readonly disposables = new Map<number, DisposableCollection>();\n\n    constructor(\n        private readonly provider: theia.InlayHintsProvider,\n        private readonly documents: DocumentsExtImpl,\n        private readonly commands: CommandRegistryImpl\n    ) { }\n\n    async provideInlayHints(resource: URI, range: Range, token: theia.CancellationToken): Promise<InlayHintsDto | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There are no documents for ${resource}`));\n        }\n\n        const doc = documentData.document;\n        const ran = Converter.toRange(range);\n        const hints = await this.provider.provideInlayHints(doc, ran, token);\n\n        if (!Array.isArray(hints) || hints.length === 0) {\n            return undefined;\n        }\n\n        if (token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const pid = this.cache.add(hints);\n        this.disposables.set(pid, new DisposableCollection());\n        const result: InlayHintsDto = { hints: [], cacheId: pid };\n\n        for (let i = 0; i < hints.length; i++) {\n            if (this.isValidInlayHint(hints[i], ran)) {\n                result.hints.push(this.convertInlayHint(hints[i], [pid, i]));\n            }\n        }\n\n        return result;\n    }\n\n    async resolveInlayHint(id: ChainedCacheId, token: theia.CancellationToken): Promise<InlayHint | undefined> {\n        if (typeof this.provider.resolveInlayHint !== 'function') {\n            return undefined;\n        }\n        const item = this.cache.get(...id);\n        if (!item) {\n            return undefined;\n        }\n        const hint = await this.provider.resolveInlayHint!(item, token);\n        if (!hint) {\n            return undefined;\n        }\n        if (!this.isValidInlayHint(hint)) {\n            return undefined;\n        }\n        return this.convertInlayHint(hint, id);\n    }\n\n    private isValidInlayHint(hint: theia.InlayHint, range?: theia.Range): boolean {\n        if (hint.label.length === 0 || Array.isArray(hint.label) && hint.label.every(part => part.value.length === 0)) {\n            return false;\n        }\n        if (range && !range.contains(hint.position)) {\n            return false;\n        }\n        return true;\n    }\n\n    private convertInlayHint(hint: theia.InlayHint, id: ChainedCacheId): InlayHintDto {\n\n        const disposables = this.disposables.get(id[0]);\n        if (!disposables) {\n            throw Error('DisposableCollection is missing...');\n        }\n\n        const result: InlayHintDto = {\n            label: '', // fill-in below.\n            cacheId: id,\n            tooltip: hint.tooltip,\n            position: Converter.fromPosition(hint.position),\n            textEdits: hint.textEdits && hint.textEdits.map(Converter.fromTextEdit),\n            kind: hint.kind && Converter.InlayHintKind.from(hint.kind),\n            paddingLeft: hint.paddingLeft,\n            paddingRight: hint.paddingRight,\n        };\n\n        if (typeof hint.label === 'string') {\n            result.label = hint.label;\n        } else {\n            result.label = hint.label.map(part => {\n                const partResult: InlayHintLabelPart = { label: part.value };\n                if (part.tooltip) {\n                    partResult.tooltip = typeof partResult === 'string' ? part.tooltip : Converter.fromMarkdown(part.tooltip);\n                }\n                if (isLocationArray(part.location)) {\n                    partResult.location = Converter.fromLocation(part.location);\n                }\n                if (part.command) {\n                    partResult.command = this.commands.converter.toSafeCommand(part.command, disposables);\n                }\n                return partResult;\n            });\n        }\n\n        return result;\n    }\n\n    async releaseHints(id: number): Promise<void> {\n        this.disposables.get(id)?.dispose();\n        this.disposables.delete(id);\n        this.cache.delete(id);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// copied and modified from https://github.com/microsoft/vscode/blob/standalone/0.19.x/src/vs/workbench/api/common/extHostLanguageFeatures.ts#L1107-L1151\n\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as model from '../../common/plugin-api-rpc-model';\nimport * as Converter from '../type-converters';\nimport * as types from '../types-impl';\nimport { Position } from '../../common/plugin-api-rpc';\n\nexport class SelectionRangeProviderAdapter {\n\n    constructor(\n        private readonly provider: theia.SelectionRangeProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideSelectionRanges(resource: URI, position: Position[], token: theia.CancellationToken): Promise<model.SelectionRange[][]> {\n        const documentData = this.documents.getDocumentData(resource);\n\n        if (!documentData) {\n            return Promise.reject(new Error(`There are no document for  ${resource}`));\n        }\n\n        const document = documentData.document;\n        const positions = position.map(pos => Converter.toPosition(pos));\n\n        return Promise.resolve(this.provider.provideSelectionRanges(document, positions, token)).then(allProviderRanges => {\n            if (!Array.isArray(allProviderRanges) || allProviderRanges.length === 0) {\n                return [];\n            }\n\n            if (allProviderRanges.length !== positions.length) {\n                return [];\n            }\n\n            const allResults: model.SelectionRange[][] = [];\n            for (let i = 0; i < positions.length; i++) {\n                const oneResult: model.SelectionRange[] = [];\n                allResults.push(oneResult);\n\n                let last: types.Position | theia.Range = positions[i];\n                let selectionRange = allProviderRanges[i];\n\n                while (true) {\n                    if (!selectionRange.range.contains(last)) {\n                        return Promise.reject(new Error('INVALID selection range, must contain the previous range'));\n                    }\n                    oneResult.push(Converter.fromSelectionRange(selectionRange));\n                    if (!selectionRange.parent) {\n                        break;\n                    }\n                    last = selectionRange.range;\n                    selectionRange = selectionRange.parent;\n                }\n            }\n            return allResults;\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as types from '../types-impl';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { Definition, LocationLink, Location } from '../../common/plugin-api-rpc-model';\nimport { isDefinitionLinkArray, isLocationArray } from './util';\n\nexport class ImplementationAdapter {\n\n    constructor(\n        private readonly provider: theia.ImplementationProvider,\n        private readonly documents: DocumentsExtImpl) {\n    }\n\n    provideImplementation(resource: URI, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideImplementation(document, zeroBasedPosition, token)).then(definition => {\n            if (!definition) {\n                return undefined;\n            }\n\n            if (definition instanceof types.Location) {\n                return Converter.fromLocation(definition);\n            }\n\n            if (isLocationArray(definition)) {\n                const locations: Location[] = [];\n\n                for (const location of definition) {\n                    locations.push(Converter.fromLocation(location));\n                }\n\n                return locations;\n            }\n\n            if (isDefinitionLinkArray(definition)) {\n                const definitionLinks: LocationLink[] = [];\n\n                for (const definitionLink of definition) {\n                    definitionLinks.push(Converter.fromDefinitionLink(definitionLink));\n                }\n\n                return definitionLinks;\n            }\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { Disposable, StatusBarAlignment } from './types-impl';\nimport { StatusBarItem } from '@theia/plugin';\nimport {\n    PLUGIN_RPC_CONTEXT as Ext, StatusBarMessageRegistryMain\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { StatusBarItemImpl } from './status-bar/status-bar-item';\nimport { CommandRegistryImpl } from './command-registry';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class StatusBarMessageRegistryExt {\n\n    proxy: StatusBarMessageRegistryMain;\n\n    protected readonly statusMessage: StatusBarMessage;\n\n    constructor(rpc: RPCProtocol, readonly commandRegistry: CommandRegistryImpl) {\n        this.proxy = rpc.getProxy(Ext.STATUS_BAR_MESSAGE_REGISTRY_MAIN);\n        this.statusMessage = new StatusBarMessage(this);\n    }\n\n    // copied from https://github.com/Microsoft/vscode/blob/6c8f02b41db9ae5c4d15df767d47755e5c73b9d5/src/vs/workbench/api/node/extHostStatusBar.ts#L174\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setStatusBarMessage(text: string, timeoutOrThenable?: number | PromiseLike<any>): Disposable {\n        const d = this.statusMessage.setMessage(text);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let handle: any;\n\n        if (typeof timeoutOrThenable === 'number') {\n            handle = setTimeout(() => d.dispose(), timeoutOrThenable);\n        } else if (typeof timeoutOrThenable !== 'undefined') {\n            timeoutOrThenable.then(() => d.dispose(), () => d.dispose());\n        }\n\n        return new Disposable(() => {\n            d.dispose();\n            clearTimeout(handle);\n        });\n\n    }\n\n    createStatusBarItem(alignment?: StatusBarAlignment, priority?: number, id?: string): StatusBarItem {\n        return new StatusBarItemImpl(this.proxy, this.commandRegistry, alignment, priority, id);\n    }\n\n}\n\n// copied from https://github.com/Microsoft/vscode/blob/6c8f02b41db9ae5c4d15df767d47755e5c73b9d5/src/vs/workbench/api/node/extHostStatusBar.ts#L122\nclass StatusBarMessage {\n\n    private _item: StatusBarItem;\n    private _messages: { message: string }[] = [];\n\n    constructor(statusBar: StatusBarMessageRegistryExt) {\n        this._item = statusBar.createStatusBarItem(StatusBarAlignment.Left, Number.MIN_VALUE);\n    }\n\n    dispose(): void {\n        this._messages.length = 0;\n        this._item.dispose();\n    }\n\n    setMessage(message: string): Disposable {\n        const data: { message: string } = { message }; // use object to not confuse equal strings\n        this._messages.unshift(data);\n        this._update();\n\n        return new Disposable(() => {\n            const idx = this._messages.indexOf(data);\n            if (idx >= 0) {\n                this._messages.splice(idx, 1);\n                this._update();\n            }\n        });\n    }\n\n    private _update(): void {\n        if (this._messages.length > 0) {\n            this._item.text = this._messages[0].message;\n            this._item.show();\n        } else {\n            this._item.hide();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/workbench/services/textfile/common/encoding.ts\n\n/* eslint-disable no-null/no-null */\n\nimport * as iconv from 'iconv-lite';\nimport { Buffer } from 'safer-buffer';\nimport { injectable } from 'inversify';\nimport { BinaryBuffer, BinaryBufferReadableStream, BinaryBufferReadable } from './buffer';\nimport { UTF8, UTF8_with_bom, UTF16be, UTF16le, UTF16be_BOM, UTF16le_BOM, UTF8_BOM } from './encodings';\nimport { newWriteableStream, ReadableStream, Readable } from './stream';\n\nconst ZERO_BYTE_DETECTION_BUFFER_MAX_LEN = 512;   // number of bytes to look at to decide about a file being binary or not\nconst NO_ENCODING_GUESS_MIN_BYTES = 512;          // when not auto guessing the encoding, small number of bytes are enough\nconst AUTO_ENCODING_GUESS_MIN_BYTES = 512 * 8;    // with auto guessing we want a lot more content to be read for guessing\nconst AUTO_ENCODING_GUESS_MAX_BYTES = 512 * 128;  // set an upper limit for the number of bytes we pass on to jschardet\n\n// we explicitly ignore a specific set of encodings from auto guessing\n// - ASCII: we never want this encoding (most UTF-8 files would happily detect as\n//          ASCII files and then you could not type non-ASCII characters anymore)\n// - UTF-16: we have our own detection logic for UTF-16\n// - UTF-32: we do not support this encoding in VSCode\nconst IGNORE_ENCODINGS = ['ascii', 'utf-16', 'utf-32'];\n\nexport interface ResourceEncoding {\n    encoding: string\n    hasBOM: boolean\n}\n\nexport interface DetectedEncoding {\n    encoding?: string\n    seemsBinary?: boolean\n}\n\nexport interface DecodeStreamOptions {\n    guessEncoding?: boolean;\n    minBytesRequiredForDetection?: number;\n\n    overwriteEncoding(detectedEncoding: string | undefined): Promise<string>;\n}\nexport interface DecodeStreamResult {\n    stream: ReadableStream<string>;\n    detected: DetectedEncoding;\n}\n\n@injectable()\nexport class EncodingService {\n\n    encode(value: string, options?: ResourceEncoding): BinaryBuffer {\n        let encoding = options?.encoding;\n        const addBOM = options?.hasBOM;\n        encoding = this.toIconvEncoding(encoding);\n        if (encoding === UTF8 && !addBOM) {\n            return BinaryBuffer.fromString(value);\n        }\n        const buffer = iconv.encode(value, encoding, { addBOM });\n        return BinaryBuffer.wrap(buffer);\n    }\n\n    decode(value: BinaryBuffer, encoding?: string): string {\n        const buffer = Buffer.from(value.buffer);\n        encoding = this.toIconvEncoding(encoding);\n        return iconv.decode(buffer, encoding);\n    }\n\n    exists(encoding: string): boolean {\n        encoding = this.toIconvEncoding(encoding);\n        return iconv.encodingExists(encoding);\n    }\n\n    toIconvEncoding(encoding?: string): string {\n        if (encoding === UTF8_with_bom || !encoding) {\n            return UTF8; // iconv does not distinguish UTF 8 with or without BOM, so we need to help it\n        }\n        return encoding;\n    }\n\n    async toResourceEncoding(encoding: string, options: {\n        overwriteEncoding?: boolean,\n        read: (length: number) => Promise<Uint8Array>\n    }): Promise<ResourceEncoding> {\n        // Some encodings come with a BOM automatically\n        if (encoding === UTF16be || encoding === UTF16le || encoding === UTF8_with_bom) {\n            return { encoding, hasBOM: true };\n        }\n\n        // Ensure that we preserve an existing BOM if found for UTF8\n        // unless we are instructed to overwrite the encoding\n        const overwriteEncoding = options?.overwriteEncoding;\n        if (!overwriteEncoding && encoding === UTF8) {\n            try {\n                // stream here to avoid fetching the whole content on write\n                const buffer = await options.read(UTF8_BOM.length);\n                if (this.detectEncodingByBOMFromBuffer(Buffer.from(buffer), buffer.byteLength) === UTF8_with_bom) {\n                    return { encoding, hasBOM: true };\n                }\n            } catch (error) {\n                // ignore - file might not exist\n            }\n        }\n\n        return { encoding, hasBOM: false };\n    }\n\n    async detectEncoding(data: BinaryBuffer, autoGuessEncoding?: boolean): Promise<DetectedEncoding> {\n        const buffer = Buffer.from(data.buffer);\n        const bytesRead = data.byteLength;\n        // Always first check for BOM to find out about encoding\n        let encoding = this.detectEncodingByBOMFromBuffer(buffer, bytesRead);\n\n        // Detect 0 bytes to see if file is binary or UTF-16 LE/BEÏ\n        // unless we already know that this file has a UTF-16 encoding\n        let seemsBinary = false;\n        if (encoding !== UTF16be && encoding !== UTF16le && buffer) {\n            let couldBeUTF16LE = true; // e.g. 0xAA 0x00\n            let couldBeUTF16BE = true; // e.g. 0x00 0xAA\n            let containsZeroByte = false;\n\n            // This is a simplified guess to detect UTF-16 BE or LE by just checking if\n            // the first 512 bytes have the 0-byte at a specific location. For UTF-16 LE\n            // this would be the odd byte index and for UTF-16 BE the even one.\n            // Note: this can produce false positives (a binary file that uses a 2-byte\n            // encoding of the same format as UTF-16) and false negatives (a UTF-16 file\n            // that is using 4 bytes to encode a character).\n            for (let i = 0; i < bytesRead && i < ZERO_BYTE_DETECTION_BUFFER_MAX_LEN; i++) {\n                const isEndian = (i % 2 === 1); // assume 2-byte sequences typical for UTF-16\n                const isZeroByte = (buffer.readUInt8(i) === 0);\n\n                if (isZeroByte) {\n                    containsZeroByte = true;\n                }\n\n                // UTF-16 LE: expect e.g. 0xAA 0x00\n                if (couldBeUTF16LE && (isEndian && !isZeroByte || !isEndian && isZeroByte)) {\n                    couldBeUTF16LE = false;\n                }\n\n                // UTF-16 BE: expect e.g. 0x00 0xAA\n                if (couldBeUTF16BE && (isEndian && isZeroByte || !isEndian && !isZeroByte)) {\n                    couldBeUTF16BE = false;\n                }\n\n                // Return if this is neither UTF16-LE nor UTF16-BE and thus treat as binary\n                if (isZeroByte && !couldBeUTF16LE && !couldBeUTF16BE) {\n                    break;\n                }\n            }\n\n            // Handle case of 0-byte included\n            if (containsZeroByte) {\n                if (couldBeUTF16LE) {\n                    encoding = UTF16le;\n                } else if (couldBeUTF16BE) {\n                    encoding = UTF16be;\n                } else {\n                    seemsBinary = true;\n                }\n            }\n        }\n\n        // Auto guess encoding if configured\n        if (autoGuessEncoding && !seemsBinary && !encoding && buffer) {\n            const guessedEncoding = await this.guessEncodingByBuffer(buffer.slice(0, bytesRead));\n            return {\n                seemsBinary: false,\n                encoding: guessedEncoding\n            };\n        }\n\n        return { seemsBinary, encoding };\n    }\n\n    protected detectEncodingByBOMFromBuffer(buffer: Buffer, bytesRead: number): typeof UTF8_with_bom | typeof UTF16le | typeof UTF16be | undefined {\n        if (!buffer || bytesRead < UTF16be_BOM.length) {\n            return undefined;\n        }\n\n        const b0 = buffer.readUInt8(0);\n        const b1 = buffer.readUInt8(1);\n\n        // UTF-16 BE\n        if (b0 === UTF16be_BOM[0] && b1 === UTF16be_BOM[1]) {\n            return UTF16be;\n        }\n\n        // UTF-16 LE\n        if (b0 === UTF16le_BOM[0] && b1 === UTF16le_BOM[1]) {\n            return UTF16le;\n        }\n\n        if (bytesRead < UTF8_BOM.length) {\n            return undefined;\n        }\n\n        const b2 = buffer.readUInt8(2);\n\n        // UTF-8\n        if (b0 === UTF8_BOM[0] && b1 === UTF8_BOM[1] && b2 === UTF8_BOM[2]) {\n            return UTF8_with_bom;\n        }\n\n        return undefined;\n    }\n\n    protected async guessEncodingByBuffer(buffer: Buffer): Promise<string | undefined> {\n        const jschardet = await import('jschardet');\n\n        const guessed = jschardet.detect(buffer.slice(0, AUTO_ENCODING_GUESS_MAX_BYTES)); // ensure to limit buffer for guessing due to https://github.com/aadsm/jschardet/issues/53\n        if (!guessed || !guessed.encoding) {\n            return undefined;\n        }\n\n        const enc = guessed.encoding.toLowerCase();\n        if (0 <= IGNORE_ENCODINGS.indexOf(enc)) {\n            return undefined; // see comment above why we ignore some encodings\n        }\n\n        return this.toIconvEncoding(guessed.encoding);\n    }\n\n    decodeStream(source: BinaryBufferReadableStream, options: DecodeStreamOptions): Promise<DecodeStreamResult> {\n        const minBytesRequiredForDetection = options.minBytesRequiredForDetection ?? options.guessEncoding ? AUTO_ENCODING_GUESS_MIN_BYTES : NO_ENCODING_GUESS_MIN_BYTES;\n\n        return new Promise<DecodeStreamResult>((resolve, reject) => {\n            const target = newWriteableStream<string>(strings => strings.join(''));\n\n            const bufferedChunks: BinaryBuffer[] = [];\n            let bytesBuffered = 0;\n\n            let decoder: iconv.DecoderStream | undefined = undefined;\n\n            const createDecoder = async () => {\n                try {\n\n                    // detect encoding from buffer\n                    const detected = await this.detectEncoding(BinaryBuffer.concat(bufferedChunks), options.guessEncoding);\n\n                    // ensure to respect overwrite of encoding\n                    detected.encoding = await options.overwriteEncoding(detected.encoding);\n\n                    // decode and write buffered content\n                    decoder = iconv.getDecoder(this.toIconvEncoding(detected.encoding));\n                    const decoded = decoder.write(Buffer.from(BinaryBuffer.concat(bufferedChunks).buffer));\n                    target.write(decoded);\n\n                    bufferedChunks.length = 0;\n                    bytesBuffered = 0;\n\n                    // signal to the outside our detected encoding and final decoder stream\n                    resolve({\n                        stream: target,\n                        detected\n                    });\n                } catch (error) {\n                    reject(error);\n                }\n            };\n\n            // Stream error: forward to target\n            source.on('error', error => target.error(error));\n\n            // Stream data\n            source.on('data', async chunk => {\n\n                // if the decoder is ready, we just write directly\n                if (decoder) {\n                    target.write(decoder.write(Buffer.from(chunk.buffer)));\n                } else {\n                    bufferedChunks.push(chunk);\n                    bytesBuffered += chunk.byteLength;\n\n                    // buffered enough data for encoding detection, create stream\n                    if (bytesBuffered >= minBytesRequiredForDetection) {\n\n                        // pause stream here until the decoder is ready\n                        source.pause();\n\n                        await createDecoder();\n\n                        // resume stream now that decoder is ready but\n                        // outside of this stack to reduce recursion\n                        setTimeout(() => source.resume());\n                    }\n                }\n            });\n\n            // Stream end\n            source.on('end', async () => {\n\n                // we were still waiting for data to do the encoding\n                // detection. thus, wrap up starting the stream even\n                // without all the data to get things going\n                if (!decoder) {\n                    await createDecoder();\n                }\n\n                // end the target with the remainders of the decoder\n                target.end(decoder?.end());\n            });\n        });\n    }\n\n    encodeStream(value: string | Readable<string>, options?: ResourceEncoding): Promise<BinaryBuffer | BinaryBufferReadable>;\n    encodeStream(value?: string | Readable<string>, options?: ResourceEncoding): Promise<BinaryBuffer | BinaryBufferReadable | undefined>;\n    async encodeStream(value: string | Readable<string> | undefined, options?: ResourceEncoding): Promise<BinaryBuffer | BinaryBufferReadable | undefined> {\n        let encoding = options?.encoding;\n        const addBOM = options?.hasBOM;\n        encoding = this.toIconvEncoding(encoding);\n        if (encoding === UTF8 && !addBOM) {\n            return value === undefined ? undefined : typeof value === 'string' ?\n                BinaryBuffer.fromString(value) : BinaryBufferReadable.fromReadable(value);\n        }\n\n        value = value || '';\n        const readable = typeof value === 'string' ? Readable.fromString(value) : value;\n        const encoder = iconv.getEncoder(encoding, { addBOM });\n\n        let bytesWritten = false;\n        let done = false;\n\n        return {\n            read(): BinaryBuffer | null {\n                if (done) {\n                    return null;\n                }\n\n                const chunk = readable.read();\n                if (typeof chunk !== 'string') {\n                    done = true;\n\n                    // If we are instructed to add a BOM but we detect that no\n                    // bytes have been written, we must ensure to return the BOM\n                    // ourselves so that we comply with the contract.\n                    if (!bytesWritten && addBOM) {\n                        switch (encoding) {\n                            case UTF8:\n                            case UTF8_with_bom:\n                                return BinaryBuffer.wrap(Uint8Array.from(UTF8_BOM));\n                            case UTF16be:\n                                return BinaryBuffer.wrap(Uint8Array.from(UTF16be_BOM));\n                            case UTF16le:\n                                return BinaryBuffer.wrap(Uint8Array.from(UTF16le_BOM));\n                        }\n                    }\n\n                    const leftovers = encoder.end();\n                    if (leftovers && leftovers.length > 0) {\n                        bytesWritten = true;\n                        return BinaryBuffer.wrap(leftovers);\n                    }\n\n                    return null;\n                }\n\n                bytesWritten = true;\n\n                return BinaryBuffer.wrap(encoder.write(chunk));\n            }\n        };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event, Emitter } from './event';\nimport { isFunction, isObject } from './types';\n\nexport interface Disposable {\n    /**\n     * Dispose this object.\n     */\n    dispose(): void;\n}\n\nexport namespace Disposable {\n    export function is(arg: unknown): arg is Disposable {\n        return isObject<Disposable>(arg) && isFunction(arg.dispose);\n    }\n    export function create(func: () => void): Disposable {\n        return { dispose: func };\n    }\n    /** Always provides a reference to a new disposable. */\n    export declare const NULL: Disposable;\n}\n\n/**\n * Ensures that every reference to {@link Disposable.NULL} returns a new object,\n * as sharing a disposable between multiple {@link DisposableCollection} can have unexpected side effects\n */\nObject.defineProperty(Disposable, 'NULL', {\n    configurable: false,\n    enumerable: true,\n    get(): Disposable {\n        return { dispose: () => { } };\n    }\n});\n\n/**\n * Utility for tracking a collection of Disposable objects.\n *\n * This utility provides a number of benefits over just using an array of\n * Disposables:\n *\n * - the collection is auto-pruned when an element it contains is disposed by\n * any code that has a reference to it\n * - you can register to be notified when all elements in the collection have\n * been disposed [1]\n * - you can conveniently dispose all elements by calling dispose()\n * on the collection\n *\n * Unlike an array, however, this utility does not give you direct access to\n * its elements.\n *\n * Being notified when all elements are disposed is simple:\n * ```\n * const dc = new DisposableCollection(myDisposables);\n * dc.onDispose(() => {\n *    console.log('All elements in the collection have been disposed');\n * });\n * ```\n *\n * [1] The collection will notify only once. It will continue to function in so\n * far as accepting new Disposables and pruning them when they are disposed, but\n * such activity will never result in another notification.\n */\nexport class DisposableCollection implements Disposable {\n\n    protected readonly disposables: Disposable[] = [];\n    protected readonly onDisposeEmitter = new Emitter<void>();\n\n    constructor(...toDispose: Disposable[]) {\n        toDispose.forEach(d => this.push(d));\n    }\n\n    /**\n     * This event is fired only once\n     * on first dispose of not empty collection.\n     */\n    get onDispose(): Event<void> {\n        return this.onDisposeEmitter.event;\n    }\n\n    protected checkDisposed(): void {\n        if (this.disposed && !this.disposingElements) {\n            this.onDisposeEmitter.fire(undefined);\n            this.onDisposeEmitter.dispose();\n        }\n    }\n\n    get disposed(): boolean {\n        return this.disposables.length === 0;\n    }\n\n    private disposingElements = false;\n    dispose(): void {\n        if (this.disposed || this.disposingElements) {\n            return;\n        }\n        this.disposingElements = true;\n        while (!this.disposed) {\n            try {\n                this.disposables.pop()!.dispose();\n            } catch (e) {\n                console.error(e);\n            }\n        }\n        this.disposingElements = false;\n        this.checkDisposed();\n    }\n\n    push(disposable: Disposable): Disposable {\n        const disposables = this.disposables;\n        disposables.push(disposable);\n        const originalDispose = disposable.dispose.bind(disposable);\n        const toRemove = Disposable.create(() => {\n            const index = disposables.indexOf(disposable);\n            if (index !== -1) {\n                disposables.splice(index, 1);\n            }\n            this.checkDisposed();\n        });\n        disposable.dispose = () => {\n            toRemove.dispose();\n            disposable.dispose = originalDispose;\n            originalDispose();\n        };\n        return toRemove;\n    }\n\n    pushAll(disposables: Disposable[]): Disposable[] {\n        return disposables.map(disposable =>\n            this.push(disposable)\n        );\n    }\n\n}\n\nexport type DisposableGroup = { push(disposable: Disposable): void } | { add(disposable: Disposable): void };\nexport namespace DisposableGroup {\n    export function canPush(candidate?: DisposableGroup): candidate is { push(disposable: Disposable): void } {\n        return Boolean(candidate && (candidate as { push(): void }).push);\n    }\n    export function canAdd(candidate?: DisposableGroup): candidate is { add(disposable: Disposable): void } {\n        return Boolean(candidate && (candidate as { add(): void }).add);\n    }\n}\n\nexport function disposableTimeout(...args: Parameters<typeof setTimeout>): Disposable {\n    const handle = setTimeout(...args);\n    return { dispose: () => clearTimeout(handle) };\n}\n\n/**\n * Wrapper for a {@link Disposable} that is not available immediately.\n */\nexport class DisposableWrapper implements Disposable {\n\n    private disposed = false;\n    private disposable: Disposable | undefined = undefined;\n\n    set(disposable: Disposable): void {\n        if (this.disposed) {\n            disposable.dispose();\n        } else {\n            this.disposable = disposable;\n        }\n    }\n\n    dispose(): void {\n        this.disposed = true;\n        if (this.disposable) {\n            this.disposable.dispose();\n            this.disposable = undefined;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport interface Disposable {\n    dispose(): void;\n}\n\nexport function dispose<T extends Disposable>(disposable: T): T | undefined;\nexport function dispose<T extends Disposable>(...disposables: T[]): T[] | undefined;\nexport function dispose<T extends Disposable>(disposables: T[]): T[] | undefined;\nexport function dispose<T extends Disposable>(first: T | T[], ...rest: T[]): T | T[] | undefined {\n    if (Array.isArray(first)) {\n        first.forEach(d => d && d.dispose());\n        return [];\n    } else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    } else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport * as rpc from '../../common/plugin-api-rpc';\nimport { DocumentsExtImpl } from '../documents';\nimport { LinkedEditingRanges } from '../../common/plugin-api-rpc-model';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { coalesce } from '../../common/arrays';\nimport { fromRange, toPosition } from '../type-converters';\nimport { serializeRegExp } from '../languages-utils';\n\nexport class LinkedEditingRangeAdapter {\n\n    constructor(\n        private readonly documents: DocumentsExtImpl,\n        private readonly provider: theia.LinkedEditingRangeProvider\n    ) { }\n\n    async provideRanges(resource: URI, position: rpc.Position, token: theia.CancellationToken): Promise<LinkedEditingRanges | undefined> {\n\n        const doc = this.documents.getDocument(resource);\n        const pos = toPosition(position);\n\n        const value = await this.provider.provideLinkedEditingRanges(doc, pos, token);\n        if (value && Array.isArray(value.ranges)) {\n            return {\n                ranges: coalesce(value.ranges.map(r => fromRange(r))),\n                wordPattern: serializeRegExp(value.wordPattern)\n            };\n        }\n        return undefined;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// copied and modified from https://github.com/microsoft/vscode/blob/53eac52308c4611000a171cc7bf1214293473c78/src/vs/workbench/api/common/extHostCustomEditors.ts\n\nimport { CustomEditorsExt, CustomEditorsMain, Plugin, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport * as theia from '@theia/plugin';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Disposable, URI } from './types-impl';\nimport { UriComponents } from '../common/uri-components';\nimport { DocumentsExtImpl } from './documents';\nimport { WebviewsExtImpl } from './webviews';\nimport { CancellationToken, CancellationTokenSource } from '@theia/core/lib/common/cancellation';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Cache } from '../common/cache';\nimport * as Converters from './type-converters';\n\nexport class CustomEditorsExtImpl implements CustomEditorsExt {\n    private readonly proxy: CustomEditorsMain;\n    private readonly editorProviders = new EditorProviderStore();\n    private readonly documents = new CustomDocumentStore();\n\n    constructor(rpc: RPCProtocol,\n        private readonly documentExt: DocumentsExtImpl,\n        private readonly webviewExt: WebviewsExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.CUSTOM_EDITORS_MAIN);\n    }\n\n    registerCustomEditorProvider(\n        viewType: string,\n        provider: theia.CustomReadonlyEditorProvider | theia.CustomTextEditorProvider,\n        options: { webviewOptions?: theia.WebviewPanelOptions, supportsMultipleEditorsPerDocument?: boolean },\n        plugin: Plugin\n    ): theia.Disposable {\n        const disposables = new DisposableCollection();\n        if ('resolveCustomTextEditor' in provider) {\n            disposables.push(this.editorProviders.addTextProvider(viewType, plugin, provider));\n            this.proxy.$registerTextEditorProvider(viewType, options.webviewOptions || {}, {\n                supportsMove: !!provider.moveCustomTextEditor,\n            });\n        } else {\n            disposables.push(this.editorProviders.addCustomProvider(viewType, plugin, provider));\n\n            if (this.supportEditing(provider)) {\n                disposables.push(provider.onDidChangeCustomDocument((e: theia.CustomDocumentEditEvent | theia.CustomDocumentContentChangeEvent) => {\n                    const entry = this.getCustomDocumentEntry(viewType, e.document.uri);\n                    if (isEditEvent(e)) {\n                        const editId = entry.addEdit(e);\n                        this.proxy.$onDidEdit(e.document.uri, viewType, editId, e.label);\n                    } else {\n                        this.proxy.$onContentChange(e.document.uri, viewType);\n                    }\n                }));\n            }\n\n            this.proxy.$registerCustomEditorProvider(viewType, options.webviewOptions || {}, !!options.supportsMultipleEditorsPerDocument);\n        }\n\n        return Disposable.from(\n            disposables,\n            Disposable.create(() => {\n                this.proxy.$unregisterEditorProvider(viewType);\n            })\n        );\n    }\n\n    async $createCustomDocument(resource: UriComponents, viewType: string, openContext: theia.CustomDocumentOpenContext, cancellation: CancellationToken): Promise<{\n        editable: boolean;\n    }> {\n        const entry = this.editorProviders.get(viewType);\n        if (!entry) {\n            throw new Error(`No provider found for '${viewType}'`);\n        }\n\n        if (entry.type !== CustomEditorType.Custom) {\n            throw new Error(`Invalid provide type for '${viewType}'`);\n        }\n\n        const revivedResource = URI.revive(resource);\n        const document = await entry.provider.openCustomDocument(revivedResource, openContext, cancellation);\n        this.documents.add(viewType, document);\n\n        return { editable: this.supportEditing(entry.provider) };\n    }\n\n    async $disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void> {\n        const entry = this.editorProviders.get(viewType);\n        if (!entry) {\n            throw new Error(`No provider found for '${viewType}'`);\n        }\n\n        if (entry.type !== CustomEditorType.Custom) {\n            throw new Error(`Invalid provider type for '${viewType}'`);\n        }\n\n        const revivedResource = URI.revive(resource);\n        const { document } = this.getCustomDocumentEntry(viewType, revivedResource);\n        this.documents.delete(viewType, document);\n        document.dispose();\n    }\n\n    async $resolveWebviewEditor(\n        resource: UriComponents,\n        handler: string,\n        viewType: string,\n        title: string,\n        position: number,\n        options: theia.WebviewPanelOptions,\n        cancellation: CancellationToken\n    ): Promise<void> {\n        const entry = this.editorProviders.get(viewType);\n        if (!entry) {\n            throw new Error(`No provider found for '${viewType}'`);\n        }\n        const viewColumn = Converters.toViewColumn(position);\n        const panel = this.webviewExt.createWebviewPanel(viewType, title, { viewColumn }, options, entry.plugin, handler, false);\n\n        const revivedResource = URI.revive(resource);\n\n        switch (entry.type) {\n            case CustomEditorType.Custom: {\n                const { document } = this.getCustomDocumentEntry(viewType, revivedResource);\n                return entry.provider.resolveCustomEditor(document, panel, cancellation);\n            }\n            case CustomEditorType.Text: {\n                const document = this.documentExt.getDocument(revivedResource);\n                return entry.provider.resolveCustomTextEditor(document, panel, cancellation);\n            }\n            default: {\n                throw new Error('Unknown webview provider type');\n            }\n        }\n    }\n\n    getCustomDocumentEntry(viewType: string, resource: UriComponents): CustomDocumentStoreEntry {\n        const entry = this.documents.get(viewType, URI.revive(resource));\n        if (!entry) {\n            throw new Error('No custom document found');\n        }\n        return entry;\n    }\n\n    $disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void {\n        const document = this.getCustomDocumentEntry(viewType, resourceComponents);\n        document.disposeEdits(editIds);\n    }\n\n    async $onMoveCustomEditor(handle: string, newResourceComponents: UriComponents, viewType: string): Promise<void> {\n        const entry = this.editorProviders.get(viewType);\n        if (!entry) {\n            throw new Error(`No provider found for '${viewType}'`);\n        }\n\n        if (!(entry.provider as theia.CustomTextEditorProvider).moveCustomTextEditor) {\n            throw new Error(`Provider does not implement move '${viewType}'`);\n        }\n\n        const webview = this.webviewExt.getWebviewPanel(handle);\n        if (!webview) {\n            throw new Error('No webview found');\n        }\n\n        const resource = URI.revive(newResourceComponents);\n        const document = this.documentExt.getDocument(resource);\n        const cancellationSource = new CancellationTokenSource();\n        await (entry.provider as theia.CustomTextEditorProvider).moveCustomTextEditor!(document, webview, cancellationSource.token);\n    }\n\n    async $undo(resourceComponents: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void> {\n        const entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n        await entry.undo(editId, isDirty);\n    }\n\n    async $redo(resourceComponents: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void> {\n        const entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n        await entry.redo(editId, isDirty);\n    }\n\n    async $revert(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void> {\n        const entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n        const provider = this.getCustomEditorProvider(viewType);\n        await provider.revertCustomDocument(entry.document, cancellation);\n    }\n\n    async $save(resourceComponents: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void> {\n        const entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n        const provider = this.getCustomEditorProvider(viewType);\n        await provider.saveCustomDocument(entry.document, cancellation);\n    }\n\n    async $saveAs(resourceComponents: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void> {\n        const entry = this.getCustomDocumentEntry(viewType, resourceComponents);\n        const provider = this.getCustomEditorProvider(viewType);\n        await provider.saveCustomDocumentAs(entry.document, URI.revive(targetResource), cancellation);\n    }\n\n    private getCustomEditorProvider(viewType: string): theia.CustomEditorProvider {\n        const entry = this.editorProviders.get(viewType);\n        const provider = entry?.provider;\n        if (!provider || !this.supportEditing(provider)) {\n            throw new Error('Custom document is not editable');\n        }\n        return provider;\n    }\n\n    private supportEditing(\n        provider: theia.CustomTextEditorProvider | theia.CustomEditorProvider | theia.CustomReadonlyEditorProvider\n    ): provider is theia.CustomEditorProvider {\n        return !!(provider as theia.CustomEditorProvider).onDidChangeCustomDocument;\n    }\n}\n\nfunction isEditEvent(e: theia.CustomDocumentContentChangeEvent | theia.CustomDocumentEditEvent): e is theia.CustomDocumentEditEvent {\n    return typeof (e as theia.CustomDocumentEditEvent).undo === 'function'\n        && typeof (e as theia.CustomDocumentEditEvent).redo === 'function';\n}\n\nclass CustomDocumentStoreEntry {\n    constructor(\n        readonly document: theia.CustomDocument,\n    ) { }\n\n    private readonly edits = new Cache<theia.CustomDocumentEditEvent>('custom documents');\n\n    addEdit(item: theia.CustomDocumentEditEvent): number {\n        return this.edits.add([item]);\n    }\n\n    async undo(editId: number, isDirty: boolean): Promise<void> {\n        await this.getEdit(editId).undo();\n    }\n\n    async redo(editId: number, isDirty: boolean): Promise<void> {\n        await this.getEdit(editId).redo();\n    }\n\n    disposeEdits(editIds: number[]): void {\n        for (const id of editIds) {\n            this.edits.delete(id);\n        }\n    }\n\n    private getEdit(editId: number): theia.CustomDocumentEditEvent {\n        const edit = this.edits.get(editId, 0);\n        if (!edit) {\n            throw new Error('No edit found');\n        }\n        return edit;\n    }\n}\n\nconst enum CustomEditorType {\n    Text,\n    Custom\n}\n\ntype ProviderEntry = {\n    readonly plugin: Plugin;\n    readonly type: CustomEditorType.Text;\n    readonly provider: theia.CustomTextEditorProvider;\n} | {\n    readonly plugin: Plugin;\n    readonly type: CustomEditorType.Custom;\n    readonly provider: theia.CustomReadonlyEditorProvider;\n};\n\nclass EditorProviderStore {\n    private readonly providers = new Map<string, ProviderEntry>();\n\n    addTextProvider(viewType: string, plugin: Plugin, provider: theia.CustomTextEditorProvider): theia.Disposable {\n        return this.add(CustomEditorType.Text, viewType, plugin, provider);\n    }\n\n    addCustomProvider(viewType: string, plugin: Plugin, provider: theia.CustomReadonlyEditorProvider): theia.Disposable {\n        return this.add(CustomEditorType.Custom, viewType, plugin, provider);\n    }\n\n    get(viewType: string): ProviderEntry | undefined {\n        return this.providers.get(viewType);\n    }\n\n    private add(type: CustomEditorType, viewType: string,\n        plugin: Plugin, provider: theia.CustomTextEditorProvider | theia.CustomReadonlyEditorProvider): theia.Disposable {\n        if (this.providers.has(viewType)) {\n            throw new Error(`Provider for viewType:${viewType} already registered`);\n        }\n        this.providers.set(viewType, { type, plugin: plugin, provider } as ProviderEntry);\n        return new Disposable(() => this.providers.delete(viewType));\n    }\n}\n\nclass CustomDocumentStore {\n    private readonly documents = new Map<string, CustomDocumentStoreEntry>();\n\n    get(viewType: string, resource: theia.Uri): CustomDocumentStoreEntry | undefined {\n        return this.documents.get(this.key(viewType, resource));\n    }\n\n    add(viewType: string, document: theia.CustomDocument): CustomDocumentStoreEntry {\n        const key = this.key(viewType, document.uri);\n        if (this.documents.has(key)) {\n            throw new Error(`Document already exists for viewType:${viewType} resource:${document.uri}`);\n        }\n        const entry = new CustomDocumentStoreEntry(document);\n        this.documents.set(key, entry);\n        return entry;\n    }\n\n    delete(viewType: string, document: theia.CustomDocument): void {\n        const key = this.key(viewType, document.uri);\n        this.documents.delete(key);\n    }\n\n    private key(viewType: string, resource: theia.Uri): string {\n        return `${viewType}@@@${resource}`;\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nfunction is(userAgent: string, platform: string): boolean {\n    if (typeof navigator !== 'undefined') {\n        if (navigator.userAgent && navigator.userAgent.indexOf(userAgent) >= 0) {\n            return true;\n        }\n    }\n    if (typeof process !== 'undefined') {\n        return (process.platform === platform);\n    }\n    return false;\n}\n\nexport const isWindows = is('Windows', 'win32');\nexport const isOSX = is('Mac', 'darwin');\n\nexport const EOL = isWindows ? '\\r\\n' : '\\n';\n\nexport type CMD = [string, string[]];\nexport function cmd(command: string, ...args: string[]): CMD {\n    return [\n        isWindows ? 'cmd' : command,\n        isWindows ? ['/c', command, ...args] : args\n    ];\n}\n\nexport namespace OS {\n\n    /**\n     * Enumeration of the supported operating systems.\n     */\n    export enum Type {\n        Windows = 'Windows',\n        Linux = 'Linux',\n        OSX = 'OSX'\n    }\n\n    /**\n     * Returns with the type of the operating system. If it is neither [Windows](isWindows) nor [OS X](isOSX), then\n     * it always return with the `Linux` OS type.\n     */\n    export function type(): OS.Type {\n        if (isWindows) {\n            return Type.Windows;\n        }\n        if (isOSX) {\n            return Type.OSX;\n        }\n        return Type.Linux;\n    }\n\n    export const backend = {\n        type,\n        isWindows,\n        isOSX,\n        EOL\n    };\n\n}\n\nexport const OSBackendProviderPath = '/os';\n\nexport const OSBackendProvider = Symbol('OSBackendProvider');\n\nexport interface OSBackendProvider {\n    getBackendOS(): Promise<OS.Type>;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * Denotes a column in the editor window.\n * Columns are used to show editors side by side.\n */\nexport enum ViewColumn {\n    Active = -1,\n    Beside = -2,\n    One = 1,\n    Two = 2,\n    Three = 3,\n    Four = 4,\n    Five = 5,\n    Six = 6,\n    Seven = 7,\n    Eight = 8,\n    Nine = 9\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// copied from https://github.com/microsoft/vscode/blob/1.37.0/src/vs/base/common/types.ts\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nimport { isObject as isObject0 } from '@theia/core/lib/common';\n\n/**\n * Returns `true` if the parameter has type \"object\" and not null, an array, a regexp, a date.\n */\nexport function isObject(obj: unknown): boolean {\n    return isObject0(obj)\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n    if (!isObject(destination)) {\n        return source;\n    }\n\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    } else {\n                        destination[key] = source[key];\n                    }\n                }\n            } else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\n\nexport enum LogType {\n    Info,\n    Error\n}\n\nexport interface LogPart {\n    data: string;\n    type: LogType;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface KeysToAnyValues { [key: string]: any }\nexport interface KeysToKeysToAnyValue { [key: string]: KeysToAnyValues }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/** copied from https://github.com/TypeFox/vscode/blob/70b8db24a37fafc77247de7f7cb5bb0195120ed0/src/vs/workbench/api/common/extHostTypes.ts#L18-L27 */\nexport function es5ClassCompat<T extends Function>(target: T): T {\n    // @ts-ignore\n    function _(): any { return Reflect.construct(target, arguments, this.constructor); }\n    Object.defineProperty(_, 'name', Object.getOwnPropertyDescriptor(target, 'name')!);\n    Object.setPrototypeOf(_, target);\n    Object.setPrototypeOf(_.prototype, target.prototype);\n    return _ as unknown as T;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\nconst _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n    return typeof (obj) === _typeof.undefined;\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n    return isUndefined(obj) || obj === null; // eslint-disable-line no-null/no-null\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n\n    return arg;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 RedHat and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { PLUGIN_RPC_CONTEXT, ClipboardMain } from '../common';\n\n@injectable()\nexport class ClipboardExt implements theia.Clipboard {\n\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    protected proxy: ClipboardMain;\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.CLIPBOARD_MAIN);\n    }\n\n    readText(): Promise<string> {\n        return this.proxy.$readText();\n    }\n\n    writeText(value: string): Promise<void> {\n        return this.proxy.$writeText(value);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/buffer.ts\n\n/* eslint-disable no-null/no-null */\n\nimport { Buffer as SaferBuffer } from 'safer-buffer';\nimport * as iconv from 'iconv-lite';\nimport * as streams from './stream';\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class BinaryBuffer {\n\n    static alloc(byteLength: number): BinaryBuffer {\n        if (hasBuffer) {\n            return new BinaryBuffer(Buffer.allocUnsafe(byteLength));\n        } else {\n            return new BinaryBuffer(new Uint8Array(byteLength));\n        }\n    }\n\n    static wrap(actual: Uint8Array): BinaryBuffer {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new BinaryBuffer(actual);\n    }\n\n    static fromString(source: string): BinaryBuffer {\n        if (hasBuffer) {\n            return new BinaryBuffer(Buffer.from(source));\n        } else if (hasTextEncoder) {\n            if (!textEncoder) {\n                textEncoder = new TextEncoder();\n            }\n            return new BinaryBuffer(textEncoder.encode(source));\n        } else {\n            return new BinaryBuffer(iconv.encode(source, 'utf8'));\n        }\n    }\n\n    static concat(buffers: BinaryBuffer[], totalLength?: number): BinaryBuffer {\n        if (typeof totalLength === 'undefined') {\n            totalLength = 0;\n            for (let i = 0, len = buffers.length; i < len; i++) {\n                totalLength += buffers[i].byteLength;\n            }\n        }\n\n        const ret = BinaryBuffer.alloc(totalLength);\n        let offset = 0;\n        for (let i = 0, len = buffers.length; i < len; i++) {\n            const element = buffers[i];\n            ret.set(element, offset);\n            offset += element.byteLength;\n        }\n\n        return ret;\n    }\n\n    readonly buffer: Uint8Array;\n    readonly byteLength: number;\n\n    private constructor(buffer: Uint8Array) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n\n    toString(): string {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        } else if (hasTextDecoder) {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        } else {\n            return iconv.decode(SaferBuffer.from(this.buffer), 'utf8');\n        }\n    }\n\n    slice(start?: number, end?: number): BinaryBuffer {\n        // IMPORTANT: use subarray instead of slice because TypedArray#slice\n        // creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n        // ensures the same, performant, behaviour.\n        return new BinaryBuffer(this.buffer.subarray(start, end));\n    }\n\n    set(array: BinaryBuffer, offset?: number): void;\n    set(array: Uint8Array, offset?: number): void;\n    set(array: BinaryBuffer | Uint8Array, offset?: number): void {\n        if (array instanceof BinaryBuffer) {\n            this.buffer.set(array.buffer, offset);\n        } else {\n            this.buffer.set(array, offset);\n        }\n    }\n\n    readUInt32BE(offset: number): number {\n        return (\n            this.buffer[offset] * 2 ** 24\n            + this.buffer[offset + 1] * 2 ** 16\n            + this.buffer[offset + 2] * 2 ** 8\n            + this.buffer[offset + 3]\n        );\n    }\n\n    writeUInt32BE(value: number, offset: number): void {\n        this.buffer[offset + 3] = value;\n        value = value >>> 8;\n        this.buffer[offset + 2] = value;\n        value = value >>> 8;\n        this.buffer[offset + 1] = value;\n        value = value >>> 8;\n        this.buffer[offset] = value;\n    }\n\n    readUInt32LE(offset: number): number {\n        return (\n            ((this.buffer[offset + 0] << 0) >>> 0) |\n            ((this.buffer[offset + 1] << 8) >>> 0) |\n            ((this.buffer[offset + 2] << 16) >>> 0) |\n            ((this.buffer[offset + 3] << 24) >>> 0)\n        );\n    }\n\n    writeUInt32LE(value: number, offset: number): void {\n        this.buffer[offset + 0] = (value & 0b11111111);\n        value = value >>> 8;\n        this.buffer[offset + 1] = (value & 0b11111111);\n        value = value >>> 8;\n        this.buffer[offset + 2] = (value & 0b11111111);\n        value = value >>> 8;\n        this.buffer[offset + 3] = (value & 0b11111111);\n    }\n\n    readUInt8(offset: number): number {\n        return this.buffer[offset];\n    }\n\n    writeUInt8(value: number, offset: number): void {\n        this.buffer[offset] = value;\n    }\n\n}\n\nexport interface BinaryBufferReadable extends streams.Readable<BinaryBuffer> { }\nexport namespace BinaryBufferReadable {\n    export function toBuffer(readable: BinaryBufferReadable): BinaryBuffer {\n        return streams.consumeReadable<BinaryBuffer>(readable, chunks => BinaryBuffer.concat(chunks));\n    }\n    export function fromBuffer(buffer: BinaryBuffer): BinaryBufferReadable {\n        return streams.toReadable<BinaryBuffer>(buffer);\n    }\n    export function fromReadable(readable: streams.Readable<string>): BinaryBufferReadable {\n        return {\n            read(): BinaryBuffer | null {\n                const value = readable.read();\n\n                if (typeof value === 'string') {\n                    return BinaryBuffer.fromString(value);\n                }\n\n                return null;\n            }\n        };\n    }\n}\n\nexport interface BinaryBufferReadableStream extends streams.ReadableStream<BinaryBuffer> { }\nexport namespace BinaryBufferReadableStream {\n    export function toBuffer(stream: BinaryBufferReadableStream): Promise<BinaryBuffer> {\n        return streams.consumeStream<BinaryBuffer>(stream, chunks => BinaryBuffer.concat(chunks));\n    }\n    export function fromBuffer(buffer: BinaryBuffer): BinaryBufferReadableStream {\n        return streams.toStream<BinaryBuffer>(buffer, chunks => BinaryBuffer.concat(chunks));\n    }\n}\n\nexport interface BinaryBufferReadableBufferedStream extends streams.ReadableBufferedStream<BinaryBuffer> { }\nexport namespace BinaryBufferReadableBufferedStream {\n    export async function toBuffer(bufferedStream: streams.ReadableBufferedStream<BinaryBuffer>): Promise<BinaryBuffer> {\n        if (bufferedStream.ended) {\n            return BinaryBuffer.concat(bufferedStream.buffer);\n        }\n\n        return BinaryBuffer.concat([\n\n            // Include already read chunks...\n            ...bufferedStream.buffer,\n\n            // ...and all additional chunks\n            await BinaryBufferReadableStream.toBuffer(bufferedStream.stream)\n        ]);\n    }\n}\n\nexport interface BinaryBufferWriteableStream extends streams.WriteableStream<BinaryBuffer> { }\nexport namespace BinaryBufferWriteableStream {\n    export function create(options?: streams.WriteableStreamOptions): BinaryBufferWriteableStream {\n        return streams.newWriteableStream<BinaryBuffer>(chunks => BinaryBuffer.concat(chunks), options);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { UriComponents } from './uri-components';\n\n/**\n * Protocol interfaces for MCP server definition providers.\n */\n\nexport interface McpStdioServerDefinitionDto {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The working directory used to start the server.\n     */\n    cwd?: UriComponents;\n\n    /**\n     * The command used to start the server. Node.js-based servers may use\n     * `process.execPath` to use the editor's version of Node.js to run the script.\n     */\n    command: string;\n\n    /**\n     * Additional command-line arguments passed to the server.\n     */\n    args?: string[];\n\n    /**\n     * Optional additional environment information for the server. Variables\n     * in this environment will overwrite or remove (if null) the default\n     * environment variables of the editor's extension host.\n     */\n    env?: Record<string, string | number | null>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n\n}\n\n/**\n * McpHttpServerDefinition represents an MCP server available using the\n * Streamable HTTP transport.\n */\nexport interface McpHttpServerDefinitionDto {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The URI of the server. The editor will make a POST request to this URI\n     * to begin each session.\n     */\n    uri: UriComponents;\n\n    /**\n     * Optional additional heads included with each request to the server.\n     */\n    headers?: Record<string, string>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n}\n\n/**\n * Definitions that describe different types of Model Context Protocol servers,\n * which can be returned from the {@link McpServerDefinitionProvider}.\n */\nexport type McpServerDefinitionDto = McpStdioServerDefinitionDto | McpHttpServerDefinitionDto;\nexport const isMcpHttpServerDefinitionDto = (definition: McpServerDefinitionDto): definition is McpHttpServerDefinitionDto => 'uri' in definition;\n/**\n * Main side of the MCP server definition registry.\n */\nexport interface McpServerDefinitionRegistryMain {\n    /**\n     * Register an MCP server definition provider.\n     */\n    $registerMcpServerDefinitionProvider(handle: number, name: string): void;\n\n    /**\n     * Unregister an MCP server definition provider.\n     */\n    $unregisterMcpServerDefinitionProvider(handle: number): void;\n\n    /**\n     * Notify that server definitions have changed.\n     */\n    $onDidChangeMcpServerDefinitions(handle: number): void;\n\n    /**\n     * Get server definitions from a provider.\n     */\n    $getServerDefinitions(handle: number): Promise<McpServerDefinitionDto[]>;\n\n    /**\n     * Resolve a server definition.\n     */\n    $resolveServerDefinition(handle: number, server: McpServerDefinitionDto): Promise<McpServerDefinitionDto | undefined>;\n}\n\n/**\n * Extension side of the MCP server definition registry.\n */\nexport interface McpServerDefinitionRegistryExt {\n    /**\n     * Request server definitions from a provider.\n     */\n    $provideServerDefinitions(handle: number): Promise<McpServerDefinitionDto[]>;\n\n    /**\n     * Resolve a server definition from a provider.\n     */\n    $resolveServerDefinition(handle: number, server: McpServerDefinitionDto): Promise<McpServerDefinitionDto | undefined>;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject } from '@theia/core/lib/common/types';\n\nexport function illegalArgument(message?: string): Error {\n    if (message) {\n        return new Error(`Illegal argument: ${message}`);\n    } else {\n        return new Error('Illegal argument');\n    }\n}\n\nexport function readonly(name?: string): Error {\n    if (name) {\n        return new Error(`readonly property '${name} cannot be changed'`);\n    } else {\n        return new Error('readonly property cannot be changed');\n    }\n}\n\nexport function disposed(what: string): Error {\n    const result = new Error(`${what} has been disposed`);\n    result.name = 'DISPOSED';\n    return result;\n}\n\ninterface Errno {\n    readonly code: string;\n    readonly errno: number\n}\nconst ENOENT = 'ENOENT' as const;\n\ntype ErrnoException = Error & Errno;\nfunction isErrnoException(arg: unknown): arg is ErrnoException {\n    return arg instanceof Error\n        && isObject<Partial<Errno>>(arg)\n        && typeof arg.code === 'string'\n        && typeof arg.errno === 'number';\n}\n\n/**\n * _(No such file or directory)_: Commonly raised by `fs` operations to indicate that a component of the specified pathname does not exist — no entity (file or directory) could be\n * found by the given path.\n */\nexport function isENOENT(\n    arg: unknown\n): arg is ErrnoException & Readonly<{ code: typeof ENOENT }> {\n    return isErrnoException(arg) && arg.code === ENOENT;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ColorTheme, ColorThemeKind } from './types-impl';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { ThemingExt } from '../common';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { ThemeType } from '@theia/core/lib/common/theme';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/5ddbda0172d80bfbb2529987ba9020848e8771f7/src/vs/workbench/api/common/extHostTheming.ts\n\nexport class ThemingExtImpl implements ThemingExt {\n\n    private actual: ColorTheme;\n    private _onDidChangeActiveColorTheme: Emitter<ColorTheme>;\n\n    constructor(\n        readonly rpc: RPCProtocol\n    ) {\n        this.actual = new ColorTheme(ColorThemeKind.Dark);\n        this._onDidChangeActiveColorTheme = new Emitter<ColorTheme>();\n    }\n\n    get activeColorTheme(): ColorTheme {\n        return this.actual;\n    }\n\n    $onColorThemeChange(type: ThemeType): void {\n        this.actual = new ColorTheme(this.convertKind(type));\n        this._onDidChangeActiveColorTheme.fire(this.actual);\n    }\n\n    protected convertKind(type: ThemeType): ColorThemeKind {\n        let kind: ColorThemeKind;\n        switch (type) {\n            case 'light':\n                kind = ColorThemeKind.Light;\n                break;\n            case 'dark':\n                kind = ColorThemeKind.Dark;\n                break;\n            case 'hc':\n                kind = ColorThemeKind.HighContrast;\n                break;\n            case 'hcLight':\n                kind = ColorThemeKind.HighContrastLight;\n                break;\n        }\n        return kind;\n    }\n\n    get onDidChangeActiveColorTheme(): Event<ColorTheme> {\n        return this._onDidChangeActiveColorTheme.event;\n    }\n\n}\n","module.exports = require('inversify');\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    PLUGIN_RPC_CONTEXT,\n    AbstractPluginManagerExt,\n    NotificationMain,\n    MainMessageType,\n    MessageRegistryMain,\n    PluginManagerExt,\n    PluginManager,\n    Plugin,\n    PluginAPI,\n    ConfigStorage,\n    PluginManagerInitializeParams,\n    PluginManagerStartParams,\n    TerminalServiceExt,\n    LocalizationExt,\n    ExtensionKind\n} from '../common/plugin-api-rpc';\nimport { PluginMetadata, PluginJsonValidationContribution } from '../common/plugin-protocol';\nimport * as theia from '@theia/plugin';\nimport * as types from './types-impl';\nimport { join } from './path';\nimport { EnvExtImpl } from './env';\nimport { PreferenceRegistryExtImpl } from './preference-registry';\nimport { InternalStorageExt, Memento, GlobalState } from './plugin-storage';\nimport { ExtPluginApi } from '../common/plugin-ext-api-contribution';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { WebviewsExtImpl } from './webviews';\nimport { URI as Uri } from './types-impl';\nimport { InternalSecretsExt, SecretStorageExt } from '../plugin/secrets-ext';\nimport { PluginExt } from './plugin-context';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { PluginLogger } from './logger';\n\nexport interface PluginHost {\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    loadPlugin(plugin: Plugin): any;\n\n    init(data: PluginMetadata[]): Promise<[Plugin[], Plugin[]]> | [Plugin[], Plugin[]];\n\n    initExtApi(extApi: ExtPluginApi[]): void;\n\n    loadTests?(): Promise<void>;\n}\n\ninterface StopFn {\n    (): void | Promise<void>;\n}\n\ninterface StopOptions {\n    /**\n     * if terminating then stopping will ignore all errors,\n     * since the main side is already gone and any requests are likely to fail\n     * or hang\n     */\n    terminating: boolean\n}\n\nclass ActivatedPlugin {\n    constructor(public readonly pluginContext: theia.PluginContext,\n        public readonly exports?: PluginAPI,\n        public readonly stopFn?: StopFn) {\n    }\n}\n\nexport const MinimalTerminalServiceExt = Symbol('MinimalTerminalServiceExt');\nexport type MinimalTerminalServiceExt = Pick<TerminalServiceExt,\n    'getEnvironmentVariableCollection' | '$initEnvironmentVariableCollections' | '$setShell'>;\n\n@injectable()\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport abstract class AbstractPluginManagerExtImpl<P extends Record<string, any>> implements AbstractPluginManagerExt<P>, PluginManager {\n\n    @inject(EnvExtImpl)\n    protected readonly envExt: EnvExtImpl;\n\n    @inject(MinimalTerminalServiceExt)\n    protected readonly terminalService: MinimalTerminalServiceExt;\n\n    @inject(InternalStorageExt)\n    protected readonly storage: InternalStorageExt;\n\n    @inject(InternalSecretsExt)\n    protected readonly secrets: InternalSecretsExt;\n\n    @inject(LocalizationExt)\n    protected readonly localization: LocalizationExt;\n\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    // Cannot be Inversify-injected because it induces a dependency cycle\n    protected host: PluginHost;\n\n    private configStorage: ConfigStorage | undefined;\n    private readonly registry = new Map<string, Plugin>();\n    private readonly activations = new Map<string, (() => Promise<void>)[] | undefined>();\n    /** promises to whether loading each plugin has been successful */\n    private readonly loadedPlugins = new Map<string, Promise<boolean>>();\n    private readonly activatedPlugins = new Map<string, ActivatedPlugin>();\n    private readonly pluginContextsMap = new Map<string, theia.PluginContext>();\n\n    private onDidChangeEmitter = new Emitter<void>();\n    private messageRegistryProxy: MessageRegistryMain;\n    private notificationMain: NotificationMain;\n    private logger: PluginLogger;\n\n    protected jsonValidation: PluginJsonValidationContribution[] = [];\n    protected pluginKind = ExtensionKind.UI;\n    protected ready = new Deferred();\n\n    @postConstruct()\n    initialize(): void {\n        this.messageRegistryProxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.MESSAGE_REGISTRY_MAIN);\n        this.notificationMain = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTIFICATION_MAIN);\n        this.logger = new PluginLogger(this.rpc, 'plugin-manager');\n    }\n\n    setPluginHost(pluginHost: PluginHost): void {\n        this.host = pluginHost;\n    }\n\n    abstract $init(params: P): Promise<void>;\n\n    async $stop(pluginId?: string): Promise<void> {\n        if (!pluginId) {\n            return this.stopAll();\n        }\n        this.registry.delete(pluginId);\n        this.pluginContextsMap.delete(pluginId);\n        this.loadedPlugins.delete(pluginId);\n        const plugin = this.activatedPlugins.get(pluginId);\n        if (!plugin) {\n            return;\n        }\n        this.activatedPlugins.delete(pluginId);\n        return this.stopPlugin(pluginId, plugin);\n    }\n\n    async terminate(): Promise<void> {\n        return this.stopAll({ terminating: true });\n    }\n\n    protected async stopAll(options: StopOptions = { terminating: false }): Promise<void> {\n        const promises = [];\n        for (const [id, plugin] of this.activatedPlugins) {\n            promises.push(this.stopPlugin(id, plugin, options));\n        }\n\n        this.registry.clear();\n        this.loadedPlugins.clear();\n        this.activatedPlugins.clear();\n        this.pluginContextsMap.clear();\n        await Promise.all(promises);\n    }\n\n    protected async stopPlugin(id: string, plugin: ActivatedPlugin, options: StopOptions = { terminating: false }): Promise<void> {\n        let result;\n        if (plugin.stopFn) {\n            try {\n                result = plugin.stopFn();\n            } catch (e) {\n                if (!options.terminating) {\n                    this.logger.error(`[${id}]: failed to stop:`, e);\n                }\n            }\n        }\n\n        const pluginContext = plugin.pluginContext;\n        if (pluginContext) {\n            for (const subscription of pluginContext.subscriptions) {\n                try {\n                    subscription.dispose();\n                } catch (e) {\n                    if (!options.terminating) {\n                        this.logger.error(`[${id}]: failed to dispose subscription:`, e);\n                    }\n                }\n            }\n        }\n\n        try {\n            await result;\n        } catch (e) {\n            if (!options.terminating) {\n                this.logger.error(`[${id}]: failed to stop:`, e);\n            }\n        }\n    }\n\n    async $start(params: PluginManagerStartParams): Promise<void> {\n        this.configStorage = params.configStorage;\n\n        const [plugins, foreignPlugins] = await this.host.init(params.plugins);\n        // add foreign plugins\n        for (const plugin of foreignPlugins) {\n            this.registerPlugin(plugin);\n        }\n        // add own plugins, before initialization\n        for (const plugin of plugins) {\n            this.registerPlugin(plugin);\n        }\n\n        // ensure plugins are registered before running activation events\n        this.ready.resolve();\n        // run eager plugins\n        await this.$activateByEvent('*');\n        for (const activationEvent of params.activationEvents) {\n            await this.$activateByEvent(activationEvent);\n        }\n\n        if (this.host.loadTests) {\n            return this.host.loadTests();\n        }\n\n        this.fireOnDidChange();\n    }\n\n    protected registerPlugin(plugin: Plugin): void {\n        if (plugin.model.id === 'vscode.json-language-features' && this.jsonValidation.length) {\n            // VS Code contributes all built-in validations via vscode.json-language-features;\n            // we enrich them with Theia validations registered on startup.\n            // Dynamic validations can be provided only via VS Code extensions.\n            // Content is fetched by the extension later via vscode.workspace.openTextDocument.\n            const contributes = plugin.rawModel.contributes = (plugin.rawModel.contributes || {});\n            contributes.jsonValidation = (contributes.jsonValidation || []).concat(this.jsonValidation);\n        }\n        this.registry.set(plugin.model.id, plugin);\n        const activationEvents = this.getActivationEvents(plugin);\n        if (plugin.pluginPath && activationEvents) {\n            const activation = () => this.$activatePlugin(plugin.model.id);\n            // an internal activation event is a subject to change\n            this.setActivation(`onPlugin:${plugin.model.id}`, activation);\n            const unsupportedActivationEvents = activationEvents.filter(e => !this.isSupportedActivationEvent(e));\n            if (unsupportedActivationEvents.length) {\n                this.logger.warn(\n                    `Unsupported activation events: ${unsupportedActivationEvents.join(', ')}, please open an issue: https://github.com/eclipse-theia/theia/issues/new`\n                );\n            }\n            for (let activationEvent of activationEvents) {\n                if (activationEvent === 'onUri') {\n                    activationEvent = `onUri:${this.envExt.uriScheme}://${plugin.model.id}`;\n                }\n                this.setActivation(activationEvent, activation);\n            }\n        }\n    }\n\n    protected getActivationEvents(plugin: Plugin): string[] | undefined {\n        const result = plugin.rawModel.activationEvents;\n        return Array.isArray(result) ? result : undefined;\n    }\n\n    protected abstract isSupportedActivationEvent(activationEvent: string): boolean;\n\n    protected setActivation(activationEvent: string, activation: () => Promise<void>): void {\n        const activations = this.activations.get(activationEvent) || [];\n        activations.push(activation);\n        this.activations.set(activationEvent, activations);\n    }\n\n    protected async loadPlugin(plugin: Plugin, configStorage: ConfigStorage, visited = new Set<string>()): Promise<boolean> {\n        // in order to break cycles\n        if (visited.has(plugin.model.id)) {\n            return true;\n        }\n        visited.add(plugin.model.id);\n\n        let loading = this.loadedPlugins.get(plugin.model.id);\n        if (!loading) {\n            loading = (async () => {\n                const progressId = await this.notificationMain.$startProgress({\n                    title: `Activating ${plugin.model.displayName || plugin.model.name}`,\n                    location: 'window'\n                });\n                try {\n                    if (plugin.rawModel.extensionDependencies) {\n                        for (const dependencyId of plugin.rawModel.extensionDependencies) {\n                            const dependency = this.registry.get(dependencyId.toLowerCase());\n                            if (dependency) {\n                                const loadedSuccessfully = await this.loadPlugin(dependency, configStorage, visited);\n                                if (!loadedSuccessfully) {\n                                    throw new Error(`Dependent plugin '${dependency.model.displayName || dependency.model.id}' failed to activate.`);\n                                }\n                            } else {\n                                throw new Error(`Dependent plugin '${dependencyId}' is not installed.`);\n                            }\n                        }\n                    }\n\n                    let pluginMain = this.host.loadPlugin(plugin);\n                    // see https://github.com/TypeFox/vscode/blob/70b8db24a37fafc77247de7f7cb5bb0195120ed0/src/vs/workbench/api/common/extHostExtensionService.ts#L372-L376\n                    pluginMain = pluginMain || {};\n                    await this.startPlugin(plugin, configStorage, pluginMain);\n                    return true;\n                } catch (err) {\n                    const message = `Activating plugin '${plugin.model.displayName || plugin.model.name}' failed:`;\n                    this.messageRegistryProxy.$showMessage(MainMessageType.Error, message + ' ' + err.message, {}, []);\n                    this.logger.error(message, err);\n                    return false;\n                } finally {\n                    this.notificationMain.$stopProgress(progressId);\n                }\n            })();\n        }\n        this.loadedPlugins.set(plugin.model.id, loading);\n        return loading;\n    }\n\n    async $updateStoragePath(path: string | undefined): Promise<void> {\n        if (this.configStorage) {\n            this.configStorage.hostStoragePath = path;\n        }\n        this.pluginContextsMap.forEach((pluginContext: theia.PluginContext, pluginId: string) => {\n            pluginContext.storagePath = path ? join(path, pluginId) : undefined;\n        });\n    }\n\n    async $activateByEvent(activationEvent: string): Promise<void> {\n        // Prevent the plugin manager from performing activations before plugins are registered\n        await this.ready.promise;\n        if (activationEvent.endsWith(':*')) {\n            const baseEvent = activationEvent.substring(0, activationEvent.length - 2);\n            await this.activateByBaseEvent(baseEvent);\n        } else {\n            await this.activateBySingleEvent(activationEvent);\n        }\n    }\n\n    protected async activateByBaseEvent(baseEvent: string): Promise<void> {\n        await Promise.all(Array.from(this.activations.keys(), activation => activation.startsWith(baseEvent) && this.activateBySingleEvent(activation)));\n    }\n\n    protected async activateBySingleEvent(activationEvent: string): Promise<void> {\n        const activations = this.activations.get(activationEvent);\n        if (!activations) {\n            return;\n        }\n        this.activations.set(activationEvent, undefined);\n        const pendingActivations = [];\n        while (activations.length) {\n            pendingActivations.push(activations.pop()!());\n        }\n        await Promise.all(pendingActivations);\n    }\n\n    async $activatePlugin(id: string): Promise<void> {\n        const plugin = this.registry.get(id);\n        if (plugin && this.configStorage) {\n            await this.loadPlugin(plugin, this.configStorage);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private async startPlugin(plugin: Plugin, configStorage: ConfigStorage, pluginMain: any): Promise<void> {\n        const subscriptions: theia.Disposable[] = [];\n        const asAbsolutePath = (relativePath: string): string => join(plugin.pluginFolder, relativePath);\n        const logPath = join(configStorage.hostLogPath, plugin.model.id); // todo check format\n        const storagePath = configStorage.hostStoragePath ? join(configStorage.hostStoragePath, plugin.model.id) : undefined;\n        const secrets = new SecretStorageExt(plugin, this.secrets);\n        const globalStoragePath = join(configStorage.hostGlobalStoragePath, plugin.model.id);\n        const extension = new PluginExt(this, plugin);\n        const extensionModeValue = plugin.isUnderDevelopment ? types.ExtensionMode.Development : types.ExtensionMode.Production;\n\n        const pluginContext: theia.PluginContext = {\n            extensionPath: extension.extensionPath,\n            extensionUri: extension.extensionUri,\n            globalState: new GlobalState(plugin.model.id, true, this.storage),\n            workspaceState: new Memento(plugin.model.id, false, this.storage),\n            subscriptions: subscriptions,\n            asAbsolutePath: asAbsolutePath,\n            logPath: logPath,\n            storagePath: storagePath,\n            storageUri: storagePath ? Uri.file(storagePath) : undefined,\n            secrets,\n            globalStoragePath: globalStoragePath,\n            globalStorageUri: Uri.file(globalStoragePath),\n            environmentVariableCollection: this.terminalService.getEnvironmentVariableCollection(plugin.model.id),\n            extensionMode: extensionModeValue,\n            extension,\n            logUri: Uri.file(logPath),\n            languageModelAccessInformation: {\n                /** @stubbed LanguageModelChat */\n                onDidChange: (listener, thisArgs?, disposables?) => Event.None(listener, thisArgs, disposables),\n                canSendRequest(chat: theia.LanguageModelChat): boolean | undefined {\n                    return undefined;\n                }\n            }\n        };\n        this.pluginContextsMap.set(plugin.model.id, pluginContext);\n\n        let stopFn = undefined;\n        if (typeof pluginMain[plugin.lifecycle.stopMethod] === 'function') {\n            stopFn = pluginMain[plugin.lifecycle.stopMethod];\n        }\n        const id = plugin.model.displayName || plugin.model.id;\n        if (typeof pluginMain[plugin.lifecycle.startMethod] === 'function') {\n            await this.localization.initializeLocalizedMessages(plugin, this.envExt.language);\n            const pluginExport = await pluginMain[plugin.lifecycle.startMethod].apply(getGlobal(), [pluginContext]);\n            this.logger.debug(`Calling activation function on plugin ${id}`);\n            this.activatedPlugins.set(plugin.model.id, new ActivatedPlugin(pluginContext, pluginExport, stopFn));\n        } else {\n            // https://github.com/TypeFox/vscode/blob/70b8db24a37fafc77247de7f7cb5bb0195120ed0/src/vs/workbench/api/common/extHostExtensionService.ts#L400-L401\n            this.logger.debug(`Plugin ${id}, ${plugin.lifecycle.startMethod} method is undefined so the module is the extension's exports`);\n            this.activatedPlugins.set(plugin.model.id, new ActivatedPlugin(pluginContext, pluginMain));\n        }\n    }\n\n    getPluginKind(): theia.ExtensionKind {\n        return this.pluginKind;\n    }\n\n    getAllPlugins(): Plugin[] {\n        return Array.from(this.registry.values());\n    }\n    getPluginExport(pluginId: string): PluginAPI | undefined {\n        const activePlugin = this.activatedPlugins.get(pluginId);\n        if (activePlugin) {\n            return activePlugin.exports;\n        }\n        return undefined;\n    }\n\n    getPluginById(pluginId: string): Plugin | undefined {\n        return this.registry.get(pluginId);\n    }\n\n    isRunning(pluginId: string): boolean {\n        return this.registry.has(pluginId);\n    }\n\n    isActive(pluginId: string): boolean {\n        return this.activatedPlugins.has(pluginId);\n    }\n\n    activatePlugin(pluginId: string): PromiseLike<void> {\n        return this.$activatePlugin(pluginId);\n    }\n\n    get onDidChange(): theia.Event<void> {\n        return this.onDidChangeEmitter.event;\n    }\n\n    protected fireOnDidChange(): void {\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n}\n\n@injectable()\nexport class PluginManagerExtImpl extends AbstractPluginManagerExtImpl<PluginManagerInitializeParams> implements PluginManagerExt {\n\n    @inject(PreferenceRegistryExtImpl)\n    protected readonly preferencesManager: PreferenceRegistryExtImpl;\n\n    @inject(WebviewsExtImpl)\n    protected readonly webview: WebviewsExtImpl;\n\n    private supportedActivationEvents: Set<string>;\n\n    async $init(params: PluginManagerInitializeParams): Promise<void> {\n        this.storage.init(params.globalState, params.workspaceState);\n\n        this.envExt.setQueryParameters(params.env.queryParams);\n        this.envExt.setUIKind(params.env.uiKind);\n        this.envExt.setLanguage(params.env.language);\n        this.terminalService.$setShell(params.env.shell);\n        this.envExt.setApplicationName(params.env.appName);\n        this.envExt.setAppHost(params.env.appHost);\n        this.envExt.setAppRoot(params.env.appRoot);\n        this.envExt.setAppUriScheme(params.env.appUriScheme);\n\n        this.preferencesManager.init(params.preferences);\n\n        if (params.extApi) {\n            this.host.initExtApi(params.extApi);\n        }\n\n        this.webview.init(params.webview);\n        this.jsonValidation = params.jsonValidation;\n        this.pluginKind = params.pluginKind;\n\n        this.supportedActivationEvents = new Set(params.supportedActivationEvents ?? []);\n    }\n\n    protected isSupportedActivationEvent(activationEvent: string): boolean {\n        return this.supportedActivationEvents.has(activationEvent.split(':')[0]);\n    }\n\n}\n\n// for electron\nfunction getGlobal(): Window | NodeJS.Global | null {\n    return typeof self === 'undefined' ? typeof global === 'undefined' ? null : global : self;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, Disposable, DisposableCollection, Emitter, Event, URI } from '@theia/core';\nimport { URI as TheiaURI } from '../types-impl';\nimport type * as theia from '@theia/plugin';\nimport {\n    NotebookCellStatusBarListDto, NotebookDataDto,\n    NotebookDocumentsAndEditorsDelta, NotebookDocumentShowOptions, NotebookDocumentsMain, NotebookEditorAddData, NotebookEditorsMain, NotebooksExt, NotebooksMain, Plugin,\n    PLUGIN_RPC_CONTEXT\n} from '../../common';\nimport { Cache } from '../../common/cache';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { UriComponents } from '../../common/uri-components';\nimport { CommandRegistryImpl, CommandsConverter } from '../command-registry';\nimport * as typeConverters from '../type-converters';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { Cell, NotebookDocument } from './notebook-document';\nimport { NotebookEditor } from './notebook-editor';\nimport { EditorsAndDocumentsExtImpl } from '../editors-and-documents';\nimport { DocumentsExtImpl } from '../documents';\nimport { CellUri, NotebookCellModelResource, NotebookModelResource } from '@theia/notebook/lib/common';\nimport { PluginLogger } from '../logger';\n\nexport class NotebooksExtImpl implements NotebooksExt {\n\n    private readonly notebookStatusBarItemProviders = new Map<number, theia.NotebookCellStatusBarItemProvider>();\n    private readonly commandsConverter: CommandsConverter;\n\n    private readonly onDidChangeActiveNotebookEditorEmitter = new Emitter<theia.NotebookEditor | undefined>();\n    readonly onDidChangeActiveNotebookEditor = this.onDidChangeActiveNotebookEditorEmitter.event;\n\n    private readonly onDidOpenNotebookDocumentEmitter = new Emitter<theia.NotebookDocument>();\n    onDidOpenNotebookDocument: Event<theia.NotebookDocument> = this.onDidOpenNotebookDocumentEmitter.event;\n    private readonly onDidCloseNotebookDocumentEmitter = new Emitter<theia.NotebookDocument>();\n    onDidCloseNotebookDocument: Event<theia.NotebookDocument> = this.onDidCloseNotebookDocumentEmitter.event;\n\n    private readonly onDidChangeVisibleNotebookEditorsEmitter = new Emitter<theia.NotebookEditor[]>();\n    onDidChangeVisibleNotebookEditors = this.onDidChangeVisibleNotebookEditorsEmitter.event;\n\n    private activeNotebookEditor: NotebookEditor | undefined;\n    get activeApiNotebookEditor(): theia.NotebookEditor | undefined {\n        return this.activeNotebookEditor?.apiEditor;\n    }\n\n    private visibleNotebookEditors: NotebookEditor[] = [];\n    get visibleApiNotebookEditors(): theia.NotebookEditor[] {\n        return this.visibleNotebookEditors.map(editor => editor.apiEditor);\n    }\n\n    private readonly documents = new Map<string, NotebookDocument>();\n    private readonly editors = new Map<string, NotebookEditor>();\n    private statusBarRegistry = new Cache<Disposable>('NotebookCellStatusBarCache');\n\n    private readonly notebookProxy: NotebooksMain;\n    private readonly notebookDocumentsProxy: NotebookDocumentsMain;\n    private readonly notebookEditors: NotebookEditorsMain;\n    private readonly logger: PluginLogger;\n\n    constructor(\n        rpc: RPCProtocol,\n        commands: CommandRegistryImpl,\n        private textDocumentsAndEditors: EditorsAndDocumentsExtImpl,\n        private textDocuments: DocumentsExtImpl,\n    ) {\n        this.commandsConverter = commands.converter;\n        this.notebookProxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTEBOOKS_MAIN);\n        this.notebookDocumentsProxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTEBOOK_DOCUMENTS_MAIN);\n        this.notebookEditors = rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTEBOOK_EDITORS_MAIN);\n        this.logger = new PluginLogger(rpc, 'notebook');\n\n        commands.registerArgumentProcessor({\n            processArgument: arg => {\n                if (NotebookModelResource.is(arg)) {\n                    return this.documents.get(arg.notebookModelUri.toString())?.apiNotebook;\n                } else if (NotebookCellModelResource.is(arg)) {\n                    const cellUri = CellUri.parse(arg.notebookCellModelUri);\n                    if (cellUri) {\n                        return this.documents.get(cellUri?.notebook.toString())?.getCell(cellUri.handle)?.apiCell;\n                    }\n                    return undefined;\n                } else {\n                    return arg;\n                }\n            }\n        });\n\n        textDocumentsAndEditors.onDidChangeActiveTextEditor(e => {\n            if (e && e?.document.uri.scheme !== CellUri.cellUriScheme && this.activeNotebookEditor) {\n                this.activeNotebookEditor = undefined;\n                this.onDidChangeActiveNotebookEditorEmitter.fire(undefined);\n            }\n        });\n    }\n\n    async $provideNotebookCellStatusBarItems(handle: number, uri: UriComponents, index: number, token: CancellationToken): Promise<NotebookCellStatusBarListDto | undefined> {\n        const provider = this.notebookStatusBarItemProviders.get(handle);\n        const revivedUri = URI.fromComponents(uri);\n        const document = this.documents.get(revivedUri.toString());\n        if (!document || !provider) {\n            return;\n        }\n\n        const cell = document.getCellFromIndex(index);\n        if (!cell) {\n            return;\n        }\n\n        const result = await provider.provideCellStatusBarItems(cell.apiCell, token);\n        if (!result) {\n            return undefined;\n        }\n\n        const disposables = new DisposableCollection();\n        const cacheId = this.statusBarRegistry.add([disposables]);\n        const resultArr = Array.isArray(result) ? result : [result];\n        const items = resultArr.map(item => typeConverters.NotebookStatusBarItem.from(item, this.commandsConverter, disposables));\n        return {\n            cacheId,\n            items\n        };\n    }\n\n    $releaseNotebookCellStatusBarItems(cacheId: number): void {\n        this.statusBarRegistry.delete(cacheId);\n    }\n\n    $acceptActiveCellEditorChange(newActiveEditor: string | null): void {\n        const newActiveEditorId = this.textDocumentsAndEditors.allEditors().find(editor => editor.document.uri.toString() === newActiveEditor)?.id;\n        if (newActiveEditorId || newActiveEditor === null) {\n            this.textDocumentsAndEditors.acceptEditorsAndDocumentsDelta({\n                newActiveEditor: newActiveEditorId ?? null\n            });\n        }\n    }\n\n    // --- serialize/deserialize\n\n    private currentSerializerHandle = 0;\n    private readonly notebookSerializer = new Map<number, theia.NotebookSerializer>();\n\n    registerNotebookSerializer(plugin: Plugin, viewType: string, serializer: theia.NotebookSerializer,\n        options?: theia.NotebookDocumentContentOptions): theia.Disposable {\n        if (!viewType || !viewType.trim()) {\n            throw new Error('viewType cannot be empty or just whitespace');\n        }\n        const handle = this.currentSerializerHandle++;\n        this.notebookSerializer.set(handle, serializer);\n        this.notebookProxy.$registerNotebookSerializer(\n            handle,\n            viewType,\n            typeConverters.NotebookDocumentContentOptions.from(options),\n        );\n        return Disposable.create(() => {\n            this.notebookProxy.$unregisterNotebookSerializer(handle);\n        });\n    }\n\n    async $dataToNotebook(handle: number, bytes: BinaryBuffer, token: CancellationToken): Promise<NotebookDataDto> {\n        const serializer = this.notebookSerializer.get(handle);\n        if (!serializer) {\n            throw new Error('No serializer found');\n        }\n        const data = await serializer.deserializeNotebook(bytes.buffer, token);\n        return typeConverters.NotebookData.from(data);\n    }\n\n    async $notebookToData(handle: number, data: NotebookDataDto, token: CancellationToken): Promise<BinaryBuffer> {\n        const serializer = this.notebookSerializer.get(handle);\n        if (!serializer) {\n            throw new Error('No serializer found');\n        }\n        const bytes = await serializer.serializeNotebook(typeConverters.NotebookData.to(data), token);\n        return BinaryBuffer.wrap(bytes);\n    }\n\n    registerNotebookCellStatusBarItemProvider(notebookType: string, provider: theia.NotebookCellStatusBarItemProvider): theia.Disposable {\n\n        const handle = this.currentSerializerHandle++;\n        const eventHandle = typeof provider.onDidChangeCellStatusBarItems === 'function' ? this.currentSerializerHandle++ : undefined;\n\n        this.notebookStatusBarItemProviders.set(handle, provider);\n        this.notebookProxy.$registerNotebookCellStatusBarItemProvider(handle, eventHandle, notebookType);\n\n        let subscription: theia.Disposable | undefined;\n        if (eventHandle !== undefined) {\n            subscription = provider.onDidChangeCellStatusBarItems!(_ => this.notebookProxy.$emitCellStatusBarEvent(eventHandle));\n        }\n\n        return Disposable.create(() => {\n            this.notebookStatusBarItemProviders.delete(handle);\n            this.notebookProxy.$unregisterNotebookCellStatusBarItemProvider(handle, eventHandle);\n            subscription?.dispose();\n        });\n    }\n\n    getEditorById(editorId: string): NotebookEditor {\n        const editor = this.editors.get(editorId);\n        if (!editor) {\n            throw new Error(`unknown text editor: ${editorId}. known editors: ${[...this.editors.keys()]} `);\n        }\n        return editor;\n    }\n\n    getAllApiDocuments(): theia.NotebookDocument[] {\n        return [...this.documents.values()].map(doc => doc.apiNotebook);\n    }\n\n    async $acceptDocumentsAndEditorsDelta(delta: NotebookDocumentsAndEditorsDelta): Promise<void> {\n        const removedCellDocuments: UriComponents[] = [];\n        if (delta.removedDocuments) {\n            for (const uri of delta.removedDocuments) {\n                const revivedUri = URI.fromComponents(uri);\n                const document = this.documents.get(revivedUri.toString());\n\n                if (document) {\n                    document.dispose();\n                    this.documents.delete(revivedUri.toString());\n                    this.onDidCloseNotebookDocumentEmitter.fire(document.apiNotebook);\n                    removedCellDocuments.push(...document.apiNotebook.getCells().map(cell => cell.document.uri));\n                }\n\n                for (const editor of this.editors.values()) {\n                    if (editor.notebookData.uri.toString() === revivedUri.toString()) {\n                        this.editors.delete(editor.id);\n                    }\n                }\n            }\n        }\n\n        if (removedCellDocuments.length > 0) {\n            // publish all removed cell documents first\n            this.textDocumentsAndEditors.acceptEditorsAndDocumentsDelta({\n                removedDocuments: removedCellDocuments\n            });\n        }\n\n        if (delta.addedDocuments) {\n            for (const modelData of delta.addedDocuments) {\n                const uri = TheiaURI.from(modelData.uri);\n\n                if (this.documents.has(uri.toString())) {\n                    throw new Error(`cannot add EXISTING notebook ${uri}`);\n                }\n\n                const document = new NotebookDocument(\n                    this.notebookDocumentsProxy,\n                    this.textDocumentsAndEditors,\n                    this.textDocuments,\n                    uri,\n                    modelData\n                );\n\n                this.documents.get(uri.toString())?.dispose();\n                this.documents.set(uri.toString(), document);\n\n                if (modelData.cells.length > 0) {\n                    // Publish new cell documents before calling the notebook document open event\n                    // During this event, extensions might request the cell document and we want to make sure it is available\n                    this.textDocumentsAndEditors.acceptEditorsAndDocumentsDelta({\n                        addedDocuments: modelData.cells.map(cell => Cell.asModelAddData(cell))\n                    });\n                }\n\n                this.onDidOpenNotebookDocumentEmitter.fire(document.apiNotebook);\n            }\n        }\n\n        if (delta.addedEditors) {\n            for (const editorModelData of delta.addedEditors) {\n                if (this.editors.has(editorModelData.id)) {\n                    return;\n                }\n\n                const revivedUri = URI.fromComponents(editorModelData.documentUri);\n                const document = this.documents.get(revivedUri.toString());\n\n                if (document) {\n                    this.createExtHostEditor(document, editorModelData.id, editorModelData);\n                }\n            }\n        }\n\n        const removedEditors: NotebookEditor[] = [];\n\n        if (delta.removedEditors) {\n            for (const editorId of delta.removedEditors) {\n                const editor = this.editors.get(editorId);\n\n                if (editor) {\n                    this.editors.delete(editorId);\n\n                    if (this.activeNotebookEditor?.id === editor.id) {\n                        this.activeNotebookEditor = undefined;\n                    }\n\n                    removedEditors.push(editor);\n                }\n            }\n        }\n\n        if (delta.visibleEditors) {\n            this.visibleNotebookEditors = delta.visibleEditors.map(id => this.editors.get(id)!).filter(editor => !!editor) as NotebookEditor[];\n            const visibleEditorsSet = new Set<string>();\n            this.visibleNotebookEditors.forEach(editor => visibleEditorsSet.add(editor.id));\n\n            for (const editor of this.editors.values()) {\n                const newValue = visibleEditorsSet.has(editor.id);\n                editor.acceptVisibility(newValue);\n            }\n\n            this.visibleNotebookEditors = [...this.editors.values()].map(e => e).filter(e => e.visible);\n            this.onDidChangeVisibleNotebookEditorsEmitter.fire(this.visibleApiNotebookEditors);\n        }\n\n        if (delta.newActiveEditor === null) {\n            // clear active notebook as current active editor is non-notebook editor\n            this.activeNotebookEditor = undefined;\n            this.onDidChangeActiveNotebookEditorEmitter.fire(undefined);\n        } else if (delta.newActiveEditor) {\n            const activeEditor = this.editors.get(delta.newActiveEditor);\n            if (!activeEditor) {\n                this.logger.error(`FAILED to find active notebook editor '${delta.newActiveEditor}'.`);\n            }\n            this.activeNotebookEditor = this.editors.get(delta.newActiveEditor);\n            this.onDidChangeActiveNotebookEditorEmitter.fire(this.activeNotebookEditor?.apiEditor);\n\n            const newActiveCell = this.activeApiNotebookEditor?.notebook.cellAt(this.activeApiNotebookEditor.selection.start);\n            this.textDocumentsAndEditors.acceptEditorsAndDocumentsDelta({\n                newActiveEditor: newActiveCell?.kind === 2 /* code cell */ ?\n                    this.textDocumentsAndEditors.allEditors().find(editor => editor.document.uri.toString() === newActiveCell.document.uri.toString())?.id ?? null :\n                    null\n            });\n        }\n    }\n\n    getNotebookDocument(uri: TheiaURI, relaxed: true): NotebookDocument | undefined;\n    getNotebookDocument(uri: TheiaURI): NotebookDocument;\n    getNotebookDocument(uri: TheiaURI, relaxed?: true): NotebookDocument | undefined {\n        const result = this.documents.get(uri.toString());\n        if (!result && !relaxed) {\n            throw new Error(`NO notebook document for '${uri}'`);\n        }\n        return result;\n    }\n\n    waitForNotebookDocument(uri: TheiaURI, duration = 2000): Promise<NotebookDocument> {\n        const existing = this.getNotebookDocument(uri, true);\n        if (existing) {\n            return Promise.resolve(existing);\n        }\n        return new Promise<NotebookDocument>((resolve, reject) => {\n            const listener = this.onDidOpenNotebookDocument(event => {\n                if (event.uri.toString() === uri.toString()) {\n                    clearTimeout(timeout);\n                    listener.dispose();\n                    resolve(this.getNotebookDocument(uri));\n                }\n            });\n            const timeout = setTimeout(() => {\n                listener.dispose();\n                reject(new Error(`Notebook document did NOT open in ${duration}ms: ${uri}`));\n            }, duration);\n        });\n    }\n\n    private createExtHostEditor(document: NotebookDocument, editorId: string, data: NotebookEditorAddData): void {\n\n        if (this.editors.has(editorId)) {\n            throw new Error(`editor with id ALREADY EXISTS: ${editorId}`);\n        }\n\n        const editor = new NotebookEditor(\n            editorId,\n            document,\n            data.visibleRanges.map(typeConverters.NotebookRange.to),\n            data.selections.map(typeConverters.NotebookRange.to),\n            typeof data.viewColumn === 'number' ? typeConverters.ViewColumn.to(data.viewColumn) : undefined\n        );\n\n        this.editors.set(editorId, editor);\n    }\n\n    private waitForNotebookEditor(editorId: string, duration = 2000): Promise<theia.NotebookEditor> {\n        const existing = this.editors.get(editorId);\n        if (existing) {\n            return Promise.resolve(existing.apiEditor);\n        }\n        return new Promise<theia.NotebookEditor>((resolve, reject) => {\n            const listener = this.onDidChangeVisibleNotebookEditors(() => {\n                const editor = this.editors.get(editorId);\n                if (editor) {\n                    clearTimeout(timeout);\n                    listener.dispose();\n                    resolve(editor.apiEditor);\n                }\n            });\n            const timeout = setTimeout(() => {\n                listener.dispose();\n                reject(new Error(`Notebook editor did NOT open in ${duration}ms: ${editorId}`));\n            }, duration);\n        });\n    }\n\n    async createNotebookDocument(options: { viewType: string; content?: theia.NotebookData }): Promise<TheiaURI> {\n        const canonicalUri = await this.notebookDocumentsProxy.$tryCreateNotebook({\n            viewType: options.viewType,\n            content: options.content && typeConverters.NotebookData.from(options.content)\n        });\n        return TheiaURI.from(canonicalUri);\n    }\n\n    async openNotebookDocument(uri: TheiaURI): Promise<theia.NotebookDocument> {\n        const cached = this.documents.get(uri.toString());\n        if (cached) {\n            return cached.apiNotebook;\n        }\n        const canonicalUri = await this.notebookDocumentsProxy.$tryOpenNotebook(uri);\n        const document = this.documents.get(URI.fromComponents(canonicalUri).toString());\n        return document?.apiNotebook!;\n    }\n\n    async showNotebookDocument(notebookOrUri: theia.NotebookDocument | TheiaURI, options?: theia.NotebookDocumentShowOptions): Promise<theia.NotebookEditor> {\n        if (TheiaURI.isUri(notebookOrUri)) {\n            notebookOrUri = await this.openNotebookDocument(notebookOrUri as TheiaURI);\n        }\n\n        const notebook = notebookOrUri;\n\n        let resolvedOptions: NotebookDocumentShowOptions;\n        if (typeof options === 'object') {\n            resolvedOptions = {\n                position: typeConverters.ViewColumn.from(options.viewColumn),\n                preserveFocus: options.preserveFocus,\n                selections: options.selections && options.selections.map(typeConverters.NotebookRange.from),\n                pinned: typeof options.preview === 'boolean' ? !options.preview : undefined\n            };\n        } else {\n            resolvedOptions = {\n                preserveFocus: false\n            };\n        }\n\n        const editorId = await this.notebookEditors.$tryShowNotebookDocument(notebook.uri, notebook.notebookType, resolvedOptions);\n        const editor = editorId && await this.waitForNotebookEditor(editorId);\n\n        if (editor) {\n            return editor;\n        }\n\n        if (editorId) {\n            throw new Error(`Could NOT open editor for \"${notebook.uri.toString()}\" because another editor opened in the meantime.`);\n        } else {\n            throw new Error(`Could NOT open editor for \"${notebook.uri.toString()}\".`);\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PLUGIN_RPC_CONTEXT, NotificationExt, NotificationMain } from '../common/plugin-api-rpc';\nimport { CancellationToken, Progress, ProgressOptions } from '@theia/plugin';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { CancellationTokenSource } from '@theia/core/lib/common/cancellation';\nimport { ProgressLocation } from './types-impl';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\nexport class NotificationExtImpl implements NotificationExt {\n    private readonly proxy: NotificationMain;\n    private mapProgressIdToCancellationSource: Map<string, CancellationTokenSource> = new Map();\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTIFICATION_MAIN);\n    }\n\n    async withProgress<R>(\n        options: ProgressOptions,\n        task: (progress: Progress<{ message?: string; increment?: number }>, token: CancellationToken) => PromiseLike<R>\n    ): Promise<R> {\n        const source = new CancellationTokenSource();\n        const id = new Deferred<string>();\n        const progress = task({ report: async item => this.proxy.$updateProgress(await id.promise, item) }, source.token);\n        const title = options.title ? options.title : '';\n        const location = this.mapLocation(options.location);\n        const cancellable = options.cancellable;\n\n        id.resolve(await this.proxy.$startProgress({ title, location, cancellable }));\n\n        if (cancellable) {\n            const progressId = await id.promise;\n            this.mapProgressIdToCancellationSource.set(progressId, source);\n        }\n\n        const stop = async () => this.proxy.$stopProgress(await id.promise);\n        const promise = Promise.all([\n            progress,\n            new Promise(resolve => setTimeout(resolve, 250)) // try to show even if it's done immediately\n        ]);\n        promise.then(stop, stop);\n        return progress;\n    }\n\n    public $acceptProgressCanceled(id: string): void {\n        const source = this.mapProgressIdToCancellationSource.get(id);\n        if (source) {\n            source.cancel();\n            this.mapProgressIdToCancellationSource.delete(id);\n        }\n    }\n\n    protected mapLocation(location: ProgressLocation | { viewId: string }): string | undefined {\n        if (typeof location === 'object') {\n            return location.viewId;\n        }\n\n        switch (location) {\n            case ProgressLocation.Notification: return 'notification';\n            case ProgressLocation.SourceControl: return 'scm';\n            case ProgressLocation.Window: return 'window';\n            default: return undefined;\n        }\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { IdGenerator } from '../../common/id-generator';\nimport * as rpc from '../../common/plugin-api-rpc';\nimport * as model from '../../common/plugin-api-rpc-model';\nimport { DocumentsExtImpl } from '../documents';\nimport { fromRange, SymbolKind } from '../type-converters';\nimport * as types from '../types-impl';\n\nexport class TypeHierarchyAdapter {\n\n    private readonly idGenerator = new IdGenerator('');\n    protected readonly cache = new Map<string, Map<string, theia.TypeHierarchyItem>>();\n\n    constructor(\n        private readonly provider: theia.TypeHierarchyProvider,\n        private readonly documents: DocumentsExtImpl,\n    ) { }\n\n    private fromTypeHierarchyItem(item: theia.TypeHierarchyItem, sessionId: string): model.TypeHierarchyItem {\n        const sessionCache = this.cache.get(sessionId)!;\n        const itemId = sessionCache.size.toString(36);\n\n        const definition: model.TypeHierarchyItem = {\n            _itemId: itemId,\n            _sessionId: sessionId,\n\n            kind: SymbolKind.fromSymbolKind(item.kind),\n            tags: item.tags,\n            name: item.name,\n            detail: item.detail,\n            uri: item.uri,\n\n            range: fromRange(item.range),\n            selectionRange: fromRange(item.selectionRange),\n        };\n        sessionCache.set(itemId, item);\n        return definition;\n    }\n\n    async prepareSession(uri: URI, position: rpc.Position, token: theia.CancellationToken): Promise<model.TypeHierarchyItem[] | undefined> {\n        const documentData = this.documents.getDocumentData(uri);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${uri}`));\n        }\n\n        const definition = await this.provider.prepareTypeHierarchy(documentData.document,\n            new types.Position(\n                position.lineNumber,\n                position.column\n            ),\n            token\n        );\n\n        if (!definition) {\n            return undefined;\n        }\n\n        const sessionId = this.idGenerator.nextId();\n\n        this.cache.set(sessionId, new Map());\n        return Array.isArray(definition) ? definition.map(item => this.fromTypeHierarchyItem(item, sessionId)) : [this.fromTypeHierarchyItem(definition, sessionId)];\n    }\n\n    async provideSupertypes(sessionId: string, itemId: string, token: theia.CancellationToken): Promise<model.TypeHierarchyItem[] | undefined> {\n        const item = this.fetchItemFromCatch(sessionId, itemId);\n        if (!item) {\n            throw new Error('missing type hierarchy item');\n        }\n        const supertypes = await this.provider.provideTypeHierarchySupertypes(item, token);\n        if (!supertypes) {\n            return undefined;\n        }\n        return supertypes.map(supertype => this.fromTypeHierarchyItem(supertype, sessionId));\n    }\n\n    async provideSubtypes(sessionId: string, itemId: string, token: theia.CancellationToken): Promise<model.TypeHierarchyItem[] | undefined> {\n        const item = this.fetchItemFromCatch(sessionId, itemId);\n        if (!item) {\n            throw new Error('missing type hierarchy item');\n        }\n        const subTypes = await this.provider.provideTypeHierarchySubtypes(item, token);\n        if (!subTypes) {\n            return undefined;\n        }\n        return subTypes.map(subtype => this.fromTypeHierarchyItem(subtype, sessionId));\n    }\n\n    private fetchItemFromCatch(sessionId: string, itemId: string): theia.TypeHierarchyItem | undefined {\n        return this.cache.get(sessionId!)?.get(itemId!);\n    }\n\n    releaseSession(session?: string): Promise<boolean> {\n        if (session !== undefined) {\n            return Promise.resolve(this.cache.delete(session));\n        } else {\n            this.cache.clear();\n            return Promise.resolve(true);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ILogger } from '../../common';\n\nexport interface ResolvedConnectionErrorHandlerOptions {\n    readonly serverName: string\n    readonly logger: ILogger\n    /**\n     * The maximum amount of errors allowed before stopping the server.\n     */\n    readonly maxErrors: number\n    /**\n     * The minimum amount of restarts allowed in the restart interval.\n     */\n    readonly maxRestarts: number\n    /**\n     * In minutes.\n     */\n    readonly restartInterval: number\n}\n\nexport type ConnectionErrorHandlerOptions = Partial<ResolvedConnectionErrorHandlerOptions> & {\n    readonly serverName: string\n    readonly logger: ILogger\n};\n\nexport class ConnectionErrorHandler {\n\n    protected readonly options: ResolvedConnectionErrorHandlerOptions;\n    constructor(options: ConnectionErrorHandlerOptions) {\n        this.options = {\n            maxErrors: 3,\n            maxRestarts: 5,\n            restartInterval: 3,\n            ...options\n        };\n    }\n\n    shouldStop(error: Error, count?: number): boolean {\n        return !count || count > this.options.maxErrors;\n    }\n\n    protected readonly restarts: number[] = [];\n    shouldRestart(): boolean {\n        this.restarts.push(Date.now());\n        if (this.restarts.length <= this.options.maxRestarts) {\n            return true;\n        }\n        const diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n        if (diff <= this.options.restartInterval * 60 * 1000) {\n            // eslint-disable-next-line max-len\n            this.options.logger.error(`The ${this.options.serverName} server crashed ${this.options.maxRestarts} times in the last ${this.options.restartInterval} minutes. The server will not be restarted.`);\n            return false;\n        }\n        this.restarts.shift();\n        return true;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nexport { AbstractChannel, Channel, ChannelCloseEvent, MessageProvider } from './channel';\nexport { ReadBuffer, WriteBuffer } from './message-buffer';\nexport { RequestHandler, RpcProtocol, RpcProtocolOptions } from './rpc-protocol';\n\nimport { registerMsgPackExtensions } from './rpc-message-encoder';\n\nregisterMsgPackExtensions();\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { Plugin, PLUGIN_RPC_CONTEXT, TimelineCommandArg, TimelineExt, TimelineMain } from '../common';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Disposable, URI } from './types-impl';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { CommandRegistryImpl } from './command-registry';\nimport type {\n    InternalTimelineOptions,\n    Timeline,\n    TimelineItem,\n    TimelineOptions,\n    TimelineProvider\n} from '@theia/timeline/lib/common/timeline-model';\nimport * as theia from '@theia/plugin';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { UriComponents } from '../common/uri-components';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// copied and modified from https://github.com/microsoft/theia/blob/afacd2bdfe7060f09df9b9139521718915949757/src/vs/workbench/api/common/extHostTimeline.ts\n\nexport class TimelineExtImpl implements TimelineExt {\n    declare readonly _serviceBrand: undefined;\n\n    private readonly proxy: TimelineMain;\n    private providers = new Map<string, TimelineProvider>();\n\n    private itemsBySourceAndUriMap = new Map<string, Map<string | undefined, Map<string, theia.TimelineItem>>>();\n\n    constructor(readonly rpc: RPCProtocol, private readonly commands: CommandRegistryImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TIMELINE_MAIN);\n\n        commands.registerArgumentProcessor({\n            processArgument: arg => {\n                if (!TimelineCommandArg.is(arg)) {\n                    return arg;\n                } else {\n                    return this.itemsBySourceAndUriMap.get(arg.source)?.get(arg.uri?.toString())?.get(arg.timelineHandle);\n                }\n            }\n        });\n    }\n\n    async $getTimeline(id: string, uri: UriComponents, options: theia.TimelineOptions, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined> {\n        const provider = this.providers.get(id);\n        return provider?.provideTimeline(URI.revive(uri), options, internalOptions);\n    }\n\n    registerTimelineProvider(plugin: Plugin, scheme: string | string[], provider: theia.TimelineProvider): Disposable {\n        const timelineDisposables = new DisposableCollection();\n\n        const convertTimelineItem = this.convertTimelineItem(provider.id, timelineDisposables).bind(this);\n\n        let disposable: Disposable | undefined;\n        if (provider.onDidChange) {\n            disposable = Disposable.from(provider.onDidChange(e => this.proxy.$fireTimelineChanged({ uri: undefined, reset: true, ...e, id: provider.id }), this));\n        }\n\n        const itemsBySourceAndUriMap = this.itemsBySourceAndUriMap;\n        return this.registerTimelineProviderCore({\n            ...provider,\n            scheme: scheme,\n            onDidChange: undefined,\n            async provideTimeline(uri: URI, options: TimelineOptions, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined> {\n                if (internalOptions?.resetCache) {\n                    timelineDisposables.dispose();\n\n                    const items = itemsBySourceAndUriMap.get(provider.id);\n                    if (items) {\n                        items.clear();\n                    }\n                }\n\n                const result = await provider.provideTimeline(uri, options, CancellationToken.None);\n                if (!result) {\n                    return undefined;\n                }\n\n                const convertItem = convertTimelineItem(uri, internalOptions);\n                return {\n                    ...result,\n                    source: provider.id,\n                    items: result.items.map(convertItem)\n                };\n            },\n            dispose(): void {\n                for (const sourceMap of itemsBySourceAndUriMap.values()) {\n                    const source = sourceMap.get(provider.id);\n                    if (source) {\n                        source.clear();\n                    }\n                }\n\n                if (disposable) {\n                    disposable.dispose();\n                }\n                timelineDisposables.dispose();\n            }\n        });\n    }\n\n    private convertTimelineItem(source: string, disposables: DisposableCollection): (uri: URI, options?: InternalTimelineOptions) => (item: theia.TimelineItem) => TimelineItem {\n        return (uri: URI, options?: InternalTimelineOptions) => {\n            let items: Map<string, theia.TimelineItem> | undefined;\n            if (options?.cacheResults) {\n                let itemsByUri = this.itemsBySourceAndUriMap.get(source);\n                if (itemsByUri === undefined) {\n                    itemsByUri = new Map();\n                    this.itemsBySourceAndUriMap.set(source, itemsByUri);\n                }\n\n                const uriKey = getUriKey(uri);\n                items = itemsByUri.get(uriKey);\n                if (items === undefined) {\n                    items = new Map();\n                    itemsByUri.set(uriKey, items);\n                }\n            }\n\n            return (item: theia.TimelineItem): TimelineItem => {\n                const { iconPath, ...props } = item;\n\n                const handle = `${source}|${item.id ?? item.timestamp}`;\n                if (items) {\n                    items.set(handle, item);\n                }\n\n                return {\n                    ...props,\n                    uri: uri.toString(),\n                    id: props.id ?? undefined,\n                    handle: handle,\n                    source: source,\n                    command: item.command ? this.commands.converter.toSafeCommand(item.command, disposables) : undefined,\n                };\n            };\n        };\n    }\n\n    private registerTimelineProviderCore(provider: TimelineProvider): Disposable {\n        const existing = this.providers.get(provider.id);\n        if (existing) {\n            throw new Error(`Timeline Provider ${provider.id} already exists.`);\n        }\n\n        this.proxy.$registerTimelineProvider({\n            id: provider.id,\n            label: provider.label,\n            scheme: provider.scheme\n        });\n        this.providers.set(provider.id, provider);\n\n        return Disposable.create(() => {\n            for (const sourceMap of this.itemsBySourceAndUriMap.values()) {\n                const items = sourceMap.get(provider.id);\n                if (items) {\n                    items.clear();\n                }\n            }\n\n            this.providers.delete(provider.id);\n            this.proxy.$unregisterTimelineProvider(provider.id);\n            provider.dispose();\n        });\n    }\n}\n\nfunction getUriKey(uri: URI | undefined): string | undefined {\n    return uri?.toString();\n}\n","// *****************************************************************************\n// Copyright (C) 2024 EclipseSource and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'reflect-metadata';\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { BasicChannel } from '@theia/core/lib/common/message-rpc/channel';\nimport { Uint8ArrayReadBuffer, Uint8ArrayWriteBuffer } from '@theia/core/lib/common/message-rpc/uint8-array-message-buffer';\nimport { LocalizationExt } from '../../../common/plugin-api-rpc';\nimport { RPCProtocol, RPCProtocolImpl } from '../../../common/rpc-protocol';\nimport { ClipboardExt } from '../../../plugin/clipboard-ext';\nimport { EditorsAndDocumentsExtImpl } from '../../../plugin/editors-and-documents';\nimport { MessageRegistryExt } from '../../../plugin/message-registry';\nimport { MinimalTerminalServiceExt, PluginManagerExtImpl } from '../../../plugin/plugin-manager';\nimport { InternalStorageExt, KeyValueStorageProxy } from '../../../plugin/plugin-storage';\nimport { PreferenceRegistryExtImpl } from '../../../plugin/preference-registry';\nimport { InternalSecretsExt, SecretsExtImpl } from '../../../plugin/secrets-ext';\nimport { TerminalServiceExtImpl } from '../../../plugin/terminal-ext';\nimport { WebviewsExtImpl } from '../../../plugin/webviews';\nimport { WorkspaceExtImpl } from '../../../plugin/workspace';\nimport { createDebugExtStub } from './debug-stub';\nimport { EnvExtImpl } from '../../../plugin/env';\nimport { WorkerEnvExtImpl } from './worker-env-ext';\nimport { DebugExtImpl } from '../../../plugin/debug/debug-ext';\nimport { LocalizationExtImpl } from '../../../plugin/localization-ext';\nimport { EncodingService } from '@theia/core/lib/common/encoding-service';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ctx = self as any;\n\nexport default new ContainerModule(bind => {\n    const channel = new BasicChannel(() => {\n        const writeBuffer = new Uint8ArrayWriteBuffer();\n        writeBuffer.onCommit(buffer => {\n            ctx.postMessage(buffer);\n        });\n        return writeBuffer;\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    addEventListener('message', (message: any) => {\n        channel.onMessageEmitter.fire(() => new Uint8ArrayReadBuffer(message.data));\n    });\n\n    const rpc = new RPCProtocolImpl(channel);\n\n    bind(RPCProtocol).toConstantValue(rpc);\n\n    bind(PluginManagerExtImpl).toSelf().inSingletonScope();\n    bind(EnvExtImpl).to(WorkerEnvExtImpl).inSingletonScope();\n    bind(LocalizationExtImpl).toSelf().inSingletonScope();\n    bind(LocalizationExt).toService(LocalizationExtImpl);\n    bind(KeyValueStorageProxy).toSelf().inSingletonScope();\n    bind(InternalStorageExt).toService(KeyValueStorageProxy);\n    bind(SecretsExtImpl).toSelf().inSingletonScope();\n    bind(InternalSecretsExt).toService(SecretsExtImpl);\n    bind(PreferenceRegistryExtImpl).toSelf().inSingletonScope();\n    bind(DebugExtImpl).toDynamicValue(({ container }) => {\n        const child = container.createChild();\n        child.bind(DebugExtImpl).toSelf();\n        return createDebugExtStub(child);\n    }).inSingletonScope();\n    bind(EncodingService).toSelf().inSingletonScope();\n    bind(EditorsAndDocumentsExtImpl).toSelf().inSingletonScope();\n    bind(WorkspaceExtImpl).toSelf().inSingletonScope();\n    bind(MessageRegistryExt).toSelf().inSingletonScope();\n    bind(ClipboardExt).toSelf().inSingletonScope();\n    bind(WebviewsExtImpl).toSelf().inSingletonScope();\n    bind(TerminalServiceExtImpl).toSelf().inSingletonScope();\n    bind(MinimalTerminalServiceExt).toService(TerminalServiceExtImpl);\n});\n","module.exports = require('vscode-uri');\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { createProxyIdentifier, ProxyIdentifier, RPCProtocol } from './rpc-protocol';\nimport * as theia from '@theia/plugin';\nimport { PluginLifecycle, PluginModel, PluginMetadata, PluginPackage, IconUrl, PluginJsonValidationContribution } from './plugin-protocol';\nimport { QueryParameters } from './env';\nimport { TextEditorCursorStyle } from './editor-options';\nimport {\n    ConfigurationTarget,\n    TextEditorLineNumbersStyle,\n    EndOfLine,\n    OverviewRulerLane,\n    FileOperationOptions,\n    TextDocumentChangeReason,\n    IndentAction,\n    NotebookRendererScript,\n} from '../plugin/types-impl';\nimport { UriComponents } from './uri-components';\nimport {\n    SerializedDocumentFilter,\n    CompletionContext,\n    MarkdownString,\n    Range,\n    Completion,\n    CompletionResultDto,\n    MarkerData,\n    SignatureHelp,\n    Hover,\n    EvaluatableExpression,\n    InlineValue,\n    InlineValueContext,\n    DocumentHighlight,\n    FormattingOptions,\n    ChainedCacheId,\n    Definition,\n    DocumentLink,\n    CodeLensSymbol,\n    Command,\n    TextEdit,\n    DocumentSymbol,\n    ReferenceContext,\n    TextDocumentShowOptions,\n    WorkspaceRootsChangeEvent,\n    Location,\n    Breakpoint,\n    ColorPresentation,\n    RenameLocation,\n    SignatureHelpContext,\n    CodeAction,\n    CodeActionContext,\n    FoldingContext,\n    FoldingRange,\n    SelectionRange,\n    SearchInWorkspaceResult,\n    CallHierarchyItem,\n    CallHierarchyIncomingCall,\n    CallHierarchyOutgoingCall,\n    Comment,\n    CommentOptions,\n    CommentThreadState,\n    CommentThreadCollapsibleState,\n    CommentThread,\n    CommentThreadChangedEvent,\n    CodeActionProviderDocumentation,\n    LinkedEditingRanges,\n    ProvidedTerminalLink,\n    InlayHint,\n    CachedSession,\n    CachedSessionItem,\n    TypeHierarchyItem,\n    InlineCompletion,\n    InlineCompletions,\n    InlineCompletionContext,\n    DocumentDropEdit,\n    DataTransferDTO,\n    DocumentDropEditProviderMetadata,\n    DebugStackFrameDTO,\n    DebugThreadDTO\n} from './plugin-api-rpc-model';\nimport { ExtPluginApi } from './plugin-ext-api-contribution';\nimport { KeysToAnyValues, KeysToKeysToAnyValue } from './types';\nimport {\n    AuthenticationProviderAuthenticationSessionsChangeEvent,\n    CancellationToken,\n    Progress,\n    ProgressOptions,\n} from '@theia/plugin';\nimport { DebuggerDescription } from '@theia/debug/lib/common/debug-service';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { SymbolInformation } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as files from '@theia/filesystem/lib/common/files';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { ResourceLabelFormatter } from '@theia/core/lib/common/label-protocol';\nimport type {\n    InternalTimelineOptions,\n    Timeline,\n    TimelineChangeEvent,\n    TimelineProviderDescriptor\n} from '@theia/timeline/lib/common/timeline-model';\nimport { SerializableEnvironmentVariableCollection } from '@theia/terminal/lib/common/shell-terminal-protocol';\nimport { ThemeType } from '@theia/core/lib/common/theme';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { isString, isObject, QuickInputButtonHandle } from '@theia/core/lib/common';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { DebugConfiguration, DebugSessionOptions } from '@theia/debug/lib/common/debug-configuration';\nimport * as notebookCommon from '@theia/notebook/lib/common';\nimport { CellExecutionUpdateType, CellRange, NotebookCellExecutionState } from '@theia/notebook/lib/common';\nimport { LanguagePackBundle } from './language-pack-service';\nimport { AccessibilityInformation } from '@theia/core/lib/common/accessibility';\n\nimport { TreeDelta } from '@theia/test/lib/common/tree-delta';\nimport { TestItemDTO, TestOutputDTO, TestRunDTO, TestRunProfileDTO, TestRunRequestDTO, TestStateChangeDTO } from './test-types';\nimport { ArgumentProcessor } from './commands';\nimport { McpServerDefinitionRegistryMain, McpServerDefinitionRegistryExt } from './lm-protocol';\n\nexport interface PreferenceData {\n    [scope: number]: any;\n}\n\nexport interface Plugin {\n    pluginPath: string | undefined;\n    pluginFolder: string;\n    pluginUri: string;\n    model: PluginModel;\n    rawModel: PluginPackage;\n    lifecycle: PluginLifecycle;\n    isUnderDevelopment: boolean;\n}\n\nexport interface ConfigStorage {\n    hostLogPath: string;\n    hostStoragePath?: string;\n    hostGlobalStoragePath: string;\n}\n\nexport enum UIKind {\n\n    /**\n     * Extensions are accessed from a desktop application.\n     */\n    Desktop = 1,\n\n    /**\n     * Extensions are accessed from a web browser.\n     */\n    Web = 2\n}\n\nexport enum ExtensionKind {\n    /**\n     * Extension runs where the UI runs.\n     */\n    UI = 1,\n\n    /**\n     * Extension runs where the remote extension host runs.\n     */\n    Workspace = 2\n}\n\nexport interface EnvInit {\n    queryParams: QueryParameters;\n    language: string;\n    shell: string;\n    uiKind: UIKind;\n    appName: string;\n    appHost: string;\n    appRoot: string;\n    appUriScheme: string;\n}\n\nexport interface PluginAPI {\n\n}\n\nexport const PluginManager = Symbol.for('PluginManager');\nexport interface PluginManager {\n    getAllPlugins(): Plugin[];\n    getPluginById(pluginId: string): Plugin | undefined;\n    getPluginExport(pluginId: string): PluginAPI | undefined;\n    getPluginKind(): theia.ExtensionKind;\n    isRunning(pluginId: string): boolean;\n    isActive(pluginId: string): boolean;\n    activatePlugin(pluginId: string): PromiseLike<void>;\n    onDidChange: theia.Event<void>;\n}\n\nexport interface PluginAPIFactory {\n    (plugin: Plugin): typeof theia;\n}\n\nexport const emptyPlugin: Plugin = {\n    lifecycle: {\n        startMethod: 'empty',\n        stopMethod: 'empty'\n    },\n    model: {\n        id: 'emptyPlugin',\n        name: 'emptyPlugin',\n        publisher: 'Theia',\n        version: 'empty',\n        displayName: 'empty',\n        description: 'empty',\n        engine: {\n            type: 'empty',\n            version: 'empty'\n        },\n        packagePath: 'empty',\n        packageUri: 'empty',\n        entryPoint: {\n\n        }\n    },\n    pluginPath: 'empty',\n    pluginFolder: 'empty',\n    pluginUri: 'empty',\n    rawModel: {\n        name: 'emptyPlugin',\n        publisher: 'Theia',\n        version: 'empty',\n        displayName: 'empty',\n        description: 'empty',\n        engines: {\n            type: 'empty',\n            version: 'empty'\n        },\n        packagePath: 'empty'\n    },\n    isUnderDevelopment: false\n};\n\nexport interface PluginManagerInitializeParams {\n    preferences: PreferenceData\n    globalState: KeysToKeysToAnyValue\n    workspaceState: KeysToKeysToAnyValue\n    env: EnvInit\n    pluginKind: ExtensionKind\n    extApi?: ExtPluginApi[]\n    webview: WebviewInitData\n    jsonValidation: PluginJsonValidationContribution[]\n    supportedActivationEvents?: string[]\n}\n\nexport interface PluginManagerStartParams {\n    plugins: PluginMetadata[]\n    configStorage: ConfigStorage\n    activationEvents: string[]\n}\n\nexport interface AbstractPluginManagerExt<P extends Record<string, any>> {\n    /** initialize the manager, should be called only once */\n    $init(params: P): Promise<void>;\n\n    /** load and activate plugins */\n    $start(params: PluginManagerStartParams): Promise<void>;\n\n    /** deactivate the plugin */\n    $stop(pluginId: string): Promise<void>;\n\n    /** deactivate all plugins */\n    $stop(): Promise<void>;\n\n    $updateStoragePath(path: string | undefined): Promise<void>;\n\n    $activateByEvent(event: string): Promise<void>;\n\n    $activatePlugin(id: string): Promise<void>;\n}\n\nexport interface PluginManagerExt extends AbstractPluginManagerExt<PluginManagerInitializeParams> { }\n\nexport interface CommandRegistryMain {\n    $registerCommand(command: theia.CommandDescription): void;\n    $unregisterCommand(id: string): void;\n\n    $registerHandler(id: string): void;\n    $unregisterHandler(id: string): void;\n\n    $executeCommand<T>(id: string, ...args: any[]): PromiseLike<T | undefined>;\n    $getCommands(): PromiseLike<string[]>;\n    $getKeyBinding(commandId: string): PromiseLike<theia.CommandKeyBinding[] | undefined>;\n\n    registerArgumentProcessor(processor: ArgumentProcessor): void;\n}\n\nexport interface CommandRegistryExt {\n    $executeCommand<T>(id: string, ...ars: any[]): PromiseLike<T | undefined>;\n    registerArgumentProcessor(processor: ArgumentProcessor): void;\n}\n\nexport interface TerminalServiceExt {\n    $startProfile(providerId: string, cancellationToken: theia.CancellationToken): Promise<string>;\n    $terminalCreated(id: string, name: string): void;\n    $terminalNameChanged(id: string, name: string): void;\n    $terminalOpened(id: string, processId: number, terminalId: number, cols: number, rows: number): void;\n    $terminalClosed(id: string, exitStatus: theia.TerminalExitStatus | undefined): void;\n    $terminalOnInput(id: string, data: string): void;\n    $terminalSizeChanged(id: string, cols: number, rows: number): void;\n    $currentTerminalChanged(id: string | undefined): void;\n    $terminalOnInteraction(id: string): void;\n    $terminalShellTypeChanged(id: string, newShellType: string): void;\n    $initEnvironmentVariableCollections(collections: [string, string, boolean, SerializableEnvironmentVariableCollection][]): void;\n    $provideTerminalLinks(line: string, terminalId: string, token: theia.CancellationToken): Promise<ProvidedTerminalLink[]>;\n    $handleTerminalLink(link: ProvidedTerminalLink): Promise<void>;\n    getEnvironmentVariableCollection(extensionIdentifier: string): theia.GlobalEnvironmentVariableCollection;\n    $setShell(shell: string): void;\n    $reportOutputMatch(observerId: string, groups: string[]): void;\n}\nexport interface OutputChannelRegistryExt {\n    createOutputChannel(name: string, pluginInfo: PluginInfo): theia.OutputChannel,\n    createOutputChannel(name: string, pluginInfo: PluginInfo, options: { log: true }): theia.LogOutputChannel\n}\n\nexport interface ConnectionMain {\n    $createConnection(id: string): Promise<void>;\n    $deleteConnection(id: string): Promise<void>;\n    $sendMessage(id: string, message: string): void;\n}\n\nexport interface ConnectionExt {\n    $createConnection(id: string): Promise<void>;\n    $deleteConnection(id: string): Promise<void>\n    $sendMessage(id: string, message: string): void;\n}\n\nexport interface TerminalServiceMain {\n    /**\n     * Create new Terminal with Terminal options.\n     * @param options - object with parameters to create new terminal.\n     */\n    $createTerminal(id: string, options: TerminalOptions, parentId?: string, isPseudoTerminal?: boolean): Promise<string>;\n\n    /**\n     * Send text to the terminal by id.\n     * @param id - terminal widget id.\n     * @param text - text content.\n     * @param shouldExecute - in case true - Indicates that the text being sent should be executed rather than just inserted in the terminal.\n     */\n    $sendText(id: string, text: string, shouldExecute?: boolean): void;\n\n    /**\n     * Write data to the terminal by id.\n     * @param id - terminal widget id.\n     * @param data - data.\n     */\n    $write(id: string, data: string): void;\n\n    /**\n     * Resize the terminal by id.\n     * @param id - terminal widget id.\n     * @param cols - columns.\n     * @param rows - rows.\n     */\n    $resize(id: string, cols: number, rows: number): void;\n\n    /**\n     * Show terminal on the UI panel.\n     * @param id - terminal widget id.\n     * @param preserveFocus - set terminal focus in case true value, and don't set focus otherwise.\n     */\n    $show(id: string, preserveFocus?: boolean): void;\n\n    /**\n     * Hide UI panel where is located terminal widget.\n     * @param id - terminal widget id.\n     */\n    $hide(id: string): void;\n\n    /**\n     * Destroy terminal.\n     * @param id - terminal widget id.\n     */\n    $dispose(id: string): void;\n\n    /**\n     * Set the terminal widget name.\n     * @param id terminal widget id.\n     * @param name new terminal widget name.\n     */\n    $setName(id: string, name: string): void;\n\n    /**\n     * Send text to the terminal by id.\n     * @param id - terminal id.\n     * @param text - text content.\n     * @param addNewLine - in case true - add new line after the text, otherwise - don't apply new line.\n     */\n    $sendTextByTerminalId(id: number, text: string, addNewLine?: boolean): void;\n\n    /**\n     * Write data to the terminal by id.\n     * @param id - terminal id.\n     * @param data - data.\n     */\n    $writeByTerminalId(id: number, data: string): void;\n\n    /**\n     * Resize the terminal by id.\n     * @param id - terminal id.\n     * @param cols - columns.\n     * @param rows - rows.\n     */\n    $resizeByTerminalId(id: number, cols: number, rows: number): void;\n\n    /**\n     * Show terminal on the UI panel.\n     * @param id - terminal id.\n     * @param preserveFocus - set terminal focus in case true value, and don't set focus otherwise.\n     */\n    $showByTerminalId(id: number, preserveFocus?: boolean): void;\n\n    /**\n     * Hide UI panel where is located terminal widget.\n     * @param id - terminal id.\n     */\n    $hideByTerminalId(id: number): void;\n\n    /**\n     * Destroy terminal.\n     * @param id - terminal id.\n     * @param waitOnExit - Whether to wait for a key press before closing the terminal.\n     */\n    $disposeByTerminalId(id: number, waitOnExit?: boolean | string): void;\n\n    $setEnvironmentVariableCollection(persistent: boolean, extensionIdentifier: string, rootUri: string, collection: SerializableEnvironmentVariableCollection): void;\n\n    /**\n     * Set the terminal widget name.\n     * @param id terminal id.\n     * @param name new terminal widget name.\n     */\n    $setNameByTerminalId(id: number, name: string): void;\n\n    /**\n     * Register a new terminal link provider.\n     * @param providerId id of the terminal link provider to be registered.\n     */\n    $registerTerminalLinkProvider(providerId: string): Promise<void>;\n\n    /**\n     * Unregister the terminal link provider with the specified id.\n     * @param providerId id of the terminal link provider to be unregistered.\n     */\n    $unregisterTerminalLinkProvider(providerId: string): Promise<void>;\n\n    /**\n     * Register a new terminal observer.\n     * @param providerId id of the terminal link provider to be registered.\n     * @param nrOfLinesToMatch the number of lines to match the outputMatcherRegex against\n     * @param outputMatcherRegex the regex to match the output to\n     */\n    $registerTerminalObserver(id: string, nrOfLinesToMatch: number, outputMatcherRegex: string): unknown;\n\n    /**\n     * Unregister the terminal observer with the specified id.\n     * @param providerId id of the terminal observer to be unregistered.\n     */\n    $unregisterTerminalObserver(id: string): unknown;\n}\n\nexport interface TerminalOptions extends theia.TerminalOptions {\n    iconUrl?: string | { light: string; dark: string } | ThemeIcon;\n}\n\nexport interface AutoFocus {\n    autoFocusFirstEntry?: boolean;\n    // TODO\n}\n\nexport enum MainMessageType {\n    Error,\n    Warning,\n    Info\n}\n\nexport interface MainMessageOptions {\n    detail?: string;\n    modal?: boolean\n    onCloseActionHandle?: number\n}\n\nexport interface MainMessageItem {\n    title: string,\n    isCloseAffordance?: boolean;\n    handle?: number\n}\n\nexport interface MessageRegistryMain {\n    $showMessage(type: MainMessageType, message: string, options: MainMessageOptions, actions: MainMessageItem[]): PromiseLike<number | undefined>;\n}\n\nexport interface StatusBarMessageRegistryMain {\n    $setMessage(id: string,\n        name: string | undefined,\n        text: string | undefined,\n        priority: number,\n        alignment: theia.StatusBarAlignment,\n        color: string | undefined,\n        backgroundColor: string | undefined,\n        tooltip: string | theia.MarkdownString | undefined,\n        command: string | undefined,\n        accessibilityInformation: theia.AccessibilityInformation,\n        args: any[] | undefined): PromiseLike<void>;\n    $dispose(id: string): void;\n}\n\nexport interface QuickOpenExt {\n    $onItemSelected(handle: number): void;\n    $validateInput(input: string): Promise<string | { content: string; severity: Severity; } | null | undefined>;\n\n    $acceptOnDidAccept(sessionId: number): Promise<void>;\n    $acceptDidChangeValue(sessionId: number, changedValue: string): Promise<void>;\n    $acceptOnDidHide(sessionId: number): Promise<void>;\n    $acceptOnDidTriggerButton(sessionId: number, btn: QuickInputButtonHandle): Promise<void>;\n    $onDidTriggerItemButton(sessionId: number, itemHandle: number, buttonHandle: number): void;\n    $onDidChangeActive(sessionId: number, handles: number[]): void;\n    $onDidChangeSelection(sessionId: number, handles: number[]): void;\n\n    /* eslint-disable max-len */\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: Array<theia.QuickPickItem> | Promise<Array<theia.QuickPickItem>>, options: theia.QuickPickOptions & { canPickMany: true; },\n        token?: theia.CancellationToken): Promise<Array<theia.QuickPickItem> | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: string[] | Promise<string[]>, options?: theia.QuickPickOptions, token?: theia.CancellationToken): Promise<string | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: Array<theia.QuickPickItem> | Promise<Array<theia.QuickPickItem>>, options?: theia.QuickPickOptions, token?: theia.CancellationToken): Promise<theia.QuickPickItem | undefined>;\n\n    showInput(options?: theia.InputBoxOptions, token?: theia.CancellationToken): PromiseLike<string | undefined>;\n    // showWorkspaceFolderPick(options?: theia.WorkspaceFolderPickOptions, token?: theia.CancellationToken): Promise<theia.WorkspaceFolder | undefined>\n    createQuickPick<T extends theia.QuickPickItem>(plugin: Plugin): theia.QuickPick<T>;\n    createInputBox(plugin: Plugin): theia.InputBox;\n}\n\n/**\n * Options to configure the behaviour of a file open dialog.\n */\nexport interface OpenDialogOptionsMain {\n\n    /**\n     * Dialog title.\n     * This parameter might be ignored, as not all operating systems display a title on open dialogs.\n     */\n    title?: string;\n\n    /**\n     * The resource the dialog shows when opened.\n     */\n    defaultUri?: string;\n\n    /**\n     * A human-readable string for the open button.\n     */\n    openLabel?: string;\n\n    /**\n     * Allow to select files, defaults to `true`.\n     */\n    canSelectFiles?: boolean;\n\n    /**\n     * Allow to select folders, defaults to `false`.\n     */\n    canSelectFolders?: boolean;\n\n    /**\n     * Allow to select many files or folders.\n     */\n    canSelectMany?: boolean;\n\n    /**\n     * A set of file filters that are used by the dialog. Each entry is a human readable label,\n     * like \"TypeScript\", and an array of extensions, e.g.\n     * ```ts\n     * {\n     *  'Images': ['png', 'jpg']\n     *  'TypeScript': ['ts', 'tsx']\n     * }\n     * ```\n     */\n    filters?: { [name: string]: string[] };\n}\n\n/**\n * Options to configure the behaviour of a file save dialog.\n */\nexport interface SaveDialogOptionsMain {\n\n    /**\n     * Dialog title.\n     * This parameter might be ignored, as not all operating systems display a title on save dialogs.\n     */\n    title?: string;\n\n    /**\n     * The resource the dialog shows when opened.\n     */\n    defaultUri?: string;\n\n    /**\n     * A human-readable string for the save button.\n     */\n    saveLabel?: string;\n\n    /**\n     * A set of file filters that are used by the dialog. Each entry is a human readable label,\n     * like \"TypeScript\", and an array of extensions, e.g.\n     * ```ts\n     * {\n     *  'Images': ['png', 'jpg']\n     *  'TypeScript': ['ts', 'tsx']\n     * }\n     * ```\n     */\n    filters?: { [name: string]: string[] };\n}\n\n/**\n * Options to configure the behaviour of a file upload dialog.\n */\nexport interface UploadDialogOptionsMain {\n    /**\n     * The resource, where files should be uploaded.\n     */\n    defaultUri?: string;\n}\n\nexport interface FileUploadResultMain {\n    uploaded: string[]\n}\n\n/**\n * Options to configure the behaviour of the [workspace folder](#WorkspaceFolder) pick UI.\n */\nexport interface WorkspaceFolderPickOptionsMain {\n    /**\n     * An optional string to show as place holder in the input box to guide the user what to pick on.\n     */\n    placeHolder?: string;\n\n    /**\n     * Set to `true` to keep the picker open when focus moves to another part of the editor or to another window.\n     */\n    ignoreFocusOut?: boolean;\n}\n\nexport interface TransferQuickPickItem {\n    handle: number;\n    kind: 'item' | 'separator',\n    label: string;\n    iconUrl?: string | { light: string; dark: string } | ThemeIcon;\n    description?: string;\n    detail?: string;\n    picked?: boolean;\n    alwaysShow?: boolean;\n    buttons?: readonly TransferQuickInputButton[];\n}\n\nexport interface TransferQuickPickOptions<T extends TransferQuickPickItem> {\n    title?: string;\n    placeHolder?: string;\n    matchOnDescription?: boolean;\n    matchOnDetail?: boolean;\n    matchOnLabel?: boolean;\n    autoFocusOnList?: boolean;\n    ignoreFocusLost?: boolean;\n    canPickMany?: boolean;\n    contextKey?: string;\n    activeItem?: Promise<T> | T;\n    onDidFocus?: (entry: T) => void;\n}\n\nexport interface TransferQuickInputButton {\n    handle?: number;\n    readonly iconUrl?: string | { light: string; dark: string } | ThemeIcon;\n    readonly tooltip?: string | undefined;\n}\n\nexport type TransferQuickInput = TransferQuickPick | TransferInputBox;\n\nexport interface BaseTransferQuickInput {\n    [key: string]: any;\n    id: number;\n    type?: 'quickPick' | 'inputBox';\n    enabled?: boolean;\n    busy?: boolean;\n    visible?: boolean;\n}\n\nexport interface TransferQuickPick extends BaseTransferQuickInput {\n    type?: 'quickPick';\n    value?: string;\n    placeholder?: string;\n    buttons?: TransferQuickInputButton[];\n    items?: TransferQuickPickItem[];\n    activeItems?: ReadonlyArray<theia.QuickPickItem>;\n    selectedItems?: ReadonlyArray<theia.QuickPickItem>;\n    canSelectMany?: boolean;\n    ignoreFocusOut?: boolean;\n    matchOnDescription?: boolean;\n    matchOnDetail?: boolean;\n    sortByLabel?: boolean;\n}\n\nexport interface TransferInputBox extends BaseTransferQuickInput {\n    type?: 'inputBox';\n    value?: string;\n    placeholder?: string;\n    password?: boolean;\n    buttons?: TransferQuickInputButton[];\n    prompt?: string;\n    validationMessage?: string;\n}\n\nexport interface IInputBoxOptions {\n    value?: string;\n    valueSelection?: [number, number];\n    prompt?: string;\n    placeHolder?: string;\n    password?: boolean;\n    ignoreFocusOut?: boolean;\n}\n\nexport interface QuickOpenMain {\n    $show(instance: number, options: TransferQuickPickOptions<TransferQuickPickItem>, token: CancellationToken): Promise<number | number[] | undefined>;\n    $setItems(instance: number, items: TransferQuickPickItem[]): Promise<any>;\n    $setError(instance: number, error: Error): Promise<void>;\n    $input(options: theia.InputBoxOptions, validateInput: boolean, token: CancellationToken): Promise<string | undefined>;\n    $createOrUpdate<T extends theia.QuickPickItem>(params: TransferQuickInput): Promise<void>;\n    $dispose(id: number): Promise<void>;\n\n    $hide(): void;\n    $showInputBox(options: TransferInputBox, validateInput: boolean): Promise<string | undefined>;\n}\n\nexport interface FindFilesOptions {\n    exclude?: string;\n    useDefaultExcludes?: boolean;\n    useDefaultSearchExcludes?: boolean;\n    maxResults?: number;\n    useIgnoreFiles?: boolean;\n    fuzzy?: boolean;\n}\n\nexport interface WorkspaceMain {\n    $pickWorkspaceFolder(options: WorkspaceFolderPickOptionsMain): Promise<theia.WorkspaceFolder | undefined>;\n    $startFileSearch(includePattern: string, includeFolder: string | undefined, options: FindFilesOptions, token: theia.CancellationToken): PromiseLike<UriComponents[]>;\n    $findTextInFiles(query: theia.TextSearchQuery, options: theia.FindTextInFilesOptions, searchRequestId: number,\n        token?: theia.CancellationToken): Promise<theia.TextSearchComplete>\n    $registerTextDocumentContentProvider(scheme: string): Promise<void>;\n    $unregisterTextDocumentContentProvider(scheme: string): void;\n    $onTextDocumentContentChange(uri: string, content: string): void;\n    $updateWorkspaceFolders(start: number, deleteCount?: number, ...rootsToAdd: string[]): Promise<void>;\n    $getWorkspace(): Promise<files.FileStat | undefined>;\n    $requestWorkspaceTrust(options?: theia.WorkspaceTrustRequestOptions): Promise<boolean | undefined>;\n    $resolveProxy(url: string): Promise<string | undefined>;\n    $registerCanonicalUriProvider(scheme: string): Promise<void | undefined>;\n    $unregisterCanonicalUriProvider(scheme: string): void;\n    $getCanonicalUri(uri: string, targetScheme: string, token: theia.CancellationToken): Promise<string | undefined>;\n    $resolveDecoding(resource: UriComponents | undefined, options?: { encoding?: string }): Promise<{ preferredEncoding: string; guessEncoding: boolean; }>;\n    $resolveEncoding(resource: UriComponents | undefined, options?: { encoding?: string }): Promise<{ encoding: string; hasBOM: boolean }>;\n    $getValidEncoding(uri: UriComponents | undefined, detectedEncoding: string | undefined, opts: { encoding: string; } | undefined): Promise<string>;\n}\n\nexport interface WorkspaceExt {\n    $onWorkspaceFoldersChanged(event: WorkspaceRootsChangeEvent): void;\n    $onWorkspaceLocationChanged(event: files.FileStat | undefined): void;\n    $provideTextDocumentContent(uri: string): Promise<string | undefined | null>;\n    $onTextSearchResult(searchRequestId: number, done: boolean, result?: SearchInWorkspaceResult): void;\n    $onWorkspaceTrustChanged(trust: boolean | undefined): void;\n    $registerEditSessionIdentityProvider(scheme: string, provider: theia.EditSessionIdentityProvider): theia.Disposable;\n    registerCanonicalUriProvider(scheme: string, provider: theia.CanonicalUriProvider): theia.Disposable;\n    $disposeCanonicalUriProvider(scheme: string): void;\n    getCanonicalUri(uri: theia.Uri, options: theia.CanonicalUriRequestOptions, token: CancellationToken): theia.ProviderResult<theia.Uri>;\n    $provideCanonicalUri(uri: string, targetScheme: string, token: CancellationToken): Promise<string | undefined>;\n}\n\nexport interface TimelineExt {\n    $getTimeline(source: string, uri: UriComponents, options: theia.TimelineOptions, internalOptions?: InternalTimelineOptions): Promise<Timeline | undefined>;\n}\n\nexport interface TimelineMain {\n    $registerTimelineProvider(provider: TimelineProviderDescriptor): Promise<void>;\n    $fireTimelineChanged(e: TimelineChangeEvent): Promise<void>;\n    $unregisterTimelineProvider(source: string): Promise<void>;\n}\n\nexport interface ThemingExt {\n    $onColorThemeChange(type: ThemeType): void;\n}\nexport interface ThemingMain extends Disposable {\n}\n\nexport interface DialogsMain {\n    $showOpenDialog(options: OpenDialogOptionsMain): Promise<string[] | undefined>;\n    $showSaveDialog(options: SaveDialogOptionsMain): Promise<string | undefined>;\n    $showUploadDialog(options: UploadDialogOptionsMain): Promise<string[] | undefined>;\n}\n\nexport interface RegisterTreeDataProviderOptions {\n    manageCheckboxStateManually?: boolean;\n    showCollapseAll?: boolean\n    canSelectMany?: boolean\n    dragMimeTypes?: string[]\n    dropMimeTypes?: string[]\n}\n\nexport interface TreeViewRevealOptions {\n    readonly select: boolean\n    readonly focus: boolean\n    readonly expand: boolean | number\n}\n\nexport interface TreeViewsMain {\n    $registerTreeDataProvider(treeViewId: string, options?: RegisterTreeDataProviderOptions): void;\n    $readDroppedFile(contentId: string): Promise<BinaryBuffer>;\n    $unregisterTreeDataProvider(treeViewId: string): void;\n    $refresh(treeViewId: string, itemIds?: string[]): Promise<void>;\n    $reveal(treeViewId: string, elementParentChain: string[], options: TreeViewRevealOptions): Promise<any>;\n    $setMessage(treeViewId: string, message: string): void;\n    $setTitle(treeViewId: string, title: string): void;\n    $setDescription(treeViewId: string, description: string): void;\n    $setBadge(treeViewId: string, badge: theia.ViewBadge | undefined): void;\n}\nexport class DataTransferFileDTO {\n    constructor(readonly name: string, readonly contentId: string, readonly uri?: UriComponents) { }\n\n    static is(value: string | DataTransferFileDTO): value is DataTransferFileDTO {\n        return !(typeof value === 'string');\n    }\n}\n\nexport interface TreeViewsExt {\n    $checkStateChanged(treeViewId: string, itemIds: { id: string, checked: boolean }[]): Promise<void>;\n    $dragStarted(treeViewId: string, treeItemIds: string[], token: CancellationToken): Promise<UriComponents[] | undefined>;\n    $dragEnd(treeViewId: string): Promise<void>;\n    $drop(treeViewId: string, treeItemId: string | undefined, dataTransferItems: [string, string | DataTransferFileDTO][], token: CancellationToken): Promise<void>;\n    $getChildren(treeViewId: string, treeItemId: string | undefined): Promise<TreeViewItem[] | undefined>;\n    $hasResolveTreeItem(treeViewId: string): Promise<boolean>;\n    $resolveTreeItem(treeViewId: string, treeItemId: string, token: CancellationToken): Promise<TreeViewItem | undefined>;\n    $setExpanded(treeViewId: string, treeItemId: string, expanded: boolean): Promise<any>;\n    $setSelection(treeViewId: string, treeItemIds: string[]): Promise<void>;\n    $setVisible(treeViewId: string, visible: boolean): Promise<void>;\n}\n\nexport interface TreeViewItemCheckboxInfo {\n    checked: boolean;\n    tooltip?: string;\n    accessibilityInformation?: AccessibilityInformation\n}\n\nexport interface TreeViewItem {\n\n    id: string;\n\n    label: string;\n    /** Label highlights given as tuples of inclusive start index and exclusive end index. */\n    highlights?: [number, number][];\n\n    description?: string | boolean;\n\n    /* font-awesome icon for compatibility */\n    icon?: string;\n    iconUrl?: IconUrl;\n\n    themeIcon?: ThemeIcon;\n\n    resourceUri?: UriComponents;\n\n    tooltip?: string | MarkdownString;\n\n    collapsibleState?: TreeViewItemCollapsibleState;\n\n    checkboxInfo?: TreeViewItemCheckboxInfo;\n\n    contextValue?: string;\n\n    command?: Command;\n\n    accessibilityInformation?: theia.AccessibilityInformation;\n\n}\n\nexport interface TreeViewItemReference {\n    viewId: string\n    itemId: string\n}\nexport namespace TreeViewItemReference {\n    export function is(arg: unknown): arg is TreeViewItemReference {\n        return isObject(arg) && isString(arg.viewId) && isString(arg.itemId);\n    }\n}\n\n/**\n * Collapsible state of the tree item\n */\nexport enum TreeViewItemCollapsibleState {\n    /**\n     * Determines an item can be neither collapsed nor expanded. Implies it has no children.\n     */\n    None = 0,\n    /**\n     * Determines an item is collapsed\n     */\n    Collapsed = 1,\n    /**\n     * Determines an item is expanded\n     */\n    Expanded = 2\n}\n\nexport interface WindowMain {\n    $openUri(uri: UriComponents): Promise<boolean>;\n    $asExternalUri(uri: UriComponents): Promise<UriComponents>;\n}\n\nexport interface WindowStateExt {\n    $onDidChangeWindowFocus(focused: boolean): void;\n    $onDidChangeWindowActive(active: boolean): void;\n}\n\nexport interface NotificationExt {\n    withProgress<R>(\n        options: ProgressOptions,\n        task: (progress: Progress<{ message?: string; increment?: number }>, token: CancellationToken) => PromiseLike<R>\n    ): PromiseLike<R>;\n    $acceptProgressCanceled(progressId: string): void;\n}\n\nexport interface ScmCommandArg {\n    sourceControlHandle: number\n    resourceGroupHandle?: number\n    resourceStateHandle?: number\n}\nexport namespace ScmCommandArg {\n    export function is(arg: unknown): arg is ScmCommandArg {\n        return isObject(arg) && 'sourceControlHandle' in arg;\n    }\n}\n\nexport interface ScmExt {\n    createSourceControl(plugin: Plugin, id: string, label: string, rootUri?: theia.Uri): theia.SourceControl;\n    getLastInputBox(plugin: Plugin): theia.SourceControlInputBox | undefined;\n    $onInputBoxValueChange(sourceControlHandle: number, message: string): Promise<void>;\n    $executeResourceCommand(sourceControlHandle: number, groupHandle: number, resourceHandle: number): Promise<void>;\n    $validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined>;\n    $setSelectedSourceControl(selectedSourceControlHandle: number | undefined): Promise<void>;\n    $provideOriginalResource(sourceControlHandle: number, uri: string, token: theia.CancellationToken): Promise<UriComponents | undefined>;\n}\n\nexport namespace TimelineCommandArg {\n    export function is(arg: unknown): arg is TimelineCommandArg {\n        return isObject(arg) && 'timelineHandle' in arg;\n    }\n}\nexport interface TimelineCommandArg {\n    timelineHandle: string;\n    source: string;\n    uri: string;\n}\n\nexport interface DecorationRequest {\n    readonly id: number;\n    readonly uri: UriComponents;\n}\n\nexport type DecorationData = [boolean, string, string, ThemeColor];\nexport interface DecorationReply { [id: number]: DecorationData; }\n\nexport namespace CommentsCommandArg {\n    export function is(arg: unknown): arg is CommentsCommandArg {\n        return isObject(arg) && 'commentControlHandle' in arg && 'commentThreadHandle' in arg && 'text' in arg && !('commentUniqueId' in arg);\n    }\n}\nexport interface CommentsCommandArg {\n    commentControlHandle: number;\n    commentThreadHandle: number;\n    text: string\n}\n\nexport namespace CommentsContextCommandArg {\n    export function is(arg: unknown): arg is CommentsContextCommandArg {\n        return isObject(arg) && 'commentControlHandle' in arg && 'commentThreadHandle' in arg && 'commentUniqueId' in arg && !('text' in arg);\n    }\n}\nexport interface CommentsContextCommandArg {\n    commentControlHandle: number;\n    commentThreadHandle: number;\n    commentUniqueId: number\n}\n\nexport namespace CommentsEditCommandArg {\n    export function is(arg: unknown): arg is CommentsEditCommandArg {\n        return isObject(arg) && 'commentControlHandle' in arg && 'commentThreadHandle' in arg && 'commentUniqueId' in arg && 'text' in arg;\n    }\n}\nexport interface CommentsEditCommandArg {\n    commentControlHandle: number;\n    commentThreadHandle: number;\n    commentUniqueId: number\n    text: string\n}\n\nexport interface DecorationsExt {\n    registerFileDecorationProvider(provider: theia.FileDecorationProvider, pluginInfo: PluginInfo): theia.Disposable\n    $provideDecorations(handle: number, requests: DecorationRequest[], token: CancellationToken): Promise<DecorationReply>;\n}\n\nexport interface DecorationsMain {\n    $registerDecorationProvider(handle: number): Promise<void>;\n    $unregisterDecorationProvider(handle: number): void;\n    $onDidChange(handle: number, resources: UriComponents[] | null): void;\n}\n\nexport interface ScmMain {\n    $registerSourceControl(sourceControlHandle: number, id: string, label: string, rootUri?: UriComponents): Promise<void>;\n    $updateSourceControl(sourceControlHandle: number, features: SourceControlProviderFeatures): Promise<void>;\n    $unregisterSourceControl(sourceControlHandle: number): Promise<void>;\n\n    $registerGroups(sourceControlHandle: number, groups: ScmRawResourceGroup[], splices: ScmRawResourceSplices[]): void;\n    $updateGroup(sourceControlHandle: number, groupHandle: number, features: SourceControlGroupFeatures): void;\n    $updateGroupLabel(sourceControlHandle: number, groupHandle: number, label: string): void;\n    $unregisterGroup(sourceControlHandle: number, groupHandle: number): void;\n\n    $spliceResourceStates(sourceControlHandle: number, splices: ScmRawResourceSplices[]): void;\n\n    $setInputBoxValue(sourceControlHandle: number, value: string): void;\n    $setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): void;\n    $setInputBoxVisible(sourceControlHandle: number, visible: boolean): void;\n    $setInputBoxEnabled(sourceControlHandle: number, enabled: boolean): void;\n}\n\nexport interface SourceControlProviderFeatures {\n    hasQuickDiffProvider?: boolean;\n    count?: number;\n    commitTemplate?: string;\n    acceptInputCommand?: Command;\n    statusBarCommands?: Command[];\n}\n\nexport interface SourceControlGroupFeatures {\n    hideWhenEmpty: boolean | undefined;\n    contextValue: string | undefined;\n}\n\nexport interface ScmRawResource {\n    handle: number,\n    sourceUri: UriComponents,\n    icons: (IconUrl | ThemeIcon | undefined)[], /* icons: light, dark */\n    tooltip: string,\n    strikeThrough: boolean,\n    faded: boolean,\n    contextValue: string,\n    command: Command | undefined\n}\n\nexport interface ScmRawResourceGroup {\n    handle: number,\n    id: string,\n    label: string,\n    features: SourceControlGroupFeatures\n}\n\nexport interface ScmRawResourceSplice {\n    start: number,\n    deleteCount: number,\n    rawResources: ScmRawResource[]\n}\n\nexport interface ScmRawResourceSplices {\n    handle: number,\n    splices: ScmRawResourceSplice[]\n}\n\nexport interface SourceControlResourceState {\n    readonly handle: number\n    /**\n     * The uri of the underlying resource inside the workspace.\n     */\n    readonly resourceUri: string;\n\n    /**\n     * The command which should be run when the resource\n     * state is open in the Source Control viewlet.\n     */\n    readonly command?: Command;\n\n    /**\n     * The decorations for this source control\n     * resource state.\n     */\n    readonly decorations?: SourceControlResourceDecorations;\n\n    readonly letter?: string;\n\n    readonly colorId?: string\n}\n\n/**\n * The decorations for a [source control resource state](#SourceControlResourceState).\n * Can be independently specified for light and dark themes.\n */\nexport interface SourceControlResourceDecorations {\n\n    /**\n     * Whether the source control resource state should be striked-through in the UI.\n     */\n    readonly strikeThrough?: boolean;\n\n    /**\n     * Whether the source control resource state should be faded in the UI.\n     */\n    readonly faded?: boolean;\n\n    /**\n     * The title for a specific source control resource state.\n     */\n    readonly tooltip?: string;\n\n    /**\n     * The icon path for a specific source control resource state.\n     */\n    readonly iconPath?: string;\n}\n\nexport interface NotificationMain {\n    $startProgress(options: NotificationMain.StartProgressOptions): Promise<string>;\n    $stopProgress(id: string): void;\n    $updateProgress(id: string, report: NotificationMain.ProgressReport): void;\n}\nexport namespace NotificationMain {\n    export interface StartProgressOptions {\n        title: string;\n        location?: string;\n        cancellable?: boolean;\n    }\n    export interface ProgressReport {\n        message?: string;\n        increment?: number;\n        total?: number;\n    }\n}\n\nexport enum EditorPosition {\n    ONE = 0,\n    TWO = 1,\n    THREE = 2,\n    FOUR = 3,\n    FIVE = 4,\n    SIX = 5,\n    SEVEN = 6,\n    EIGHT = 7,\n    NINE = 8\n}\n\nexport interface Position {\n    readonly lineNumber: number;\n    readonly column: number;\n}\n\nexport interface Selection {\n    /**\n     * The line number on which the selection has started.\n     */\n    readonly selectionStartLineNumber: number;\n    /**\n     * The column on `selectionStartLineNumber` where the selection has started.\n     */\n    readonly selectionStartColumn: number;\n    /**\n     * The line number on which the selection has ended.\n     */\n    readonly positionLineNumber: number;\n    /**\n     * The column on `positionLineNumber` where the selection has ended.\n     */\n    readonly positionColumn: number;\n}\n\nexport interface TextEditorConfiguration {\n    tabSize: number;\n    indentSize: number;\n    insertSpaces: boolean;\n    cursorStyle: TextEditorCursorStyle;\n    lineNumbers: TextEditorLineNumbersStyle;\n}\n\nexport interface TextEditorConfigurationUpdate {\n    tabSize?: number | 'auto';\n    indentSize?: number | 'tabSize';\n    insertSpaces?: boolean | 'auto';\n    cursorStyle?: TextEditorCursorStyle;\n    lineNumbers?: TextEditorLineNumbersStyle;\n}\n\nexport enum TextEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\nexport interface SelectionChangeEvent {\n    selections: Selection[];\n    source?: string;\n}\n\nexport interface EditorChangedPropertiesData {\n    options?: TextEditorConfiguration;\n    selections?: SelectionChangeEvent;\n    visibleRanges?: Range[];\n}\n\nexport interface TextEditorPositionData {\n    [id: string]: EditorPosition;\n}\n\nexport interface TextEditorsExt {\n    $acceptEditorPropertiesChanged(id: string, props: EditorChangedPropertiesData): void;\n    $acceptEditorPositionData(data: TextEditorPositionData): void;\n}\n\nexport interface SingleEditOperation {\n    range?: Range;\n    text?: string;\n    forceMoveMarkers?: boolean;\n}\n\nexport interface UndoStopOptions {\n    undoStopBefore: boolean;\n    undoStopAfter: boolean;\n}\n\nexport interface ApplyEditsOptions extends UndoStopOptions {\n    setEndOfLine: EndOfLine | undefined;\n}\n\nexport interface SnippetEditOptions extends UndoStopOptions {\n    keepWhitespace?: boolean;\n}\n\nexport interface ThemeColor {\n    id: string;\n}\n\nexport interface ThemeIcon {\n    id: string;\n    color?: ThemeColor;\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n */\nexport enum TrackedRangeStickiness {\n    AlwaysGrowsWhenTypingAtEdges = 0,\n    NeverGrowsWhenTypingAtEdges = 1,\n    GrowsOnlyWhenTypingBefore = 2,\n    GrowsOnlyWhenTypingAfter = 3,\n}\nexport interface ContentDecorationRenderOptions {\n    contentText?: string;\n    contentIconPath?: UriComponents;\n\n    border?: string;\n    borderColor?: string | ThemeColor;\n    fontStyle?: string;\n    fontWeight?: string;\n    textDecoration?: string;\n    color?: string | ThemeColor;\n    backgroundColor?: string | ThemeColor;\n\n    margin?: string;\n    width?: string;\n    height?: string;\n}\n\nexport interface ThemeDecorationRenderOptions {\n    backgroundColor?: string | ThemeColor;\n\n    outline?: string;\n    outlineColor?: string | ThemeColor;\n    outlineStyle?: string;\n    outlineWidth?: string;\n\n    border?: string;\n    borderColor?: string | ThemeColor;\n    borderRadius?: string;\n    borderSpacing?: string;\n    borderStyle?: string;\n    borderWidth?: string;\n\n    fontStyle?: string;\n    fontWeight?: string;\n    textDecoration?: string;\n    cursor?: string;\n    color?: string | ThemeColor;\n    opacity?: string;\n    letterSpacing?: string;\n\n    gutterIconPath?: UriComponents;\n    gutterIconSize?: string;\n\n    overviewRulerColor?: string | ThemeColor;\n\n    before?: ContentDecorationRenderOptions;\n    after?: ContentDecorationRenderOptions;\n}\n\nexport interface DecorationRenderOptions extends ThemeDecorationRenderOptions {\n    isWholeLine?: boolean;\n    rangeBehavior?: TrackedRangeStickiness;\n    overviewRulerLane?: OverviewRulerLane;\n\n    light?: ThemeDecorationRenderOptions;\n    dark?: ThemeDecorationRenderOptions;\n}\n\nexport interface ThemeDecorationInstanceRenderOptions {\n    before?: ContentDecorationRenderOptions;\n    after?: ContentDecorationRenderOptions;\n}\n\nexport interface DecorationInstanceRenderOptions extends ThemeDecorationInstanceRenderOptions {\n    light?: ThemeDecorationInstanceRenderOptions;\n    dark?: ThemeDecorationInstanceRenderOptions;\n}\n\nexport interface DecorationOptions {\n    range: Range;\n    hoverMessage?: MarkdownString | MarkdownString[];\n    renderOptions?: DecorationInstanceRenderOptions;\n}\n\nexport interface TextEditorsMain {\n    $tryShowTextDocument(uri: UriComponents, options?: TextDocumentShowOptions): Promise<void>;\n    $registerTextEditorDecorationType(key: string, options: DecorationRenderOptions): void;\n    $removeTextEditorDecorationType(key: string): void;\n    $tryHideEditor(id: string): Promise<void>;\n    $trySetOptions(id: string, options: TextEditorConfigurationUpdate): Promise<void>;\n    $trySetDecorations(id: string, key: string, ranges: DecorationOptions[]): Promise<void>;\n    $trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void>;\n    $tryRevealRange(id: string, range: Range, revealType: TextEditorRevealType): Promise<void>;\n    $trySetSelections(id: string, selections: Selection[]): Promise<void>;\n    $tryApplyEdits(id: string, modelVersionId: number, edits: SingleEditOperation[], opts: ApplyEditsOptions): Promise<boolean>;\n    $tryApplyWorkspaceEdit(workspaceEditDto: WorkspaceEditDto, metadata?: WorkspaceEditMetadataDto): Promise<boolean>;\n    $tryInsertSnippet(id: string, template: string, selections: Range[], opts: SnippetEditOptions): Promise<boolean>;\n    $save(uri: UriComponents): PromiseLike<UriComponents | undefined>;\n    $saveAs(uri: UriComponents): PromiseLike<UriComponents | undefined>;\n    $saveAll(includeUntitled?: boolean): Promise<boolean>;\n    $getDiffInformation(id: string): Promise<theia.LineChange[]>;\n}\n\nexport interface ModelAddedData {\n    uri: UriComponents;\n    versionId: number;\n    lines: string[];\n    languageId?: string;\n    EOL: string;\n    modeId: string;\n    isDirty: boolean;\n    encoding: string;\n}\n\nexport interface TextEditorAddData {\n    id: string;\n    documentUri: UriComponents;\n    options: TextEditorConfiguration;\n    selections: Selection[];\n    visibleRanges: Range[];\n    editorPosition?: EditorPosition;\n}\n\nexport interface EditorsAndDocumentsDelta {\n    removedDocuments?: UriComponents[];\n    addedDocuments?: ModelAddedData[];\n    removedEditors?: string[];\n    addedEditors?: TextEditorAddData[];\n    /**\n     * undefined means no changes\n     * null means no active\n     * string means id of active\n     */\n    newActiveEditor?: string | null;\n}\n\nexport interface EditorsAndDocumentsExt {\n    $acceptEditorsAndDocumentsDelta(delta: EditorsAndDocumentsDelta): void;\n}\n\nexport interface ModelContentChange {\n    readonly range: Range;\n    readonly rangeOffset: number;\n    readonly rangeLength: number;\n    readonly text: string;\n}\nexport interface ModelChangedEvent {\n    readonly changes: ModelContentChange[];\n\n    readonly eol: string;\n\n    readonly versionId: number;\n\n    readonly reason: TextDocumentChangeReason | undefined;\n}\n\nexport interface DocumentsExt {\n    $acceptModelModeChanged(startUrl: UriComponents, oldModeId: string, newModeId: string): void;\n    $acceptModelSaved(strUrl: UriComponents): void;\n    $acceptModelWillSave(strUrl: UriComponents, reason: theia.TextDocumentSaveReason, saveTimeout: number): Promise<SingleEditOperation[]>;\n    $acceptDirtyStateChanged(strUrl: UriComponents, isDirty: boolean): void;\n    $acceptEncodingChanged(strUrl: UriComponents, encoding: string): void;\n    $acceptModelChanged(strUrl: UriComponents, e: ModelChangedEvent, isDirty: boolean): void;\n}\n\nexport interface DocumentsMain {\n    $tryCreateDocument(options?: { language?: string; content?: string; encoding?: string }): Promise<UriComponents>;\n    $tryShowDocument(uri: UriComponents, options?: TextDocumentShowOptions): Promise<void>;\n    $tryOpenDocument(uri: UriComponents, encoding?: string): Promise<boolean>;\n    $trySaveDocument(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface EnvMain {\n    $getEnvVariable(envVarName: string): Promise<string | undefined>;\n    $getClientOperatingSystem(): Promise<theia.OperatingSystem>;\n}\n\nexport interface PreferenceRegistryMain {\n    $updateConfigurationOption(\n        target: boolean | ConfigurationTarget | undefined,\n        key: string,\n        value: any,\n        resource?: string,\n        withLanguageOverride?: boolean\n    ): PromiseLike<void>;\n    $removeConfigurationOption(\n        target: boolean | ConfigurationTarget | undefined,\n        key: string,\n        resource?: string,\n        withLanguageOverride?: boolean,\n    ): PromiseLike<void>;\n}\n\nexport interface PreferenceChangeExt {\n    preferenceName: string,\n    newValue: any,\n    /**\n     * The URI the folder affected, or undefined if User scope.\n     */\n    scope?: string;\n}\n\nexport interface TerminalOptionsExt {\n    attributes?: {\n        [key: string]: string;\n    }\n}\n\nexport interface PreferenceRegistryExt {\n    $acceptConfigurationChanged(data: { [key: string]: any }, eventData: PreferenceChangeExt[]): void;\n}\n\nexport interface OutputChannelRegistryMain {\n    $append(channelName: string, value: string, pluginInfo: PluginInfo): PromiseLike<void>;\n    $clear(channelName: string): PromiseLike<void>;\n    $dispose(channelName: string): PromiseLike<void>;\n    $reveal(channelName: string, preserveFocus: boolean): PromiseLike<void>;\n    $close(channelName: string): PromiseLike<void>;\n}\n\nexport type CharacterPair = [string, string];\n\nexport interface CommentRule {\n    lineComment?: string;\n    blockComment?: CharacterPair;\n}\n\nexport interface SerializedRegExp {\n    pattern: string;\n    flags?: string;\n}\n\nexport interface SerializedIndentationRule {\n    decreaseIndentPattern?: SerializedRegExp;\n    increaseIndentPattern?: SerializedRegExp;\n    indentNextLinePattern?: SerializedRegExp;\n    unIndentedLinePattern?: SerializedRegExp;\n}\n\nexport interface SerializedOnEnterRule {\n    beforeText: SerializedRegExp;\n    afterText?: SerializedRegExp;\n    previousLineText?: SerializedRegExp;\n    action: SerializedEnterAction;\n}\n\nexport interface SerializedEnterAction {\n    indentAction: IndentAction;\n    outdentCurrentLine?: boolean;\n    appendText?: string;\n    removeText?: number;\n}\n\nexport interface SerializedAutoClosingPair {\n    open: string;\n    close: string;\n    notIn?: string[];\n}\n\nexport interface SerializedLanguageConfiguration {\n    comments?: CommentRule;\n    brackets?: CharacterPair[];\n    wordPattern?: SerializedRegExp;\n    indentationRules?: SerializedIndentationRule;\n    onEnterRules?: SerializedOnEnterRule[];\n    autoClosingPairs?: SerializedAutoClosingPair[]\n}\n\nexport interface CodeActionDto {\n    title: string;\n    edit?: WorkspaceEditDto;\n    diagnostics?: MarkerData[];\n    command?: Command;\n    kind?: string;\n    isPreferred?: boolean;\n    disabled?: string;\n}\n\nexport interface WorkspaceEditEntryMetadataDto {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n    iconPath?: UriComponents | ThemeIcon | {\n        light: UriComponents;\n        dark: UriComponents;\n    };\n}\n\nexport interface WorkspaceFileEditDto {\n    oldResource?: UriComponents;\n    newResource?: UriComponents;\n    options?: FileOperationOptions;\n    metadata?: WorkspaceEditEntryMetadataDto;\n}\n\nexport interface WorkspaceTextEditDto {\n    resource: UriComponents;\n    modelVersionId?: number;\n    textEdit: TextEdit & { insertAsSnippet?: boolean, keepWhitespace?: boolean };\n    metadata?: WorkspaceEditEntryMetadataDto;\n}\nexport namespace WorkspaceTextEditDto {\n    export function is(arg: WorkspaceTextEditDto | WorkspaceFileEditDto): arg is WorkspaceTextEditDto {\n        return !!arg\n            && 'resource' in arg\n            && 'textEdit' in arg\n            && arg.textEdit !== null\n            && typeof arg.textEdit === 'object';\n    }\n}\nexport interface WorkspaceEditMetadataDto {\n    isRefactoring?: boolean;\n}\n\nexport type CellEditOperationDto =\n    {\n        editType: notebookCommon.CellEditType.Metadata;\n        index: number;\n        metadata: Record<string, unknown>;\n    } |\n    {\n        editType: notebookCommon.CellEditType.DocumentMetadata;\n        metadata: Record<string, unknown>;\n    } |\n    {\n        editType: notebookCommon.CellEditType.Replace;\n        index: number;\n        count: number;\n        cells: NotebookCellDataDto[];\n    };\n\nexport interface NotebookWorkspaceEditMetadataDto {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n}\n\nexport interface WorkspaceNotebookCellEditDto {\n    metadata?: NotebookWorkspaceEditMetadataDto;\n    resource: UriComponents;\n    cellEdit: CellEditOperationDto;\n}\n\nexport namespace WorkspaceNotebookCellEditDto {\n    export function is(arg: WorkspaceNotebookCellEditDto | WorkspaceFileEditDto | WorkspaceTextEditDto): arg is WorkspaceNotebookCellEditDto {\n        return !!arg\n            && 'resource' in arg\n            && 'cellEdit' in arg\n            && arg.cellEdit !== null\n            && typeof arg.cellEdit === 'object';\n    }\n}\n\nexport interface WorkspaceEditDto {\n    edits: Array<WorkspaceTextEditDto | WorkspaceFileEditDto | WorkspaceNotebookCellEditDto>;\n}\n\nexport interface CommandProperties {\n    command: string;\n    args?: string[];\n    options?: {\n        cwd?: string;\n        [key: string]: any\n    };\n}\n\nexport type TaskGroupKind = 'build' | 'test' | 'rebuild' | 'clean';\nexport interface TaskDto {\n    type: string;\n    executionType?: 'shell' | 'process' | 'customExecution'; // the task execution type\n    executionId?: string,\n    label: string;\n    source?: string;\n    scope: string | number;\n    // Provide a more specific type when necessary (see ProblemMatcherContribution)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    problemMatcher?: any;\n    group?: {\n        kind: TaskGroupKind;\n        isDefault: boolean;\n    }\n    detail?: string;\n    presentation?: TaskPresentationOptionsDTO;\n    runOptions?: RunOptionsDTO;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport interface RunOptionsDTO {\n    reevaluateOnRerun?: boolean;\n}\n\nexport interface TaskPresentationOptionsDTO {\n    reveal?: number;\n    focus?: boolean;\n    echo?: boolean;\n    panel?: number;\n    showReuseMessage?: boolean;\n    clear?: boolean;\n    close?: boolean;\n}\n\nexport interface TaskExecutionDto {\n    id: number;\n    task: TaskDto;\n}\n\nexport interface ProcessTaskDto extends TaskDto, CommandProperties {\n    windows?: CommandProperties;\n}\n\nexport interface PluginInfo {\n    id: string;\n    name: string;\n    displayName?: string;\n}\n\nexport interface LanguageStatus {\n    readonly id: string;\n    readonly name: string;\n    readonly selector: SerializedDocumentFilter[];\n    readonly severity: Severity;\n    readonly label: string;\n    readonly detail: string;\n    readonly busy: boolean;\n    readonly source: string;\n    readonly command: Command | undefined;\n    readonly accessibilityInfo: theia.AccessibilityInformation | undefined;\n}\n\nexport interface LanguagesExt {\n    $provideCompletionItems(handle: number, resource: UriComponents, position: Position,\n        context: CompletionContext, token: CancellationToken): Promise<CompletionResultDto | undefined>;\n    $resolveCompletionItem(handle: number, chainedId: ChainedCacheId, token: CancellationToken): Promise<Completion | undefined>;\n    $releaseCompletionItems(handle: number, id: number): void;\n    $provideImplementation(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideTypeDefinition(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideDefinition(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideDeclaration(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Definition | undefined>;\n    $provideReferences(handle: number, resource: UriComponents, position: Position, context: ReferenceContext, token: CancellationToken): Promise<Location[] | undefined>;\n    $provideSignatureHelp(\n        handle: number, resource: UriComponents, position: Position, context: SignatureHelpContext, token: CancellationToken\n    ): Promise<SignatureHelp | undefined>;\n    $releaseSignatureHelp(handle: number, id: number): void;\n    $provideHover(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<Hover | undefined>;\n    $provideEvaluatableExpression(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<EvaluatableExpression | undefined>;\n    $provideInlineValues(handle: number, resource: UriComponents, range: Range, context: InlineValueContext, token: CancellationToken): Promise<InlineValue[] | undefined>;\n    $provideDocumentHighlights(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<DocumentHighlight[] | undefined>;\n    $provideDocumentFormattingEdits(handle: number, resource: UriComponents,\n        options: FormattingOptions, token: CancellationToken): Promise<TextEdit[] | undefined>;\n    $provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: Range,\n        options: FormattingOptions, token: CancellationToken): Promise<TextEdit[] | undefined>;\n    $provideOnTypeFormattingEdits(\n        handle: number,\n        resource: UriComponents,\n        position: Position,\n        ch: string,\n        options: FormattingOptions,\n        token: CancellationToken\n    ): Promise<TextEdit[] | undefined>;\n    $provideDocumentDropEdits(\n        handle: number,\n        resource: UriComponents,\n        position: Position,\n        dataTransfer: DataTransferDTO,\n        token: CancellationToken\n    ): Promise<DocumentDropEdit | undefined>;\n    $provideDocumentLinks(handle: number, resource: UriComponents, token: CancellationToken): Promise<DocumentLink[] | undefined>;\n    $resolveDocumentLink(handle: number, link: DocumentLink, token: CancellationToken): Promise<DocumentLink | undefined>;\n    $releaseDocumentLinks(handle: number, ids: number[]): void;\n    $provideCodeLenses(handle: number, resource: UriComponents, token: CancellationToken): Promise<CodeLensSymbol[] | undefined>;\n    $resolveCodeLens(handle: number, resource: UriComponents, symbol: CodeLensSymbol, token: CancellationToken): Promise<CodeLensSymbol | undefined>;\n    $releaseCodeLenses(handle: number, ids: number[]): void;\n    $provideCodeActions(\n        handle: number,\n        resource: UriComponents,\n        rangeOrSelection: Range | Selection,\n        context: CodeActionContext,\n        token: CancellationToken\n    ): Promise<CodeAction[] | undefined>;\n    $releaseCodeActions(handle: number, cacheIds: number[]): void;\n    $resolveCodeAction(handle: number, cacheId: number, token: CancellationToken): Promise<WorkspaceEditDto | undefined>;\n    $provideDocumentSymbols(handle: number, resource: UriComponents, token: CancellationToken): Promise<DocumentSymbol[] | undefined>;\n    $provideWorkspaceSymbols(handle: number, query: string, token: CancellationToken): PromiseLike<SymbolInformation[]>;\n    $resolveWorkspaceSymbol(handle: number, symbol: SymbolInformation, token: CancellationToken): PromiseLike<SymbolInformation | undefined>;\n    $provideFoldingRange(\n        handle: number,\n        resource: UriComponents,\n        context: FoldingContext,\n        token: CancellationToken\n    ): PromiseLike<FoldingRange[] | undefined>;\n    $provideSelectionRanges(handle: number, resource: UriComponents, positions: Position[], token: CancellationToken): PromiseLike<SelectionRange[][]>;\n    $provideDocumentColors(handle: number, resource: UriComponents, token: CancellationToken): PromiseLike<RawColorInfo[]>;\n    $provideColorPresentations(handle: number, resource: UriComponents, colorInfo: RawColorInfo, token: CancellationToken): PromiseLike<ColorPresentation[]>;\n    $provideInlayHints(handle: number, resource: UriComponents, range: Range, token: CancellationToken): Promise<InlayHintsDto | undefined>;\n    $resolveInlayHint(handle: number, id: ChainedCacheId, token: CancellationToken): Promise<InlayHintDto | undefined>;\n    $releaseInlayHints(handle: number, id: number): void;\n    $provideRenameEdits(handle: number, resource: UriComponents, position: Position, newName: string, token: CancellationToken): PromiseLike<WorkspaceEditDto | undefined>;\n    $resolveRenameLocation(handle: number, resource: UriComponents, position: Position, token: CancellationToken): PromiseLike<RenameLocation | undefined>;\n    $provideDocumentSemanticTokens(handle: number, resource: UriComponents, previousResultId: number, token: CancellationToken): Promise<BinaryBuffer | null>;\n    $releaseDocumentSemanticTokens(handle: number, semanticColoringResultId: number): void;\n    $provideDocumentRangeSemanticTokens(handle: number, resource: UriComponents, range: Range, token: CancellationToken): Promise<BinaryBuffer | null>;\n    $provideRootDefinition(handle: number, resource: UriComponents, location: Position, token: CancellationToken): Promise<CallHierarchyItem[] | undefined>;\n    $provideCallers(handle: number, definition: CallHierarchyItem, token: CancellationToken): Promise<CallHierarchyIncomingCall[] | undefined>;\n    $provideCallees(handle: number, definition: CallHierarchyItem, token: CancellationToken): Promise<CallHierarchyOutgoingCall[] | undefined>;\n    $provideLinkedEditingRanges(handle: number, resource: UriComponents, position: Position, token: CancellationToken): Promise<LinkedEditingRanges | undefined>;\n    $releaseCallHierarchy(handle: number, session?: string): Promise<boolean>;\n    $prepareTypeHierarchy(handle: number, resource: UriComponents, location: Position, token: theia.CancellationToken): Promise<TypeHierarchyItem[] | undefined>\n    $provideSuperTypes(handle: number, sessionId: string, itemId: string, token: theia.CancellationToken): Promise<TypeHierarchyItem[] | undefined>\n    $provideSubTypes(handle: number, sessionId: string, itemId: string, token: theia.CancellationToken): Promise<TypeHierarchyItem[] | undefined>;\n    $releaseTypeHierarchy(handle: number, session?: string): Promise<boolean>;\n    $provideInlineCompletions(handle: number, resource: UriComponents, position: Position, context: InlineCompletionContext, token: CancellationToken): Promise<IdentifiableInlineCompletions | undefined>;\n    $freeInlineCompletionsList(handle: number, pid: number): void;\n}\n\nexport const LanguagesMainFactory = Symbol('LanguagesMainFactory');\nexport interface LanguagesMainFactory {\n    (proxy: RPCProtocol): LanguagesMain;\n}\n\nexport const OutputChannelRegistryFactory = Symbol('OutputChannelRegistryFactory');\nexport interface OutputChannelRegistryFactory {\n    (): OutputChannelRegistryMain;\n}\n\nexport interface LanguagesMain {\n    $getLanguages(): Promise<string[]>;\n    $changeLanguage(resource: UriComponents, languageId: string): Promise<void>;\n    $setLanguageConfiguration(handle: number, languageId: string, configuration: SerializedLanguageConfiguration): void;\n    $unregister(handle: number): void;\n    $registerCompletionSupport(handle: number, pluginInfo: PluginInfo,\n        selector: SerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void;\n    $registerImplementationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerTypeDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDeclarationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerReferenceProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerSignatureHelpProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], metadata: theia.SignatureHelpProviderMetadata): void;\n    $registerHoverProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerEvaluatableExpressionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerInlineValuesProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $emitInlineValuesEvent(eventHandle: number, event?: any): void;\n    $registerDocumentHighlightProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerQuickFixProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], codeActionKinds?: string[], documentation?: CodeActionProviderDocumentation): void;\n    $clearDiagnostics(id: string): void;\n    $changeDiagnostics(id: string, delta: [string, MarkerData[]][]): void;\n    $registerDocumentFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDocumentDropEditProvider(handle: number, selector: SerializedDocumentFilter[], metadata?: DocumentDropEditProviderMetadata): void\n    $registerRangeFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerOnTypeFormattingProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], autoFormatTriggerCharacters: string[]): void;\n    $registerDocumentLinkProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerCodeLensSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle?: number): void;\n    $emitCodeLensEvent(eventHandle: number, event?: any): void;\n    $registerOutlineSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], displayName?: string): void;\n    $registerWorkspaceSymbolProvider(handle: number, pluginInfo: PluginInfo): void;\n    $registerFoldingRangeProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle?: number): void;\n    $emitFoldingRangeEvent(handle: number, event?: any): void;\n    $registerSelectionRangeProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerDocumentColorProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void;\n    $registerInlayHintsProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], displayName?: string, eventHandle?: number): void;\n    $emitInlayHintsEvent(eventHandle: number, event?: any): void;\n    $registerRenameProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], supportsResolveInitialValues: boolean): void;\n    $registerDocumentSemanticTokensProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[],\n        legend: theia.SemanticTokensLegend, eventHandle: number | undefined): void;\n    $emitDocumentSemanticTokensEvent(eventHandle: number): void;\n    $registerDocumentRangeSemanticTokensProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], legend: theia.SemanticTokensLegend): void;\n    $registerCallHierarchyProvider(handle: number, selector: SerializedDocumentFilter[]): void;\n    $registerLinkedEditingRangeProvider(handle: number, selector: SerializedDocumentFilter[]): void;\n    $registerTypeHierarchyProvider(handle: number, selector: SerializedDocumentFilter[]): void;\n    $setLanguageStatus(handle: number, status: LanguageStatus): void;\n    $removeLanguageStatus(handle: number): void;\n    $registerInlineCompletionsSupport(handle: number, selector: SerializedDocumentFilter[]): void;\n}\n\nexport interface WebviewInitData {\n    webviewResourceRoot: string\n    webviewCspSource: string\n}\n\nexport interface WebviewPanelViewState {\n    readonly active: boolean;\n    readonly visible: boolean;\n    readonly position: number;\n}\n\nexport interface WebviewsExt {\n    $onMessage(handle: string, message: any): void;\n    $onDidChangeWebviewPanelViewState(handle: string, newState: WebviewPanelViewState): void;\n    $onDidDisposeWebviewPanel(handle: string): PromiseLike<void>;\n    $deserializeWebviewPanel(newWebviewHandle: string,\n        viewType: string,\n        title: string,\n        state: any,\n        viewState: WebviewPanelViewState,\n        options: theia.WebviewOptions & theia.WebviewPanelOptions): PromiseLike<void>;\n}\n\nexport interface WebviewsMain {\n    $createWebviewPanel(handle: string,\n        viewType: string,\n        title: string,\n        showOptions: theia.WebviewPanelShowOptions,\n        options: theia.WebviewPanelOptions & theia.WebviewOptions): void;\n    $disposeWebview(handle: string): void;\n    $reveal(handle: string, showOptions: theia.WebviewPanelShowOptions): void;\n    $setTitle(handle: string, value: string): void;\n    $setIconPath(handle: string, value: IconUrl | undefined): void;\n    $setBadge(handle: string, badge: theia.ViewBadge | undefined): void;\n    $setHtml(handle: string, value: string): void;\n    $setOptions(handle: string, options: theia.WebviewOptions): void;\n    $postMessage(handle: string, value: any): Thenable<boolean>;\n\n    $registerSerializer(viewType: string): void;\n    $unregisterSerializer(viewType: string): void;\n}\n\nexport interface WebviewViewsExt {\n    $resolveWebviewView(handle: string,\n        viewType: string,\n        title: string | undefined,\n        state: any,\n        cancellation: CancellationToken): Promise<void>;\n    $onDidChangeWebviewViewVisibility(handle: string, visible: boolean): void;\n    $disposeWebviewView(handle: string): void;\n}\n\nexport interface WebviewViewsMain extends Disposable {\n    $registerWebviewViewProvider(viewType: string,\n        options: { retainContextWhenHidden?: boolean, serializeBuffersForPostMessage: boolean }): void;\n    $unregisterWebviewViewProvider(viewType: string): void;\n\n    $setWebviewViewTitle(handle: string, value: string | undefined): void;\n    $setWebviewViewDescription(handle: string, value: string | undefined): void;\n    $setBadge(handle: string, badge: theia.ViewBadge | undefined): void;\n\n    $show(handle: string, preserveFocus: boolean): void;\n}\n\nexport interface CustomEditorsExt {\n    $resolveWebviewEditor(\n        resource: UriComponents,\n        newWebviewHandle: string,\n        viewType: string,\n        title: string,\n        position: number,\n        options: theia.WebviewPanelOptions,\n        cancellation: CancellationToken): Promise<void>;\n    $createCustomDocument(resource: UriComponents, viewType: string, openContext: theia.CustomDocumentOpenContext, cancellation: CancellationToken): Promise<{ editable: boolean }>;\n    $disposeCustomDocument(resource: UriComponents, viewType: string): Promise<void>;\n    $undo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n    $redo(resource: UriComponents, viewType: string, editId: number, isDirty: boolean): Promise<void>;\n    $revert(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n    $disposeEdits(resourceComponents: UriComponents, viewType: string, editIds: number[]): void;\n    $save(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<void>;\n    $saveAs(resource: UriComponents, viewType: string, targetResource: UriComponents, cancellation: CancellationToken): Promise<void>;\n    // $backup(resource: UriComponents, viewType: string, cancellation: CancellationToken): Promise<string>;\n    $onMoveCustomEditor(handle: string, newResource: UriComponents, viewType: string): Promise<void>;\n}\n\nexport interface CustomTextEditorCapabilities {\n    readonly supportsMove?: boolean;\n}\n\nexport interface CustomEditorsMain {\n    $registerTextEditorProvider(viewType: string, options: theia.WebviewPanelOptions, capabilities: CustomTextEditorCapabilities): void;\n    $registerCustomEditorProvider(viewType: string, options: theia.WebviewPanelOptions, supportsMultipleEditorsPerDocument: boolean): void;\n    $unregisterEditorProvider(viewType: string): void;\n    $onDidEdit(resource: UriComponents, viewType: string, editId: number, label: string | undefined): void;\n    $onContentChange(resource: UriComponents, viewType: string): void;\n}\n\nexport interface StorageMain {\n    $set(key: string, value: KeysToAnyValues, isGlobal: boolean): Promise<boolean>;\n    $get(key: string, isGlobal: boolean): Promise<KeysToAnyValues>;\n    $getAll(isGlobal: boolean): Promise<KeysToKeysToAnyValue>;\n}\n\nexport interface StorageExt {\n    $updatePluginsWorkspaceData(data: KeysToKeysToAnyValue): void;\n}\n\n/**\n * A DebugConfigurationProviderTriggerKind specifies when the `provideDebugConfigurations` method of a `DebugConfigurationProvider` should be called.\n * Currently there are two situations:\n *  (1) providing debug configurations to populate a newly created `launch.json`\n *  (2) providing dynamically generated configurations when the user asks for them through the UI (e.g. via the \"Select and Start Debugging\" command).\n * A trigger kind is used when registering a `DebugConfigurationProvider` with {@link debug.registerDebugConfigurationProvider}.\n */\nexport enum DebugConfigurationProviderTriggerKind {\n    /**\n     * `DebugConfigurationProvider.provideDebugConfigurations` is called to provide the initial debug\n     * configurations for a newly created launch.json.\n     */\n    Initial = 1,\n    /**\n     * `DebugConfigurationProvider.provideDebugConfigurations` is called to provide dynamically generated debug configurations when the user asks for them through the UI\n     * (e.g. via the \"Select and Start Debugging\" command).\n     */\n    Dynamic = 2\n}\n\nexport interface DebugConfigurationProvider {\n    readonly handle: number;\n    readonly type: string;\n    readonly triggerKind: DebugConfigurationProviderTriggerKind;\n    provideDebugConfigurations?(folder: string | undefined): Promise<theia.DebugConfiguration[]>;\n    resolveDebugConfiguration?(\n        folder: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n    resolveDebugConfigurationWithSubstitutedVariables?(\n        folder: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n}\n\nexport interface DebugConfigurationProviderDescriptor {\n    readonly handle: number,\n    readonly type: string,\n    readonly trigger: DebugConfigurationProviderTriggerKind,\n    readonly provideDebugConfiguration: boolean,\n    readonly resolveDebugConfigurations: boolean,\n    readonly resolveDebugConfigurationWithSubstitutedVariables: boolean\n}\n\nexport interface DebugExt {\n    $onSessionCustomEvent(sessionId: string, event: string, body?: any): void;\n    $breakpointsDidChange(added: Breakpoint[], removed: string[], changed: Breakpoint[]): void;\n    $sessionDidCreate(sessionId: string): void;\n    $sessionDidStart(sessionId: string): void;\n    $sessionDidDestroy(sessionId: string): void;\n    $sessionDidChange(sessionId: string | undefined): void;\n    $provideDebugConfigurationsByHandle(handle: number, workspaceFolder: string | undefined): Promise<theia.DebugConfiguration[]>;\n    $resolveDebugConfigurationByHandle(\n        handle: number,\n        workspaceFolder: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n    $resolveDebugConfigurationWithSubstitutedVariablesByHandle(\n        handle: number,\n        workspaceFolder: string | undefined,\n        debugConfiguration: DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null>;\n\n    $onDidChangeActiveFrame(frame: DebugStackFrameDTO | undefined): void;\n    $onDidChangeActiveThread(thread: DebugThreadDTO | undefined): void;\n    $createDebugSession(debugConfiguration: DebugConfiguration, workspaceFolder: string | undefined): Promise<string>;\n    $terminateDebugSession(sessionId: string): Promise<void>;\n    $getTerminalCreationOptions(debugType: string): Promise<TerminalOptionsExt | undefined>;\n}\n\nexport interface DebugMain {\n    $appendToDebugConsole(value: string): Promise<void>;\n    $appendLineToDebugConsole(value: string): Promise<void>;\n    $registerDebuggerContribution(description: DebuggerDescription): Promise<void>;\n    $unregisterDebuggerConfiguration(debugType: string): Promise<void>;\n    $registerDebugConfigurationProvider(description: DebugConfigurationProviderDescriptor): void;\n    $unregisterDebugConfigurationProvider(handle: number): Promise<void>;\n    $addBreakpoints(breakpoints: Breakpoint[]): Promise<void>;\n    $removeBreakpoints(breakpoints: string[]): Promise<void>;\n    $startDebugging(folder: theia.WorkspaceFolder | undefined, nameOrConfiguration: string | theia.DebugConfiguration, options: DebugSessionOptions): Promise<boolean>;\n    $stopDebugging(sessionId?: string): Promise<void>;\n    $customRequest(sessionId: string, command: string, args?: any): Promise<DebugProtocol.Response>;\n    $getDebugProtocolBreakpoint(sessionId: string, breakpointId: string): Promise<theia.DebugProtocolBreakpoint | undefined>;\n}\n\nexport interface FileSystemExt {\n    $acceptProviderInfos(scheme: string, capabilities?: files.FileSystemProviderCapabilities): void;\n    $stat(handle: number, resource: UriComponents): Promise<files.Stat>;\n    $readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]>;\n    $readFile(handle: number, resource: UriComponents): Promise<BinaryBuffer>;\n    $writeFile(handle: number, resource: UriComponents, content: BinaryBuffer, opts: files.FileWriteOptions): Promise<void>;\n    $rename(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $copy(handle: number, resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $mkdir(handle: number, resource: UriComponents): Promise<void>;\n    $delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n    $watch(handle: number, session: number, resource: UriComponents, opts: files.WatchOptions): void;\n    $unwatch(handle: number, session: number): void;\n    $open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number>;\n    $close(handle: number, fd: number): Promise<void>;\n    $read(handle: number, fd: number, pos: number, length: number): Promise<BinaryBuffer>;\n    $write(handle: number, fd: number, pos: number, data: BinaryBuffer): Promise<number>;\n}\n\nexport interface IFileChangeDto {\n    resource: UriComponents;\n    type: files.FileChangeType;\n}\n\nexport interface FileSystemMain {\n    $registerFileSystemProvider(handle: number, scheme: string, capabilities: files.FileSystemProviderCapabilities, readonlyMessage?: MarkdownString): void;\n    $unregisterProvider(handle: number): void;\n    $onFileSystemChange(handle: number, resource: IFileChangeDto[]): void;\n\n    $stat(uri: UriComponents): Promise<files.Stat>;\n    $readdir(resource: UriComponents): Promise<[string, files.FileType][]>;\n    $readFile(resource: UriComponents): Promise<BinaryBuffer>;\n    $writeFile(resource: UriComponents, content: BinaryBuffer): Promise<void>;\n    $rename(resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $copy(resource: UriComponents, target: UriComponents, opts: files.FileOverwriteOptions): Promise<void>;\n    $mkdir(resource: UriComponents): Promise<void>;\n    $delete(resource: UriComponents, opts: files.FileDeleteOptions): Promise<void>;\n}\n\nexport interface FileSystemEvents {\n    created: UriComponents[];\n    changed: UriComponents[];\n    deleted: UriComponents[];\n}\n\nexport interface ExtHostFileSystemEventServiceShape {\n    $onFileEvent(events: FileSystemEvents): void;\n    $onWillRunFileOperation(operation: files.FileOperation, target: UriComponents, source: UriComponents | undefined, timeout: number, token: CancellationToken): Promise<any>;\n    $onDidRunFileOperation(operation: files.FileOperation, target: UriComponents, source: UriComponents | undefined): void;\n}\n\nexport interface ClipboardMain {\n    $readText(): Promise<string>;\n    $writeText(value: string): Promise<void>;\n}\n\nexport interface CommentsExt {\n    $createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: Range | undefined): void;\n    $updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: Range): Promise<void>;\n    $deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number): Promise<void>;\n    $provideCommentingRanges(commentControllerHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<{ ranges: Range[]; fileComments: boolean } | undefined>;\n}\n\nexport interface CommentProviderFeatures {\n    options?: CommentOptions;\n}\n\nexport type CommentThreadChanges = Partial<{\n    range: Range,\n    label: string,\n    contextValue: string,\n    comments: Comment[],\n    collapseState: CommentThreadCollapsibleState;\n    state: CommentThreadState;\n    canReply: boolean | theia.CommentAuthorInformation;\n}>;\n\nexport interface CommentsMain {\n    $registerCommentController(handle: number, id: string, label: string): void;\n    $unregisterCommentController(handle: number): void;\n    $updateCommentControllerFeatures(handle: number, features: CommentProviderFeatures): void;\n    $createCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, range: Range | undefined, extensionId: string): CommentThread | undefined;\n    $updateCommentThread(handle: number, commentThreadHandle: number, threadId: string, resource: UriComponents, changes: CommentThreadChanges): void;\n    $deleteCommentThread(handle: number, commentThreadHandle: number): void;\n    $onDidCommentThreadsChange(handle: number, event: CommentThreadChangedEvent): void;\n}\n\n// #region\n\nexport const enum TabInputKind {\n    UnknownInput,\n    TextInput,\n    TextDiffInput,\n    TextMergeInput,\n    NotebookInput,\n    NotebookDiffInput,\n    CustomEditorInput,\n    WebviewEditorInput,\n    TerminalEditorInput,\n    InteractiveEditorInput,\n}\n\nexport interface UnknownInputDto {\n    kind: TabInputKind.UnknownInput;\n}\n\nexport interface TextInputDto {\n    kind: TabInputKind.TextInput;\n    uri: UriComponents;\n}\n\nexport interface TextDiffInputDto {\n    kind: TabInputKind.TextDiffInput;\n    original: UriComponents;\n    modified: UriComponents;\n}\n\nexport interface TextMergeInputDto {\n    kind: TabInputKind.TextMergeInput;\n    base: UriComponents;\n    input1: UriComponents;\n    input2: UriComponents;\n    result: UriComponents;\n}\n\nexport interface NotebookInputDto {\n    kind: TabInputKind.NotebookInput;\n    notebookType: string;\n    uri: UriComponents;\n}\n\nexport interface NotebookDiffInputDto {\n    kind: TabInputKind.NotebookDiffInput;\n    notebookType: string;\n    original: UriComponents;\n    modified: UriComponents;\n}\n\nexport interface CustomInputDto {\n    kind: TabInputKind.CustomEditorInput;\n    viewType: string;\n    uri: UriComponents;\n}\n\nexport interface WebviewInputDto {\n    kind: TabInputKind.WebviewEditorInput;\n    viewType: string;\n}\n\nexport interface InteractiveEditorInputDto {\n    kind: TabInputKind.InteractiveEditorInput;\n    uri: UriComponents;\n    inputBoxUri: UriComponents;\n}\n\nexport interface TabInputDto {\n    kind: TabInputKind.TerminalEditorInput;\n}\n\nexport type EditorGroupColumn = number;\nexport type AnyInputDto = UnknownInputDto | TextInputDto | TextDiffInputDto | TextMergeInputDto | NotebookInputDto | NotebookDiffInputDto | CustomInputDto | WebviewInputDto | InteractiveEditorInputDto | TabInputDto;\n\nexport interface TabGroupDto {\n    isActive: boolean;\n    viewColumn: EditorGroupColumn;\n    tabs: TabDto[];\n    groupId: number;\n}\n\nexport const enum TabModelOperationKind {\n    TAB_OPEN,\n    TAB_CLOSE,\n    TAB_UPDATE,\n    TAB_MOVE\n}\n\nexport interface TabOperation {\n    readonly kind: TabModelOperationKind.TAB_OPEN | TabModelOperationKind.TAB_CLOSE | TabModelOperationKind.TAB_UPDATE | TabModelOperationKind.TAB_MOVE;\n    readonly index: number;\n    readonly tabDto: TabDto;\n    readonly groupId: number;\n    readonly oldIndex?: number;\n}\n\nexport interface TabDto {\n    id: string;\n    label: string;\n    input: AnyInputDto;\n    editorId?: string;\n    isActive: boolean;\n    isPinned: boolean;\n    isPreview: boolean;\n    isDirty: boolean;\n}\n\nexport interface TabsExt {\n    $acceptEditorTabModel(tabGroups: TabGroupDto[]): void;\n    $acceptTabGroupUpdate(groupDto: TabGroupDto): void;\n    $acceptTabOperation(operation: TabOperation): void;\n}\n\nexport interface TabsMain {\n    $moveTab(tabId: string, index: number, viewColumn: EditorGroupColumn, preserveFocus?: boolean): void;\n    $closeTab(tabIds: string[], preserveFocus?: boolean): Promise<boolean>;\n    $closeGroup(groupIds: number[], preserveFocus?: boolean): Promise<boolean>;\n}\n\nexport interface TelemetryMain {\n}\n\nexport interface TelemetryExt {\n}\n\n// endregion\n\n// based from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\nexport const enum TestingResourceExt {\n    Workspace,\n    TextDocument\n}\n\n// based from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\nexport interface TestingExt {\n    $onCancelTestRun(controllerId: string, runId: string): void;\n    /** Configures a test run config. */\n    $onConfigureRunProfile(controllerId: string, profileId: string): void;\n\n    /** Sets the default on a given run profile */\n    $onDidChangeDefault(controllerId: string, profileId: string, isDefault: boolean): void;\n\n    $onRunControllerTests(reqs: TestRunRequestDTO[]): void;\n\n    /** Asks the controller to refresh its tests */\n    $refreshTests(controllerId: string, token: CancellationToken): Promise<void>;\n\n    $onResolveChildren(controllerId: string, path: string[]): void;\n}\n\n// based from https://github.com/microsoft/vscode/blob/1.85.1/src/vs/workbench/api/common/extHostUrls.ts\nexport interface UriExt {\n    registerUriHandler(handler: theia.UriHandler, plugin: PluginInfo): theia.Disposable;\n    $handleExternalUri(uri: UriComponents): Promise<void>;\n}\n\nexport interface UriMain {\n    $registerUriHandler(extensionId: string, extensionName: string): void;\n    $unregisterUriHandler(extensionId: string): void;\n}\n\nexport interface TestControllerUpdate {\n    label: string;\n    canRefresh: boolean;\n    canResolve: boolean;\n}\n\n// based from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\nexport interface TestingMain {\n    // --- test lifecycle:\n\n    /** Registers that there's a test controller with the given ID */\n    $registerTestController(controllerId: string, label: string): void;\n    /** Updates the label of an existing test controller. */\n    $updateController(controllerId: string, patch: Partial<TestControllerUpdate>): void;\n    /** Disposes of the test controller with the given ID */\n    $unregisterTestController(controllerId: string): void;\n    $notifyDelta(controllerId: string, diff: TreeDelta<string, TestItemDTO>[]): void;\n\n    // --- test run configurations:\n\n    /** Called when a new test run profile is available */\n    $notifyTestRunProfileCreated(controllerId: string, profile: TestRunProfileDTO): void;\n    /** Updates an existing test run profile */\n    $updateTestRunProfile(controllerId: string, profileId: string, update: Partial<TestRunProfileDTO>): void;\n    /** Removes a previously-published test run profile */\n    $removeTestRunProfile(controllerId: string, profileId: string): void;\n\n    // Test runs\n\n    $notifyTestRunCreated(controllerId: string, run: TestRunDTO, preserveFocus: boolean): void;\n    $notifyTestStateChanged(controllerId: string, runId: string, stateChanges: TestStateChangeDTO[], outputChanges: TestOutputDTO[]): void;\n    $notifyTestRunEnded(controllerId: string, runId: string): void;\n}\n\nexport const PLUGIN_RPC_CONTEXT = {\n    LOGGER_MAIN: createProxyIdentifier<LoggerMain>('LoggerMain'),\n    AUTHENTICATION_MAIN: createProxyIdentifier<AuthenticationMain>('AuthenticationMain'),\n    COMMAND_REGISTRY_MAIN: createProxyIdentifier<CommandRegistryMain>('CommandRegistryMain'),\n    QUICK_OPEN_MAIN: createProxyIdentifier<QuickOpenMain>('QuickOpenMain'),\n    DIALOGS_MAIN: createProxyIdentifier<DialogsMain>('DialogsMain'),\n    WORKSPACE_MAIN: createProxyIdentifier<WorkspaceMain>('WorkspaceMain'),\n    MESSAGE_REGISTRY_MAIN: <ProxyIdentifier<MessageRegistryMain>>createProxyIdentifier<MessageRegistryMain>('MessageRegistryMain'),\n    TEXT_EDITORS_MAIN: createProxyIdentifier<TextEditorsMain>('TextEditorsMain'),\n    DOCUMENTS_MAIN: createProxyIdentifier<DocumentsMain>('DocumentsMain'),\n    NOTEBOOKS_MAIN: createProxyIdentifier<NotebooksMain>('NotebooksMain'),\n    NOTEBOOK_DOCUMENTS_MAIN: createProxyIdentifier<NotebookDocumentsMain>('NotebookDocumentsMain'),\n    NOTEBOOK_EDITORS_MAIN: createProxyIdentifier<NotebookEditorsMain>('NotebookEditorsMain'),\n    NOTEBOOK_DOCUMENTS_AND_EDITORS_MAIN: createProxyIdentifier<NotebookDocumentsAndEditorsMain>('NotebooksAndEditorsMain'),\n    NOTEBOOK_RENDERERS_MAIN: createProxyIdentifier<NotebookRenderersMain>('NotebookRenderersMain'),\n    NOTEBOOK_KERNELS_MAIN: createProxyIdentifier<NotebookKernelsMain>('NotebookKernelsMain'),\n    STATUS_BAR_MESSAGE_REGISTRY_MAIN: <ProxyIdentifier<StatusBarMessageRegistryMain>>createProxyIdentifier<StatusBarMessageRegistryMain>('StatusBarMessageRegistryMain'),\n    ENV_MAIN: createProxyIdentifier<EnvMain>('EnvMain'),\n    NOTIFICATION_MAIN: createProxyIdentifier<NotificationMain>('NotificationMain'),\n    TERMINAL_MAIN: createProxyIdentifier<TerminalServiceMain>('TerminalServiceMain'),\n    TREE_VIEWS_MAIN: createProxyIdentifier<TreeViewsMain>('TreeViewsMain'),\n    PREFERENCE_REGISTRY_MAIN: createProxyIdentifier<PreferenceRegistryMain>('PreferenceRegistryMain'),\n    OUTPUT_CHANNEL_REGISTRY_MAIN: <ProxyIdentifier<OutputChannelRegistryMain>>createProxyIdentifier<OutputChannelRegistryMain>('OutputChannelRegistryMain'),\n    LANGUAGES_MAIN: createProxyIdentifier<LanguagesMain>('LanguagesMain'),\n    CONNECTION_MAIN: createProxyIdentifier<ConnectionMain>('ConnectionMain'),\n    WEBVIEWS_MAIN: createProxyIdentifier<WebviewsMain>('WebviewsMain'),\n    CUSTOM_EDITORS_MAIN: createProxyIdentifier<CustomEditorsMain>('CustomEditorsMain'),\n    WEBVIEW_VIEWS_MAIN: createProxyIdentifier<WebviewViewsMain>('WebviewViewsMain'),\n    STORAGE_MAIN: createProxyIdentifier<StorageMain>('StorageMain'),\n    TASKS_MAIN: createProxyIdentifier<TasksMain>('TasksMain'),\n    DEBUG_MAIN: createProxyIdentifier<DebugMain>('DebugMain'),\n    FILE_SYSTEM_MAIN: createProxyIdentifier<FileSystemMain>('FileSystemMain'),\n    SCM_MAIN: createProxyIdentifier<ScmMain>('ScmMain'),\n    SECRETS_MAIN: createProxyIdentifier<SecretsMain>('SecretsMain'),\n    DECORATIONS_MAIN: createProxyIdentifier<DecorationsMain>('DecorationsMain'),\n    WINDOW_MAIN: createProxyIdentifier<WindowMain>('WindowMain'),\n    CLIPBOARD_MAIN: createProxyIdentifier<ClipboardMain>('ClipboardMain'),\n    LABEL_SERVICE_MAIN: createProxyIdentifier<LabelServiceMain>('LabelServiceMain'),\n    TIMELINE_MAIN: createProxyIdentifier<TimelineMain>('TimelineMain'),\n    THEMING_MAIN: createProxyIdentifier<ThemingMain>('ThemingMain'),\n    COMMENTS_MAIN: createProxyIdentifier<CommentsMain>('CommentsMain'),\n    TABS_MAIN: createProxyIdentifier<TabsMain>('TabsMain'),\n    TELEMETRY_MAIN: createProxyIdentifier<TelemetryMain>('TelemetryMain'),\n    LOCALIZATION_MAIN: createProxyIdentifier<LocalizationMain>('LocalizationMain'),\n    TESTING_MAIN: createProxyIdentifier<TestingMain>('TestingMain'),\n    URI_MAIN: createProxyIdentifier<UriMain>('UriMain'),\n    MCP_SERVER_DEFINITION_REGISTRY_MAIN: createProxyIdentifier<McpServerDefinitionRegistryMain>('McpServerDefinitionRegistryMain')\n};\n\nexport const MAIN_RPC_CONTEXT = {\n    AUTHENTICATION_EXT: createProxyIdentifier<AuthenticationExt>('AuthenticationExt'),\n    HOSTED_PLUGIN_MANAGER_EXT: createProxyIdentifier<PluginManagerExt>('PluginManagerExt'),\n    COMMAND_REGISTRY_EXT: createProxyIdentifier<CommandRegistryExt>('CommandRegistryExt'),\n    QUICK_OPEN_EXT: createProxyIdentifier<QuickOpenExt>('QuickOpenExt'),\n    WINDOW_STATE_EXT: createProxyIdentifier<WindowStateExt>('WindowStateExt'),\n    NOTIFICATION_EXT: createProxyIdentifier<NotificationExt>('NotificationExt'),\n    WORKSPACE_EXT: createProxyIdentifier<WorkspaceExt>('WorkspaceExt'),\n    TEXT_EDITORS_EXT: createProxyIdentifier<TextEditorsExt>('TextEditorsExt'),\n    EDITORS_AND_DOCUMENTS_EXT: createProxyIdentifier<EditorsAndDocumentsExt>('EditorsAndDocumentsExt'),\n    DOCUMENTS_EXT: createProxyIdentifier<DocumentsExt>('DocumentsExt'),\n    NOTEBOOKS_EXT: createProxyIdentifier<NotebooksExt>('NotebooksExt'),\n    NOTEBOOK_DOCUMENTS_EXT: createProxyIdentifier<NotebookDocumentsExt>('NotebookDocumentsExt'),\n    NOTEBOOK_EDITORS_EXT: createProxyIdentifier<NotebookEditorsExt>('NotebookEditorsExt'),\n    NOTEBOOK_RENDERERS_EXT: createProxyIdentifier<NotebookRenderersExt>('NotebooksRenderersExt'),\n    NOTEBOOK_KERNELS_EXT: createProxyIdentifier<NotebookKernelsExt>('NotebookKernelsExt'),\n    TERMINAL_EXT: createProxyIdentifier<TerminalServiceExt>('TerminalServiceExt'),\n    OUTPUT_CHANNEL_REGISTRY_EXT: createProxyIdentifier<OutputChannelRegistryExt>('OutputChannelRegistryExt'),\n    TREE_VIEWS_EXT: createProxyIdentifier<TreeViewsExt>('TreeViewsExt'),\n    PREFERENCE_REGISTRY_EXT: createProxyIdentifier<PreferenceRegistryExt>('PreferenceRegistryExt'),\n    LANGUAGES_EXT: createProxyIdentifier<LanguagesExt>('LanguagesExt'),\n    CONNECTION_EXT: createProxyIdentifier<ConnectionExt>('ConnectionExt'),\n    WEBVIEWS_EXT: createProxyIdentifier<WebviewsExt>('WebviewsExt'),\n    CUSTOM_EDITORS_EXT: createProxyIdentifier<CustomEditorsExt>('CustomEditorsExt'),\n    WEBVIEW_VIEWS_EXT: createProxyIdentifier<WebviewViewsExt>('WebviewViewsExt'),\n    STORAGE_EXT: createProxyIdentifier<StorageExt>('StorageExt'),\n    TASKS_EXT: createProxyIdentifier<TasksExt>('TasksExt'),\n    DEBUG_EXT: createProxyIdentifier<DebugExt>('DebugExt'),\n    FILE_SYSTEM_EXT: createProxyIdentifier<FileSystemExt>('FileSystemExt'),\n    ExtHostFileSystemEventService: createProxyIdentifier<ExtHostFileSystemEventServiceShape>('ExtHostFileSystemEventService'),\n    SCM_EXT: createProxyIdentifier<ScmExt>('ScmExt'),\n    SECRETS_EXT: createProxyIdentifier<SecretsExt>('SecretsExt'),\n    DECORATIONS_EXT: createProxyIdentifier<DecorationsExt>('DecorationsExt'),\n    LABEL_SERVICE_EXT: createProxyIdentifier<LabelServiceExt>('LabelServiceExt'),\n    TIMELINE_EXT: createProxyIdentifier<TimelineExt>('TimeLineExt'),\n    THEMING_EXT: createProxyIdentifier<ThemingExt>('ThemingExt'),\n    COMMENTS_EXT: createProxyIdentifier<CommentsExt>('CommentsExt'),\n    TABS_EXT: createProxyIdentifier<TabsExt>('TabsExt'),\n    TELEMETRY_EXT: createProxyIdentifier<TelemetryExt>('TelemetryExt)'),\n    TESTING_EXT: createProxyIdentifier<TestingExt>('TestingExt'),\n    URI_EXT: createProxyIdentifier<UriExt>('UriExt'),\n    MCP_SERVER_DEFINITION_REGISTRY_EXT: createProxyIdentifier<McpServerDefinitionRegistryExt>('McpServerDefinitionRegistryExt')\n};\n\nexport interface TasksExt {\n    $initLoadedTasks(executions: TaskExecutionDto[]): Promise<void>;\n    $provideTasks(handle: number): Promise<TaskDto[]>;\n    $resolveTask(handle: number, task: TaskDto, token?: CancellationToken): Promise<TaskDto>;\n    $onDidStartTask(execution: TaskExecutionDto, terminalId: number): void;\n    $onDidEndTask(id: number): void;\n    $onDidStartTaskProcess(processId: number | undefined, execution: TaskExecutionDto): void;\n    $onDidEndTaskProcess(exitCode: number | undefined, taskId: number): void;\n}\n\nexport interface TasksMain {\n    $registerTaskProvider(handle: number, type: string): void;\n    $fetchTasks(taskVersion: string | undefined, taskType: string | undefined): Promise<TaskDto[]>;\n    $executeTask(taskDto: TaskDto): Promise<TaskExecutionDto | undefined>;\n    $taskExecutions(): Promise<TaskExecutionDto[]>;\n    $unregister(handle: number): void;\n    $terminateTask(id: number): void;\n    $customExecutionComplete(id: number, exitCode: number | undefined): void;\n}\n\nexport interface AuthenticationExt {\n    $getSessions(providerId: string, scopes: string[] | undefined, options: theia.AuthenticationProviderSessionOptions): Promise<ReadonlyArray<theia.AuthenticationSession>>;\n    $createSession(id: string, scopes: string[], options: theia.AuthenticationProviderSessionOptions): Promise<theia.AuthenticationSession>;\n    $removeSession(id: string, sessionId: string): Promise<void>;\n    $onDidChangeAuthenticationSessions(provider: theia.AuthenticationProviderInformation): Promise<void>;\n}\n\nexport interface AuthenticationMain {\n    $getAccounts(providerId: string): Thenable<readonly theia.AuthenticationSessionAccountInformation[]>;\n    $registerAuthenticationProvider(id: string, label: string, supportsMultipleAccounts: boolean): void;\n    $unregisterAuthenticationProvider(id: string): void;\n    $onDidChangeSessions(providerId: string, event: AuthenticationProviderAuthenticationSessionsChangeEvent): void;\n    $getSession(providerId: string, scopes: readonly string[], extensionId: string, extensionName: string,\n        options: theia.AuthenticationGetSessionOptions): Promise<theia.AuthenticationSession | undefined>;\n}\n\nexport interface NotebookOutputItemDto {\n    readonly mime: string;\n    readonly valueBytes: BinaryBuffer;\n}\n\nexport interface NotebookOutputDto {\n    outputId: string;\n    items: NotebookOutputItemDto[];\n    metadata?: Record<string, unknown>;\n}\n\nexport interface NotebookCellDataDto {\n    source: string;\n    language: string;\n    cellKind: notebookCommon.CellKind;\n    outputs: NotebookOutputDto[];\n    metadata?: notebookCommon.NotebookCellMetadata;\n    internalMetadata?: notebookCommon.NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDataDto {\n    readonly cells: NotebookCellDataDto[];\n    readonly metadata: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface NotebookCellDto {\n    handle: number;\n    uri: UriComponents;\n    eol: string;\n    source: string[];\n    language: string;\n    mime?: string;\n    cellKind: notebookCommon.CellKind;\n    outputs: NotebookOutputDto[];\n    metadata?: notebookCommon.NotebookCellMetadata;\n    internalMetadata?: notebookCommon.NotebookCellInternalMetadata;\n}\n\nexport interface NotebookModelAddedData {\n    uri: UriComponents;\n    versionId: number;\n    cells: NotebookCellDto[];\n    viewType: string;\n    metadata?: notebookCommon.NotebookDocumentMetadata;\n}\n\nexport interface NotebookEditorAddData {\n    id: string;\n    documentUri: UriComponents;\n    selections: CellRange[];\n    visibleRanges: CellRange[];\n    viewColumn?: number;\n}\n\nexport interface NotebookDocumentsAndEditorsDelta {\n    removedDocuments?: UriComponents[];\n    addedDocuments?: NotebookModelAddedData[];\n    removedEditors?: string[];\n    addedEditors?: NotebookEditorAddData[];\n    newActiveEditor?: string | null;\n    visibleEditors?: string[];\n}\n\nexport type NotebookCellStatusBarEntryDto = notebookCommon.NotebookCellStatusBarItem;\n\nexport interface NotebookCellStatusBarListDto {\n    items: NotebookCellStatusBarEntryDto[];\n    cacheId: number;\n}\n\nexport type NotebookRawContentEventDto =\n    // notebookCommon.NotebookCellsInitializeEvent<NotebookCellDto>\n    | {\n\n        readonly kind: notebookCommon.NotebookCellsChangeType.ModelChange;\n        readonly changes: notebookCommon.NotebookCellTextModelSplice<NotebookCellDto>[];\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.Move;\n        readonly index: number;\n        readonly length: number;\n        readonly newIdx: number;\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.Output;\n        readonly index: number;\n        readonly outputs: NotebookOutputDto[];\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.OutputItem;\n        readonly index: number;\n        readonly outputId: string;\n        readonly outputItems: NotebookOutputItemDto[];\n        readonly append: boolean;\n    }\n    | {\n        readonly kind: notebookCommon.NotebookCellsChangeType.ChangeDocumentMetadata\n        readonly metadata: notebookCommon.NotebookDocumentMetadata;\n    }\n    | notebookCommon.NotebookCellsChangeLanguageEvent\n    | notebookCommon.NotebookCellsChangeMetadataEvent\n    | notebookCommon.NotebookCellsChangeInternalMetadataEvent\n    | notebookCommon.NotebookCellContentChangeEvent\n    ;\n\nexport interface NotebookCellsChangedEventDto {\n    readonly rawEvents: NotebookRawContentEventDto[];\n    readonly versionId: number;\n};\n\nexport interface NotebookSelectionChangeEvent {\n    selections: CellRange[];\n}\n\nexport interface NotebookVisibleRangesEvent {\n    ranges: CellRange[];\n}\n\nexport interface NotebookEditorPropertiesChangeData {\n    visibleRanges?: NotebookVisibleRangesEvent;\n    selections?: NotebookSelectionChangeEvent;\n}\n\nexport enum NotebookEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\nexport interface NotebookDocumentShowOptions {\n    position?: EditorGroupColumn;\n    preserveFocus?: boolean;\n    pinned?: boolean;\n    selections?: CellRange[];\n}\n\nexport interface NotebookKernelDto {\n    id: string;\n    notebookType: string;\n    extensionId: string;\n    extensionLocation: UriComponents;\n    label: string;\n    detail?: string;\n    description?: string;\n    supportedLanguages?: string[];\n    supportsInterrupt?: boolean;\n    supportsExecutionOrder?: boolean;\n    preloads?: { uri: UriComponents; provides: readonly string[] }[];\n    rendererScripts?: NotebookRendererScript[];\n}\n\nexport type CellExecuteUpdateDto = CellExecuteOutputEditDto | CellExecuteOutputItemEditDto | CellExecutionStateUpdateDto;\n\nexport interface CellExecuteOutputEditDto {\n    editType: CellExecutionUpdateType.Output;\n    cellHandle: number;\n    append?: boolean;\n    outputs: NotebookOutputDto[];\n}\n\nexport interface CellExecuteOutputItemEditDto {\n    editType: CellExecutionUpdateType.OutputItems;\n    append?: boolean;\n    outputId: string;\n    items: NotebookOutputItemDto[];\n}\n\nexport interface CellExecutionStateUpdateDto {\n    editType: CellExecutionUpdateType.ExecutionState;\n    executionOrder?: number;\n    runStartTime?: number;\n    didPause?: boolean;\n    isPaused?: boolean;\n}\n\nexport interface CellExecutionCompleteDto {\n    runEndTime?: number;\n    lastRunSuccess?: boolean;\n}\n\nexport interface NotebookKernelSourceActionDto {\n    readonly label: string;\n    readonly description?: string;\n    readonly detail?: string;\n    readonly command?: string | Command;\n    readonly documentation?: UriComponents | string;\n}\n\nexport interface NotebookEditorAddData {\n    id: string;\n    documentUri: UriComponents;\n    selections: CellRange[];\n    visibleRanges: CellRange[];\n    viewColumn?: number;\n}\n\nexport interface NotebooksExt extends NotebookDocumentsAndEditorsExt {\n    $provideNotebookCellStatusBarItems(handle: number, uri: UriComponents, index: number, token: CancellationToken): Promise<NotebookCellStatusBarListDto | undefined>;\n    $releaseNotebookCellStatusBarItems(id: number): void;\n\n    $dataToNotebook(handle: number, data: BinaryBuffer, token: CancellationToken): Promise<NotebookDataDto>;\n    $notebookToData(handle: number, data: NotebookDataDto, token: CancellationToken): Promise<BinaryBuffer>;\n}\n\nexport interface NotebooksMain extends Disposable {\n    $registerNotebookSerializer(handle: number, viewType: string, options: notebookCommon.TransientOptions): void;\n    $unregisterNotebookSerializer(handle: number): void;\n\n    $registerNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined, viewType: string): Promise<void>;\n    $unregisterNotebookCellStatusBarItemProvider(handle: number, eventHandle: number | undefined): Promise<void>;\n    $emitCellStatusBarEvent(eventHandle: number): void;\n}\n\nexport interface NotebookKernelsExt {\n    $acceptNotebookAssociation(handle: number, uri: UriComponents, value: boolean): void;\n    $executeCells(handle: number, uri: UriComponents, handles: number[]): Promise<void>;\n    $cancelCells(handle: number, uri: UriComponents, handles: number[]): Promise<void>;\n    $acceptKernelMessageFromRenderer(handle: number, editorId: string, message: any): void;\n    $cellExecutionChanged(uri: UriComponents, cellHandle: number, state: NotebookCellExecutionState | undefined): void;\n    $provideKernelSourceActions(handle: number, token: CancellationToken): Promise<NotebookKernelSourceActionDto[]>;\n}\n\nexport interface NotebookKernelsMain extends Disposable {\n    $postMessage(handle: number, editorId: string | undefined, message: any): Promise<boolean>;\n    $addKernel(handle: number, data: NotebookKernelDto): Promise<void>;\n    $updateKernel(handle: number, data: Partial<NotebookKernelDto>): void;\n    $removeKernel(handle: number): void;\n    $updateNotebookPriority(handle: number, uri: UriComponents, value: number | undefined): void;\n\n    $createExecution(handle: number, controllerId: string, uri: UriComponents, cellHandle: number): void;\n    $updateExecution(handle: number, data: CellExecuteUpdateDto[]): void;\n    $completeExecution(handle: number, data: CellExecutionCompleteDto): void;\n\n    $createNotebookExecution(handle: number, controllerId: string, uri: UriComponents): void;\n    $beginNotebookExecution(handle: number): void;\n    $completeNotebookExecution(handle: number): void;\n\n    $addKernelDetectionTask(handle: number, notebookType: string): Promise<void>;\n    $removeKernelDetectionTask(handle: number): void;\n\n    $addKernelSourceActionProvider(handle: number, eventHandle: number, notebookType: string): Promise<void>;\n    $removeKernelSourceActionProvider(handle: number, eventHandle: number): void;\n    $emitNotebookKernelSourceActionsChangeEvent(eventHandle: number): void;\n}\n\nexport interface NotebookDocumentsMain extends Disposable {\n    $tryCreateNotebook(options: { viewType: string; content?: NotebookDataDto }): Promise<UriComponents>;\n    $tryOpenNotebook(uriComponents: UriComponents): Promise<UriComponents>;\n    $trySaveNotebook(uri: UriComponents): Promise<boolean>;\n}\n\nexport interface NotebookDocumentsExt {\n    $acceptModelChanged(uriComponents: UriComponents, event: NotebookCellsChangedEventDto, isDirty: boolean, newMetadata?: notebookCommon.NotebookDocumentMetadata): void;\n    $acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void;\n    $acceptModelSaved(uriComponents: UriComponents): void;\n}\n\nexport interface NotebookDocumentsAndEditorsExt {\n    $acceptDocumentsAndEditorsDelta(delta: NotebookDocumentsAndEditorsDelta): Promise<void>;\n    $acceptActiveCellEditorChange(newActiveEditor: string | null): void;\n}\n\nexport interface NotebookDocumentsAndEditorsMain extends Disposable {\n}\n\nexport type NotebookEditorViewColumnInfo = Record<string, number>;\n\nexport interface NotebookEditorsExt {\n    $acceptEditorPropertiesChanged(id: string, data: NotebookEditorPropertiesChangeData): void;\n    $acceptEditorViewColumns(data: NotebookEditorViewColumnInfo): void;\n}\n\nexport interface NotebookEditorsMain extends Disposable {\n    $tryShowNotebookDocument(uriComponents: UriComponents, viewType: string, options: NotebookDocumentShowOptions): Promise<string>;\n    $tryRevealRange(id: string, range: CellRange, revealType: NotebookEditorRevealType): Promise<void>;\n    $trySetSelections(id: string, range: CellRange[]): void;\n}\nexport interface NotebookRenderersExt {\n    $postRendererMessage(editorId: string, rendererId: string, message: unknown): void;\n}\n\nexport interface NotebookRenderersMain extends Disposable {\n    $postMessage(editorId: string | undefined, rendererId: string, message: unknown): Promise<boolean>;\n}\n\nexport interface RawColorInfo {\n    color: [number, number, number, number];\n    range: Range;\n}\n\nexport interface LabelServiceExt {\n    $registerResourceLabelFormatter(formatter: ResourceLabelFormatter): theia.Disposable;\n}\n\nexport interface LabelServiceMain {\n    $registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void;\n    $unregisterResourceLabelFormatter(handle: number): void;\n}\n\nexport interface SecretsExt {\n    $onDidChangePassword(e: { extensionId: string, key: string }): Promise<void>;\n}\n\nexport interface SecretsMain {\n    $getPassword(extensionId: string, key: string): Promise<string | undefined>;\n    $setPassword(extensionId: string, key: string, value: string): Promise<void>;\n    $deletePassword(extensionId: string, key: string): Promise<void>;\n}\n\nexport type InlayHintDto = CachedSessionItem<InlayHint>;\nexport type InlayHintsDto = CachedSession<{ hints: InlayHint[] }>;\n\nexport interface IdentifiableInlineCompletions extends InlineCompletions<IdentifiableInlineCompletion> {\n    pid: number;\n}\n\nexport interface IdentifiableInlineCompletion extends InlineCompletion {\n    idx: number;\n}\n\nexport const LocalizationExt = Symbol('LocalizationExt');\nexport interface LocalizationExt {\n    translateMessage(pluginId: string, details: StringDetails): string;\n    getBundle(pluginId: string): Record<string, string> | undefined;\n    getBundleUri(pluginId: string): theia.Uri | undefined;\n    initializeLocalizedMessages(plugin: Plugin, currentLanguage: string): Promise<void>;\n}\n\nexport interface StringDetails {\n    message: string;\n    args?: Record<string | number, any>;\n    comment?: string | string[];\n}\n\nexport interface LocalizationMain {\n    $fetchBundle(id: string): Promise<LanguagePackBundle | undefined>;\n}\n\nexport enum LogLevel {\n    Trace = 1,\n    Debug = 2,\n    Info = 3,\n    Warn = 4,\n    Error = 5\n}\n\nexport interface LoggerMain {\n    $log(level: LogLevel, name: string | undefined, message: string, params: any[]): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * On POSIX:\n * ┌──────────────────────┬────────────┐\n * │          dir         │    base    │\n * ├──────┬               ├──────┬─────┤\n * │ root │               │ name │ ext │\n * \"  /     home/user/dir / file  .txt \"\n * └──────┴───────────────┴──────┴─────┘\n *\n * On Windows:\n * ┌──────────────────────┬────────────┐\n * │           dir        │    base    │\n * ├──────┬               ├──────┬─────┤\n * │ root │               │ name │ ext │\n * \"  /c: / home/user/dir / file  .txt \"\n * └──────┴───────────────┴──────┴─────┘\n */\n\nimport { OS } from './os';\n\nexport class Path {\n    static separator: '/' = '/';\n\n    static isDrive(segment: string): boolean {\n        return segment.endsWith(':');\n    }\n\n    /**\n     * vscode-uri always normalizes drive letters to lower case:\n     * https://github.com/Microsoft/vscode-uri/blob/b1d3221579f97f28a839b6f996d76fc45e9964d8/src/index.ts#L1025\n     * Theia path should be adjusted to this.\n     */\n    static normalizeDrive(path: string): string {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* '/' */ && path.charCodeAt(2) === 58 /* ':' */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substring(3)}`; // \"/c:\".length === 3\n            }\n        } else if (path.length >= 2 && path.charCodeAt(1) === 58 /* ':' */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substring(2)}`; // \"c:\".length === 2\n            }\n            if (path.charCodeAt(0) !== 47 /* '/' */) {\n                path = `${String.fromCharCode(47)}${path}`;\n            }\n        }\n        return path;\n    }\n    /**\n     * Normalize path separator to use Path.separator\n     * @param Path candidate to normalize\n     * @returns Normalized string path\n     */\n    static normalizePathSeparator(path: string): string {\n        return path.split(/[\\\\]/).join(Path.separator);\n    }\n\n    /**\n     * Creates a windows path from the given path string.\n     * A windows path uses an upper case drive letter and backwards slashes.\n     * @param path The input path\n     * @returns Windows style path\n     */\n    static windowsPath(path: string): string {\n        const offset = path.charAt(0) === '/' ? 1 : 0;\n        if (path.charAt(offset + 1) === ':') {\n            const driveLetter = path.charAt(offset).toUpperCase();\n            const substring = path.substring(offset + 2).replace(/\\//g, '\\\\');\n            return `${driveLetter}:${substring || '\\\\'}`;\n        }\n        return path.replace(/\\//g, '\\\\');\n    }\n\n    /**\n     * Tildify path, replacing `home` with `~` if user's `home` is present at the beginning of the path.\n     * This is a non-operation for Windows.\n     *\n     * @param resourcePath\n     * @param home\n     */\n    static tildify(resourcePath: string, home: string): string {\n        const path = new Path(resourcePath);\n        const isWindows = path.root && Path.isDrive(path.root.base);\n\n        if (!isWindows && home && resourcePath.indexOf(`${home}/`) === 0) {\n            return resourcePath.replace(`${home}/`, '~/');\n        }\n\n        return resourcePath;\n    }\n\n    /**\n     * Untildify path, replacing `~` with `home` if `~` present at the beginning of the path.\n     * This is a non-operation for Windows.\n     *\n     * @param resourcePath\n     * @param home\n     */\n    static untildify(resourcePath: string, home: string): string {\n        if (resourcePath.startsWith('~')) {\n            const untildifiedResource = resourcePath.replace(/^~/, home);\n            const untildifiedPath = new Path(untildifiedResource);\n            const isWindows = untildifiedPath.root && Path.isDrive(untildifiedPath.root.base);\n            if (!isWindows && home && untildifiedResource.startsWith(`${home}`)) {\n                return untildifiedResource;\n            }\n        }\n        return resourcePath;\n    }\n\n    readonly isAbsolute: boolean;\n    readonly isRoot: boolean;\n    readonly root: Path | undefined;\n    readonly base: string;\n    readonly name: string;\n    readonly ext: string;\n\n    private _dir: Path;\n    private readonly raw: string;\n\n    /**\n     * The raw should be normalized, meaning that only '/' is allowed as a path separator.\n     */\n    constructor(\n        raw: string\n    ) {\n        raw = Path.normalizePathSeparator(raw);\n        this.raw = Path.normalizeDrive(raw);\n        const firstIndex = this.raw.indexOf(Path.separator);\n        const lastIndex = this.raw.lastIndexOf(Path.separator);\n        this.isAbsolute = firstIndex === 0;\n        this.base = lastIndex === -1 ? this.raw : this.raw.substring(lastIndex + 1);\n        this.isRoot = this.isAbsolute && firstIndex === lastIndex && (!this.base || Path.isDrive(this.base));\n        this.root = this.computeRoot();\n\n        const extIndex = this.base.lastIndexOf('.');\n        this.name = extIndex === -1 ? this.base : this.base.substring(0, extIndex);\n        this.ext = extIndex === -1 ? '' : this.base.substring(extIndex);\n    }\n\n    protected computeRoot(): Path | undefined {\n        // '/' -> '/'\n        // '/c:' -> '/c:'\n        if (this.isRoot) {\n            return this;\n        }\n        // 'foo/bar' -> `undefined`\n        if (!this.isAbsolute) {\n            return undefined;\n        }\n        const index = this.raw.indexOf(Path.separator, Path.separator.length);\n        if (index === -1) {\n            // '/foo/bar' -> '/'\n            return new Path(Path.separator);\n        }\n        // '/c:/foo/bar' -> '/c:'\n        // '/foo/bar' -> '/'\n        return new Path(this.raw.substring(0, index)).root;\n    }\n\n    /**\n     * Returns the parent directory if it exists (`hasDir === true`) or `this` otherwise.\n     */\n    get dir(): Path {\n        if (this._dir === undefined) {\n            this._dir = this.computeDir();\n        }\n        return this._dir;\n    }\n\n    /**\n     * Returns `true` if this has a parent directory, `false` otherwise.\n     *\n     * _This implementation returns `true` if and only if this is not the root dir and\n     * there is a path separator in the raw path._\n     */\n    get hasDir(): boolean {\n        return !this.isRoot && this.raw.lastIndexOf(Path.separator) !== -1;\n    }\n\n    protected computeDir(): Path {\n        if (!this.hasDir) {\n            return this;\n        }\n        const lastIndex = this.raw.lastIndexOf(Path.separator);\n        if (this.isAbsolute) {\n            const firstIndex = this.raw.indexOf(Path.separator);\n            if (firstIndex === lastIndex) {\n                return new Path(this.raw.substring(0, firstIndex + 1));\n            }\n        }\n        return new Path(this.raw.substring(0, lastIndex));\n    }\n\n    join(...paths: string[]): Path {\n        const relativePath = paths.filter(s => !!s).join(Path.separator);\n        if (!relativePath) {\n            return this;\n        }\n        if (this.raw.endsWith(Path.separator)) {\n            return new Path(this.raw + relativePath);\n        }\n        return new Path(this.raw + Path.separator + relativePath);\n    }\n\n    /**\n     *\n     * @param paths portions of a path\n     * @returns a new Path if an absolute path can be computed from the segments passed in + this.raw\n     * If no absolute path can be computed, returns undefined.\n     *\n     * Processes the path segments passed in from right to left (reverse order) concatenating until an\n     * absolute path is found.\n     */\n    resolve(...paths: string[]): Path | undefined {\n        const segments = paths.slice().reverse(); // Don't mutate the caller's array.\n        segments.push(this.raw);\n        let result = new Path('');\n        for (const segment of segments) {\n            if (segment) {\n                const next = new Path(segment).join(result.raw);\n                if (next.isAbsolute) {\n                    return next.normalize();\n                }\n                result = next;\n            }\n        }\n    }\n\n    toString(): string {\n        return this.raw;\n    }\n\n    /**\n     * Converts the current path into a file system path.\n     * @param format Determines the format of the path.\n     * If `undefined`, the format will be determined by the `OS.backend.type` value.\n     * @returns A file system path.\n     */\n    fsPath(format?: Path.Format): string {\n        if (format === Path.Format.Windows || (format === undefined && OS.backend.isWindows)) {\n            return Path.windowsPath(this.raw);\n        } else {\n            return this.raw;\n        }\n    }\n\n    relative(path: Path): Path | undefined {\n        if (this.raw === path.raw) {\n            return new Path('');\n        }\n        if (!this.raw || !path.raw) {\n            return undefined;\n        }\n        const raw = this.base ? this.raw + Path.separator : this.raw;\n        if (!path.raw.startsWith(raw)) {\n            return undefined;\n        }\n        const relativePath = path.raw.substring(raw.length);\n        return new Path(relativePath);\n    }\n\n    isEqualOrParent(path: Path): boolean {\n        return !!this.relative(path);\n    }\n\n    relativity(path: Path): number {\n        const relative = this.relative(path);\n        if (relative) {\n            const relativeStr = relative.toString();\n            if (relativeStr === '') {\n                return 0;\n            }\n            return relativeStr.split(Path.separator).length;\n        }\n        return -1;\n    }\n\n    /*\n     * return a normalized Path, resolving '..' and '.' segments\n     */\n    normalize(): Path {\n        const trailingSlash = this.raw.endsWith('/');\n        const pathArray = this.toString().split('/');\n        const resultArray: string[] = [];\n        pathArray.forEach((value, index) => {\n            if (!value || value === '.') {\n                return;\n            }\n            if (value === '..') {\n                if (resultArray.length && resultArray[resultArray.length - 1] !== '..') {\n                    resultArray.pop();\n                } else if (!this.isAbsolute) {\n                    resultArray.push('..');\n                }\n            } else {\n                resultArray.push(value);\n            }\n        });\n        if (resultArray.length === 0) {\n            if (this.isRoot) {\n                return new Path('/');\n            } else {\n                return new Path('.');\n            }\n        }\n        return new Path((this.isAbsolute ? '/' : '') + resultArray.join('/') + (trailingSlash ? '/' : ''));\n    }\n}\n\nexport namespace Path {\n    export enum Format {\n        Posix,\n        Windows\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { CommandRegistryImpl } from './command-registry';\nimport { UriComponents } from '../common/uri-components';\nimport { CommentThreadCollapsibleState, CommentThreadState, URI } from './types-impl';\nimport {\n    Range,\n    Comment,\n    CommentThreadState as CommentThreadStateModel,\n    CommentThreadCollapsibleState as CommentThreadCollapsibleStateModel,\n    CommentOptions\n} from '../common/plugin-api-rpc-model';\nimport { DocumentsExtImpl } from './documents';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { fromMarkdown, fromRange, toRange } from './type-converters';\nimport {\n    CommentsCommandArg, CommentsContextCommandArg, CommentsEditCommandArg,\n    CommentsExt,\n    CommentsMain,\n    CommentThreadChanges,\n    Plugin as InternalPlugin,\n    PLUGIN_RPC_CONTEXT\n} from '../common/plugin-api-rpc';\nimport { isArray } from '../common/types';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.3/src/vs/workbench/api/common/extHostComments.ts\n\ntype ProviderHandle = number;\n\nexport class CommentsExtImpl implements CommentsExt {\n    private handle = 0;\n    private readonly proxy: CommentsMain;\n    private readonly commentControllers: Map<ProviderHandle, CommentController> = new Map<ProviderHandle, CommentController>();\n    private readonly commentControllersByExtension: Map<string, CommentController[]> = new Map<string, CommentController[]>();\n\n    constructor(readonly rpc: RPCProtocol, readonly commands: CommandRegistryImpl, readonly _documents: DocumentsExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.COMMENTS_MAIN);\n\n        commands.registerArgumentProcessor({\n            processArgument: arg => {\n                if (CommentsCommandArg.is(arg)) {\n                    const commentController = this.commentControllers.get(arg.commentControlHandle);\n\n                    if (!commentController) {\n                        return arg;\n                    }\n\n                    const commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n                    if (!commentThread) {\n                        return arg;\n                    }\n\n                    return {\n                        thread: commentThread,\n                        text: arg.text\n                    };\n                } else if (CommentsContextCommandArg.is(arg)) {\n                    const commentController = this.commentControllers.get(arg.commentControlHandle);\n\n                    if (!commentController) {\n                        return arg;\n                    }\n\n                    const commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n                    if (!commentThread) {\n                        return arg;\n                    }\n\n                    const comment = commentThread.getCommentByUniqueId(arg.commentUniqueId);\n\n                    if (!comment) {\n                        return arg;\n                    }\n\n                    return comment;\n                } else if (CommentsEditCommandArg.is(arg)) {\n                    const commentController = this.commentControllers.get(arg.commentControlHandle);\n\n                    if (!commentController) {\n                        return arg;\n                    }\n\n                    const commentThread = commentController.getCommentThread(arg.commentThreadHandle);\n\n                    if (!commentThread) {\n                        return arg;\n                    }\n\n                    const comment = commentThread.getCommentByUniqueId(arg.commentUniqueId);\n\n                    if (!comment) {\n                        return arg;\n                    }\n\n                    comment.body = arg.text;\n                    return comment;\n                }\n\n                return arg;\n            }\n        });\n    }\n\n    createCommentController(plugin: InternalPlugin, id: string, label: string): theia.CommentController {\n        const handle = this.handle++;\n        const commentController = new CommentController(plugin.model.id, this.proxy, handle, id, label);\n        this.commentControllers.set(commentController.handle, commentController);\n\n        const commentControllers = this.commentControllersByExtension.get(plugin.model.id.toLowerCase()) || [];\n        commentControllers.push(commentController);\n        this.commentControllersByExtension.set(plugin.model.id.toLowerCase(), commentControllers);\n\n        return commentController;\n    }\n\n    $createCommentThreadTemplate(commentControllerHandle: number, uriComponents: UriComponents, range: Range): void {\n        const commentController = this.commentControllers.get(commentControllerHandle);\n\n        if (!commentController) {\n            return;\n        }\n\n        commentController.$createCommentThreadTemplate(uriComponents, range);\n    }\n\n    async $updateCommentThreadTemplate(commentControllerHandle: number, threadHandle: number, range: Range): Promise<void> {\n        const commentController = this.commentControllers.get(commentControllerHandle);\n\n        if (!commentController) {\n            return;\n        }\n\n        commentController.$updateCommentThreadTemplate(threadHandle, range);\n    }\n\n    async $deleteCommentThread(commentControllerHandle: number, commentThreadHandle: number): Promise<void> {\n        const commentController = this.commentControllers.get(commentControllerHandle);\n\n        if (commentController) {\n            commentController.$deleteCommentThread(commentThreadHandle);\n        }\n    }\n\n    async $provideCommentingRanges(\n        commentControllerHandle: number,\n        uriComponents: UriComponents,\n        token: theia.CancellationToken\n    ): Promise<{ ranges: Range[]; fileComments: boolean } | undefined> {\n        const commentController = this.commentControllers.get(commentControllerHandle);\n\n        if (!commentController || !commentController.commentingRangeProvider) {\n            return Promise.resolve(undefined);\n        }\n\n        const documentData = this._documents.getDocumentData(URI.revive(uriComponents));\n        if (documentData) {\n            const commentingRanges = await commentController.commentingRangeProvider!.provideCommentingRanges(documentData.document, token);\n            if (isArray(commentingRanges)) {\n                return {\n                    ranges: commentingRanges.map(x => fromRange(x)),\n                    fileComments: false\n                };\n            } else if (commentingRanges) {\n                return {\n                    ranges: commentingRanges.ranges?.map(x => fromRange(x)) || [],\n                    fileComments: commentingRanges.enableFileComments\n                };\n            }\n        }\n        return undefined;\n    }\n}\n\ntype CommentThreadModification = Partial<{\n    range: theia.Range,\n    label: string | undefined,\n    contextValue: string | undefined,\n    comments: theia.Comment[],\n    collapsibleState: theia.CommentThreadCollapsibleState\n    state: theia.CommentThreadState\n    canReply: boolean | theia.CommentAuthorInformation;\n}>;\n\nexport class ExtHostCommentThread implements theia.CommentThread, theia.Disposable {\n    private static _handlePool: number = 0;\n    readonly handle = ExtHostCommentThread._handlePool++;\n    public commentHandle: number = 0;\n\n    private modifications: CommentThreadModification = Object.create(null);\n\n    set threadId(id: string) {\n        this._id = id;\n    }\n\n    get threadId(): string {\n        return this._id!;\n    }\n\n    get id(): string {\n        return this._id!;\n    }\n\n    get resource(): theia.Uri {\n        return this._uri;\n    }\n\n    get uri(): theia.Uri {\n        return this._uri;\n    }\n\n    private readonly _onDidUpdateCommentThread = new Emitter<void>();\n    readonly onDidUpdateCommentThread = this._onDidUpdateCommentThread.event;\n\n    set range(range: theia.Range | undefined) {\n        if (((range === undefined) !== (this._range === undefined))\n            || (range && this._range && !range.isEqual(this._range))) {\n            this._range = range;\n            this.modifications.range = range;\n            this._onDidUpdateCommentThread.fire();\n        }\n    }\n\n    get range(): theia.Range | undefined {\n        return this._range;\n    }\n\n    private _label: string | undefined;\n\n    get label(): string | undefined {\n        return this._label;\n    }\n\n    set label(label: string | undefined) {\n        this._label = label;\n        this.modifications.label = label;\n        this._onDidUpdateCommentThread.fire();\n    }\n\n    private _contextValue: string | undefined;\n\n    get contextValue(): string | undefined {\n        return this._contextValue;\n    }\n\n    set contextValue(context: string | undefined) {\n        this._contextValue = context;\n        this.modifications.contextValue = context;\n        this._onDidUpdateCommentThread.fire();\n    }\n\n    get comments(): theia.Comment[] {\n        return this._comments;\n    }\n\n    set comments(newComments: theia.Comment[]) {\n        this._comments = newComments;\n        this.modifications.comments = newComments;\n        this._onDidUpdateCommentThread.fire();\n    }\n\n    private collapseState?: theia.CommentThreadCollapsibleState;\n\n    get collapsibleState(): theia.CommentThreadCollapsibleState {\n        return this.collapseState!;\n    }\n\n    set collapsibleState(newState: theia.CommentThreadCollapsibleState) {\n        this.collapseState = newState;\n        this.modifications.collapsibleState = newState;\n        this._onDidUpdateCommentThread.fire();\n    }\n\n    private _state?: theia.CommentThreadState;\n\n    get state(): theia.CommentThreadState {\n        return this._state!;\n    }\n\n    set state(newState: theia.CommentThreadState) {\n        if (this._state !== newState) {\n            this._state = newState;\n            this.modifications.state = newState;\n            this._onDidUpdateCommentThread.fire();\n        }\n    }\n\n    private localDisposables: Disposable[];\n\n    private _isDisposed: boolean;\n\n    public get isDisposed(): boolean {\n        return this._isDisposed;\n    }\n\n    private _canReply: boolean | theia.CommentAuthorInformation = true;\n    get canReply(): boolean | theia.CommentAuthorInformation {\n        return this._canReply;\n    }\n\n    set canReply(canReply: boolean | theia.CommentAuthorInformation) {\n        this._canReply = canReply;\n        this.modifications.canReply = canReply;\n        this._onDidUpdateCommentThread.fire();\n    }\n\n    private commentsMap: Map<theia.Comment, number> = new Map<theia.Comment, number>();\n\n    private acceptInputDisposables = new DisposableCollection();\n\n    constructor(\n        private proxy: CommentsMain,\n        private commentController: CommentController,\n        private _id: string | undefined,\n        private _uri: theia.Uri,\n        private _range: theia.Range | undefined,\n        private _comments: theia.Comment[],\n        extensionId: string\n    ) {\n        if (this._id === undefined) {\n            this._id = `${commentController.id}.${this.handle}`;\n        }\n\n        this.proxy.$createCommentThread(\n            this.commentController.handle,\n            this.handle,\n            this._id,\n            this._uri,\n            fromRange(this._range),\n            extensionId\n        );\n\n        this.localDisposables = [];\n        this._isDisposed = false;\n\n        this.localDisposables.push(this.onDidUpdateCommentThread(() => {\n            this.eventuallyUpdateCommentThread();\n        }));\n\n        // set up comments after ctor to batch update events.\n        this.comments = _comments;\n    }\n\n    eventuallyUpdateCommentThread(): void {\n        if (this._isDisposed) {\n            return;\n        }\n\n        const modified = (value: keyof CommentThreadModification): boolean =>\n            Object.prototype.hasOwnProperty.call(this.modifications, value);\n\n        const formattedModifications: CommentThreadChanges = {};\n        if (modified('range')) {\n            formattedModifications.range = fromRange(this._range);\n        }\n        if (modified('label')) {\n            formattedModifications.label = this.label;\n        }\n        if (modified('contextValue')) {\n            formattedModifications.contextValue = this.contextValue;\n        }\n        if (modified('comments')) {\n            formattedModifications.comments =\n                this._comments.map(comment => convertToModeComment(this, this.commentController, comment, this.commentsMap));\n        }\n        if (modified('collapsibleState')) {\n            formattedModifications.collapseState = convertToCollapsibleState(this.collapseState);\n        }\n        if (modified('state')) {\n            formattedModifications.state = convertToState(this._state);\n        }\n        if (modified('canReply')) {\n            formattedModifications.canReply = this.canReply;\n        }\n        this.modifications = {};\n\n        this.proxy.$updateCommentThread(\n            this.commentController.handle,\n            this.handle,\n            this._id!,\n            this._uri,\n            formattedModifications\n        );\n    }\n\n    getCommentByUniqueId(uniqueId: number): theia.Comment | undefined {\n        for (const key of this.commentsMap) {\n            const comment = key[0];\n            const id = key[1];\n            if (uniqueId === id) {\n                return comment;\n            }\n        }\n\n        return;\n    }\n\n    dispose(): void {\n        this._isDisposed = true;\n        this.acceptInputDisposables.dispose();\n        this.localDisposables.forEach(disposable => disposable.dispose());\n        this.proxy.$deleteCommentThread(\n            this.commentController.handle,\n            this.handle\n        );\n    }\n}\n\nclass CommentController implements theia.CommentController {\n\n    constructor(\n        private extension: string,\n        private proxy: CommentsMain,\n        private _handle: number,\n        private _id: string,\n        private _label: string\n    ) {\n        this.proxy.$registerCommentController(this.handle, _id, _label);\n    }\n\n    private readonly threads: Map<number, ExtHostCommentThread> = new Map<number, ExtHostCommentThread>();\n    readonly commentingRangeProvider?: theia.CommentingRangeProvider;\n\n    get id(): string {\n        return this._id;\n    }\n\n    get label(): string {\n        return this._label;\n    }\n\n    get handle(): number {\n        return this._handle;\n    }\n\n    private _options: CommentOptions | undefined;\n\n    get options(): CommentOptions | undefined {\n        return this._options;\n    }\n\n    set options(options: CommentOptions | undefined) {\n        this._options = options;\n\n        this.proxy.$updateCommentControllerFeatures(this.handle, { options: this._options });\n    }\n\n    createCommentThread(resource: theia.Uri, range: theia.Range, comments: theia.Comment[]): theia.CommentThread;\n    createCommentThread(arg0: theia.Uri | string, arg1: theia.Uri | theia.Range, arg2: theia.Range | theia.Comment[], arg3?: theia.Comment[]): theia.CommentThread {\n        if (typeof arg0 === 'string') {\n            const commentThread = new ExtHostCommentThread(this.proxy, this, arg0, arg1 as theia.Uri, arg2 as theia.Range, arg3 as theia.Comment[], this.extension);\n            this.threads.set(commentThread.handle, commentThread);\n            return commentThread;\n        } else {\n            const commentThread = new ExtHostCommentThread(this.proxy, this, undefined, arg0 as theia.Uri, arg1 as theia.Range, arg2 as theia.Comment[], this.extension);\n            this.threads.set(commentThread.handle, commentThread);\n            return commentThread;\n        }\n    }\n\n    $createCommentThreadTemplate(uriComponents: UriComponents, range: Range): ExtHostCommentThread {\n        const commentThread = new ExtHostCommentThread(this.proxy, this, undefined, URI.revive(uriComponents), toRange(range), [], this.extension);\n        commentThread.collapsibleState = CommentThreadCollapsibleStateModel.Expanded;\n        this.threads.set(commentThread.handle, commentThread);\n        return commentThread;\n    }\n\n    $updateCommentThreadTemplate(threadHandle: number, range: Range): void {\n        const thread = this.threads.get(threadHandle);\n        if (thread) {\n            thread.range = toRange(range);\n        }\n    }\n\n    $deleteCommentThread(threadHandle: number): void {\n        const thread = this.threads.get(threadHandle);\n\n        if (thread) {\n            thread.dispose();\n        }\n\n        this.threads.delete(threadHandle);\n    }\n\n    getCommentThread(handle: number): ExtHostCommentThread | undefined {\n        return this.threads.get(handle);\n    }\n\n    dispose(): void {\n        this.threads.forEach(value => {\n            value.dispose();\n        });\n\n        this.proxy.$unregisterCommentController(this.handle);\n    }\n}\n\nfunction convertToModeComment(thread: ExtHostCommentThread, commentController: CommentController, theiaComment: theia.Comment, commentsMap: Map<theia.Comment, number>): Comment {\n    let commentUniqueId = commentsMap.get(theiaComment)!;\n    if (!commentUniqueId) {\n        commentUniqueId = ++thread.commentHandle;\n        commentsMap.set(theiaComment, commentUniqueId);\n    }\n\n    const iconPath = theiaComment.author && theiaComment.author.iconPath ? theiaComment.author.iconPath.toString() : undefined;\n    const date = theiaComment.timestamp ? theiaComment.timestamp.toISOString() : undefined;\n\n    return {\n        mode: theiaComment.mode,\n        contextValue: theiaComment.contextValue,\n        uniqueIdInThread: commentUniqueId,\n        body: fromMarkdown(theiaComment.body),\n        userName: theiaComment.author.name,\n        userIconPath: iconPath,\n        label: theiaComment.label,\n        timestamp: date,\n    };\n}\n\nfunction convertToCollapsibleState(kind: theia.CommentThreadCollapsibleState | undefined): CommentThreadCollapsibleStateModel {\n    if (kind !== undefined) {\n        switch (kind) {\n            case CommentThreadCollapsibleState.Expanded:\n                return CommentThreadCollapsibleStateModel.Expanded;\n            case CommentThreadCollapsibleState.Collapsed:\n                return CommentThreadCollapsibleStateModel.Collapsed;\n        }\n    }\n    return CommentThreadCollapsibleStateModel.Collapsed;\n}\n\nfunction convertToState(kind: theia.CommentThreadState | undefined): CommentThreadStateModel {\n    if (kind !== undefined) {\n        switch (kind) {\n            case CommentThreadState.Resolved:\n                return CommentThreadStateModel.Resolved;\n            case CommentThreadState.Unresolved:\n                return CommentThreadStateModel.Unresolved;\n        }\n    }\n    return CommentThreadStateModel.Unresolved;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { PluginDebugAdapterCreator } from '../../debug/plugin-debug-adapter-creator';\nimport * as path from 'path';\nimport * as theia from '@theia/plugin';\nimport { PlatformSpecificAdapterContribution, PluginPackageDebuggersContribution } from '../../../common';\nimport { isWindows, isOSX } from '@theia/core/lib/common/os';\nimport * as net from 'net';\nimport { ChildProcess, spawn, fork, ForkOptions } from 'child_process';\nimport { DebugAdapter } from '@theia/debug/lib/common/debug-model';\nimport { DebugAdapterExecutable, DebugAdapterInlineImplementation, DebugAdapterNamedPipeServer, DebugAdapterServer } from '../../types-impl';\nimport { ProcessDebugAdapter, SocketDebugAdapter } from '@theia/debug/lib/node/stream-debug-adapter';\nconst isElectron = require('is-electron');\n\nexport class NodeDebugAdapterCreator extends PluginDebugAdapterCreator {\n    public override async resolveDebugAdapterExecutable(\n        pluginPath: string,\n        debuggerContribution: PluginPackageDebuggersContribution\n    ): Promise<theia.DebugAdapterExecutable | undefined> {\n        const info = this.toPlatformInfo(debuggerContribution);\n        let program = (info && info.program || debuggerContribution.program);\n        if (!program) {\n            return undefined;\n        }\n        program = path.join(pluginPath, program);\n        const programArgs = info && info.args || debuggerContribution.args || [];\n        let runtime = info && info.runtime || debuggerContribution.runtime;\n        if (runtime && runtime.indexOf('./') === 0) {\n            runtime = path.join(pluginPath, runtime);\n        }\n        const runtimeArgs = info && info.runtimeArgs || debuggerContribution.runtimeArgs || [];\n        const command = runtime ? runtime : program;\n        const args = runtime ? [...runtimeArgs, program, ...programArgs] : programArgs;\n        return {\n            command,\n            args\n        };\n    }\n\n    public override async createDebugAdapter(\n        session: theia.DebugSession,\n        debugConfiguration: theia.DebugConfiguration,\n        executable: theia.DebugAdapterExecutable | undefined,\n        descriptorFactory: theia.DebugAdapterDescriptorFactory | undefined\n    ): Promise<DebugAdapter> {\n        if (descriptorFactory) {\n            // 'createDebugAdapterDescriptor' is called at the start of a debug session to provide details about the debug adapter to use.\n            // These details must be returned as objects of type [DebugAdapterDescriptor](#DebugAdapterDescriptor).\n            // Currently two types of debug adapters are supported:\n            // - a debug adapter executable is specified as a command path and arguments (see [DebugAdapterExecutable](#DebugAdapterExecutable)),\n            // - a debug adapter server reachable via a communication port (see [DebugAdapterServer](#DebugAdapterServer)).\n            // If the method is not implemented the default behavior is this:\n            //   createDebugAdapter(session: DebugSession, executable: DebugAdapterExecutable) {\n            //      if (typeof session.configuration.debugServer === 'number') {\n            //         return new DebugAdapterServer(session.configuration.debugServer);\n            //      }\n            //      return executable;\n            //   }\n            //  @param session The [debug session](#DebugSession) for which the debug adapter will be used.\n            //  @param executable The debug adapter's executable information as specified in the package.json (or undefined if no such information exists).\n            const descriptor = await descriptorFactory.createDebugAdapterDescriptor(session, executable);\n            if (descriptor) {\n                if (DebugAdapterServer.is(descriptor)) {\n                    return this.connectSocketDebugAdapter(descriptor);\n                } else if (DebugAdapterExecutable.is(descriptor)) {\n                    return this.startDebugAdapter(descriptor);\n                } else if (DebugAdapterNamedPipeServer.is(descriptor)) {\n                    return this.connectPipeDebugAdapter(descriptor);\n                } else if (DebugAdapterInlineImplementation.is(descriptor)) {\n                    return this.connectInlineDebugAdapter(descriptor);\n                }\n            }\n        }\n\n        if ('debugServer' in debugConfiguration) {\n            return this.connectSocketDebugAdapter({ port: debugConfiguration.debugServer });\n        } else {\n            if (!executable) {\n                throw new Error('It is not possible to provide debug adapter executable.');\n            }\n            return this.startDebugAdapter(executable);\n        }\n    }\n\n    protected toPlatformInfo(executable: PluginPackageDebuggersContribution): PlatformSpecificAdapterContribution | undefined {\n        if (isWindows && !process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432')) {\n            return executable.winx86 || executable.win || executable.windows;\n        }\n        if (isWindows) {\n            return executable.win || executable.windows;\n        }\n        if (isOSX) {\n            return executable.osx;\n        }\n        return executable.linux;\n    }\n\n    public startDebugAdapter(executable: DebugAdapterExecutable): DebugAdapter {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const options: any = { stdio: ['pipe', 'pipe', 2] };\n\n        if (executable.options) {\n            options.cwd = executable.options.cwd;\n\n            // The additional environment of the executed program or shell. If omitted\n            // the parent process' environment is used. If provided it is merged with\n            // the parent process' environment.\n            options.env = Object.assign({}, process.env);\n            Object.assign(options.env, executable.options.env);\n        }\n\n        let childProcess: ChildProcess;\n        const { command, args } = executable;\n        if (command === 'node') {\n            if (Array.isArray(args) && args.length > 0) {\n                const forkOptions: ForkOptions = {\n                    env: options.env,\n                    // When running in Electron, fork will automatically add ELECTRON_RUN_AS_NODE=1 to the env,\n                    // but this will cause issues when debugging Electron apps, so we'll remove it.\n                    execArgv: isElectron()\n                        ? ['-e', 'delete process.env.ELECTRON_RUN_AS_NODE;require(process.argv[1])']\n                        : [],\n                    silent: true\n                };\n                if (options.cwd) {\n                    forkOptions.cwd = options.cwd;\n                }\n                options.stdio.push('ipc');\n                forkOptions.stdio = options.stdio;\n                childProcess = fork(args[0], args.slice(1), forkOptions);\n            } else {\n                throw new Error(`It is not possible to launch debug adapter with the command: ${JSON.stringify(executable)}`);\n            }\n        } else {\n            childProcess = spawn(command, args, options);\n        }\n\n        return new ProcessDebugAdapter(childProcess);\n    }\n\n    /**\n     * Connects to a remote debug server.\n     */\n    public connectSocketDebugAdapter(server: DebugAdapterServer): SocketDebugAdapter {\n        const socket = net.createConnection(server.port, server.host);\n        return new SocketDebugAdapter(socket);\n    }\n\n    public connectPipeDebugAdapter(adapter: DebugAdapterNamedPipeServer): SocketDebugAdapter {\n        const socket = net.createConnection(adapter.path);\n        return new SocketDebugAdapter(socket);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { JSONExt, JSONValue } from '@lumino/coreutils';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Disposable, DisposableCollection, Emitter, Event, deepFreeze, unreachable } from '../../common';\nimport { Deferred } from '../../common/promise-util';\nimport URI from '../../common/uri';\nimport { OverridePreferenceName, PreferenceLanguageOverrideService } from './preference-language-override-service';\nimport { PreferenceProvider, PreferenceProviderDataChange, PreferenceProviderDataChanges, PreferenceResolveResult, PreferenceUtils } from './preference-provider';\nimport { PreferenceSchemaService } from './preference-schema';\nimport { PreferenceScope } from './preference-scope';\nimport { PreferenceConfigurations } from './preference-configurations';\n\n/**\n * Representation of a preference change. A preference value can be set to `undefined` for a specific scope.\n * This means that the value from a more general scope will be used.\n */\nexport interface PreferenceChange extends PreferenceProviderDataChange {\n    /**\n     * Tests wether the given resource is affected by the preference change.\n     * @param resourceUri the uri of the resource to test.\n     */\n    affects(resourceUri?: string): boolean;\n}\n\nexport class PreferenceChangeImpl implements PreferenceChange {\n    protected readonly change: PreferenceProviderDataChange;\n    constructor(change: PreferenceProviderDataChange) {\n        this.change = deepFreeze(change);\n    }\n\n    get preferenceName(): string {\n        return this.change.preferenceName;\n    }\n    get newValue(): JSONValue | undefined {\n        return this.change.newValue;\n    }\n    get oldValue(): JSONValue | undefined {\n        return this.change.oldValue;\n    }\n    get scope(): PreferenceScope {\n        return this.change.scope;\n    }\n    get domain(): string[] | undefined {\n        return this.change.domain;\n    }\n\n    // TODO add tests\n    affects(resourceUri?: string): boolean {\n        const resourcePath = resourceUri && new URI(resourceUri).path;\n        const domain = this.change.domain;\n        return !resourcePath || !domain || domain.some(uri => new URI(uri).path.relativity(resourcePath) >= 0);\n    }\n}\n/**\n * A key-value storage for {@link PreferenceChange}s. Used to aggregate multiple simultaneous preference changes.\n */\nexport interface PreferenceChanges {\n    [preferenceName: string]: PreferenceChange\n}\n\nexport const PreferenceService = Symbol('PreferenceService');\n/**\n * Service to manage preferences including, among others, getting and setting preference values as well\n * as listening to preference changes.\n *\n * Depending on your use case you might also want to look at {@link createPreferenceProxy} with which\n * you can easily create a typesafe schema-based interface for your preferences. Internally the proxy\n * uses the PreferenceService so both approaches are compatible.\n */\nexport interface PreferenceService extends Disposable {\n    /**\n     * Promise indicating whether the service successfully initialized.\n     */\n    readonly ready: Promise<void>;\n    /**\n     * Indicates whether the service has successfully initialized. Will be `true` when {@link PreferenceService.ready the `ready` Promise} resolves.\n     */\n    readonly isReady: boolean;\n    /**\n     * Retrieve the stored value for the given preference.\n     *\n     * @param preferenceName the preference identifier.\n     *\n     * @returns the value stored for the given preference when it exists, `undefined` otherwise.\n     */\n    get<T>(preferenceName: string): T | undefined;\n    /**\n     * Retrieve the stored value for the given preference.\n     *\n     * @param preferenceName the preference identifier.\n     * @param defaultValue the value to return when no value for the given preference is stored.\n     *\n     * @returns the value stored for the given preference when it exists, otherwise the given default value.\n     */\n    get<T>(preferenceName: string, defaultValue: T): T;\n    /**\n     * Retrieve the stored value for the given preference and resourceUri.\n     *\n     * @param preferenceName the preference identifier.\n     * @param defaultValue the value to return when no value for the given preference is stored.\n     * @param resourceUri the uri of the resource for which the preference is stored. This used to retrieve\n     * a potentially different value for the same preference for different resources, for example `files.encoding`.\n     *\n     * @returns the value stored for the given preference and resourceUri when it exists, otherwise the given\n     * default value.\n     */\n    get<T>(preferenceName: string, defaultValue: T, resourceUri?: string): T;\n    /**\n     * Retrieve the stored value for the given preference and resourceUri.\n     *\n     * @param preferenceName the preference identifier.\n     * @param defaultValue the value to return when no value for the given preference is stored.\n     * @param resourceUri the uri of the resource for which the preference is stored. This used to retrieve\n     * a potentially different value for the same preference for different resources, for example `files.encoding`.\n     *\n     * @returns the value stored for the given preference and resourceUri when it exists, otherwise the given\n     * default value.\n     */\n    get<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined;\n    /**\n     * Sets the given preference to the given value.\n     *\n     * @param preferenceName the preference identifier.\n     * @param value the new value of the preference.\n     * @param scope the scope for which the value shall be set, i.e. user, workspace etc.\n     * When the folder scope is specified a resourceUri must be provided.\n     * @param resourceUri the uri of the resource for which the preference is stored. This used to store\n     * a potentially different value for the same preference for different resources, for example `files.encoding`.\n     *\n     * @returns a promise which resolves to `undefined` when setting the preference was successful. Otherwise it rejects\n     * with an error.\n     */\n    set(preferenceName: string, value: any, scope?: PreferenceScope, resourceUri?: string): Promise<void>;\n\n    /**\n     * Determines and applies the changes necessary to apply `value` to either the `resourceUri` supplied or the active session.\n     * If there is no setting for the `preferenceName`, the change will be applied in user scope.\n     * If there is a setting conflicting with the specified `value`, the change will be applied in the most specific scope with a conflicting value.\n     *\n     * @param preferenceName the identifier of the preference to modify.\n     * @param value the value to which to set the preference. `undefined` will reset the preference to its default value.\n     * @param resourceUri the uri of the resource to which the change is to apply. If none is provided, folder scope will be ignored.\n     */\n    updateValue(preferenceName: string, value: any, resourceUri?: string): Promise<void>\n\n    /**\n     * Registers a callback which will be called whenever a preference is changed.\n     */\n    onPreferenceChanged: Event<PreferenceChange>;\n    /**\n     * Registers a callback which will be called whenever one or more preferences are changed.\n     */\n    onPreferencesChanged: Event<PreferenceChanges>;\n    /**\n     * Retrieve the stored value for the given preference and resourceUri in all available scopes.\n     *\n     * @param preferenceName the preference identifier.\n     * @param resourceUri the uri of the resource for which the preference is stored.\n     * @param forceLanguageOverride if `true` and `preferenceName` is a language override, only values for the specified override will be returned.\n     * Otherwise, values for the override will be returned where defined, and values from the base preference will be returned otherwise.\n     *\n     * @return an object containing the value of the given preference for all scopes.\n     */\n    inspect<T extends JSONValue>(preferenceName: string, resourceUri?: string, forceLanguageOverride?: boolean): PreferenceInspection<T> | undefined;\n    /**\n     * For behavior, see {@link PreferenceService.inspect}.\n     *\n     * @returns the value in the scope specified.\n     */\n    inspectInScope<T extends JSONValue>(preferenceName: string, scope: PreferenceScope, resourceUri?: string, forceLanguageOverride?: boolean): T | undefined\n    /**\n     * Returns a new preference identifier based on the given OverridePreferenceName.\n     *\n     * @param options the override specification.\n     *\n     * @returns the calculated string based on the given OverridePreferenceName.\n     */\n    overridePreferenceName(options: OverridePreferenceName): string;\n    /**\n     * Tries to split the given preference identifier into the original OverridePreferenceName attributes\n     * with which this identifier was created. Returns `undefined` if this is not possible, for example\n     * when the given preference identifier was not generated by `overridePreferenceName`.\n     *\n     * This method is checked when resolving preferences. Therefore together with \"overridePreferenceName\"\n     * this can be used to handle specialized preferences, e.g. \"[markdown].editor.autoIndent\" and \"editor.autoIndent\".\n     *\n     * @param preferenceName the preferenceName which might have been created via {@link PreferenceService.overridePreferenceName}.\n     *\n     * @returns the OverridePreferenceName which was used to create the given `preferenceName` if this was the case,\n     * `undefined` otherwise.\n     */\n    overriddenPreferenceName(preferenceName: string): OverridePreferenceName | undefined;\n    /**\n     * Retrieve the stored value for the given preference and resourceUri.\n     *\n     * @param preferenceName the preference identifier.\n     * @param defaultValue the value to return when no value for the given preference is stored.\n     * @param resourceUri the uri of the resource for which the preference is stored. This used to retrieve\n     * a potentially different value for the same preference for different resources, for example `files.encoding`.\n     *\n     * @returns an object containing the value stored for the given preference and resourceUri when it exists,\n     * otherwise the given default value. If determinable the object will also contain the uri of the configuration\n     * resource in which the preference was stored.\n     */\n    resolve<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): PreferenceResolveResult<T>;\n    /**\n     * Returns the uri of the configuration resource for the given scope and optional resource uri.\n     *\n     * @param scope the PreferenceScope to query for.\n     * @param resourceUri the optional uri of the resource-specific preference handling\n     * @param sectionName the optional preference section to query for.\n     *\n     * @returns the uri of the configuration resource for the given scope and optional resource uri it it exists,\n     * `undefined` otherwise.\n     */\n    getConfigUri(scope: PreferenceScope, resourceUri?: string, sectionName?: string): URI | undefined;\n}\n\n/**\n * Return type of the {@link PreferenceService.inspect} call.\n */\nexport interface PreferenceInspection<T = JSONValue> {\n    /**\n     * The preference identifier.\n     */\n    preferenceName: string,\n    /**\n     * Value in default scope.\n     */\n    defaultValue: T | undefined,\n    /**\n     * Value in user scope.\n     */\n    globalValue: T | undefined,\n    /**\n     * Value in workspace scope.\n     */\n    workspaceValue: T | undefined,\n    /**\n     * Value in folder scope.\n     */\n    workspaceFolderValue: T | undefined,\n    /**\n     * The value that is active, i.e. the value set in the lowest scope available.\n     */\n    value: T | undefined;\n}\n\nexport type PreferenceInspectionScope = keyof Omit<PreferenceInspection<unknown>, 'preferenceName'>;\n\n/**\n * We cannot load providers directly in the case if they depend on `PreferenceService` somehow.\n * It allows to load them lazily after DI is configured.\n */\nexport const PreferenceProviderProvider = Symbol('PreferenceProviderProvider');\nexport type PreferenceProviderProvider = (scope: PreferenceScope, uri?: URI) => PreferenceProvider | undefined;\n\n@injectable()\nexport class PreferenceServiceImpl implements PreferenceService {\n\n    protected readonly onPreferenceChangedEmitter = new Emitter<PreferenceChange>();\n    readonly onPreferenceChanged = this.onPreferenceChangedEmitter.event;\n\n    protected readonly onPreferencesChangedEmitter = new Emitter<PreferenceChanges>();\n    readonly onPreferencesChanged = this.onPreferencesChangedEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection(this.onPreferenceChangedEmitter, this.onPreferencesChangedEmitter);\n\n    @inject(PreferenceSchemaService)\n    protected readonly schemaService: PreferenceSchemaService;\n\n    @inject(PreferenceProviderProvider)\n    protected readonly providerProvider: PreferenceProviderProvider;\n\n    @inject(PreferenceConfigurations)\n    protected readonly configurations: PreferenceConfigurations;\n\n    @inject(PreferenceLanguageOverrideService)\n    protected readonly preferenceOverrideService: PreferenceLanguageOverrideService;\n\n    protected readonly preferenceProviders = new Map<PreferenceScope, PreferenceProvider>();\n\n    protected async initializeProviders(): Promise<void> {\n        try {\n            for (const scope of this.schemaService.validScopes) {\n                const provider = this.providerProvider(scope);\n                if (provider) {\n                    this.preferenceProviders.set(scope, provider);\n                    this.toDispose.push(provider.onDidPreferencesChanged(changes =>\n                        this.reconcilePreferences(changes)\n                    ));\n                    await provider.ready;\n                } else {\n                    console.warn(`No preference provider bound for ${PreferenceScope[scope]}`);\n                }\n            }\n            this._ready.resolve();\n            this._isReady = true;\n        } catch (e) {\n            this._ready.reject(e);\n        }\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(Disposable.create(() => this._ready.reject(new Error('preference service is disposed'))));\n        this.initializeProviders();\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected readonly _ready = new Deferred<void>();\n    get ready(): Promise<void> {\n        return this._ready.promise;\n    }\n\n    protected _isReady = false;\n    get isReady(): boolean {\n        return this._isReady;\n    }\n\n    protected reconcilePreferences(changes: PreferenceProviderDataChanges): void {\n        const changesToEmit: PreferenceChanges = {};\n        const acceptChange = (change: PreferenceProviderDataChange) => {\n            this.getAffectedPreferenceNames(change, preferenceName =>\n                changesToEmit[preferenceName] = new PreferenceChangeImpl({ ...change, preferenceName }));\n        };\n\n        for (const preferenceName of Object.keys(changes)) {\n\n            let change = changes[preferenceName];\n            const overridden = this.overriddenPreferenceName(change.preferenceName);\n            if (change.newValue === undefined) {\n                if (overridden) {\n                    change = {\n                        ...change, newValue: this.doGet(overridden.preferenceName)\n                    };\n                }\n            }\n\n            for (const scope of [...this.schemaService.validScopes].reverse()) {\n                const provider = this.getProvider(scope);\n                if (provider) {\n                    const value: JSONValue | undefined = provider.get(preferenceName);\n                    if (scope > change.scope && value !== undefined) {\n                        // preference defined in a more specific scope\n                        break;\n                    } else if (scope === change.scope && (change.newValue !== undefined || scope === PreferenceScope.Default)) {\n                        // preference is changed into something other than `undefined`\n                        acceptChange(change);\n                        break;\n                    } else if (scope < change.scope && change.newValue === undefined && value !== undefined) {\n                        // preference is changed to `undefined`, use the value from a more general scope\n                        change = {\n                            ...change,\n                            newValue: value,\n                            scope\n                        };\n                        acceptChange(change);\n                        break;\n                    }\n                }\n            }\n        }\n\n        // emit the changes\n        const changedPreferenceNames = Object.keys(changesToEmit);\n        if (changedPreferenceNames.length > 0) {\n            this.onPreferencesChangedEmitter.fire(changesToEmit);\n        }\n        changedPreferenceNames.forEach(preferenceName => this.onPreferenceChangedEmitter.fire(changesToEmit[preferenceName]));\n    }\n    protected getAffectedPreferenceNames(change: PreferenceProviderDataChange, accept: (affectedPreferenceName: string) => void): void {\n        const overridden = this.preferenceOverrideService.overriddenPreferenceName(change.preferenceName);\n        accept(change.preferenceName);\n        if (!overridden?.overrideIdentifier) { // changes to overrides never affect other overrides\n            const preference = this.schemaService.getSchemaProperty(change.preferenceName);\n            if (preference && preference.overridable) {\n\n                for (const overrideId of this.schemaService.overrideIdentifiers) {\n                    const overridePreferenceName = this.preferenceOverrideService.overridePreferenceName({\n                        overrideIdentifier: overrideId,\n                        preferenceName: change.preferenceName\n                    });\n\n                    if (!this.doHas(overridePreferenceName)) {\n                        accept(overridePreferenceName);\n                    }\n                }\n            }\n        }\n    }\n\n    protected getProvider(scope: PreferenceScope): PreferenceProvider | undefined {\n        return this.preferenceProviders.get(scope);\n    }\n\n    has(preferenceName: string, resourceUri?: string): boolean {\n        return this.get(preferenceName, undefined, resourceUri) !== undefined;\n    }\n\n    get<T>(preferenceName: string): T | undefined;\n    get<T>(preferenceName: string, defaultValue: T): T;\n    get<T>(preferenceName: string, defaultValue: T, resourceUri: string): T;\n    get<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined;\n    get<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined {\n        return this.resolve<T>(preferenceName, defaultValue, resourceUri).value;\n    }\n\n    resolve<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): PreferenceResolveResult<T> {\n        const { value, configUri } = this.doResolve(preferenceName, defaultValue, resourceUri);\n        if (value === undefined) {\n            const overridden = this.overriddenPreferenceName(preferenceName);\n            if (overridden) {\n                return this.doResolve(overridden.preferenceName, defaultValue, resourceUri);\n            }\n        }\n        return { value, configUri };\n    }\n\n    async set(preferenceName: string, value: any, scope: PreferenceScope | undefined, resourceUri?: string): Promise<void> {\n        const resolvedScope = scope ?? (!resourceUri ? PreferenceScope.Workspace : PreferenceScope.Folder);\n        if (resolvedScope === PreferenceScope.Folder && !resourceUri) {\n            throw new Error('Unable to write to Folder Settings because no resource is provided.');\n        }\n        const provider = this.getProvider(resolvedScope);\n        if (provider && await provider.setPreference(preferenceName, value, resourceUri)) {\n            return;\n        }\n        throw new Error(`Unable to write to ${PreferenceScope[resolvedScope]} Settings.`);\n    }\n\n    getBoolean(preferenceName: string): boolean | undefined;\n    getBoolean(preferenceName: string, defaultValue: boolean): boolean;\n    getBoolean(preferenceName: string, defaultValue: boolean, resourceUri: string): boolean;\n    getBoolean(preferenceName: string, defaultValue?: boolean, resourceUri?: string): boolean | undefined {\n        const value = resourceUri ? this.get(preferenceName, defaultValue, resourceUri) : this.get(preferenceName, defaultValue);\n        // eslint-disable-next-line no-null/no-null\n        return value !== null && value !== undefined ? !!value : defaultValue;\n    }\n\n    getString(preferenceName: string): string | undefined;\n    getString(preferenceName: string, defaultValue: string): string;\n    getString(preferenceName: string, defaultValue: string, resourceUri: string): string;\n    getString(preferenceName: string, defaultValue?: string, resourceUri?: string): string | undefined {\n        const value = resourceUri ? this.get(preferenceName, defaultValue, resourceUri) : this.get(preferenceName, defaultValue);\n        // eslint-disable-next-line no-null/no-null\n        if (value === null || value === undefined) {\n            return defaultValue;\n        }\n        return value.toString();\n    }\n\n    getNumber(preferenceName: string): number | undefined;\n    getNumber(preferenceName: string, defaultValue: number): number;\n    getNumber(preferenceName: string, defaultValue: number, resourceUri: string): number;\n    getNumber(preferenceName: string, defaultValue?: number, resourceUri?: string): number | undefined {\n        const value = resourceUri ? this.get(preferenceName, defaultValue, resourceUri) : this.get(preferenceName, defaultValue);\n        // eslint-disable-next-line no-null/no-null\n        if (value === null || value === undefined) {\n            return defaultValue;\n        }\n        if (typeof value === 'number') {\n            return value;\n        }\n        return Number(value);\n    }\n\n    inspect<T extends JSONValue>(preferenceName: string, resourceUri?: string, forceLanguageOverride?: boolean): PreferenceInspection<T> | undefined {\n        const defaultValue = this.inspectInScope<T>(preferenceName, PreferenceScope.Default, resourceUri, forceLanguageOverride);\n        const globalValue = this.inspectInScope<T>(preferenceName, PreferenceScope.User, resourceUri, forceLanguageOverride);\n        const workspaceValue = this.inspectInScope<T>(preferenceName, PreferenceScope.Workspace, resourceUri, forceLanguageOverride);\n        const workspaceFolderValue = this.inspectInScope<T>(preferenceName, PreferenceScope.Folder, resourceUri, forceLanguageOverride);\n\n        const valueApplied = workspaceFolderValue ?? workspaceValue ?? globalValue ?? defaultValue;\n\n        return { preferenceName, defaultValue, globalValue, workspaceValue, workspaceFolderValue, value: valueApplied };\n    }\n\n    inspectInScope<T extends JSONValue>(preferenceName: string, scope: PreferenceScope, resourceUri?: string, forceLanguageOverride?: boolean): T | undefined {\n        const value = this.doInspectInScope<T>(preferenceName, scope, resourceUri);\n        if (value === undefined && !forceLanguageOverride) {\n            const overridden = this.overriddenPreferenceName(preferenceName);\n            if (overridden) {\n                return this.doInspectInScope(overridden.preferenceName, scope, resourceUri);\n            }\n        }\n        return value;\n    }\n\n    protected getScopedValueFromInspection<T>(inspection: PreferenceInspection<T>, scope: PreferenceScope): T | undefined {\n        switch (scope) {\n            case PreferenceScope.Default:\n                return inspection.defaultValue;\n            case PreferenceScope.User:\n                return inspection.globalValue;\n            case PreferenceScope.Workspace:\n                return inspection.workspaceValue;\n            case PreferenceScope.Folder:\n                return inspection.workspaceFolderValue;\n        }\n        unreachable(scope, 'Not all PreferenceScope enum variants handled.');\n    }\n\n    async updateValue(preferenceName: string, value: any, resourceUri?: string): Promise<void> {\n        const inspection = this.inspect<any>(preferenceName, resourceUri);\n        if (inspection) {\n            const scopesToChange = this.getScopesToChange(inspection, value);\n            const isDeletion = value === undefined\n                || (scopesToChange.length === 1 && scopesToChange[0] === PreferenceScope.User && JSONExt.deepEqual(value, inspection.defaultValue));\n            const effectiveValue = isDeletion ? undefined : value;\n            await Promise.all(scopesToChange.map(scope => this.set(preferenceName, effectiveValue, scope, resourceUri)));\n        }\n    }\n\n    protected getScopesToChange(inspection: PreferenceInspection<any>, intendedValue: any): PreferenceScope[] {\n        if (JSONExt.deepEqual(inspection.value, intendedValue)) {\n            return [];\n        }\n\n        // Scopes in ascending order of scope breadth.\n        const allScopes = [...this.schemaService.validScopes].reverse();\n        // Get rid of Default scope. We can't set anything there.\n        allScopes.pop();\n\n        const isScopeDefined = (scope: PreferenceScope) => this.getScopedValueFromInspection(inspection, scope) !== undefined;\n\n        if (intendedValue === undefined) {\n            return allScopes.filter(isScopeDefined);\n        }\n\n        return [allScopes.find(isScopeDefined) ?? PreferenceScope.User];\n    }\n\n    overridePreferenceName(options: OverridePreferenceName): string {\n        return this.preferenceOverrideService.overridePreferenceName(options);\n    }\n    overriddenPreferenceName(preferenceName: string): OverridePreferenceName | undefined {\n        return this.preferenceOverrideService.overriddenPreferenceName(preferenceName);\n    }\n\n    protected doHas(preferenceName: string, resourceUri?: string): boolean {\n        return this.doGet(preferenceName, undefined, resourceUri) !== undefined;\n    }\n    protected doInspectInScope<T>(preferenceName: string, scope: PreferenceScope, resourceUri?: string): T | undefined {\n        const provider = this.getProvider(scope);\n        return provider && provider.get<T>(preferenceName, resourceUri);\n    }\n    protected doGet<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): T | undefined {\n        return this.doResolve(preferenceName, defaultValue, resourceUri).value;\n    }\n    protected doResolve<T>(preferenceName: string, defaultValue?: T, resourceUri?: string): PreferenceResolveResult<T> {\n        const result: PreferenceResolveResult<T> = {};\n        for (const scope of this.schemaService.validScopes) {\n            const provider = this.getProvider(scope);\n            if (provider?.canHandleScope(scope)) {\n                const { configUri, value } = provider.resolve<T>(preferenceName, resourceUri);\n                if (value !== undefined) {\n                    result.configUri = configUri;\n                    result.value = PreferenceUtils.merge(result.value as any, value as any) as any;\n                }\n            }\n        }\n        return {\n            configUri: result.configUri,\n            value: result.value !== undefined ? deepFreeze(result.value) : defaultValue\n        };\n    }\n\n    getConfigUri(scope: PreferenceScope, resourceUri?: string, sectionName: string = this.configurations.getConfigName()): URI | undefined {\n        const provider = this.getProvider(scope);\n        if (!provider || !this.configurations.isAnyConfig(sectionName)) {\n            return undefined;\n        }\n        const configUri = provider.getConfigUri && provider.getConfigUri(resourceUri, sectionName);\n        if (configUri) {\n            return configUri;\n        }\n        return provider.getContainingConfigUri && provider.getContainingConfigUri(resourceUri, sectionName);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Disposable, Event, isObject, MaybePromise } from '../../common';\nimport { PreferenceService } from './preference-service';\nimport { PreferenceScope } from './preference-scope';\nimport { IJSONSchema } from '../../common/json-schema';\nimport { isThenable } from '../../common/promise-util';\nimport { OverridePreferenceName } from '../../common/preferences/preference-language-override-service';\n\n/**\n * It is worth explaining the type for `PreferenceChangeEvent`:\n *\n * // Given T:\n * type T = { a: string, b: number }\n *\n * // We construct a new type such as:\n * type U = {\n *     a: {\n *         preferenceName: 'a'\n *         newValue: string\n *         oldValue?: string\n *     }\n *     b: {\n *        preferenceName: 'b'\n *        newValue: number\n *        oldValue?: number\n *     }\n * }\n *\n * // Then we get the union of all values of U by selecting by `keyof T`:\n * type V = U[keyof T]\n *\n * // Implementation:\n * type PreferenceChangeEvent<T> = {\n *     // Create a mapping where each key is a key from T,\n *     // -? normalizes optional typings to avoid getting\n *     // `undefined` as part of the final union:\n *     [K in keyof T]-?: {\n *         // In this object, K will take the value of each\n *         // independent key from T:\n *         preferenceName: K\n *         newValue: T[K]\n *         oldValue?: T[K]\n *     // Finally we create the union by doing so:\n *     }[keyof T]\n * }\n */\n\n/**\n * Union of all possible key/value pairs for a type `T`\n */\nexport type PreferenceChangeEvent<T> = {\n    affects(resourceUri?: string, overrideIdentifier?: string): boolean;\n} & {\n    [K in keyof T]-?: {\n        readonly preferenceName: K;\n        readonly newValue: T[K];\n        /**\n         * Undefined if the preference is set for the first time.\n         */\n        // TODO: Use the default value instead of undefined?\n        readonly oldValue?: T[K];\n    }\n}[keyof T];\n\nexport interface PreferenceEventEmitter<T> {\n    readonly onPreferenceChanged: Event<PreferenceChangeEvent<T>>;\n    readonly ready: Promise<void>;\n}\n\n/**\n * Generic interface to declare a typesafe get function based on the given\n * configuration type.\n *\n * ### Illustration\n *\n * ```ts\n * interface PreferenceConfiguration {\n *  'myext.enabled': boolean,\n * }\n * const enabled : boolean = prefs.get('myext.enabled'); // valid\n * const debug : string = prefs.get('myext.enabled'); // invalid\n * prefs.get('foobar'); // invalid\n * ```\n */\nexport interface PreferenceRetrieval<T> {\n    get<K extends keyof T>(preferenceName: K | {\n        preferenceName: K,\n        overrideIdentifier?: string\n    }, defaultValue?: T[K], resourceUri?: string): T[K];\n}\n\n/**\n * Typesafe schema-based preferences utility based on the {@link PreferenceService}.\n * Can be used to get preferences as well as listen to preference changes.\n *\n * See {@link createPreferenceProxy} on how to instantiate preference proxies.\n *\n * ### Example usage\n *\n * ```ts\n * preferences.onPreferenceChanged(({ preferenceName, newValue }) => { ... });\n * const enabled = preferences['myext.enabled'];\n * ```\n */\nexport type PreferenceProxy<T> = Readonly<T> & Disposable & PreferenceEventEmitter<T> & PreferenceRetrieval<T>;\nexport const PreferenceProxyOptions = Symbol('PreferenceProxyOptions');\n/**\n * Proxy configuration parameters.\n */\nexport interface PreferenceProxyOptions {\n    /**\n     * Prefix which is transparently added to all preference identifiers.\n     */\n    prefix?: string;\n    /**\n     * The default resourceUri to use if none was specified when calling \"set\" or \"get\".\n     */\n    resourceUri?: string;\n    /**\n     * The overrideIdentifier to use with the underlying preferenceService.\n     * Useful to potentially override existing values while keeping both values in store.\n     *\n     * For example to store different editor settings, e.g. \"[markdown].editor.autoIndent\",\n     * \"[json].editor.autoIndent\" and \"editor.autoIndent\"\n     */\n    overrideIdentifier?: string;\n    /**\n     * Indicates whether '.' in schema properties shall be interpreted as regular names (flat),\n     * as declaring nested objects (deep) or both. Default is flat.\n     *\n     * When 'deep' or 'both' is given, nested preference proxies can be retrieved.\n     */\n    style?: 'flat' | 'deep' | 'both';\n    /**\n     * Indicates whether the proxy should be disposable. Proxies that are shared between multiple callers should not be disposable.\n     */\n    isDisposable?: boolean;\n}\n\n/**\n * Creates a preference proxy for typesafe preference handling.\n *\n * @param preferences the underlying preference service to use for preference handling.\n * @param promisedSchema the JSON Schema which describes which preferences are available including types and descriptions. Can be a promise.\n * @param options configuration options.\n *\n * @returns the created preference proxy.\n *\n * ### Usage\n *\n *  1. Create JSON Schema specifying your preferences\n *  2. Create Configuration type based on the JSON Schema\n *  3. Bind the return value of `createPreferenceProxy` to make your preferences available wherever needed.\n *\n * See {@link CorePreferences} for an example.\n *\n * Note that if `schema` is a Promise, most actions will be no-ops until the promise is resolved.\n *\n * @deprecated @since 1.23.0 use `PreferenceProxyFactory` instead.\n */\nexport function createPreferenceProxy<T>(preferences: PreferenceService, promisedSchema: MaybePromise<IJSONSchema>, options?: PreferenceProxyOptions): PreferenceProxy<T> {\n    const opts = options || {};\n    const prefix = opts.prefix || '';\n    const style = opts.style || 'flat';\n    const isDeep = style === 'deep' || style === 'both';\n    const isFlat = style === 'both' || style === 'flat';\n    let schema: IJSONSchema | undefined;\n    if (!isThenable(promisedSchema)) {\n        schema = promisedSchema as IJSONSchema;\n    } else {\n        promisedSchema.then((s: IJSONSchema) => schema = s);\n    }\n    const onPreferenceChanged = (listener: (e: PreferenceChangeEvent<T>) => any, thisArgs?: any, disposables?: Disposable[]) => preferences.onPreferencesChanged(changes => {\n        if (schema) {\n            for (const key of Object.keys(changes)) {\n                const e = changes[key];\n                const overridden = preferences.overriddenPreferenceName(e.preferenceName);\n                const preferenceName = overridden ? overridden.preferenceName : e.preferenceName;\n                if (preferenceName.startsWith(prefix) && (!opts.overrideIdentifier || overridden?.overrideIdentifier === opts.overrideIdentifier)) {\n                    if (schema.properties && schema.properties[preferenceName]) {\n                        const { newValue, oldValue } = e;\n                        listener({\n                            newValue: newValue as T[keyof T], oldValue: oldValue as T[keyof T], preferenceName: preferenceName as keyof T,\n                            affects: (resourceUri, overrideIdentifier) => {\n                                if (overrideIdentifier !== overridden?.overrideIdentifier) {\n                                    return false;\n                                }\n                                return e.affects(resourceUri);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }, thisArgs, disposables);\n\n    const unsupportedOperation = (_: any, __: string) => {\n        throw new Error('Unsupported operation');\n    };\n\n    const getValue: PreferenceRetrieval<any>['get'] = (arg, defaultValue, resourceUri) => {\n        const preferenceName = OverridePreferenceName.is(arg) ?\n            preferences.overridePreferenceName(arg) :\n            <string>arg;\n        return preferences.get(preferenceName, defaultValue, resourceUri || opts.resourceUri);\n    };\n\n    const ownKeys: () => string[] = () => {\n        const properties = [];\n        if (schema && schema.properties) {\n            for (const p of Object.keys(schema.properties)) {\n                if (p.startsWith(prefix)) {\n                    const idx = p.indexOf('.', prefix.length);\n                    if (idx !== -1 && isDeep) {\n                        const pre = p.substring(prefix.length, idx);\n                        if (properties.indexOf(pre) === -1) {\n                            properties.push(pre);\n                        }\n                    }\n                    const prop = p.substring(prefix.length);\n                    if (isFlat || prop.indexOf('.') === -1) {\n                        properties.push(prop);\n                    }\n                }\n            }\n        }\n        return properties;\n    };\n\n    const set: (target: any, prop: string, value: any, receiver: any) => boolean = (_, property: string | symbol | number, value: any) => {\n        if (typeof property !== 'string') {\n            throw new Error(`unexpected property: ${String(property)}`);\n        }\n        if (style === 'deep' && property.indexOf('.') !== -1) {\n            return false;\n        }\n        if (schema && schema.properties) {\n            const fullProperty = prefix ? prefix + property : property;\n            if (schema.properties[fullProperty]) {\n                preferences.set(fullProperty, value, PreferenceScope.Default);\n                return true;\n            }\n            const newPrefix = fullProperty + '.';\n            for (const p of Object.keys(schema.properties)) {\n                if (p.startsWith(newPrefix)) {\n                    const subProxy: { [k: string]: any } = createPreferenceProxy(preferences, schema, {\n                        prefix: newPrefix,\n                        resourceUri: opts.resourceUri,\n                        overrideIdentifier: opts.overrideIdentifier,\n                        style\n                    });\n                    for (const k of Object.keys(value)) {\n                        subProxy[k] = value[k];\n                    }\n                }\n            }\n        }\n        return false;\n    };\n\n    const get: (target: any, prop: string) => any = (_, property: string | symbol | number) => {\n        if (typeof property !== 'string') {\n            throw new Error(`unexpected property: ${String(property)}`);\n        }\n        const fullProperty = prefix ? prefix + property : property;\n        if (schema && schema.properties) {\n            if (isFlat || property.indexOf('.') === -1) {\n                if (schema.properties[fullProperty]) {\n                    let value;\n                    if (opts.overrideIdentifier) {\n                        value = preferences.get(preferences.overridePreferenceName({\n                            overrideIdentifier: opts.overrideIdentifier,\n                            preferenceName: fullProperty\n                        }), undefined, opts.resourceUri);\n                    }\n                    if (value === undefined) {\n                        value = preferences.get(fullProperty, undefined, opts.resourceUri);\n                    }\n                    return value;\n                }\n            }\n        }\n        if (property === 'onPreferenceChanged') {\n            return onPreferenceChanged;\n        }\n        if (property === 'dispose') {\n            return () => { /* do nothing */ };\n        }\n        if (property === 'ready') {\n            return preferences.ready;\n        }\n        if (property === 'get') {\n            return getValue;\n        }\n        if (property === 'toJSON') {\n            return toJSON();\n        }\n        if (schema && schema.properties && isDeep) {\n            const newPrefix = fullProperty + '.';\n            for (const p of Object.keys(schema.properties)) {\n                if (p.startsWith(newPrefix)) {\n                    return createPreferenceProxy(preferences, schema, { prefix: newPrefix, resourceUri: opts.resourceUri, overrideIdentifier: opts.overrideIdentifier, style });\n                }\n            }\n\n            let value;\n            let parentSegment = fullProperty;\n            const segments = [];\n            do {\n                const index = parentSegment.lastIndexOf('.');\n                segments.push(parentSegment.substring(index + 1));\n                parentSegment = parentSegment.substring(0, index);\n                if (parentSegment in schema.properties) {\n                    value = get(_, parentSegment);\n                }\n            } while (parentSegment && value === undefined);\n\n            let segment;\n            while (isObject(value) && (segment = segments.pop())) {\n                value = value[segment];\n            }\n            return segments.length ? undefined : value;\n        }\n        return undefined;\n    };\n\n    const toJSON = () => {\n        const result: any = {};\n        for (const k of ownKeys()) {\n            result[k] = get(undefined, k);\n        }\n        return result;\n    };\n\n    return new Proxy({}, {\n        get,\n        ownKeys,\n        getOwnPropertyDescriptor: (_, property: string) => {\n            if (ownKeys().indexOf(property) !== -1) {\n                return {\n                    enumerable: true,\n                    configurable: true\n                };\n            }\n            return {};\n        },\n        set,\n        deleteProperty: unsupportedOperation,\n        defineProperty: unsupportedOperation\n    });\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface ApplicationError<C extends number, D> extends Error {\n    readonly code: C\n    readonly data: D\n    toJson(): ApplicationError.Literal<D>\n}\nexport namespace ApplicationError {\n    export interface Literal<D> {\n        message: string\n        data: D\n        stack?: string\n    }\n    export interface Constructor<C extends number, D> {\n        (...args: any[]): ApplicationError<C, D>;\n        code: C;\n        is(arg: object | undefined): arg is ApplicationError<C, D>\n    }\n    const codes = new Set<number>();\n    export function declare<C extends number, D>(code: C, factory: (...args: any[]) => Literal<D>): Constructor<C, D> {\n        if (codes.has(code)) {\n            throw new Error(`An application error for '${code}' code is already declared`);\n        }\n        codes.add(code);\n        const constructorOpt = Object.assign((...args: any[]) => new Impl(code, factory(...args), constructorOpt), {\n            code,\n            is(arg: object | undefined): arg is ApplicationError<C, D> {\n                return arg instanceof Impl && arg.code === code;\n            }\n        });\n        return constructorOpt;\n    }\n    export function is<C extends number, D>(arg: object | undefined): arg is ApplicationError<C, D> {\n        return arg instanceof Impl;\n    }\n    export function fromJson<C extends number, D>(code: C, raw: Literal<D>): ApplicationError<C, D> {\n        return new Impl(code, raw);\n    }\n    class Impl<C extends number, D> extends Error implements ApplicationError<C, D>  {\n        readonly data: D;\n        constructor(\n            readonly code: C,\n            raw: ApplicationError.Literal<D>,\n            constructorOpt?: Function\n        ) {\n            super(raw.message);\n            this.data = raw.data;\n            Object.setPrototypeOf(this, Impl.prototype);\n            if (raw.stack) {\n                this.stack = raw.stack;\n            } else if (Error.captureStackTrace && constructorOpt) {\n                Error.captureStackTrace(this, constructorOpt);\n            }\n        }\n        toJson(): ApplicationError.Literal<D> {\n            const { message, data, stack } = this;\n            return { message, data, stack };\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// copied from hhttps://github.com/microsoft/vscode/blob/6261075646f055b99068d3688932416f2346dd3b/src/vs/workbench/api/common/extHostLanguageFeatures.ts#L1291-L1310.\n\nexport class ReferenceMap<T> {\n    private readonly _references = new Map<number, T>();\n    private _idPool = 1;\n\n    createReferenceId(value: T): number {\n        const id = this._idPool++;\n        this._references.set(id, value);\n        return id;\n    }\n\n    disposeReferenceId(referenceId: number): T | undefined {\n        const value = this._references.get(referenceId);\n        this._references.delete(referenceId);\n        return value;\n    }\n\n    get(referenceId: number): T | undefined {\n        return this._references.get(referenceId);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, multiInject, optional } from 'inversify';\nimport { ContributionFilterRegistry, ContributionType, FilterContribution } from './contribution-filter';\nimport { Filter } from './filter';\n\n/**\n * Registry of contribution filters.\n *\n * Implement/bind to the `FilterContribution` interface/symbol to register your contribution filters.\n */\n@injectable()\nexport class ContributionFilterRegistryImpl implements ContributionFilterRegistry {\n\n    protected initialized = false;\n    protected genericFilters: Filter<Object>[] = [];\n    protected typeToFilters = new Map<ContributionType, Filter<Object>[]>();\n\n    constructor(\n        @multiInject(FilterContribution) @optional() contributions: FilterContribution[] = []\n    ) {\n        for (const contribution of contributions) {\n            contribution.registerContributionFilters(this);\n        }\n        this.initialized = true;\n    }\n\n    addFilters(types: '*' | ContributionType[], filters: Filter<Object>[]): void {\n        if (this.initialized) {\n            throw new Error('cannot add filters after initialization is done.');\n        } else if (types === '*') {\n            this.genericFilters.push(...filters);\n        } else {\n            for (const type of types) {\n                this.getOrCreate(type).push(...filters);\n            }\n        }\n    }\n\n    applyFilters<T extends Object>(toFilter: T[], type: ContributionType): T[] {\n        const filters = this.getFilters(type);\n        if (filters.length === 0) {\n            return toFilter;\n        }\n        return toFilter.filter(\n            object => filters.every(filter => filter(object))\n        );\n    }\n\n    protected getOrCreate(type: ContributionType): Filter<Object>[] {\n        let value = this.typeToFilters.get(type);\n        if (value === undefined) {\n            this.typeToFilters.set(type, value = []);\n        }\n        return value;\n    }\n\n    protected getFilters(type: ContributionType): Filter<Object>[] {\n        return [\n            ...this.typeToFilters.get(type) || [],\n            ...this.genericFilters\n        ];\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport interface ObjectIdentifier {\n    $ident: number;\n}\n\nexport namespace ObjectIdentifier {\n    export const name = '$ident';\n\n    export function mixin<T>(obj: T, id: number): T & ObjectIdentifier {\n        Object.defineProperty(obj, name, { value: id, enumerable: true });\n        return <T & ObjectIdentifier>obj;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function of(obj: any): number {\n        return obj[name];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as theia from '@theia/plugin';\nimport { ThemeColor, StatusBarAlignment } from '../types-impl';\nimport { StatusBarMessageRegistryMain } from '../../common/plugin-api-rpc';\nimport { UUID } from '@theia/core/shared/@lumino/coreutils';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { MarkdownString } from '../markdown-string';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\n\nexport class StatusBarItemImpl implements theia.StatusBarItem {\n\n    /** Map from allowed background colors to corresponding foreground colors. */\n    private static BACKGROUND_COLORS = new Map<string, string>([\n        ['statusBarItem.errorBackground', 'statusBarItem.errorForeground'],\n        ['statusBarItem.warningBackground', 'statusBarItem.warningForeground']\n    ]);\n\n    private _id: string;\n\n    private _alignment: StatusBarAlignment;\n    private _priority: number;\n\n    private _name: string | undefined;\n    private _text: string;\n    private _tooltip: string | theia.MarkdownString | undefined;\n    private _color: string | ThemeColor | undefined;\n    private _backgroundColor: ThemeColor | undefined;\n    private _command: string | theia.Command;\n    private _accessibilityInformation: theia.AccessibilityInformation;\n\n    private _isVisible: boolean;\n    private _timeoutHandle: NodeJS.Timeout | undefined;\n\n    _proxy: StatusBarMessageRegistryMain;\n\n    constructor(_proxy: StatusBarMessageRegistryMain,\n        private readonly commandRegistry: CommandRegistryImpl,\n        alignment: StatusBarAlignment = StatusBarAlignment.Left,\n        priority: number = 0,\n        id = StatusBarItemImpl.nextId()) {\n        this._proxy = _proxy;\n        this._alignment = alignment;\n        this._priority = priority;\n        this._id = id;\n    }\n\n    public get id(): string {\n        return this._id;\n    }\n\n    public get alignment(): theia.StatusBarAlignment {\n        return <theia.StatusBarAlignment>this._alignment;\n    }\n\n    public get priority(): number {\n        return this._priority;\n    }\n\n    public get name(): string | undefined {\n        return this._name;\n    }\n\n    public get text(): string {\n        return this._text;\n    }\n\n    public get tooltip(): string | theia.MarkdownString | undefined {\n        return this._tooltip;\n    }\n\n    public get color(): string | ThemeColor | undefined {\n        return this._color;\n    }\n\n    public get backgroundColor(): ThemeColor | undefined {\n        return this._backgroundColor;\n    }\n\n    public get command(): string | theia.Command {\n        return this._command;\n    }\n\n    public get accessibilityInformation(): theia.AccessibilityInformation {\n        return this._accessibilityInformation;\n    }\n\n    public set name(name: string | undefined) {\n        this._name = name;\n        this.update();\n    }\n\n    public set text(text: string) {\n        this._text = text;\n        this.update();\n    }\n\n    public set tooltip(tooltip: string | theia.MarkdownString | undefined) {\n        if (tooltip && MarkdownString.isMarkdownString(tooltip)) {\n            const markdownTooltip = tooltip;\n            const content = markdownTooltip.value;\n            // Find all command links in the markdown content\n            const regex = /\\[([^\\]]+)\\]\\(command:([^?\\s\\)]+)(?:\\?([^\\s\\)]+))?([^\\)]*)\\)/g;\n            let match;\n            let updatedContent = content;\n\n            while ((match = regex.exec(content)) !== null) {\n                const linkText = match[1];\n                const commandId = match[2];\n                const argsEncoded = match[3]; // This captures the encoded arguments\n                const tooltipPart = match[4] || ''; // This captures any tooltip or additional content after the command and args\n\n                let args: unknown[] = [];\n                if (argsEncoded) {\n                    try {\n                        const decoded = decodeURIComponent(argsEncoded);\n                        args = JSON.parse(decoded);\n                    } catch (e) {\n                        console.error('Failed to parse command arguments:', e);\n                    }\n                }\n\n                const safeCommand = this.commandRegistry.converter.toSafeCommand(\n                    {\n                        command: commandId,\n                        title: linkText,\n                        arguments: Array.isArray(args) ? args : [args]\n                    },\n                    new DisposableCollection()\n                );\n\n                if (safeCommand?.id) {\n                    let newArgsPart = '';\n                    if (safeCommand.arguments && safeCommand.arguments.length > 0) {\n                        newArgsPart = `?${encodeURIComponent(JSON.stringify(safeCommand.arguments))}`;\n                    }\n\n                    const argsPart = argsEncoded ? `?${argsEncoded}` : '';\n                    const originalLink = `[${linkText}](command:${commandId}${argsPart}${tooltipPart})`;\n                    const safeLink = `[${linkText}](command:${safeCommand.id}${newArgsPart}${tooltipPart})`;\n                    updatedContent = updatedContent.replace(originalLink, safeLink);\n                }\n            }\n\n            if (updatedContent !== content) {\n                markdownTooltip.value = updatedContent;\n            }\n        }\n        this._tooltip = tooltip;\n        this.update();\n    }\n\n    public set color(color: string | ThemeColor | undefined) {\n        this._color = color;\n        this.update();\n    }\n\n    public set backgroundColor(backgroundColor: ThemeColor | undefined) {\n        if (backgroundColor && StatusBarItemImpl.BACKGROUND_COLORS.has(backgroundColor.id)) {\n            this._backgroundColor = backgroundColor;\n        } else {\n            this._backgroundColor = undefined;\n        }\n        this.update();\n    }\n\n    public set command(command: string | theia.Command) {\n        this._command = command;\n        this.update();\n    }\n\n    public set accessibilityInformation(information: theia.AccessibilityInformation) {\n        this._accessibilityInformation = information;\n        this.update();\n    }\n\n    public show(): void {\n        this._isVisible = true;\n        this.update();\n    }\n\n    public hide(): void {\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n        }\n        this._proxy.$dispose(this.id);\n        this._isVisible = false;\n    }\n\n    private update(): void {\n        if (!this._isVisible) {\n            return;\n        }\n        if (this._timeoutHandle) {\n            clearTimeout(this._timeoutHandle);\n        }\n        // Defer the update so that multiple changes to setters don't cause a redraw each\n        this._timeoutHandle = setTimeout(() => {\n            this._timeoutHandle = undefined;\n\n            const commandId = typeof this.command === 'object' ? this.command.command : this.command;\n            const args = typeof this.command === 'object' ? this.command.arguments : undefined;\n\n            let color = this.color;\n            if (this.backgroundColor) {\n                // If an error or warning background color is set, set the corresponding foreground color\n                color = StatusBarItemImpl.BACKGROUND_COLORS.get(this.backgroundColor.id);\n            }\n\n            // Set to status bar\n            this._proxy.$setMessage(\n                this.id,\n                this.name,\n                this.text,\n                this.priority,\n                this.alignment,\n                typeof color === 'string' ? color : color?.id,\n                this.backgroundColor?.id,\n                this.tooltip,\n                commandId,\n                this.accessibilityInformation,\n                args);\n        }, 0);\n    }\n\n    public dispose(): void {\n        this.hide();\n    }\n\n    static nextId(): string {\n        return StatusBarItemImpl.ID_PREFIX + ':' + UUID.uuid4();\n    }\n    static ID_PREFIX = 'plugin-status-bar-item';\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { JSONExt, JSONObject, JSONValue } from '@lumino/coreutils';\nimport { Event } from '../event';\nimport { PreferenceScope } from '../preferences/preference-scope';\nimport { URI } from '../uri';\nimport { Disposable } from 'vscode-languageserver-protocol';\n\nexport interface PreferenceProviderDataChange {\n    /**\n     * The name of the changed preference.\n     */\n    readonly preferenceName: string;\n    /**\n     * The new value of the changed preference.\n     */\n    readonly newValue?: JSONValue;\n    /**\n     * The old value of the changed preference.\n     */\n    readonly oldValue?: JSONValue;\n    /**\n     * The {@link PreferenceScope} of the changed preference.\n     */\n    readonly scope: PreferenceScope;\n    /**\n     * URIs of the scopes in which this change applies.\n     */\n    readonly domain?: string[];\n}\n\nexport namespace PreferenceProviderDataChange {\n    export function affects(change: PreferenceProviderDataChange, resourceUri?: string): boolean {\n        const resourcePath = resourceUri && new URI(resourceUri).path;\n        const domain = change.domain;\n        return !resourcePath || !domain || domain.some(uri => new URI(uri).path.relativity(resourcePath) >= 0);\n    }\n}\n\nexport interface PreferenceResolveResult<T> {\n    configUri?: URI;\n    value?: T\n}\n\nexport interface PreferenceProviderDataChanges {\n    [preferenceName: string]: PreferenceProviderDataChange;\n}\nexport const PreferenceProvider = Symbol('PreferenceProvider');\n\nexport interface PreferenceProvider extends Disposable {\n    readonly onDidPreferencesChanged: Event<PreferenceProviderDataChanges>;\n    ready: Promise<void>\n\n    /**\n     * Whether t\n     * @param scope the scope to handle\n     */\n    canHandleScope(scope: PreferenceScope): boolean;\n\n    /**\n     * Retrieve the stored value for the given preference and resource URI.\n     *\n     * @param preferenceName the preference identifier.\n     * @param resourceUri the uri of the resource for which the preference is stored. This is used to retrieve\n     * a potentially different value for the same preference for different resources, for example `files.encoding`.\n     *\n     * @returns the value stored for the given preference and resourceUri if it exists, otherwise `undefined`.\n     */\n    get<T>(preferenceName: string, resourceUri?: string): T | undefined;\n    /**\n     * Stores a new value for the given preference key in the provider.\n     * @param key the preference key (typically the name).\n     * @param value the new preference value.\n     * @param resourceUri the URI of the resource for which the preference is stored.\n     *\n     * @returns a promise that only resolves if all changes were delivered.\n     * If changes were made then implementation must either\n     * await on `this.emitPreferencesChangedEvent(...)` or\n     * `this.pendingChanges` if changes are fired indirectly.\n     */\n    setPreference(key: string, value: JSONValue, resourceUri?: string): Promise<boolean>\n    /**\n     * Resolve the value for the given preference and resource URI.\n     *\n     * @param preferenceName the preference identifier.\n     * @param resourceUri the URI of the resource for which this provider should resolve the preference. This is used to retrieve\n     * a potentially different value for the same preference for different resources, for example `files.encoding`.\n     *\n     * @returns an object containing the value stored for the given preference and resourceUri if it exists,\n     * otherwise `undefined`.\n     */\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T>;\n\n    /**\n     * Retrieve the configuration URI for the given resource URI.\n     * @param resourceUri the uri of the resource or `undefined`.\n     * @param sectionName the section to return the URI for, e.g. `tasks` or `launch`. Defaults to settings.\n     *\n     * @returns the corresponding resource URI or `undefined` if there is no valid URI.\n     */\n    getConfigUri?(resourceUri?: string, sectionName?: string): URI | undefined;\n    /**\n     * Retrieves the first valid configuration URI contained by the given resource.\n     * @param resourceUri the uri of the container resource or `undefined`.\n     *\n     * @returns the first valid configuration URI contained by the given resource `undefined`\n     * if there is no valid configuration URI at all.\n     */\n    getContainingConfigUri?(resourceUri?: string, sectionName?: string): URI | undefined;\n\n    /**\n     * Return a JSONObject with all preferences stored in this preference provider\n     */\n    getPreferences(resourceUri?: string): JSONObject;\n}\n\nexport namespace PreferenceUtils {\n    export function merge(source: JSONValue | undefined, target: JSONValue): JSONValue {\n        if (source === undefined || !JSONExt.isObject(source)) {\n            return JSONExt.deepCopy(target);\n        }\n        if (JSONExt.isPrimitive(target)) {\n            return {};\n        }\n        for (const [key, value] of Object.entries(target)) {\n            if (key in source) {\n                const sourceValue = source[key];\n                if (JSONExt.isObject(sourceValue) && JSONExt.isObject(value)) {\n                    merge(sourceValue, value);\n                    continue;\n                } else if (JSONExt.isArray(sourceValue) && JSONExt.isArray(value)) {\n                    source[key] = [...JSONExt.deepCopy(sourceValue), ...JSONExt.deepCopy(value)];\n                    continue;\n                }\n            }\n            source[key] = JSONExt.deepCopy(value);\n        }\n        return source;\n    }\n\n    /**\n     * Handles deep equality with the possibility of `undefined`\n     */\n    export function deepEqual(a: JSONValue | undefined, b: JSONValue | undefined): boolean {\n        if (a === b) { return true; }\n        if (a === undefined || b === undefined) { return false; }\n        return JSONExt.deepEqual(a, b);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named, postConstruct } from 'inversify';\nimport { TextDocumentContentChangeEvent } from 'vscode-languageserver-protocol';\nimport URI from '../common/uri';\nimport { ContributionProvider } from './contribution-provider';\nimport { Event, Emitter } from './event';\nimport { Disposable } from './disposable';\nimport { MaybePromise } from './types';\nimport { CancellationToken } from './cancellation';\nimport { ApplicationError } from './application-error';\nimport { ReadableStream, Readable } from './stream';\nimport { SyncReferenceCollection, Reference } from './reference';\nimport { MarkdownString } from './markdown-rendering';\n\nexport interface ResourceVersion {\n}\n\nexport interface ResourceReadOptions {\n    encoding?: string\n}\n\nexport interface ResourceSaveOptions {\n    encoding?: string\n    overwriteEncoding?: boolean\n    version?: ResourceVersion\n}\n\nexport interface Resource extends Disposable {\n    readonly uri: URI;\n    /**\n     * Latest read version of this resource.\n     *\n     * Optional if a resource does not support versioning, check with `in` operator`.\n     * Undefined if a resource did not read content yet.\n     */\n    readonly version?: ResourceVersion | undefined;\n    /**\n     * Latest read encoding of this resource.\n     *\n     * Optional if a resource does not support encoding, check with `in` operator`.\n     * Undefined if a resource did not read content yet.\n     */\n    readonly encoding?: string | undefined;\n\n    readonly onDidChangeReadOnly?: Event<boolean | MarkdownString>;\n\n    readonly readOnly?: boolean | MarkdownString;\n\n    readonly initiallyDirty?: boolean;\n    /** If false, the application should not attempt to auto-save this resource. */\n    readonly autosaveable?: boolean;\n    /**\n     * Reads latest content of this resource.\n     *\n     * If a resource supports versioning it updates version to latest.\n     * If a resource supports encoding it updates encoding to latest.\n     *\n     * @throws `ResourceError.NotFound` if a resource not found\n     */\n    readContents(options?: ResourceReadOptions): Promise<string>;\n    /**\n     * Stream latest content of this resource.\n     *\n     * If a resource supports versioning it updates version to latest.\n     * If a resource supports encoding it updates encoding to latest.\n     *\n     * @throws `ResourceError.NotFound` if a resource not found\n     */\n    readStream?(options?: ResourceReadOptions): Promise<ReadableStream<string>>;\n    /**\n     * Rewrites the complete content for this resource.\n     * If a resource does not exist it will be created.\n     *\n     * If a resource supports versioning clients can pass some version\n     * to check against it, if it is not provided latest version is used.\n     *\n     * It updates version and encoding to latest.\n     *\n     * @throws `ResourceError.OutOfSync` if latest resource version is out of sync with the given\n     */\n    saveContents?(content: string, options?: ResourceSaveOptions): Promise<void>;\n    /**\n     * Rewrites the complete content for this resource.\n     * If a resource does not exist it will be created.\n     *\n     * If a resource supports versioning clients can pass some version\n     * to check against it, if it is not provided latest version is used.\n     *\n     * It updates version and encoding to latest.\n     *\n     * @throws `ResourceError.OutOfSync` if latest resource version is out of sync with the given\n     */\n    saveStream?(content: Readable<string>, options?: ResourceSaveOptions): Promise<void>;\n    /**\n     * Applies incremental content changes to this resource.\n     *\n     * If a resource supports versioning clients can pass some version\n     * to check against it, if it is not provided latest version is used.\n     * It updates version to latest.\n     *\n     * @throws `ResourceError.NotFound` if a resource not found or was not read yet\n     * @throws `ResourceError.OutOfSync` if latest resource version is out of sync with the given\n     */\n    saveContentChanges?(changes: TextDocumentContentChangeEvent[], options?: ResourceSaveOptions): Promise<void>;\n    readonly onDidChangeContents?: Event<void>;\n    guessEncoding?(): Promise<string | undefined>\n}\nexport namespace Resource {\n    export interface SaveContext {\n        contentLength: number\n        content: string | Readable<string>\n        changes?: TextDocumentContentChangeEvent[]\n        options?: ResourceSaveOptions\n    }\n    export async function save(resource: Resource, context: SaveContext, token?: CancellationToken): Promise<void> {\n        if (!resource.saveContents) {\n            return;\n        }\n        if (await trySaveContentChanges(resource, context)) {\n            return;\n        }\n        if (token && token.isCancellationRequested) {\n            return;\n        }\n        if (typeof context.content !== 'string' && resource.saveStream) {\n            await resource.saveStream(context.content, context.options);\n        } else {\n            const content = typeof context.content === 'string' ? context.content : Readable.toString(context.content);\n            await resource.saveContents(content, context.options);\n        }\n    }\n    export async function trySaveContentChanges(resource: Resource, context: SaveContext): Promise<boolean> {\n        if (!context.changes || !resource.saveContentChanges || shouldSaveContent(resource, context)) {\n            return false;\n        }\n        try {\n            await resource.saveContentChanges(context.changes, context.options);\n            return true;\n        } catch (e) {\n            if (!ResourceError.NotFound.is(e) && !ResourceError.OutOfSync.is(e)) {\n                console.error(`Failed to apply incremental changes to '${resource.uri.toString()}':`, e);\n            }\n            return false;\n        }\n    }\n    export function shouldSaveContent(resource: Resource, { contentLength, changes }: SaveContext): boolean {\n        if (!changes || (resource.saveStream && contentLength > 32 * 1024 * 1024)) {\n            return true;\n        }\n        let contentChangesLength = 0;\n        for (const change of changes) {\n            contentChangesLength += JSON.stringify(change).length;\n            if (contentChangesLength > contentLength) {\n                return true;\n            }\n        }\n        return contentChangesLength > contentLength;\n    }\n}\n\nexport namespace ResourceError {\n    export const NotFound = ApplicationError.declare(-40000, (raw: ApplicationError.Literal<{ uri: URI }>) => raw);\n    export const OutOfSync = ApplicationError.declare(-40001, (raw: ApplicationError.Literal<{ uri: URI }>) => raw);\n}\n\nexport const ResourceResolver = Symbol('ResourceResolver');\nexport interface ResourceResolver {\n    /**\n     * Resolvers will be ordered by descending priority.\n     * Default: 0\n     */\n    priority?: number;\n    /**\n     * Reject if a resource cannot be provided.\n     */\n    resolve(uri: URI): MaybePromise<Resource>;\n}\n\nexport const ResourceProvider = Symbol('ResourceProvider');\nexport type ResourceProvider = (uri: URI) => Promise<Resource>;\n\n@injectable()\nexport class DefaultResourceProvider {\n\n    constructor(\n        @inject(ContributionProvider) @named(ResourceResolver)\n        protected readonly resolversProvider: ContributionProvider<ResourceResolver>\n    ) { }\n\n    @postConstruct()\n    init(): void {\n        this.resolversProvider.getContributions().sort((a, b) => (b.priority ?? 0) - (a.priority ?? 0));\n    }\n\n    /**\n     * Reject if a resource cannot be provided.\n     */\n    async get(uri: URI): Promise<Resource> {\n        const resolvers = this.resolversProvider.getContributions();\n        for (const resolver of resolvers) {\n            try {\n                return await resolver.resolve(uri);\n            } catch (err) {\n                // no-op\n            }\n        }\n        return Promise.reject(new Error(`A resource provider for '${uri.toString()}' is not registered.`));\n    }\n\n}\n\nexport class MutableResource implements Resource {\n    protected contents: string = '';\n\n    constructor(readonly uri: URI) {\n    }\n\n    dispose(): void { }\n\n    async readContents(): Promise<string> {\n        return this.contents;\n    }\n\n    async saveContents(contents: string): Promise<void> {\n        this.contents = contents;\n        this.fireDidChangeContents();\n    }\n\n    protected readonly onDidChangeContentsEmitter = new Emitter<void>();\n    readonly onDidChangeContents = this.onDidChangeContentsEmitter.event;\n    protected fireDidChangeContents(): void {\n        this.onDidChangeContentsEmitter.fire(undefined);\n    }\n}\nexport class ReferenceMutableResource implements Resource {\n    constructor(protected reference: Reference<MutableResource>) { }\n\n    get uri(): URI {\n        return this.reference.object.uri;\n    }\n\n    get onDidChangeContents(): Event<void> {\n        return this.reference.object.onDidChangeContents;\n    }\n\n    dispose(): void {\n        this.reference.dispose();\n    }\n\n    readContents(): Promise<string> {\n        return this.reference.object.readContents();\n    }\n\n    saveContents(contents: string): Promise<void> {\n        return this.reference.object.saveContents(contents);\n    }\n}\n\n@injectable()\nexport class InMemoryResources implements ResourceResolver {\n\n    protected readonly resources = new SyncReferenceCollection<string, MutableResource>(uri => new MutableResource(new URI(uri)));\n\n    add(uri: URI, contents: string): Resource {\n        const resourceUri = uri.toString();\n        if (this.resources.has(resourceUri)) {\n            throw new Error(`Cannot add already existing in-memory resource '${resourceUri}'`);\n        }\n        const resource = this.acquire(resourceUri);\n        resource.saveContents(contents);\n        return resource;\n    }\n\n    update(uri: URI, contents: string): Resource {\n        const resourceUri = uri.toString();\n        const resource = this.resources.get(resourceUri);\n        if (!resource) {\n            throw new Error(`Cannot update non-existent in-memory resource '${resourceUri}'`);\n        }\n        resource.saveContents(contents);\n        return resource;\n    }\n\n    resolve(uri: URI): Resource {\n        const uriString = uri.toString();\n        if (!this.resources.has(uriString)) {\n            throw new Error(`In memory '${uriString}' resource does not exist.`);\n        }\n        return this.acquire(uriString);\n    }\n\n    protected acquire(uri: string): ReferenceMutableResource {\n        const reference = this.resources.acquire(uri);\n        return new ReferenceMutableResource(reference);\n    }\n}\n\nexport const MEMORY_TEXT = 'mem-txt';\n\n/**\n * Resource implementation for 'mem-txt' URI scheme where content is saved in URI query.\n */\nexport class InMemoryTextResource implements Resource {\n    constructor(readonly uri: URI) { }\n\n    async readContents(options?: { encoding?: string | undefined; } | undefined): Promise<string> {\n        return this.uri.query;\n    }\n    dispose(): void { }\n}\n\n/**\n * ResourceResolver implementation for 'mem-txt' URI scheme.\n */\n@injectable()\nexport class InMemoryTextResourceResolver implements ResourceResolver {\n    resolve(uri: URI): MaybePromise<Resource> {\n        if (uri.scheme !== MEMORY_TEXT) {\n            throw new Error(`Expected a URI with ${MEMORY_TEXT} scheme. Was: ${uri}.`);\n        }\n        return new InMemoryTextResource(uri);\n    }\n}\n\nexport const UNTITLED_SCHEME = 'untitled';\n\nlet untitledResourceSequenceIndex = 0;\n\n@injectable()\nexport class UntitledResourceResolver implements ResourceResolver {\n\n    protected readonly resources = new Map<string, UntitledResource>();\n\n    has(uri: URI): boolean {\n        if (uri.scheme !== UNTITLED_SCHEME) {\n            throw new Error('The given uri is not untitled file uri: ' + uri);\n        } else {\n            return this.resources.has(uri.toString());\n        }\n    }\n\n    async resolve(uri: URI): Promise<UntitledResource> {\n        if (uri.scheme !== UNTITLED_SCHEME) {\n            throw new Error('The given uri is not untitled file uri: ' + uri);\n        } else {\n            const untitledResource = this.resources.get(uri.toString());\n            if (!untitledResource) {\n                return this.createUntitledResource('', '', uri);\n            } else {\n                return untitledResource;\n            }\n        }\n    }\n\n    async createUntitledResource(content?: string, extension?: string, uri?: URI, encoding?: string): Promise<UntitledResource> {\n        if (!uri) {\n            uri = this.createUntitledURI(extension);\n        }\n        return new UntitledResource(this.resources, uri, content, encoding);\n    }\n\n    createUntitledURI(extension?: string, parent?: URI): URI {\n        let counter = 1; // vscode starts at 1\n        let untitledUri;\n        do {\n            const name = `Untitled-${counter}${extension ?? ''}`;\n            if (parent) {\n                untitledUri = parent.resolve(name).withScheme(UNTITLED_SCHEME);\n            }\n            untitledUri = new URI().resolve(name).withScheme(UNTITLED_SCHEME);\n            counter++;\n        } while (this.has(untitledUri));\n        return untitledUri;\n    }\n}\n\nexport class UntitledResource implements Resource {\n\n    protected readonly onDidChangeContentsEmitter = new Emitter<void>();\n    readonly initiallyDirty: boolean;\n    readonly autosaveable = false;\n    readonly encoding: string | undefined;\n    get onDidChangeContents(): Event<void> {\n        return this.onDidChangeContentsEmitter.event;\n    }\n\n    constructor(private resources: Map<string, UntitledResource>, public uri: URI, private content?: string, encoding?: string) {\n        this.initiallyDirty = (content !== undefined && content.length > 0);\n        this.resources.set(this.uri.toString(), this);\n        this.encoding = encoding;\n    }\n\n    dispose(): void {\n        this.resources.delete(this.uri.toString());\n        this.onDidChangeContentsEmitter.dispose();\n    }\n\n    async readContents(options?: { encoding?: string | undefined; } | undefined): Promise<string> {\n        if (this.content) {\n            return this.content;\n        } else {\n            return '';\n        }\n    }\n\n    async saveContents(content: string, options?: { encoding?: string, overwriteEncoding?: boolean }): Promise<void> {\n        // This function must exist to ensure readOnly is false for the Monaco editor.\n        // However it should not be called because saving 'untitled' is always processed as 'Save As'.\n        throw Error('Untitled resources cannot be saved.');\n    }\n\n    protected fireDidChangeContents(): void {\n        this.onDidChangeContentsEmitter.fire(undefined);\n    }\n\n    get version(): ResourceVersion | undefined {\n        return undefined;\n    }\n}\n\n/**\n * @deprecated Since 1.27.0. Please use `UntitledResourceResolver.createUntitledURI` instead.\n */\nexport function createUntitledURI(extension?: string, parent?: URI): URI {\n    const name = `Untitled-${untitledResourceSequenceIndex++}${extension ?? ''}`;\n    if (parent) {\n        return parent.resolve(name).withScheme(UNTITLED_SCHEME);\n    }\n    return new URI().resolve(name).withScheme(UNTITLED_SCHEME);\n}\n","// *****************************************************************************\n// Copyright (C) 2025 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n\nimport { JSONObject, JSONValue } from '@lumino/coreutils';\nimport { PreferenceScope } from './preference-scope';\nimport { PreferenceProvider, PreferenceProviderDataChange, PreferenceProviderDataChanges, PreferenceResolveResult } from './preference-provider';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { PreferenceSchemaService } from './preference-schema';\nimport { Deferred } from '../promise-util';\nimport { PreferenceLanguageOverrideService } from './preference-language-override-service';\nimport { PreferenceProviderBase } from './preference-provider-impl';\n\n// *****************************************************************************\n\n@injectable()\nexport class DefaultsPreferenceProvider extends PreferenceProviderBase implements PreferenceProvider {\n\n    @inject(PreferenceSchemaService)\n    protected readonly preferenceSchemaService: PreferenceSchemaService;\n\n    @inject(PreferenceLanguageOverrideService)\n    protected readonly preferenceOverrideService: PreferenceLanguageOverrideService;\n\n    protected readonly _ready = new Deferred<void>();\n    ready: Promise<void> = this._ready.promise;\n\n    @postConstruct()\n    init(): void {\n        this.toDispose.push(this.preferenceSchemaService.onDidChangeDefaultValue(e => {\n            const changes: PreferenceProviderDataChanges = {};\n            if (e.overrideIdentifier) {\n                changes[e.key] = this.changeFor(e.key, e.overrideIdentifier, e.oldValue, e.newValue);\n            } else {\n                changes[e.key] = this.changeFor(e.key, undefined, e.oldValue, e.newValue);\n                for (const override of e.otherAffectedOverrides) {\n                    const change = this.changeFor(e.key, override, e.oldValue, e.newValue);\n                    changes[change.preferenceName] = change;\n                }\n            }\n            this.emitPreferencesChangedEvent(changes);\n        }));\n        this._ready.resolve();\n    }\n\n    protected changeFor(key: string, overrideIdentifier: string | undefined, oldValue: JSONValue | undefined, newValue: JSONValue | undefined): PreferenceProviderDataChange {\n        const preferenceName = overrideIdentifier ? this.preferenceOverrideService.overridePreferenceName({ preferenceName: key, overrideIdentifier }) : key;\n\n        return {\n            preferenceName: preferenceName,\n            newValue: newValue,\n            oldValue: oldValue,\n            scope: PreferenceScope.Default\n        };\n    }\n\n    canHandleScope(scope: PreferenceScope): boolean {\n        return scope === PreferenceScope.Default;\n    }\n    get<T>(preferenceName: string, resourceUri?: string): T | undefined {\n        const overrideInfo = this.preferenceOverrideService.overriddenPreferenceName(preferenceName);\n        return this.preferenceSchemaService.getDefaultValue(overrideInfo?.preferenceName ?? preferenceName, overrideInfo?.overrideIdentifier) as T;\n    }\n\n    setPreference(key: string, value: JSONValue, resourceUri?: string): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const overrideInfo = this.preferenceOverrideService.overriddenPreferenceName(preferenceName);\n        return {\n            value: this.preferenceSchemaService.inspectDefaultValue(overrideInfo?.preferenceName ?? preferenceName, overrideInfo?.overrideIdentifier) as T,\n            configUri: undefined\n        };\n    }\n\n    getPreferences(): JSONObject {\n        return this.preferenceSchemaService.getDefaultValues();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// copied and modified from https://github.com/TypeFox/vscode/blob/70b8db24a37fafc77247de7f7cb5bb0195120ed0/src/vs/workbench/api/common/extHostLanguageFeatures.ts#L771\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { SignatureHelp, SignatureHelpContext } from '../../common/plugin-api-rpc-model';\n\nexport class SignatureHelpAdapter {\n\n    private idSequence = 1;\n    private readonly cache = new Map<number, theia.SignatureHelp>();\n\n    constructor(\n        private readonly delegate: theia.SignatureHelpProvider,\n        private readonly documents: DocumentsExtImpl) {\n\n    }\n\n    async provideSignatureHelp(resource: URI, position: Position, token: theia.CancellationToken, context: SignatureHelpContext): Promise<SignatureHelp | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There are no document for  ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n        const pluginHelpContext = this.reviveContext(context);\n\n        const value = await this.delegate.provideSignatureHelp(document, zeroBasedPosition, token, pluginHelpContext);\n        if (!value) {\n            return undefined;\n        }\n        value.activeParameter = value.signatures[value.activeSignature].activeParameter ?? value.activeParameter;\n        const id = this.idSequence++;\n        this.cache.set(id, value);\n        return Converter.SignatureHelp.from(id, value);\n    }\n\n    private reviveContext(context: SignatureHelpContext): theia.SignatureHelpContext {\n        let activeSignatureHelp: theia.SignatureHelp | undefined = undefined;\n        if (context.activeSignatureHelp) {\n            const revivedSignatureHelp = Converter.SignatureHelp.to(context.activeSignatureHelp);\n            const saved = typeof context.activeSignatureHelp.id === 'number' && this.cache.get(context.activeSignatureHelp.id);\n            if (saved) {\n                activeSignatureHelp = saved;\n                activeSignatureHelp.activeSignature = revivedSignatureHelp.activeSignature;\n                const { activeSignature } = revivedSignatureHelp;\n                activeSignatureHelp.activeParameter = revivedSignatureHelp.signatures[activeSignature].activeParameter ?? revivedSignatureHelp.activeParameter;\n            } else {\n                activeSignatureHelp = revivedSignatureHelp;\n            }\n        }\n        return { ...context, activeSignatureHelp };\n    }\n\n    releaseSignatureHelp(id: number): void {\n        this.cache.delete(id);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { InlineValue, InlineValueContext, Range } from '../../common/plugin-api-rpc-model';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\n\nexport class InlineValuesAdapter {\n\n    constructor(\n        private readonly provider: theia.InlineValuesProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    async provideInlineValues(resource: URI, range: Range, context: InlineValueContext, token: theia.CancellationToken): Promise<InlineValue[] | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document data for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const viewPort = Converter.toRange(range);\n        const ctx = Converter.toInlineValueContext(context);\n\n        return Promise.resolve(this.provider.provideInlineValues(document, viewPort, ctx, token)).then(inlineValue => {\n            if (!inlineValue) {\n                return undefined;\n            }\n            if (Array.isArray(inlineValue)) {\n                return inlineValue.map(iv => Converter.fromInlineValue(iv));\n            }\n            return undefined;\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/platform/files/common/files.ts\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Event } from '@theia/core/lib/common/event';\nimport { Disposable as IDisposable } from '@theia/core/lib/common/disposable';\nimport { BinaryBuffer, BinaryBufferReadableStream } from '@theia/core/lib/common/buffer';\nimport type { TextDocumentContentChangeEvent } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ReadableStreamEvents } from '@theia/core/lib/common/stream';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { isObject } from '@theia/core/lib/common';\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering';\n\nexport const enum FileOperation {\n    CREATE,\n    DELETE,\n    MOVE,\n    COPY\n}\n\nexport class FileOperationEvent {\n\n    constructor(resource: URI, operation: FileOperation.DELETE);\n    constructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: FileStatWithMetadata);\n    constructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: FileStatWithMetadata) { }\n\n    isOperation(operation: FileOperation.DELETE): boolean;\n    isOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: FileStatWithMetadata };\n    isOperation(operation: FileOperation): boolean {\n        return this.operation === operation;\n    }\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n    UPDATED = 0,\n    ADDED = 1,\n    DELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface FileChange {\n\n    /**\n     * The type of change that occurred to the file.\n     */\n    readonly type: FileChangeType;\n\n    /**\n     * The unified resource identifier of the file that changed.\n     */\n    readonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n    constructor(public readonly changes: readonly FileChange[]) { }\n\n    /**\n     * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n     * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n     * provided file path.\n     */\n    contains(resource: URI, type?: FileChangeType): boolean {\n        if (!resource) {\n            return false;\n        }\n\n        const checkForChangeType = typeof type === 'number';\n\n        return this.changes.some(change => {\n            if (checkForChangeType && change.type !== type) {\n                return false;\n            }\n\n            // For deleted also return true when deleted folder is parent of target path\n            if (change.type === FileChangeType.DELETED) {\n                return change.resource.isEqualOrParent(resource);\n            }\n\n            return change.resource.toString() === resource.toString();\n        });\n    }\n\n    /**\n     * Returns the changes that describe added files.\n     */\n    getAdded(): FileChange[] {\n        return this.getOfType(FileChangeType.ADDED);\n    }\n\n    /**\n     * Returns if this event contains added files.\n     */\n    gotAdded(): boolean {\n        return this.hasType(FileChangeType.ADDED);\n    }\n\n    /**\n     * Returns the changes that describe deleted files.\n     */\n    getDeleted(): FileChange[] {\n        return this.getOfType(FileChangeType.DELETED);\n    }\n\n    /**\n     * Returns if this event contains deleted files.\n     */\n    gotDeleted(): boolean {\n        return this.hasType(FileChangeType.DELETED);\n    }\n\n    /**\n     * Returns the changes that describe updated files.\n     */\n    getUpdated(): FileChange[] {\n        return this.getOfType(FileChangeType.UPDATED);\n    }\n\n    /**\n     * Returns if this event contains updated files.\n     */\n    gotUpdated(): boolean {\n        return this.hasType(FileChangeType.UPDATED);\n    }\n\n    private getOfType(type: FileChangeType): FileChange[] {\n        return this.changes.filter(change => change.type === type);\n    }\n\n    private hasType(type: FileChangeType): boolean {\n        return this.changes.some(change => change.type === type);\n    }\n}\n\nexport interface BaseStat {\n\n    /**\n     * The unified resource identifier of this file or folder.\n     */\n    resource: URI;\n\n    /**\n     * The name which is the last segment\n     * of the {{path}}.\n     */\n    name: string;\n\n    /**\n     * The size of the file.\n     *\n     * The value may or may not be resolved as\n     * it is optional.\n     */\n    size?: number;\n\n    /**\n     * The last modification date represented as millis from unix epoch.\n     *\n     * The value may or may not be resolved as\n     * it is optional.\n     */\n    mtime?: number;\n\n    /**\n     * The creation date represented as millis from unix epoch.\n     *\n     * The value may or may not be resolved as\n     * it is optional.\n     */\n    ctime?: number;\n\n    /**\n     * A unique identifier that represents the\n     * current state of the file or directory.\n     *\n     * The value may or may not be resolved as\n     * it is optional.\n     */\n    etag?: string;\n}\nexport namespace BaseStat {\n    export function is(arg: unknown): arg is BaseStat {\n        return isObject<BaseStat>(arg)\n            && arg.resource instanceof URI\n            && typeof arg.name === 'string';\n    }\n}\n\nexport interface BaseStatWithMetadata extends BaseStat {\n    mtime: number;\n    ctime: number;\n    etag: string;\n    size: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface FileStat extends BaseStat {\n\n    /**\n     * The resource is a file.\n     */\n    isFile: boolean;\n\n    /**\n     * The resource is a directory.\n     */\n    isDirectory: boolean;\n\n    /**\n     * The resource is a symbolic link.\n     */\n    isSymbolicLink: boolean;\n\n    /**\n     * The resource is read only.\n     */\n    isReadonly: boolean;\n\n    /**\n     * The children of the file stat or undefined if none.\n     */\n    children?: FileStat[];\n}\nexport namespace FileStat {\n    export function is(arg: unknown): arg is FileStat {\n        const fileStat = arg as FileStat;\n        return BaseStat.is(fileStat) &&\n            ('isFile' in fileStat && typeof fileStat.isFile === 'boolean') &&\n            ('isDirectory' in fileStat && typeof fileStat.isDirectory === 'boolean') &&\n            ('isSymbolicLink' in fileStat && typeof fileStat.isSymbolicLink === 'boolean');\n    }\n    export function asFileType(stat: FileStat): FileType {\n        let res = 0;\n        if (stat.isFile) {\n            res += FileType.File;\n\n        } else if (stat.isDirectory) {\n            res += FileType.Directory;\n        }\n        if (stat.isSymbolicLink) {\n            res += FileType.SymbolicLink;\n        }\n        return res;\n    }\n    export function toStat(stat: FileStat): Stat | { type: FileType } & Partial<Stat> {\n        return {\n            type: asFileType(stat),\n            ctime: stat.ctime,\n            mtime: stat.mtime,\n            size: stat.size\n        };\n    }\n    export function fromStat(resource: URI, stat: Stat): FileStatWithMetadata;\n    export function fromStat(resource: URI, stat: { type: FileType } & Partial<Stat>): FileStat;\n    export function fromStat(resource: URI, stat: Stat | { type: FileType } & Partial<Stat>): FileStat {\n        return {\n            resource,\n            name: resource.path.base || resource.path.toString(),\n            isFile: (stat.type & FileType.File) !== 0,\n            isDirectory: (stat.type & FileType.Directory) !== 0,\n            isSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n            isReadonly: !!stat.permissions && (stat.permissions & FilePermission.Readonly) !== 0,\n            mtime: stat.mtime,\n            ctime: stat.ctime,\n            size: stat.size,\n            etag: etag({ mtime: stat.mtime, size: stat.size })\n        };\n    }\n    export function dir(resource: string | URI, stat?: Partial<Omit<Stat, 'type'>>): FileStat {\n        return fromStat(resource instanceof URI ? resource : new URI(resource), { type: FileType.Directory, ...stat });\n    }\n    export function file(resource: string | URI, stat?: Partial<Omit<Stat, 'type'>>): FileStat {\n        return fromStat(resource instanceof URI ? resource : new URI(resource), { type: FileType.File, ...stat });\n    }\n}\n\nexport interface FileStatWithMetadata extends FileStat, BaseStatWithMetadata {\n    mtime: number;\n    ctime: number;\n    etag: string;\n    size: number;\n    children?: FileStatWithMetadata[];\n}\n\nexport interface ResolveFileResult {\n    stat?: FileStat;\n    success: boolean;\n}\n\nexport interface ResolveFileResultWithMetadata extends ResolveFileResult {\n    stat?: FileStatWithMetadata;\n}\n\nexport interface FileContent extends BaseStatWithMetadata {\n\n    /**\n     * The content of a file as buffer.\n     */\n    value: BinaryBuffer;\n}\n\nexport interface FileStreamContent extends BaseStatWithMetadata {\n\n    /**\n     * The content of a file as stream.\n     */\n    value: BinaryBufferReadableStream;\n}\n\nexport interface WriteFileOptions {\n\n    /**\n     * The last known modification time of the file. This can be used to prevent dirty writes.\n     */\n    readonly mtime?: number;\n\n    /**\n     * The etag of the file. This can be used to prevent dirty writes.\n     */\n    readonly etag?: string;\n}\n\nexport interface ReadFileOptions extends FileReadStreamOptions {\n\n    /**\n     * The optional etag parameter allows to return early from resolving the resource if\n     * the contents on disk match the etag. This prevents accumulated reading of resources\n     * that have been read already with the same etag.\n     * It is the task of the caller to makes sure to handle this error case from the promise.\n     */\n    readonly etag?: string;\n}\n\nexport interface WriteFileOptions {\n\n    /**\n     * The last known modification time of the file. This can be used to prevent dirty writes.\n     */\n    readonly mtime?: number;\n\n    /**\n     * The etag of the file. This can be used to prevent dirty writes.\n     */\n    readonly etag?: string;\n}\n\nexport interface ResolveFileOptions {\n\n    /**\n     * Automatically continue resolving children of a directory until the provided resources\n     * are found.\n     */\n    readonly resolveTo?: readonly URI[];\n\n    /**\n     * Automatically continue resolving children of a directory if the number of children is 1.\n     */\n    readonly resolveSingleChildDescendants?: boolean;\n\n    /**\n     * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n     * on performance and thus should only be used when these values are required.\n     */\n    readonly resolveMetadata?: boolean;\n}\n\nexport interface ResolveMetadataFileOptions extends ResolveFileOptions {\n    readonly resolveMetadata: true;\n}\n\nexport interface FileOperationOptions {\n    /**\n     * Indicates that a user action triggered the opening, e.g.\n     * via mouse or keyboard use. Default is true.\n     */\n    fromUserGesture?: boolean\n}\n\nexport interface MoveFileOptions extends FileOperationOptions, Partial<FileOverwriteOptions> {\n}\n\nexport interface CopyFileOptions extends FileOperationOptions, Partial<FileOverwriteOptions> {\n}\n\nexport interface CreateFileOptions extends FileOperationOptions, Partial<FileOverwriteOptions> {\n}\n\nexport class FileOperationError extends Error {\n    constructor(message: string, public fileOperationResult: FileOperationResult, public options?: ReadFileOptions & WriteFileOptions & CreateFileOptions) {\n        super(message);\n        Object.setPrototypeOf(this, FileOperationError.prototype);\n    }\n}\n\nexport const enum FileOperationResult {\n    FILE_IS_DIRECTORY,\n    FILE_NOT_FOUND,\n    FILE_NOT_MODIFIED_SINCE,\n    FILE_MODIFIED_SINCE,\n    FILE_MOVE_CONFLICT,\n    FILE_READ_ONLY,\n    FILE_PERMISSION_DENIED,\n    FILE_TOO_LARGE,\n    FILE_INVALID_PATH,\n    FILE_EXCEEDS_MEMORY_LIMIT,\n    FILE_NOT_DIRECTORY,\n    FILE_OTHER_ERROR\n}\n\nexport interface FileOverwriteOptions {\n    /**\n     * Overwrite the file to create if it already exists on disk. Otherwise\n     * an error will be thrown (FILE_MODIFIED_SINCE).\n     */\n    overwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n    /**\n     * Is an integer specifying where to begin reading from in the file. If position is undefined,\n     * data will be read from the current file position.\n     */\n    readonly position?: number;\n\n    /**\n     * Is an integer specifying how many bytes to read from the file. By default, all bytes\n     * will be read.\n     */\n    readonly length?: number;\n\n    /**\n     * If provided, the size of the file will be checked against the limits.\n     */\n    limits?: {\n        readonly size?: number;\n        readonly memory?: number;\n    };\n}\n\nexport interface FileUpdateOptions {\n    readEncoding: string;\n    writeEncoding: string;\n    overwriteEncoding: boolean;\n}\nexport interface FileUpdateResult extends Stat {\n    encoding: string;\n}\n\nexport interface FileWriteOptions {\n    overwrite: boolean;\n    create: boolean;\n}\n\nexport interface FileOpenOptions {\n    create: boolean;\n}\n\nexport interface FileDeleteOptions {\n    recursive: boolean;\n    useTrash: boolean;\n}\n\nexport enum FileType {\n    Unknown = 0,\n    File = 1,\n    Directory = 2,\n    SymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n    /**\n     * File is readonly.\n     */\n    Readonly = 1\n}\n\nexport interface Stat {\n    type: FileType;\n\n    /**\n     * The last modification date represented as millis from unix epoch.\n     */\n    mtime: number;\n\n    /**\n     * The creation date represented as millis from unix epoch.\n     */\n    ctime: number;\n\n    size: number;\n\n    permissions?: FilePermission;\n}\n\nexport interface WatchOptions {\n    recursive: boolean;\n    excludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n    None = 0,\n    FileReadWrite = 1 << 1,\n    FileOpenReadWriteClose = 1 << 2,\n    FileReadStream = 1 << 4,\n\n    FileFolderCopy = 1 << 3,\n\n    PathCaseSensitive = 1 << 10,\n    Readonly = 1 << 11,\n\n    Trash = 1 << 12,\n\n    Access = 1 << 24,\n    Update = 1 << 25\n}\n\nexport enum FileSystemProviderErrorCode {\n    FileExists = 'EntryExists',\n    FileNotFound = 'EntryNotFound',\n    FileNotADirectory = 'EntryNotADirectory',\n    FileIsADirectory = 'EntryIsADirectory',\n    FileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n    FileTooLarge = 'EntryTooLarge',\n    NoPermissions = 'NoPermissions',\n    Unavailable = 'Unavailable',\n    Unknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n    constructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n        super(message);\n        Object.setPrototypeOf(this, FileSystemProviderError.prototype);\n    }\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n    const providerError = new FileSystemProviderError(error.toString(), code);\n    markAsFileSystemProviderError(providerError, code);\n\n    return providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n    if (!error) {\n        return createFileSystemProviderError('Unknown Error', FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n    }\n\n    return error;\n}\n\nexport const FileSystemProvider = Symbol('FileSystemProvider');\n/**\n * A {@link FileSystemProvider} provides the capabilities to read, write, discover, and to manage files and folders\n * of the underlying (potentially virtual) file system. {@link FileSystemProvider}s can be used to serve files from both the\n * local disk as well as remote locations like ftp-servers, REST-services etc. A {@link FileSystemProvider} is registered for a certain\n * scheme and can handle all resources whose uri does conform to that scheme.\n */\nexport interface FileSystemProvider {\n\n    /** The {@link FileSystemProviderCapabilities} for this provider. */\n    readonly capabilities: FileSystemProviderCapabilities;\n\n    /** * Event that is fired if the capabilities of this provider have changed. */\n    readonly onDidChangeCapabilities: Event<void>;\n\n    /** Event that is fired if a (watched) file in the filesystem of this provider has changed. */\n    readonly onDidChangeFile: Event<readonly FileChange[]>;\n\n    /** Event that is fired if an error occurred when watching files in the filesystem of this provider. */\n    readonly onFileWatchError: Event<void>;\n\n    /**\n     * Watch the given resource and react to changes by firing the {@link FileSystemProvider#onDidChangeFile} event.\n     * @param resource `URI` of the resource to be watched.\n     * @param opts Options to define if the resource should be watched recursively and to\n     *  provide a set of resources that should be excluded from watching.\n     *\n     * @returns A `Disposable` that can be invoked to stop watching the resource.\n     */\n    watch(resource: URI, opts: WatchOptions): IDisposable;\n\n    /**\n     * Retrieve metadata about a given file.\n     *\n     * @param uri The `URI` of the file to retrieve meta data about.\n     * @returns A promise of the metadata about the resource.\n     */\n    stat(resource: URI): Promise<Stat>;\n\n    /**\n     * Create a new directory using the given resource uri.\n     * @param resource The `URI` of the new folder.\n     */\n    mkdir(resource: URI): Promise<void>;\n\n    /**\n     * Retrieve the content of a given directory.\n     * @param resource The `URI` of the directory.\n     *\n     * @returns A map containing the {@link FileType} for each child resource, identified by name.\n     */\n    readdir(resource: URI): Promise<[string, FileType][]>;\n\n    /**\n     * Delete the given resource.\n     * @param resource The `URI` of the resource to delete.\n     * @param opts Options to define if files should be deleted recursively and if the trash should be used.\n     */\n    delete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n    /**\n     * Rename a file or folder.\n     * @param from `URI` of the existing file or folder.\n     * @param to `URI` of the target location.\n     * @param opts Options to define if existing files should be overwritten.\n     */\n    rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithFileFolderCopyCapability}.\n     * See {@link FileSystemProviderWithFileFolderCopyCapability#copy}} for additional documentation.\n     */\n    copy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithFileReadWriteCapability}.\n     * See {@link FileSystemProviderWithFileReadWriteCapability#readFile} for additional documentation.\n     */\n    readFile?(resource: URI): Promise<Uint8Array>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithFileReadWriteCapability}.\n     * See {@link FileSystemProviderWithFileReadWriteCapability#writeFile} for additional documentation.\n     */\n    writeFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithFileReadStreamCapability}.\n     * See {@link FileSystemProviderWithFileReadStreamCapability#readFileStream} for additional documentation.\n     */\n    readFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithOpenReadWriteCloseCapability}.\n     * See {@link FileSystemProviderWithOpenReadWriteCloseCapability#open} for additional documentation.\n     */\n    open?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithOpenReadWriteCloseCapability}.\n     * See {@link FileSystemProviderWithOpenReadWriteCloseCapability#close} for additional documentation.\n     */\n    close?(fd: number): Promise<void>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithOpenReadWriteCloseCapability}.\n     * See {@link FileSystemProviderWithOpenReadWriteCloseCapability#read} for additional documentation.\n     */\n    read?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithOpenReadWriteCloseCapability}.\n     * See {@link FileSystemProviderWithOpenReadWriteCloseCapability#write} for additional documentation.\n     */\n    write?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithAccessCapability}.\n     * See {@link FileSystemProviderWithAccessCapability#access} for additional documentation.\n     */\n    access?(resource: URI, mode?: number): Promise<void>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithAccessCapability}.\n     * See {@link FileSystemProviderWithAccessCapability#fsPath} for additional documentation.\n     */\n    fsPath?(resource: URI): Promise<string>;\n\n    /**\n     * Optional function that has to be implemented by {@link FileSystemProviderWithUpdateCapability}.\n     * See {@link FileSystemProviderWithUpdateCapability#updateFile} for additional documentation.\n     */\n    updateFile?(resource: URI, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult>;\n}\n\n/**\n * Subtype of {@link FileSystemProvider} that ensures that the optional functions needed for providers, that should be\n * able access files, are implemented.\n */\nexport interface FileSystemProviderWithAccessCapability extends FileSystemProvider {\n    /**\n     * Tests a user's permissions for the file or directory specified by URI.\n     * @param resource The `URI` of the file that should be tested.\n     * @param mode An optional integer that specifies the accessibility checks to be performed.\n     *      Check `FileAccess.Constants` for possible values of mode.\n     *      It is possible to create a mask consisting of the bitwise `OR` of two or more values (e.g. FileAccess.Constants.W_OK | FileAccess.Constants.R_OK).\n     *      If `mode` is not defined, `FileAccess.Constants.F_OK` will be used instead.\n     *\n     * @returns A promise that resolves if the user has the required permissions, should be rejected otherwise.\n     */\n    access(resource: URI, mode?: number): Promise<void>;\n\n    /**\n     * Returns the path of the given file URI, specific to the backend's operating system.\n     * If the URI is not a file URI, undefined is returned.\n     *\n     * USE WITH CAUTION: You should always prefer URIs to paths if possible, as they are\n     * portable and platform independent. Paths should only be used in cases you directly\n     * interact with the OS, e.g. when running a command on the shell.\n     *\n     * @param resource `URI` of the resource to derive the path from.\n     *\n     * @returns A promise of the corresponding file system path.\n     */\n    fsPath(resource: URI): Promise<string>;\n}\n\nexport function hasAccessCapability(provider: FileSystemProvider): provider is FileSystemProviderWithAccessCapability {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.Access);\n}\n\n/**\n * Subtype of {@link FileSystemProvider} that ensures that the optional functions needed, for providers that should be\n * able to update (text) files, are implemented.\n */\nexport interface FileSystemProviderWithUpdateCapability extends FileSystemProvider {\n    /**\n     * Update the content of the given (text) file according to the given text document changes.\n     * @param resource `URI` of the resource to update.\n     * @param changes Array of events describing the changes to the file.\n     * @param opts The encoding options.\n     *\n     * @returns A promise of the file metadata that resolves after the update process has completed.\n     */\n    updateFile(resource: URI, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult>;\n}\n\nexport function hasUpdateCapability(provider: FileSystemProvider): provider is FileSystemProviderWithUpdateCapability {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.Update);\n}\n\nexport interface ReadOnlyMessageFileSystemProvider {\n    readOnlyMessage: MarkdownString | undefined;\n    readonly onDidChangeReadOnlyMessage: Event<MarkdownString | undefined>;\n}\n\nexport namespace ReadOnlyMessageFileSystemProvider {\n    export function is(arg: unknown): arg is ReadOnlyMessageFileSystemProvider {\n        return isObject<ReadOnlyMessageFileSystemProvider>(arg)\n            && 'readOnlyMessage' in arg;\n    }\n}\n\n/**\n * Subtype of {@link FileSystemProvider} that ensures that the optional functions, needed for providers\n * that should be able to read & write files, are implemented.\n */\nexport interface FileSystemProviderWithFileReadWriteCapability extends FileSystemProvider {\n    /**\n     * Read the contents of the given file as stream.\n     * @param resource The `URI` of the file.\n     *\n     * @return The `ReadableStreamEvents` for the readable stream of the given file.\n     */\n    readFile(resource: URI): Promise<Uint8Array>;\n\n    /**\n     *  Write data to a file, replacing its entire contents.\n     * @param resource The uri of the file.\n     * @param content The new content of the file.\n     * @param opts Options to define if the file should be created if missing and if an existing file should be overwritten.\n     */\n    writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: FileSystemProvider): provider is FileSystemProviderWithFileReadWriteCapability {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\n/**\n * Subtype of {@link FileSystemProvider} that ensures that the optional functions, needed for providers that should be able to copy\n * file folders, are implemented.\n */\nexport interface FileSystemProviderWithFileFolderCopyCapability extends FileSystemProvider {\n    /**\n     * Copy files or folders.\n     * @param from `URI` of the existing file or folder.\n     * @param to `URI` of the destination location.\n     * @param opts Options to define if existing files should be overwritten.\n     */\n    copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: FileSystemProvider): provider is FileSystemProviderWithFileFolderCopyCapability {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\n/**\n * Subtype of {@link FileSystemProvider} that ensures that the optional functions, needed for providers that should be able to open,read, write\n * or close files, are implemented.\n */\nexport interface FileSystemProviderWithOpenReadWriteCloseCapability extends FileSystemProvider {\n    /**\n     * Open the give file.\n     * @param resource The `URI` of the file to open.\n     * @param opts Options to define if the file should be created if it does not exist yet.\n     *\n     * @returns A promise of the file descriptor that resolves after the file is open.\n     */\n    open(resource: URI, opts: FileOpenOptions): Promise<number>;\n\n    /**\n     * Close the file with the given file descriptor.\n     * @param fd the file descriptor to close.\n     */\n    close(fd: number): Promise<void>;\n\n    /**\n     * Read specified content from a given file descriptor into a data buffer.\n     * @param fd The file descriptor referencing the file to read from.\n     * @param pos The offset from the beginning of the file from which data should be read.\n     * @param data The buffer that the data will be written to.\n     * @param offset The offset in the buffer at which to start writing.\n     * @param length The number of bytes to read.\n     *\n     * @returns A promise of the number of bytes read.\n     */\n    read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n    /**\n     * Write specified content from the data buffer to the file referenced by the given file descriptor.\n     * @param fd The file descriptor referencing the file to write to.\n     * @param pos The offset from the beginning of the file where this data should be written.\n     * @param offset The part of the buffer to be read from.\n     * @param length The number of bytes to write.\n     *\n     * @returns A promise of the number of bytes written.\n     */\n    write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: FileSystemProvider): provider is FileSystemProviderWithOpenReadWriteCloseCapability {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\n/**\n * Subtype of {@link FileSystemProvider} that ensures that the optional functions, needed for providers that should be able to read\n * files as streams, are implemented.\n */\nexport interface FileSystemProviderWithFileReadStreamCapability extends FileSystemProvider {\n    /**\n     * Read the contents of the given file as stream.\n     * @param resource The `URI` of the file.\n     *\n     * @return The `ReadableStreamEvents` for the readable stream of the given file.\n     */\n    readFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: FileSystemProvider): provider is FileSystemProviderWithFileReadStreamCapability {\n    return !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n    error.name = code ? `${code} (FileSystemError)` : 'FileSystemError';\n\n    return error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n    // Guard against abuse\n    if (!error) {\n        return FileSystemProviderErrorCode.Unknown;\n    }\n\n    // FileSystemProviderError comes with the code\n    if (error instanceof FileSystemProviderError) {\n        return error.code;\n    }\n\n    // Any other error, check for name match by assuming that the error\n    // went through the markAsFileSystemProviderError() method\n    const match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n    if (!match) {\n        return FileSystemProviderErrorCode.Unknown;\n    }\n\n    switch (match[1]) {\n        case FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n        case FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n        case FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n        case FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n        case FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n        case FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n        case FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n        case FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n    }\n\n    return FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n    // FileSystemProviderError comes with the result already\n    if (error instanceof FileOperationError) {\n        return error.fileOperationResult;\n    }\n\n    // Otherwise try to find from code\n    switch (toFileSystemProviderErrorCode(error)) {\n        case FileSystemProviderErrorCode.FileNotFound:\n            return FileOperationResult.FILE_NOT_FOUND;\n        case FileSystemProviderErrorCode.FileIsADirectory:\n            return FileOperationResult.FILE_IS_DIRECTORY;\n        case FileSystemProviderErrorCode.FileNotADirectory:\n            return FileOperationResult.FILE_NOT_DIRECTORY;\n        case FileSystemProviderErrorCode.NoPermissions:\n            return FileOperationResult.FILE_PERMISSION_DENIED;\n        case FileSystemProviderErrorCode.FileExists:\n            return FileOperationResult.FILE_MOVE_CONFLICT;\n        case FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n            return FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n        case FileSystemProviderErrorCode.FileTooLarge:\n            return FileOperationResult.FILE_TOO_LARGE;\n        default:\n            return FileOperationResult.FILE_OTHER_ERROR;\n    }\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n    if (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n        return undefined;\n    }\n\n    return stat.mtime.toString(29) + stat.size.toString(31);\n}\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class BinarySize {\n    static readonly KB = 1024;\n    static readonly MB = BinarySize.KB * BinarySize.KB;\n    static readonly GB = BinarySize.MB * BinarySize.KB;\n    static readonly TB = BinarySize.GB * BinarySize.KB;\n\n    static formatSize(size: number): string {\n        if (size < BinarySize.KB) {\n            return size + 'B';\n        }\n        if (size < BinarySize.MB) {\n            return (size / BinarySize.KB).toFixed(2) + 'KB';\n        }\n        if (size < BinarySize.GB) {\n            return (size / BinarySize.MB).toFixed(2) + 'MB';\n        }\n        if (size < BinarySize.TB) {\n            return (size / BinarySize.GB).toFixed(2) + 'GB';\n        }\n        return (size / BinarySize.TB).toFixed(2) + 'TB';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { ModelChangedEvent, DocumentsMain } from '../common/plugin-api-rpc';\nimport { Range as ARange } from '../common/plugin-api-rpc-model';\nimport { EndOfLine, Position, Range, URI } from './types-impl';\nimport { ok } from '../common/assert';\nimport { PrefixSumComputer } from './prefix-sum-computer';\nimport { getWordAtText, ensureValidWordDefinition } from './word-helper';\n\nconst _modeId2WordDefinition = new Map<string, RegExp | null>();\nexport function setWordDefinitionFor(modeId: string, wordDefinition: RegExp | null): void {\n    _modeId2WordDefinition.set(modeId, wordDefinition);\n}\nexport function getWordDefinitionFor(modeId: string): RegExp {\n    return _modeId2WordDefinition.get(modeId)!;\n}\n\nexport class DocumentDataExt {\n\n    private disposed = false;\n    private dirty: boolean;\n    private encoding: string;\n    private _document: theia.TextDocument;\n    private textLines = new Array<theia.TextLine>();\n    private lineStarts: PrefixSumComputer | undefined;\n\n    constructor(private proxy: DocumentsMain, private uri: URI, private lines: string[], private eol: string,\n        private languageId: string, private versionId: number, isDirty: boolean, encoding: string) {\n        this.dirty = isDirty;\n        this.encoding = encoding;\n    }\n\n    dispose(): void {\n        ok(!this.disposed);\n        this.dirty = false;\n        this.disposed = true;\n    }\n\n    onEvents(e: ModelChangedEvent): void {\n        if (e.eol && e.eol !== this.eol) {\n            this.eol = e.eol;\n            this.lineStarts = undefined;\n        }\n\n        // Update my lines\n        const changes = e.changes;\n        // tslint:disable-next-line:one-variable-per-declaration\n        for (let i = 0, len = changes.length; i < len; i++) {\n            const change = changes[i];\n            this.acceptDeleteRange(change.range);\n            this.acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n\n        this.versionId = e.versionId;\n    }\n    acceptIsDirty(isDirty: boolean): void {\n        ok(!this.disposed);\n        this.dirty = isDirty;\n    }\n    acceptLanguageId(langId: string): void {\n        ok(!this.disposed);\n        this.languageId = langId;\n    }\n    acceptEncoding(encoding: string): void {\n        ok(!this.disposed);\n        this.encoding = encoding;\n    }\n    get document(): theia.TextDocument {\n        if (!this._document) {\n            const that = this;\n            this._document = {\n                get uri(): theia.Uri { return that.uri; },\n                get fileName(): string { return that.uri.fsPath; },\n                get isUntitled(): boolean { return that.uri.scheme === 'untitled'; },\n                get languageId(): string { return that.languageId; },\n                get version(): number { return that.versionId; },\n                get isClosed(): boolean { return that.disposed; },\n                get isDirty(): boolean { return that.dirty; },\n                get encoding(): string { return that.encoding; },\n                save(): Promise<boolean> { return that.save(); },\n                getText(range?): string { return range ? that.getTextInRange(range) : that.getText(); },\n                get eol(): theia.EndOfLine { return that.eol === '\\n' ? EndOfLine.LF : EndOfLine.CRLF; },\n                get lineCount(): number { return that.lines.length; },\n                lineAt(lineOrPos: number | theia.Position): theia.TextLine { return that.lineAt(lineOrPos); },\n                offsetAt(pos): number { return that.offsetAt(pos); },\n                positionAt(offset): theia.Position { return that.positionAt(offset); },\n                validateRange(ran): theia.Range { return that.validateRange(ran); },\n                validatePosition(pos): theia.Position { return that.validatePosition(pos); },\n                getWordRangeAtPosition(pos, regexp?): theia.Range | undefined { return that.getWordRangeAtPosition(pos, regexp); }\n            };\n        }\n        return Object.freeze(this._document);\n    }\n\n    private acceptInsertText(position: Position, insertText: string): void {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this.setLineText(position.line - 1,\n                this.lines[position.line - 1].substring(0, position.character - 1)\n                + insertLines[0]\n                + this.lines[position.line - 1].substring(position.character - 1)\n            );\n            return;\n        }\n\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this.lines[position.line - 1].substring(position.character - 1);\n\n        // Delete overflowing text from first line and insert text on first line\n        this.setLineText(position.line - 1,\n            this.lines[position.line - 1].substring(0, position.character - 1)\n            + insertLines[0]\n        );\n\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this.lines.splice(position.line + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this.eol.length;\n        }\n\n        if (this.lineStarts) {\n            // update prefix sum\n            this.lineStarts.insertValues(position.line, newLengths);\n        }\n    }\n\n    private acceptDeleteRange(range: ARange): void {\n\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this.setLineText(range.startLineNumber - 1,\n                this.lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this.lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n            );\n            return;\n        }\n\n        // Take remaining text on last line and append it to remaining text on first line\n        this.setLineText(range.startLineNumber - 1,\n            this.lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this.lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n        );\n\n        // Delete middle lines\n        this.lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this.lineStarts) {\n            this.lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n\n    private setLineText(lineIndex: number, newValue: string): void {\n        this.lines[lineIndex] = newValue;\n        if (this.lineStarts) {\n            this.lineStarts.changeValue(lineIndex, this.lines[lineIndex].length + this.eol.length);\n        }\n    }\n\n    private save(): Promise<boolean> {\n        if (this.disposed) {\n            return Promise.reject(new Error('Document is closed'));\n        }\n        return this.proxy.$trySaveDocument(this.uri);\n    }\n\n    private getTextInRange(_range: theia.Range): string {\n        const range = this.validateRange(_range);\n\n        if (range.isEmpty) {\n            return '';\n        }\n\n        if (range.isSingleLine) {\n            return this.lines[range.start.line].substring(range.start.character, range.end.character);\n        }\n\n        const lineEnding = this.eol;\n        const startLineIndex = range.start.line;\n        const endLineIndex = range.end.line;\n        const resultLines: string[] = [];\n\n        resultLines.push(this.lines[startLineIndex].substring(range.start.character));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this.lines[i]);\n        }\n        resultLines.push(this.lines[endLineIndex].substring(0, range.end.character));\n\n        return resultLines.join(lineEnding);\n    }\n\n    private validateRange(range: theia.Range): theia.Range {\n        if (!(range instanceof Range)) {\n            throw new Error('Invalid argument');\n        }\n\n        const start = this.validatePosition(range.start);\n        const end = this.validatePosition(range.end);\n\n        if (start === range.start && end === range.end) {\n            return range;\n        }\n        return new Range(start.line, start.character, end.line, end.character);\n    }\n\n    private getText(): string {\n        return this.lines.join(this.eol);\n    }\n\n    private validatePosition(position: theia.Position): theia.Position {\n        if (!(position instanceof Position)) {\n            throw new Error('Invalid argument');\n        }\n\n        let { line, character } = position;\n        let hasChanged = false;\n\n        if (line < 0) {\n            line = 0;\n            character = 0;\n            hasChanged = true;\n        } else if (line >= this.lines.length) {\n            line = this.lines.length - 1;\n            character = this.lines[line].length;\n            hasChanged = true;\n        } else {\n            const maxCharacter = this.lines[line].length;\n            if (character < 0) {\n                character = 0;\n                hasChanged = true;\n            } else if (character > maxCharacter) {\n                character = maxCharacter;\n                hasChanged = true;\n            }\n        }\n\n        if (!hasChanged) {\n            return position;\n        }\n        return new Position(line, character);\n    }\n\n    private lineAt(lineOrPosition: number | theia.Position): theia.TextLine {\n\n        let line: number = -1;\n        if (lineOrPosition instanceof Position) {\n            line = lineOrPosition.line;\n        } else if (typeof lineOrPosition === 'number') {\n            line = lineOrPosition;\n        }\n\n        if (line < 0 || line >= this.lines.length) {\n            throw new Error('Illegal value for `line`');\n        }\n\n        let result = this.textLines[line];\n        if (!result || result.lineNumber !== line || result.text !== this.lines[line]) {\n\n            const text = this.lines[line];\n            const firstNonWhitespaceCharacterIndex = /^(\\s*)/.exec(text)![1].length;\n            const range = new Range(line, 0, line, text.length);\n            const rangeIncludingLineBreak = line < this.lines.length - 1\n                ? new Range(line, 0, line + 1, 0)\n                : range;\n\n            result = Object.freeze({\n                lineNumber: line,\n                range,\n                rangeIncludingLineBreak,\n                text,\n                firstNonWhitespaceCharacterIndex,\n                isEmptyOrWhitespace: firstNonWhitespaceCharacterIndex === text.length\n            });\n\n            this.textLines[line] = result;\n        }\n\n        return result;\n    }\n\n    private offsetAt(position: theia.Position): number {\n        position = this.validatePosition(position);\n        this.ensureLineStarts();\n        return this.lineStarts!.getAccumulatedValue(position.line - 1) + position.character;\n    }\n\n    private ensureLineStarts(): void {\n        if (!this.lineStarts) {\n            const eolLength = this.eol.length;\n            const linesLength = this.lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this.lines[i].length + eolLength;\n            }\n            this.lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n\n    private positionAt(offset: number): theia.Position {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n\n        this.ensureLineStarts();\n        const out = this.lineStarts!.getIndexOf(offset);\n\n        const lineLength = this.lines[out.index].length;\n\n        return new Position(out.index, Math.min(out.remainder, lineLength));\n    }\n\n    private getWordRangeAtPosition(_position: theia.Position, regexp?: RegExp): theia.Range | undefined {\n        const position = this.validatePosition(_position);\n\n        if (!regexp) {\n            // use default when custom-regexp isn't provided\n            regexp = getWordDefinitionFor(this.languageId);\n\n        } else if (regExpLeadsToEndlessLoop(regexp)) {\n            // use default when custom-regexp is bad\n            console.warn(`[getWordRangeAtPosition]: ignoring custom regexp '${regexp.source}' because it matches the empty string.`);\n            regexp = getWordDefinitionFor(this.languageId);\n        }\n\n        const wordAtText = getWordAtText(\n            position.character + 1,\n            ensureValidWordDefinition(regexp),\n            this.lines[position.line],\n            0\n        );\n\n        if (wordAtText) {\n            return new Range(position.line, wordAtText.startColumn - 1, position.line, wordAtText.endColumn - 1);\n        }\n        return undefined;\n    }\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (match && <any>regexp.lastIndex === 0)!;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '../common/uri';\n\n/**\n * An endpoint provides URLs for http and ws, based on configuration and defaults.\n */\nexport class Endpoint {\n    static readonly PROTO_HTTPS: string = 'https:';\n    static readonly PROTO_HTTP: string = 'http:';\n    static readonly PROTO_WS: string = 'ws:';\n    static readonly PROTO_WSS: string = 'wss:';\n    static readonly PROTO_FILE: string = 'file:';\n\n    constructor(\n        protected readonly options: Endpoint.Options = {},\n        protected readonly location: Endpoint.Location = self.location\n    ) { }\n\n    getWebSocketUrl(): URI {\n        return new URI(`${this.wsScheme}//${this.host}${this.pathname}${this.path}`);\n    }\n\n    getRestUrl(): URI {\n        return new URI(`${this.httpScheme}//${this.host}${this.pathname}${this.path}`);\n    }\n\n    protected get pathname(): string {\n        if (this.location.protocol === Endpoint.PROTO_FILE) {\n            return '';\n        }\n        if (this.location.pathname === '/') {\n            return '';\n        }\n        if (this.location.pathname.endsWith('/')) {\n            return this.location.pathname.substring(0, this.location.pathname.length - 1);\n        }\n        return this.location.pathname;\n    }\n\n    get host(): string {\n        if (this.options.host) {\n            return this.options.host;\n        }\n        if (this.location.host) {\n            return this.location.host;\n        }\n        return 'localhost:' + this.port;\n    }\n\n    get origin(): string {\n        return `${this.httpScheme}//${this.host}`;\n    }\n\n    protected get port(): string {\n        return this.getSearchParam('port', '3000');\n    }\n\n    protected getSearchParam(name: string, defaultValue: string): string {\n        const search = this.location.search;\n        if (!search) {\n            return defaultValue;\n        }\n        return search.substring(1).split('&')\n            .filter(value => value.startsWith(name + '='))\n            .map(value => {\n                const encoded = value.substring(name.length + 1);\n                return decodeURIComponent(encoded);\n            })[0] || defaultValue;\n    }\n\n    protected get wsScheme(): string {\n        if (this.options.wsScheme) {\n            return this.options.wsScheme;\n        }\n        return this.httpScheme === Endpoint.PROTO_HTTPS ? Endpoint.PROTO_WSS : Endpoint.PROTO_WS;\n    }\n\n    /**\n     * The HTTP/HTTPS scheme of the endpoint, or the user defined one.\n     * See: `Endpoint.Options.httpScheme`.\n     */\n    get httpScheme(): string {\n        if (this.options.httpScheme) {\n            return this.options.httpScheme;\n        }\n        if (this.location.protocol === Endpoint.PROTO_HTTP ||\n            this.location.protocol === Endpoint.PROTO_HTTPS) {\n            return this.location.protocol;\n        }\n        return Endpoint.PROTO_HTTP;\n    }\n\n    protected get path(): string {\n        if (this.options.path) {\n            if (this.options.path.startsWith('/')) {\n                return this.options.path;\n            } else {\n                return '/' + this.options.path;\n            }\n        }\n        return '';\n    }\n}\n\nexport namespace Endpoint {\n    export class Options {\n        host?: string;\n        wsScheme?: string;\n        httpScheme?: string;\n        path?: string;\n    }\n\n    // Necessary for running tests with dependency on TS lib on node\n    // FIXME figure out how to mock with ts-node\n    export class Location {\n        host: string;\n        pathname: string;\n        search: string;\n        protocol: string;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as types from '../types-impl';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { Definition, LocationLink, Location } from '../../common/plugin-api-rpc-model';\nimport { isDefinitionLinkArray, isLocationArray } from './util';\n\nexport class TypeDefinitionAdapter {\n\n    constructor(\n        private readonly provider: theia.TypeDefinitionProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideTypeDefinition(resource: URI, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideTypeDefinition(document, zeroBasedPosition, token)).then(definition => {\n            if (!definition) {\n                return undefined;\n            }\n\n            if (definition instanceof types.Location) {\n                return Converter.fromLocation(definition);\n            }\n\n            if (isLocationArray(definition)) {\n                const locations: Location[] = [];\n\n                for (const location of definition) {\n                    locations.push(Converter.fromLocation(location));\n                }\n\n                return locations;\n            }\n\n            if (isDefinitionLinkArray(definition)) {\n                const definitionLinks: LocationLink[] = [];\n\n                for (const definitionLink of definition) {\n                    definitionLinks.push(Converter.fromDefinitionLink(definitionLink));\n                }\n\n                return definitionLinks;\n            }\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// copied from https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/extensions/node/rpcProtocol.ts\n// with small modifications\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Channel, Disposable, DisposableCollection, isObject, ReadBuffer, RpcProtocol, URI, WriteBuffer } from '@theia/core';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { MessageProvider } from '@theia/core/lib/common/message-rpc/channel';\nimport { Uint8ArrayReadBuffer, Uint8ArrayWriteBuffer } from '@theia/core/lib/common/message-rpc/uint8-array-message-buffer';\nimport { MsgPackExtensionManager } from '@theia/core/lib/common/message-rpc/msg-pack-extension-manager';\nimport { URI as VSCodeURI } from '@theia/core/shared/vscode-uri';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { Range, Position } from '../plugin/types-impl';\n\nexport interface MessageConnection {\n    send(msg: string): void;\n    onMessage: Event<string>;\n}\n\nexport const RPCProtocol = Symbol.for('RPCProtocol');\nexport interface RPCProtocol extends Disposable {\n    /**\n     * Returns a proxy to an object addressable/named in the plugin process or in the main process.\n     */\n    getProxy<T>(proxyId: ProxyIdentifier<T>): T;\n\n    /**\n     * Register manually created instance.\n     */\n    set<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R;\n\n}\n\nexport class ProxyIdentifier<T> {\n    public readonly id: string;\n    constructor(public readonly isMain: boolean, id: string | T) {\n        // TODO this is nasty, rewrite this\n        this.id = (id as any).toString();\n    }\n}\n\nexport function createProxyIdentifier<T>(identifier: string): ProxyIdentifier<T> {\n    return new ProxyIdentifier(false, identifier);\n}\n\nexport interface ConnectionClosedError extends Error {\n    code: 'RPC_PROTOCOL_CLOSED'\n}\nexport namespace ConnectionClosedError {\n    const code: ConnectionClosedError['code'] = 'RPC_PROTOCOL_CLOSED';\n    export function create(message: string = 'connection is closed'): ConnectionClosedError {\n        return Object.assign(new Error(message), { code });\n    }\n    export function is(error: unknown): error is ConnectionClosedError {\n        return isObject(error) && 'code' in error && (error as ConnectionClosedError).code === code;\n    }\n}\n\nexport class RPCProtocolImpl implements RPCProtocol {\n    private readonly locals = new Map<string, any>();\n    private readonly proxies = new Map<string, any>();\n    private readonly rpc: RpcProtocol;\n\n    private readonly toDispose = new DisposableCollection(\n        Disposable.create(() => { /* mark as no disposed */ })\n    );\n\n    constructor(channel: Channel) {\n        this.rpc = new RpcProtocol(new BatchingChannel(channel), (method, args) => this.handleRequest(method, args));\n        this.rpc.onNotification((evt: { method: string; args: any[]; }) => this.handleNotification(evt.method, evt.args));\n        this.toDispose.push(Disposable.create(() => this.proxies.clear()));\n    }\n\n    handleNotification(method: any, args: any[]): void {\n        const serviceId = args[0] as string;\n        const handler: any = this.locals.get(serviceId);\n        if (!handler) {\n            throw new Error(`no local service handler with id ${serviceId}`);\n        }\n        handler[method](...(args.slice(1)));\n    }\n\n    handleRequest(method: string, args: any[]): Promise<any> {\n        const serviceId = args[0] as string;\n        const handler: any = this.locals.get(serviceId);\n        if (!handler) {\n            throw new Error(`no local service handler with id ${serviceId}`);\n        }\n        return handler[method](...(args.slice(1)));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    protected get isDisposed(): boolean {\n        return this.toDispose.disposed;\n    }\n\n    getProxy<T>(proxyId: ProxyIdentifier<T>): T {\n        if (this.isDisposed) {\n            throw ConnectionClosedError.create();\n        }\n        let proxy = this.proxies.get(proxyId.id);\n        if (!proxy) {\n            proxy = this.createProxy(proxyId.id);\n            this.proxies.set(proxyId.id, proxy);\n        }\n        return proxy;\n    }\n\n    protected createProxy<T>(proxyId: string): T {\n        const handler = {\n            get: (target: any, name: string, receiver: any): any => {\n                if (target[name] || name.charCodeAt(0) !== 36 /* CharCode.DollarSign */) {\n                    // not a remote property\n                    return target[name];\n                }\n                const isNotify = this.isNotification(name);\n                return async (...args: any[]) => {\n                    const method = name.toString();\n                    if (isNotify) {\n                        this.rpc.sendNotification(method, [proxyId, ...args]);\n                    } else {\n                        return await this.rpc.sendRequest(method, [proxyId, ...args]) as Promise<any>;\n                    }\n                };\n            }\n\n        };\n        return new Proxy(Object.create(null), handler);\n    }\n\n    /**\n     * Return whether the given property represents a notification. If true,\n     * the promise returned from the invocation will resolve immediately to `undefined`\n     *\n     * A property leads to a notification rather than a method call if its name\n     * begins with `notify` or `on`.\n     *\n     * @param p - The property being called on the proxy.\n     * @return Whether `p` represents a notification.\n     */\n    protected isNotification(p: PropertyKey): boolean {\n        let propertyString = p.toString();\n        if (propertyString.charCodeAt(0) === 36/* CharCode.DollarSign */) {\n            propertyString = propertyString.substring(1);\n        }\n        return propertyString.startsWith('notify') || propertyString.startsWith('on');\n    }\n\n    set<T, R extends T>(identifier: ProxyIdentifier<T>, instance: R): R {\n        if (this.isDisposed) {\n            throw ConnectionClosedError.create();\n        }\n        if (!this.locals.has(identifier.id)) {\n            this.locals.set(identifier.id, instance);\n            if (Disposable.is(instance)) {\n                this.toDispose.push(instance);\n            }\n            this.toDispose.push(Disposable.create(() => this.locals.delete(identifier.id)));\n        }\n        return instance;\n    }\n}\n\n/**\n * Wraps and underlying channel to send/receive multiple messages in one go:\n *  - multiple messages to be sent from one stack get sent in bulk at `process.nextTick`.\n *  - each incoming message is handled in a separate `process.nextTick`.\n */\nexport class BatchingChannel implements Channel {\n    protected messagesToSend: Uint8Array[] = [];\n\n    constructor(protected underlyingChannel: Channel) {\n        underlyingChannel.onMessage(msg => this.handleMessages(msg()));\n    }\n\n    protected onMessageEmitter: Emitter<MessageProvider> = new Emitter();\n    get onMessage(): Event<MessageProvider> {\n        return this.onMessageEmitter.event;\n    };\n\n    readonly onClose = this.underlyingChannel.onClose;\n    readonly onError = this.underlyingChannel.onError;\n\n    close(): void {\n        this.underlyingChannel.close();\n        this.onMessageEmitter.dispose();\n        this.messagesToSend = [];\n    }\n\n    getWriteBuffer(): WriteBuffer {\n        const writer = new Uint8ArrayWriteBuffer();\n        writer.onCommit(buffer => this.commitSingleMessage(buffer));\n        return writer;\n    }\n\n    protected commitSingleMessage(msg: Uint8Array): void {\n\n        if (this.messagesToSend.length === 0) {\n            if (typeof setImmediate !== 'undefined') {\n                setImmediate(() => this.sendAccumulated());\n            } else {\n                setTimeout(() => this.sendAccumulated(), 0);\n            }\n        }\n        this.messagesToSend.push(msg);\n    }\n\n    protected sendAccumulated(): void {\n        const cachedMessages = this.messagesToSend;\n        this.messagesToSend = [];\n        const writer = this.underlyingChannel.getWriteBuffer();\n\n        if (cachedMessages.length > 0) {\n            writer.writeLength(cachedMessages.length);\n            cachedMessages.forEach(msg => {\n                writer.writeBytes(msg);\n            });\n\n        }\n        writer.commit();\n    }\n\n    protected handleMessages(buffer: ReadBuffer): void {\n        // Read in the list of messages and dispatch each message individually\n        const length = buffer.readLength();\n        if (length > 0) {\n            for (let index = 0; index < length; index++) {\n                const message = buffer.readBytes();\n                this.onMessageEmitter.fire(() => new Uint8ArrayReadBuffer(message));\n            }\n        }\n    }\n}\n\nexport const enum MsgPackExtensionTag {\n    Uri = 2,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    Range = 3,\n    VsCodeUri = 4,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    BinaryBuffer = 5,\n}\n\nexport function registerMsgPackExtensions(): void {\n    MsgPackExtensionManager.getInstance().registerExtensions(\n        {\n            class: URI,\n            tag: MsgPackExtensionTag.Uri,\n            serialize: (instance: URI) => instance.toString(),\n            deserialize: data => new URI(data)\n        },\n        {\n            class: Range,\n            tag: MsgPackExtensionTag.Range,\n            serialize: (range: Range) => ({\n                start: {\n                    line: range.start.line,\n                    character: range.start.character\n                },\n                end: {\n                    line: range.end.line,\n                    character: range.end.character\n                }\n            }),\n            deserialize: data => {\n                const start = new Position(data.start.line, data.start.character);\n                const end = new Position(data.end.line, data.end.character);\n                return new Range(start, end);\n            }\n        },\n        {\n            class: VSCodeURI,\n            tag: MsgPackExtensionTag.VsCodeUri,\n            // eslint-disable-next-line arrow-body-style\n            serialize: (instance: URI) => {\n                return instance.toString();\n            },\n            deserialize: data => VSCodeURI.parse(data)\n        },\n        {\n            class: BinaryBuffer,\n            tag: MsgPackExtensionTag.BinaryBuffer,\n            // eslint-disable-next-line arrow-body-style\n            serialize: (instance: BinaryBuffer) => {\n                return instance.buffer;\n            },\n            // eslint-disable-next-line arrow-body-style\n            deserialize: buffer => {\n                return BinaryBuffer.wrap(buffer);\n            }\n        }\n    );\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, DisposableCollection } from '../disposable';\nimport { Emitter, Event } from '../event';\nimport { ReadBuffer, WriteBuffer } from './message-buffer';\n\n/**\n * A channel is a bidirectional communications channel with lifecycle and\n * error signalling. Note that creation of channels is specific to particular\n * implementations and thus not part of the protocol.\n */\nexport interface Channel {\n\n    /**\n     * The remote side has closed the channel\n     */\n    onClose: Event<ChannelCloseEvent>;\n\n    /**\n     * An error has occurred while writing to or reading from the channel\n     */\n    onError: Event<unknown>;\n\n    /**\n     * A message has arrived and can be read  by listeners using a {@link MessageProvider}.\n     */\n    onMessage: Event<MessageProvider>;\n\n    /**\n     * Obtain a {@link WriteBuffer} to write a message to the channel.\n     */\n    getWriteBuffer(): WriteBuffer;\n\n    /**\n     * Close this channel. No {@link onClose} event should be sent\n     */\n    close(): void;\n}\n\n/**\n * The event that is emitted when a channel is closed from the remote side.\n */\nexport interface ChannelCloseEvent {\n    reason: string,\n    code?: number\n};\n\n/**\n * The `MessageProvider` is emitted when a channel receives a new message.\n * Listeners can invoke the provider to obtain a new {@link ReadBuffer} for the received message.\n * This ensures that each listener has its own isolated {@link ReadBuffer} instance.\n *\n */\nexport type MessageProvider = () => ReadBuffer;\n\n/**\n *  Reusable abstract {@link Channel} implementation that sets up\n *  the basic channel event listeners and offers a generic close method.\n */\nexport abstract class AbstractChannel implements Channel {\n\n    onCloseEmitter: Emitter<ChannelCloseEvent> = new Emitter();\n    get onClose(): Event<ChannelCloseEvent> {\n        return this.onCloseEmitter.event;\n    };\n\n    onErrorEmitter: Emitter<unknown> = new Emitter();\n    get onError(): Event<unknown> {\n        return this.onErrorEmitter.event;\n    };\n\n    onMessageEmitter: Emitter<MessageProvider> = new Emitter();\n    get onMessage(): Event<MessageProvider> {\n        return this.onMessageEmitter.event;\n    };\n\n    protected toDispose: DisposableCollection = new DisposableCollection();\n\n    constructor() {\n        this.toDispose.pushAll([this.onCloseEmitter, this.onErrorEmitter, this.onMessageEmitter]);\n    }\n\n    close(): void {\n        this.toDispose.dispose();\n    }\n\n    abstract getWriteBuffer(): WriteBuffer;\n}\n\n/**\n * A very basic {@link AbstractChannel} implementation which takes a function\n * for retrieving the {@link WriteBuffer} as constructor argument.\n */\nexport class BasicChannel extends AbstractChannel {\n\n    constructor(protected writeBufferProvider: () => WriteBuffer) {\n        super();\n    }\n\n    getWriteBuffer(): WriteBuffer {\n        return this.writeBufferProvider();\n    }\n}\n\n/**\n * Helper class to implement the single channels on a {@link ChannelMultiplexer}. Simply forwards write requests to\n * the given write buffer source i.e. the main channel of the {@link ChannelMultiplexer}.\n */\nexport class ForwardingChannel extends AbstractChannel {\n\n    constructor(readonly id: string, protected readonly closeHandler: () => void, protected readonly writeBufferSource: () => WriteBuffer) {\n        super();\n    }\n\n    getWriteBuffer(): WriteBuffer {\n        return this.writeBufferSource();\n    }\n\n    override close(): void {\n        super.close();\n        this.closeHandler();\n    }\n}\n\n/**\n * The different message types used in the messaging protocol of the {@link ChannelMultiplexer}\n */\nexport enum MessageTypes {\n    Open = 1,\n    Close = 2,\n    AckOpen = 3,\n    Data = 4\n}\n\n/**\n * The write buffers in this implementation immediately write to the underlying\n * channel, so we rely on writers to the multiplexed channels to always commit their\n * messages and always in one go.\n */\nexport class ChannelMultiplexer implements Disposable {\n    protected pendingOpen: Map<string, (channel: ForwardingChannel) => void> = new Map();\n    protected openChannels: Map<string, ForwardingChannel> = new Map();\n\n    protected readonly onOpenChannelEmitter = new Emitter<{ id: string, channel: Channel }>();\n    get onDidOpenChannel(): Event<{ id: string, channel: Channel }> {\n        return this.onOpenChannelEmitter.event;\n    }\n\n    protected toDispose = new DisposableCollection();\n\n    constructor(protected readonly underlyingChannel: Channel) {\n        this.toDispose.pushAll([\n            this.underlyingChannel.onMessage(buffer => this.handleMessage(buffer())),\n            this.underlyingChannel.onClose(event => this.onUnderlyingChannelClose(event)),\n            this.underlyingChannel.onError(error => this.handleError(error)),\n            this.onOpenChannelEmitter\n        ]);\n    }\n\n    protected handleError(error: unknown): void {\n        this.openChannels.forEach(channel => {\n            channel.onErrorEmitter.fire(error);\n        });\n    }\n\n    onUnderlyingChannelClose(event?: ChannelCloseEvent): void {\n        if (!this.toDispose.disposed) {\n            this.toDispose.push(Disposable.create(() => {\n                this.pendingOpen.clear();\n                this.openChannels.forEach(channel => {\n                    channel.onCloseEmitter.fire(event ?? { reason: 'Multiplexer main channel has been closed from the remote side!' });\n                });\n\n                this.openChannels.clear();\n            }));\n            this.dispose();\n        }\n\n    }\n\n    protected handleMessage(buffer: ReadBuffer): void {\n        const type = buffer.readUint8();\n        const id = buffer.readString();\n        switch (type) {\n            case MessageTypes.AckOpen: {\n                return this.handleAckOpen(id);\n            }\n            case MessageTypes.Open: {\n                return this.handleOpen(id);\n            }\n            case MessageTypes.Close: {\n                return this.handleClose(id);\n            }\n            case MessageTypes.Data: {\n                return this.handleData(id, buffer);\n            }\n        }\n    }\n\n    protected handleAckOpen(id: string): void {\n        // edge case: both side try to open a channel at the same time.\n        const resolve = this.pendingOpen.get(id);\n        if (resolve) {\n            const channel = this.createChannel(id);\n            this.pendingOpen.delete(id);\n            this.openChannels.set(id, channel);\n            resolve(channel);\n            this.onOpenChannelEmitter.fire({ id, channel });\n        } else {\n            console.error(`not expecting ack-open on for ${id}`);\n        }\n    }\n\n    protected handleOpen(id: string): void {\n        if (!this.openChannels.has(id)) {\n            const channel = this.createChannel(id);\n            this.openChannels.set(id, channel);\n            const resolve = this.pendingOpen.get(id);\n            if (resolve) {\n                // edge case: both side try to open a channel at the same time.\n                resolve(channel);\n            }\n            this.underlyingChannel.getWriteBuffer().writeUint8(MessageTypes.AckOpen).writeString(id).commit();\n            this.onOpenChannelEmitter.fire({ id, channel });\n        } else {\n            console.error(`channel already open: ${id}`);\n        }\n    }\n\n    protected handleClose(id: string): void {\n        const channel = this.openChannels.get(id);\n        if (channel) {\n            channel.onCloseEmitter.fire({ reason: 'Channel has been closed from the remote side' });\n            this.openChannels.delete(id);\n        }\n    }\n\n    protected handleData(id: string, data: ReadBuffer): void {\n        const channel = this.openChannels.get(id);\n        if (channel) {\n            channel.onMessageEmitter.fire(() => data.sliceAtReadPosition());\n        }\n    }\n\n    protected createChannel(id: string): ForwardingChannel {\n        return new ForwardingChannel(id, () => this.closeChannel(id), () => this.prepareWriteBuffer(id));\n    }\n\n    // Prepare the write buffer for the channel with the give, id. The channel id has to be encoded\n    // and written to the buffer before the actual message.\n    protected prepareWriteBuffer(id: string): WriteBuffer {\n        const underlying = this.underlyingChannel.getWriteBuffer();\n        underlying.writeUint8(MessageTypes.Data);\n        underlying.writeString(id);\n        return underlying;\n    }\n\n    protected closeChannel(id: string): void {\n        this.underlyingChannel.getWriteBuffer()\n            .writeUint8(MessageTypes.Close)\n            .writeString(id)\n            .commit();\n\n        this.openChannels.delete(id);\n    }\n\n    open(id: string): Promise<Channel> {\n        if (this.openChannels.has(id) || this.pendingOpen.has(id)) {\n            throw new Error(`Another channel with the id '${id}' is already open.`);\n        }\n        const result = new Promise<Channel>((resolve, reject) => {\n            this.pendingOpen.set(id, resolve);\n        });\n        this.underlyingChannel.getWriteBuffer().writeUint8(MessageTypes.Open).writeString(id).commit();\n        return result;\n    }\n\n    getOpenChannel(id: string): Channel | undefined {\n        return this.openChannels.get(id);\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as fuzzy from 'fuzzy';\nimport { Event } from './event';\nimport { KeySequence } from './keys';\nimport { CancellationToken } from './cancellation';\n\nexport const quickPickServicePath = '/services/quickPick';\nexport const QuickPickService = Symbol('QuickPickService');\nexport interface QuickPickService {\n    show<T extends QuickPickItem>(items: Array<T | QuickPickSeparator>, options?: QuickPickOptions<T>): Promise<T | undefined>;\n    setItems<T extends QuickPickItem>(items: Array<T>): void;\n    hide(): void\n    readonly onDidHide: Event<void>;\n    readonly onDidAccept: Event<void>;\n    readonly onDidChangeValue: Event<{ quickPick: QuickPick<QuickPickItem>, filter: string }>;\n    readonly onDidChangeActive: Event<{ quickPick: QuickPick<QuickPickItem>, activeItems: Array<QuickPickItem> }>;\n    readonly onDidChangeSelection: Event<{ quickPick: QuickPick<QuickPickItem>, selectedItems: Array<QuickPickItem> }>;\n    readonly onDidTriggerButton: Event<QuickInputButtonHandle>;\n}\n\nexport interface Match {\n    start: number;\n    end: number;\n}\nexport interface QuickPickItemHighlights {\n    label?: Match[];\n    description?: Match[];\n    detail?: Match[];\n}\n\nexport interface QuickPickItem {\n    type?: 'item';\n    id?: string;\n    label: string;\n    meta?: string;\n    ariaLabel?: string;\n    description?: string;\n    detail?: string;\n    keySequence?: KeySequence;\n    iconClasses?: string[];\n    alwaysShow?: boolean;\n    highlights?: QuickPickItemHighlights;\n    buttons?: QuickInputButton[];\n    execute?: () => void;\n}\n\nexport interface QuickPickSeparator {\n    type: 'separator';\n    label?: string;\n}\n\nexport type QuickPickItemOrSeparator = QuickPickItem | QuickPickSeparator;\nexport type QuickPickInput<T = QuickPickItem> = T | QuickPickSeparator;\n\nexport namespace QuickPickItem {\n    export function is(item: QuickPickSeparator | QuickPickItem): item is QuickPickItem {\n        // if it's not a separator, it's an item\n        return item.type !== 'separator';\n    }\n}\n\nexport interface QuickPickSeparator {\n    type: 'separator';\n    label?: string;\n}\n\nexport namespace QuickPickSeparator {\n    export function is(item: QuickPickItemOrSeparator): item is QuickPickSeparator {\n        return item.type === 'separator';\n    }\n}\n\nexport type QuickPicks = (QuickPickSeparator | QuickPickItem)[];\n\nexport interface QuickPickValue<V> extends QuickPickItem {\n    value: V\n}\n\nexport interface QuickInputButton {\n    iconClass?: string;\n    tooltip?: string;\n    /**\n     * Whether the button should be visible even when the user is not hovering.\n     */\n    alwaysVisible?: boolean;\n}\n\nexport interface QuickInputButtonHandle extends QuickInputButton {\n    handle: number; // index of where the button is in buttons array if QuickInputButton or -1 if QuickInputButtons.Back\n}\n\nexport enum QuickInputHideReason {\n    /**\n     * Focus was moved away from the input, but the user may not have explicitly closed it.\n     */\n    Blur = 1,\n    /**\n     * An explicit close gesture, like striking the Escape key\n     */\n    Gesture = 2,\n    /**\n     * Any other reason\n     */\n    Other = 3,\n}\n\nexport interface QuickInput {\n    readonly onDidHide: Event<{ reason: QuickInputHideReason }>;\n    readonly onDispose: Event<void>;\n    title: string | undefined;\n    description: string | undefined;\n    step: number | undefined;\n    totalSteps: number | undefined;\n    enabled: boolean;\n    contextKey: string | undefined;\n    busy: boolean;\n    ignoreFocusOut: boolean;\n    show(): void;\n    hide(): void;\n    dispose(): void;\n}\n\nexport interface InputBox extends QuickInput {\n    value: string | undefined;\n    valueSelection: Readonly<[number, number]> | undefined;\n    placeholder: string | undefined;\n    password: boolean;\n    readonly onDidChangeValue: Event<string>;\n    readonly onDidAccept: Event<void>;\n    buttons: ReadonlyArray<QuickInputButton>;\n    readonly onDidTriggerButton: Event<QuickInputButton>;\n    prompt: string | undefined;\n    validationMessage: string | undefined;\n}\n\nexport interface QuickPick<T extends QuickPickItemOrSeparator> extends QuickInput {\n    value: string;\n    placeholder: string | undefined;\n    items: ReadonlyArray<T | QuickPickSeparator>;\n    activeItems: ReadonlyArray<T>;\n    selectedItems: ReadonlyArray<T>;\n    canSelectMany: boolean;\n    matchOnDescription: boolean;\n    matchOnDetail: boolean;\n    keepScrollPosition: boolean;\n    buttons: ReadonlyArray<QuickInputButton>;\n    readonly onDidAccept: Event<{ inBackground: boolean } | undefined>;\n    readonly onDidChangeValue: Event<string>;\n    readonly onDidTriggerButton: Event<QuickInputButton>;\n    readonly onDidTriggerItemButton: Event<QuickPickItemButtonEvent<QuickPickItem>>;\n    readonly onDidChangeActive: Event<T[]>;\n    readonly onDidChangeSelection: Event<T[]>;\n}\n\nexport interface PickOptions<T extends QuickPickItem> {\n    title?: string;\n    placeHolder?: string;\n    matchOnDescription?: boolean;\n    matchOnDetail?: boolean;\n    matchOnLabel?: boolean;\n    autoFocusOnList?: boolean;\n    ignoreFocusLost?: boolean;\n    canPickMany?: boolean;\n    contextKey?: string;\n    activeItem?: Promise<T> | T;\n    onDidFocus?: (entry: T) => void;\n}\n\nexport interface InputOptions {\n    title?: string;\n    value?: string;\n    valueSelection?: [number, number];\n    prompt?: string;\n    placeHolder?: string;\n    password?: boolean;\n    ignoreFocusLost?: boolean;\n    validateInput?(input: string): Promise<string | { content: string; severity: number; } | null | undefined> | undefined;\n}\n\nexport interface QuickPickItemButtonEvent<T extends QuickPickItemOrSeparator> {\n    button: QuickInputButton;\n    item: T;\n}\n\nexport interface QuickPickItemButtonContext<T extends QuickPickItemOrSeparator> extends QuickPickItemButtonEvent<T> {\n    removeItem(): void;\n}\n\nexport interface QuickPickOptions<T extends QuickPickItemOrSeparator> {\n    busy?: boolean;\n    enabled?: boolean;\n    title?: string;\n    description?: string;\n    value?: string;\n    filterValue?: (value: string) => string;\n    ariaLabel?: string;\n    buttons?: Array<QuickInputButton>;\n    placeholder?: string;\n    canAcceptInBackground?: boolean;\n    customButton?: boolean;\n    customLabel?: string;\n    customHover?: string;\n    canSelectMany?: boolean;\n    matchOnDescription?: boolean;\n    matchOnDetail?: boolean;\n    matchOnLabel?: boolean;\n    sortByLabel?: boolean;\n    keepScrollPosition?: boolean;\n    autoFocusOnList?: boolean;\n    ignoreFocusOut?: boolean;\n    valueSelection?: Readonly<[number, number]>;\n    validationMessage?: string;\n    hideInput?: boolean;\n    hideCheckAll?: boolean;\n    runIfSingle?: boolean\n    contextKey?: string;\n    activeItem?: T,\n    step?: number;\n    totalSteps?: number;\n\n    onDidAccept?: () => void,\n    onDidChangeActive?: (quickPick: QuickPick<T>, activeItems: Array<T>) => void,\n    onDidChangeSelection?: (quickPick: QuickPick<T>, selectedItems: Array<T>) => void,\n    onDidChangeValue?: (quickPick: QuickPick<T>, filter: string) => void,\n    onDidCustom?: () => void,\n    onDidHide?: () => void;\n    onDidTriggerButton?: (button: QuickInputButton) => void,\n    onDidTriggerItemButton?: (ItemButtonEvent: QuickPickItemButtonContext<T>) => void\n}\n\nexport const quickInputServicePath = '/services/quickInput';\nexport const QuickInputService = Symbol('QuickInputService');\nexport interface QuickInputService {\n    readonly backButton: QuickInputButton;\n    readonly onShow: Event<void>;\n    readonly onHide: Event<void>;\n    open(filter: string): void;\n    createInputBox(): InputBox;\n    input(options?: InputOptions, token?: CancellationToken): Promise<string | undefined>;\n    pick<T extends QuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[],\n        options?: PickOptions<T> & { canPickMany: true }, token?: CancellationToken): Promise<T[] | undefined>;\n    pick<T extends QuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[],\n        options?: PickOptions<T> & { canPickMany: false }, token?: CancellationToken): Promise<T | undefined>;\n    pick<T extends QuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[],\n        options?: Omit<PickOptions<T>, 'canPickMany'>, token?: CancellationToken): Promise<T | undefined>;\n\n    showQuickPick<T extends QuickPickItem>(items: Array<T | QuickPickSeparator>, options?: QuickPickOptions<T>): Promise<T | undefined>;\n    hide(): void;\n    /**\n     * Provides raw access to the quick pick controller.\n     */\n    createQuickPick<T extends QuickPickItem>(): QuickPick<T>;\n}\n\n/**\n * Filter the list of quick pick items based on the provided filter.\n * Items are filtered based on if:\n * - their `label` satisfies the filter using `fuzzy`.\n * - their `description` satisfies the filter using `fuzzy`.\n * - their `detail` satisfies the filter using `fuzzy`.\n * Filtered items are also updated to display proper highlights based on how they were filtered.\n * @param items the list of quick pick items.\n * @param filter the filter to search for.\n * @returns the list of quick pick items that satisfy the filter.\n */\nexport function filterItems(items: QuickPickItemOrSeparator[], filter: string): QuickPickItemOrSeparator[] {\n    filter = filter.trim().toLowerCase();\n\n    if (filter.length === 0) {\n        for (const item of items) {\n            if (item.type !== 'separator') {\n                item.highlights = undefined; // reset highlights from previous filtering.\n            }\n        }\n        return items;\n    }\n\n    const filteredItems: QuickPickItemOrSeparator[] = [];\n    for (const item of items) {\n        if (item.type === 'separator') {\n            filteredItems.push(item);\n        } else if (\n            fuzzy.test(filter, item.label) ||\n            (item.description && fuzzy.test(filter, item.description)) ||\n            (item.detail && fuzzy.test(filter, item.detail))\n        ) {\n            item.highlights = {\n                label: findMatches(item.label, filter),\n                description: item.description ? findMatches(item.description, filter) : undefined,\n                detail: item.detail ? findMatches(item.detail, filter) : undefined\n            };\n            filteredItems.push(item);\n        }\n    }\n    return filteredItems;\n}\n\n/**\n * Find match highlights when testing a word against a pattern.\n * @param word the word to test.\n * @param pattern the word to match against.\n * @returns the list of highlights if present.\n */\nexport function findMatches(word: string, pattern: string): Array<{ start: number, end: number }> | undefined {\n    word = word.toLocaleLowerCase();\n    pattern = pattern.toLocaleLowerCase();\n\n    if (pattern.trim().length === 0) {\n        return undefined;\n    }\n\n    const delimiter = '\\u0000'; // null byte that shouldn't appear in the input and is used to denote matches.\n    const matchResult = fuzzy.match(pattern.replace(/\\u0000/gu, ''), word, { pre: delimiter, post: delimiter });\n    if (!matchResult) {\n        return undefined;\n    }\n\n    const match = matchResult.rendered;\n    const highlights: { start: number, end: number }[] = [];\n\n    let lastIndex = 0;\n    /** We need to account for the extra markers by removing them from the range */\n    let offset = 0;\n\n    while (true) {\n        const start = match.indexOf(delimiter, lastIndex);\n        if (start === -1) { break; }\n        const end = match.indexOf(delimiter, start + 1);\n        if (end === -1) { break; }\n        highlights.push({\n            start: start - offset++,\n            end: end - offset++\n        });\n        lastIndex = end + 1;\n    }\n\n    return highlights.length > 0 ? highlights : undefined;\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from 'inversify';\nimport { ContributionFilterRegistry } from './contribution-filter';\n\nexport const ContributionProvider = Symbol('ContributionProvider');\n\nexport interface ContributionProvider<T extends object> {\n\n    /**\n     * @param recursive `true` if the contributions should be collected from the parent containers as well. Otherwise, `false`. It is `false` by default.\n     */\n    getContributions(recursive?: boolean): T[]\n}\n\nclass ContainerBasedContributionProvider<T extends object> implements ContributionProvider<T> {\n\n    protected services: T[] | undefined;\n\n    constructor(\n        protected readonly serviceIdentifier: interfaces.ServiceIdentifier<T>,\n        protected readonly container: interfaces.Container\n    ) { }\n\n    getContributions(recursive?: boolean): T[] {\n        if (this.services === undefined) {\n            const currentServices: T[] = [];\n            let filterRegistry: ContributionFilterRegistry | undefined;\n            let currentContainer: interfaces.Container | null = this.container;\n            // eslint-disable-next-line no-null/no-null\n            while (currentContainer !== null) {\n                if (currentContainer.isBound(this.serviceIdentifier)) {\n                    try {\n                        currentServices.push(...currentContainer.getAll(this.serviceIdentifier));\n                    } catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (filterRegistry === undefined && currentContainer.isBound(ContributionFilterRegistry)) {\n                    filterRegistry = currentContainer.get(ContributionFilterRegistry);\n                }\n                // eslint-disable-next-line no-null/no-null\n                currentContainer = recursive === true ? currentContainer.parent : null;\n            }\n\n            this.services = filterRegistry ? filterRegistry.applyFilters(currentServices, this.serviceIdentifier) : currentServices;\n\n        }\n        return this.services;\n    }\n}\n\nexport type Bindable = interfaces.Bind | interfaces.Container;\nexport namespace Bindable {\n    export function isContainer(arg: Bindable): arg is interfaces.Container {\n        return typeof arg !== 'function'\n            // https://github.com/eclipse-theia/theia/issues/3204#issue-371029654\n            // In InversifyJS `4.14.0` containers no longer have a property `guid`.\n            && ('guid' in arg || 'parent' in arg);\n    }\n}\n\nexport function bindContributionProvider(bindable: Bindable, id: symbol): void {\n    const bindingToSyntax = (Bindable.isContainer(bindable) ? bindable.bind(ContributionProvider) : bindable(ContributionProvider));\n    bindingToSyntax\n        .toDynamicValue(ctx => new ContainerBasedContributionProvider(id, ctx.container))\n        .inSingletonScope().whenTargetNamed(id);\n}\n\n/**\n * Helper function to bind a service to a list of contributions easily.\n * @param bindable a Container or the bind function directly.\n * @param service an already bound service to refer the contributions to.\n * @param contributions array of contribution identifiers to bind the service to.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function bindContribution(bindable: Bindable, service: interfaces.ServiceIdentifier<any>, contributions: interfaces.ServiceIdentifier<any>[]): void {\n    const bind: interfaces.Bind = Bindable.isContainer(bindable) ? bindable.bind.bind(bindable) : bindable;\n    for (const contribution of contributions) {\n        bind(contribution).toService(service);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// copied from https://github.com/microsoft/vscode/blob/53eac52308c4611000a171cc7bf1214293473c78/src/vs/workbench/api/common/cache.ts\nexport class Cache<T> {\n\n    private static readonly enableDebugLogging = false;\n\n    private readonly _data = new Map<number, readonly T[]>();\n    private _idPool = 1;\n\n    constructor(\n        private readonly id: string\n    ) { }\n\n    add(item: readonly T[]): number {\n        const id = this._idPool++;\n        this._data.set(id, item);\n        this.logDebugInfo();\n        return id;\n    }\n\n    get(pid: number, id: number): T | undefined {\n        return this._data.has(pid) ? this._data.get(pid)![id] : undefined;\n    }\n\n    delete(id: number): void {\n        this._data.delete(id);\n        this.logDebugInfo();\n    }\n\n    private logDebugInfo(): void {\n        if (!Cache.enableDebugLogging) {\n            return;\n        }\n        console.log(`${this.id} cache size — ${this._data.size}`);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport * as lstypes from '@theia/core/shared/vscode-languageserver-protocol';\nimport { InlineValueEvaluatableExpression, InlineValueText, InlineValueVariableLookup, QuickPickItemKind, ThemeIcon, URI } from './types-impl';\nimport * as rpc from '../common/plugin-api-rpc';\nimport {\n    DecorationOptions, EditorPosition, Plugin, Position, WorkspaceTextEditDto, WorkspaceFileEditDto, Selection, TaskDto, WorkspaceEditDto\n} from '../common/plugin-api-rpc';\nimport * as model from '../common/plugin-api-rpc-model';\nimport { LanguageFilter, LanguageSelector, RelativePattern } from '@theia/editor/lib/common/language-selector';\nimport { MarkdownString as PluginMarkdownStringImpl } from './markdown-string';\nimport * as types from './types-impl';\nimport { UriComponents } from '../common/uri-components';\nimport { isReadonlyArray } from '../common/arrays';\nimport { DisposableCollection, Mutable, isEmptyObject, isObject } from '@theia/core/lib/common';\nimport * as notebooks from '@theia/notebook/lib/common';\nimport { CommandsConverter } from './command-registry';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { CellRange, isTextStreamMime } from '@theia/notebook/lib/common';\nimport { MarkdownString as MarkdownStringDTO } from '@theia/core/lib/common/markdown-rendering';\n\nimport { TestItemDTO, TestMessageDTO, TestMessageStackFrameDTO } from '../common/test-types';\nimport { PluginIconPath } from './plugin-icon-path';\n\nconst SIDE_GROUP = -2;\nconst ACTIVE_GROUP = -1;\n\nexport function toViewColumn(ep?: EditorPosition): theia.ViewColumn | undefined {\n    if (typeof ep !== 'number') {\n        return undefined;\n    }\n\n    if (ep === EditorPosition.ONE) {\n        return <number>types.ViewColumn.One;\n    } else if (ep === EditorPosition.TWO) {\n        return <number>types.ViewColumn.Two;\n    } else if (ep === EditorPosition.THREE) {\n        return <number>types.ViewColumn.Three;\n    } else if (ep === EditorPosition.FOUR) {\n        return <number>types.ViewColumn.Four;\n    } else if (ep === EditorPosition.FIVE) {\n        return <number>types.ViewColumn.Five;\n    } else if (ep === EditorPosition.SIX) {\n        return <number>types.ViewColumn.Six;\n    } else if (ep === EditorPosition.SEVEN) {\n        return <number>types.ViewColumn.Seven;\n    } else if (ep === EditorPosition.EIGHT) {\n        return <number>types.ViewColumn.Eight;\n    } else if (ep === EditorPosition.NINE) {\n        return <number>types.ViewColumn.Nine;\n    }\n\n    return undefined;\n}\n\nexport function fromViewColumn(column?: theia.ViewColumn): number {\n    if (typeof column === 'number' && column >= types.ViewColumn.One) {\n        return column - 1;\n    }\n\n    if (column! === <number>types.ViewColumn.Beside) {\n        return SIDE_GROUP;\n    }\n\n    return ACTIVE_GROUP;\n}\n\nexport function toWebviewPanelShowOptions(options: theia.ViewColumn | theia.WebviewPanelShowOptions): theia.WebviewPanelShowOptions {\n    if (typeof options === 'object') {\n        const showOptions = options as theia.WebviewPanelShowOptions;\n        return {\n            area: showOptions.area ? showOptions.area : types.WebviewPanelTargetArea.Main,\n            viewColumn: showOptions.viewColumn ? fromViewColumn(showOptions.viewColumn) : undefined,\n            preserveFocus: showOptions.preserveFocus ? showOptions.preserveFocus : false\n        };\n    }\n\n    return {\n        area: types.WebviewPanelTargetArea.Main,\n        viewColumn: fromViewColumn(options as theia.ViewColumn),\n        preserveFocus: false\n    };\n}\n\nexport function toSelection(selection: Selection): types.Selection {\n    const { selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn } = selection;\n    const start = new types.Position(selectionStartLineNumber - 1, selectionStartColumn - 1);\n    const end = new types.Position(positionLineNumber - 1, positionColumn - 1);\n    return new types.Selection(start, end);\n}\n\nexport function fromSelection(selection: types.Selection): Selection {\n    const { active, anchor } = selection;\n    return {\n        selectionStartLineNumber: anchor.line + 1,\n        selectionStartColumn: anchor.character + 1,\n        positionLineNumber: active.line + 1,\n        positionColumn: active.character + 1\n    };\n}\n\nexport function toRange(range: model.Range): types.Range {\n    const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n    return new types.Range(startLineNumber - 1, startColumn - 1, endLineNumber - 1, endColumn - 1);\n}\n\nexport function fromRange(range: undefined): undefined;\nexport function fromRange(range: theia.Range): model.Range;\nexport function fromRange(range: theia.Range | undefined): model.Range | undefined;\nexport function fromRange(range: theia.Range | undefined): model.Range | undefined {\n    if (!range) {\n        return undefined;\n    }\n    const { start, end } = range;\n    return {\n        startLineNumber: start.line + 1,\n        startColumn: start.character + 1,\n        endLineNumber: end.line + 1,\n        endColumn: end.character + 1\n    };\n}\nexport function fromPosition(position: types.Position | theia.Position): Position;\nexport function fromPosition(position: types.Position | theia.Position | undefined): Position | undefined;\nexport function fromPosition(position: types.Position | theia.Position | undefined): Position | undefined {\n    if (!position) {\n        return undefined;\n    }\n    return { lineNumber: position.line + 1, column: position.character + 1 };\n}\n\nexport function toPosition(position: Position): types.Position;\nexport function toPosition(position: Position | undefined): types.Position | undefined;\nexport function toPosition(position: Position | undefined): types.Position | undefined {\n    if (!position) {\n        return undefined;\n    }\n    return new types.Position(position.lineNumber - 1, position.column - 1);\n}\n\nfunction isDecorationOptions(arg: unknown): arg is theia.DecorationOptions {\n    return isObject<theia.DecorationOptions>(arg) && typeof arg.range !== 'undefined';\n}\n\nexport function isDecorationOptionsArr(something: theia.Range[] | theia.DecorationOptions[]): something is theia.DecorationOptions[] {\n    if (something.length === 0) {\n        return true;\n    }\n    return isDecorationOptions(something[0]) ? true : false;\n}\n\nexport function fromRangeOrRangeWithMessage(ranges: theia.Range[] | theia.DecorationOptions[]): DecorationOptions[] {\n\n    if (isDecorationOptionsArr(ranges)) {\n        return ranges.map(r => {\n            let hoverMessage;\n            if (Array.isArray(r.hoverMessage)) {\n                hoverMessage = fromManyMarkdown(r.hoverMessage);\n            } else if (r.hoverMessage) {\n                hoverMessage = fromMarkdown(r.hoverMessage);\n            } else {\n                hoverMessage = undefined;\n            }\n            return {\n                range: fromRange(r.range)!,\n                hoverMessage: hoverMessage,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                renderOptions: <any> /* URI vs Uri */r.renderOptions\n            };\n        });\n    } else {\n        return ranges.map(r => ({ range: fromRange(r) }));\n    }\n}\n\nexport function fromManyMarkdown(markup: (theia.MarkdownString | theia.MarkedString)[]): MarkdownStringDTO[] {\n    return markup.map(fromMarkdown);\n}\n\ninterface Codeblock {\n    language: string;\n    value: string;\n}\n\nfunction isCodeblock(arg: unknown): arg is Codeblock {\n    return isObject<Codeblock>(arg)\n        && typeof arg.language === 'string'\n        && typeof arg.value === 'string';\n}\n\nexport function fromMarkdown(markup: theia.MarkdownString | theia.MarkedString): MarkdownStringDTO {\n    if (isCodeblock(markup)) {\n        const { language, value } = markup;\n        return { value: '```' + language + '\\n' + value + '\\n```\\n' };\n    } else if (markup instanceof PluginMarkdownStringImpl) {\n        return markup.toJSON();\n    } else if (MarkdownStringDTO.is(markup)) {\n        return markup;\n    } else if (typeof markup === 'string') {\n        return { value: markup };\n    } else {\n        return { value: '' };\n    }\n}\n\nexport function fromMarkdownOrString(value: string | theia.MarkdownString | undefined): string | MarkdownStringDTO | undefined {\n    if (value === undefined) {\n        return undefined;\n    } else if (typeof value === 'string') {\n        return value;\n    } else {\n        return fromMarkdown(value);\n    }\n}\n\nexport function toMarkdown(value: MarkdownStringDTO): PluginMarkdownStringImpl {\n    const implemented = new PluginMarkdownStringImpl(value.value, value.supportThemeIcons);\n    implemented.isTrusted = value.isTrusted;\n    implemented.supportHtml = value.supportHtml;\n    implemented.baseUri = value.baseUri && URI.revive(implemented.baseUri);\n    return implemented;\n}\n\nexport function fromDocumentSelector(selector: theia.DocumentSelector | undefined): LanguageSelector | undefined {\n    if (!selector) {\n        return undefined;\n    } else if (isReadonlyArray(selector)) {\n        return <LanguageSelector>selector.map(fromDocumentSelector);\n    } else if (typeof selector === 'string') {\n        return selector;\n    } else {\n        return {\n            language: selector.language,\n            scheme: selector.scheme,\n            pattern: fromGlobPattern(selector.pattern!)\n        } as LanguageFilter;\n    }\n\n}\n\nexport function fromGlobPattern(pattern: theia.GlobPattern): string | RelativePattern {\n    if (typeof pattern === 'string') {\n        return pattern;\n    }\n\n    if (isRelativePattern(pattern)) {\n        return new types.RelativePattern(pattern.baseUri, pattern.pattern);\n    }\n\n    return pattern;\n}\n\nfunction isRelativePattern(obj: {}): obj is theia.RelativePattern {\n    const rp = obj as theia.RelativePattern;\n    return rp && typeof rp.baseUri === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function fromCompletionItemKind(kind?: types.CompletionItemKind): model.CompletionItemKind {\n    switch (kind) {\n        case types.CompletionItemKind.Method: return model.CompletionItemKind.Method;\n        case types.CompletionItemKind.Function: return model.CompletionItemKind.Function;\n        case types.CompletionItemKind.Constructor: return model.CompletionItemKind.Constructor;\n        case types.CompletionItemKind.Field: return model.CompletionItemKind.Field;\n        case types.CompletionItemKind.Variable: return model.CompletionItemKind.Variable;\n        case types.CompletionItemKind.Class: return model.CompletionItemKind.Class;\n        case types.CompletionItemKind.Interface: return model.CompletionItemKind.Interface;\n        case types.CompletionItemKind.Struct: return model.CompletionItemKind.Struct;\n        case types.CompletionItemKind.Module: return model.CompletionItemKind.Module;\n        case types.CompletionItemKind.Property: return model.CompletionItemKind.Property;\n        case types.CompletionItemKind.Unit: return model.CompletionItemKind.Unit;\n        case types.CompletionItemKind.Value: return model.CompletionItemKind.Value;\n        case types.CompletionItemKind.Constant: return model.CompletionItemKind.Constant;\n        case types.CompletionItemKind.Enum: return model.CompletionItemKind.Enum;\n        case types.CompletionItemKind.EnumMember: return model.CompletionItemKind.EnumMember;\n        case types.CompletionItemKind.Keyword: return model.CompletionItemKind.Keyword;\n        case types.CompletionItemKind.Snippet: return model.CompletionItemKind.Snippet;\n        case types.CompletionItemKind.Text: return model.CompletionItemKind.Text;\n        case types.CompletionItemKind.Color: return model.CompletionItemKind.Color;\n        case types.CompletionItemKind.File: return model.CompletionItemKind.File;\n        case types.CompletionItemKind.Reference: return model.CompletionItemKind.Reference;\n        case types.CompletionItemKind.Folder: return model.CompletionItemKind.Folder;\n        case types.CompletionItemKind.Event: return model.CompletionItemKind.Event;\n        case types.CompletionItemKind.Operator: return model.CompletionItemKind.Operator;\n        case types.CompletionItemKind.TypeParameter: return model.CompletionItemKind.TypeParameter;\n        case types.CompletionItemKind.User: return model.CompletionItemKind.User;\n        case types.CompletionItemKind.Issue: return model.CompletionItemKind.Issue;\n    }\n    return model.CompletionItemKind.Property;\n}\n\nexport function toCompletionItemKind(kind?: model.CompletionItemKind): types.CompletionItemKind {\n    switch (kind) {\n        case model.CompletionItemKind.Method: return types.CompletionItemKind.Method;\n        case model.CompletionItemKind.Function: return types.CompletionItemKind.Function;\n        case model.CompletionItemKind.Constructor: return types.CompletionItemKind.Constructor;\n        case model.CompletionItemKind.Field: return types.CompletionItemKind.Field;\n        case model.CompletionItemKind.Variable: return types.CompletionItemKind.Variable;\n        case model.CompletionItemKind.Class: return types.CompletionItemKind.Class;\n        case model.CompletionItemKind.Interface: return types.CompletionItemKind.Interface;\n        case model.CompletionItemKind.Struct: return types.CompletionItemKind.Struct;\n        case model.CompletionItemKind.Module: return types.CompletionItemKind.Module;\n        case model.CompletionItemKind.Property: return types.CompletionItemKind.Property;\n        case model.CompletionItemKind.Unit: return types.CompletionItemKind.Unit;\n        case model.CompletionItemKind.Value: return types.CompletionItemKind.Value;\n        case model.CompletionItemKind.Constant: return types.CompletionItemKind.Constant;\n        case model.CompletionItemKind.Enum: return types.CompletionItemKind.Enum;\n        case model.CompletionItemKind.EnumMember: return types.CompletionItemKind.EnumMember;\n        case model.CompletionItemKind.Keyword: return types.CompletionItemKind.Keyword;\n        case model.CompletionItemKind.Snippet: return types.CompletionItemKind.Snippet;\n        case model.CompletionItemKind.Text: return types.CompletionItemKind.Text;\n        case model.CompletionItemKind.Color: return types.CompletionItemKind.Color;\n        case model.CompletionItemKind.File: return types.CompletionItemKind.File;\n        case model.CompletionItemKind.Reference: return types.CompletionItemKind.Reference;\n        case model.CompletionItemKind.Folder: return types.CompletionItemKind.Folder;\n        case model.CompletionItemKind.Event: return types.CompletionItemKind.Event;\n        case model.CompletionItemKind.Operator: return types.CompletionItemKind.Operator;\n        case model.CompletionItemKind.TypeParameter: return types.CompletionItemKind.TypeParameter;\n        case model.CompletionItemKind.User: return types.CompletionItemKind.User;\n        case model.CompletionItemKind.Issue: return types.CompletionItemKind.Issue;\n    }\n    return types.CompletionItemKind.Property;\n}\n\nexport function fromTextEdit(edit: theia.TextEdit): model.TextEdit {\n    return {\n        text: edit.newText,\n        range: fromRange(edit.range)\n    };\n}\n\nfunction fromSnippetTextEdit(edit: theia.SnippetTextEdit): model.TextEdit & { insertAsSnippet?: boolean, keepWhitespace?: boolean } {\n    return {\n        text: edit.snippet.value,\n        range: fromRange(edit.range),\n        insertAsSnippet: true,\n        keepWhitespace: edit.keepWhitespace\n    };\n}\n\nexport function convertDiagnosticToMarkerData(diagnostic: theia.Diagnostic): model.MarkerData {\n    return {\n        code: convertCode(diagnostic.code),\n        severity: convertSeverity(diagnostic.severity),\n        message: diagnostic.message,\n        source: diagnostic.source,\n        startLineNumber: diagnostic.range.start.line + 1,\n        startColumn: diagnostic.range.start.character + 1,\n        endLineNumber: diagnostic.range.end.line + 1,\n        endColumn: diagnostic.range.end.character + 1,\n        relatedInformation: convertRelatedInformation(diagnostic.relatedInformation),\n        tags: convertTags(diagnostic.tags)\n    };\n}\n\nexport function convertCode(code: string | number | { value: string | number; target: theia.Uri } | undefined): string | undefined {\n    if (typeof code === 'number') {\n        return String(code);\n    }\n    if (typeof code === 'string' || typeof code === 'undefined') {\n        return code;\n    } else {\n        return String(code.value);\n    };\n}\n\nfunction convertSeverity(severity: types.DiagnosticSeverity): types.MarkerSeverity {\n    switch (severity) {\n        case types.DiagnosticSeverity.Error: return types.MarkerSeverity.Error;\n        case types.DiagnosticSeverity.Warning: return types.MarkerSeverity.Warning;\n        case types.DiagnosticSeverity.Information: return types.MarkerSeverity.Info;\n        case types.DiagnosticSeverity.Hint: return types.MarkerSeverity.Hint;\n    }\n}\n\nfunction convertRelatedInformation(diagnosticsRelatedInformation: theia.DiagnosticRelatedInformation[] | undefined): model.RelatedInformation[] | undefined {\n    if (!diagnosticsRelatedInformation) {\n        return undefined;\n    }\n\n    const relatedInformation: model.RelatedInformation[] = [];\n    for (const item of diagnosticsRelatedInformation) {\n        relatedInformation.push({\n            resource: item.location.uri.toString(),\n            message: item.message,\n            startLineNumber: item.location.range.start.line + 1,\n            startColumn: item.location.range.start.character + 1,\n            endLineNumber: item.location.range.end.line + 1,\n            endColumn: item.location.range.end.character + 1\n        });\n    }\n    return relatedInformation;\n}\n\nfunction convertTags(tags: types.DiagnosticTag[] | undefined): types.MarkerTag[] | undefined {\n    if (!tags) {\n        return undefined;\n    }\n\n    const markerTags: types.MarkerTag[] = [];\n    for (const tag of tags) {\n        switch (tag) {\n            case types.DiagnosticTag.Unnecessary:\n                markerTags.push(types.MarkerTag.Unnecessary);\n                break;\n            case types.DiagnosticTag.Deprecated:\n                markerTags.push(types.MarkerTag.Deprecated);\n                break;\n        }\n    }\n    return markerTags;\n}\n\nexport function fromHover(hover: theia.Hover): model.Hover {\n    return <model.Hover>{\n        range: fromRange(hover.range),\n        contents: fromManyMarkdown(hover.contents)\n    };\n}\n\nexport function fromEvaluatableExpression(evaluatableExpression: theia.EvaluatableExpression): model.EvaluatableExpression {\n    return <model.EvaluatableExpression>{\n        range: fromRange(evaluatableExpression.range),\n        expression: evaluatableExpression.expression\n    };\n}\n\nexport function fromInlineValue(inlineValue: theia.InlineValue): model.InlineValue {\n    if (inlineValue instanceof InlineValueText) {\n        return <model.InlineValueText>{\n            type: 'text',\n            range: fromRange(inlineValue.range),\n            text: inlineValue.text\n        };\n    } else if (inlineValue instanceof InlineValueVariableLookup) {\n        return <model.InlineValueVariableLookup>{\n            type: 'variable',\n            range: fromRange(inlineValue.range),\n            variableName: inlineValue.variableName,\n            caseSensitiveLookup: inlineValue.caseSensitiveLookup\n        };\n    } else if (inlineValue instanceof InlineValueEvaluatableExpression) {\n        return <model.InlineValueEvaluatableExpression>{\n            type: 'expression',\n            range: fromRange(inlineValue.range),\n            expression: inlineValue.expression\n        };\n    } else {\n        throw new Error('Unknown InlineValue type');\n    }\n}\n\nexport function toInlineValueContext(inlineValueContext: model.InlineValueContext): theia.InlineValueContext {\n    const ivLocation = inlineValueContext.stoppedLocation;\n    return <theia.InlineValueContext>{\n        frameId: inlineValueContext.frameId,\n        stoppedLocation: new types.Range(ivLocation.startLineNumber, ivLocation.startColumn, ivLocation.endLineNumber, ivLocation.endColumn)\n    };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-shadow\nexport function fromLocation(location: theia.Location): model.Location;\nexport function fromLocation(location: theia.Location | undefined): model.Location | undefined;\nexport function fromLocation(location: theia.Location | undefined): model.Location | undefined {\n    if (!location) {\n        return undefined;\n    }\n    return <model.Location>{\n        uri: location.uri,\n        range: fromRange(location.range)\n    };\n}\n\nexport function fromLocationToLanguageServerLocation(location: theia.Location): lstypes.Location;\nexport function fromLocationToLanguageServerLocation(location: theia.Location | undefined): lstypes.Location | undefined;\nexport function fromLocationToLanguageServerLocation(location: theia.Location | undefined): lstypes.Location | undefined {\n    if (!location) {\n        return undefined;\n    }\n    return <lstypes.Location>{\n        uri: location.uri.toString(),\n        range: location.range\n    };\n}\n\nexport function fromTextDocumentShowOptions(options: theia.TextDocumentShowOptions): model.TextDocumentShowOptions {\n    if (options.selection) {\n        return {\n            ...options,\n            selection: fromRange(options.selection),\n        };\n    }\n    return options as model.TextDocumentShowOptions;\n}\n\nexport function fromDefinitionLink(definitionLink: theia.DefinitionLink): model.LocationLink {\n    return <model.LocationLink>{\n        uri: definitionLink.targetUri,\n        range: fromRange(definitionLink.targetRange),\n        originSelectionRange: definitionLink.originSelectionRange ? fromRange(definitionLink.originSelectionRange) : undefined,\n        targetSelectionRange: definitionLink.targetSelectionRange ? fromRange(definitionLink.targetSelectionRange) : undefined\n    };\n}\n\nexport namespace DocumentLink {\n\n    export function from(link: theia.DocumentLink): model.DocumentLink {\n        return {\n            range: fromRange(link.range),\n            url: link.target,\n            tooltip: link.tooltip\n        };\n    }\n\n    export function to(link: model.DocumentLink): theia.DocumentLink {\n        let target: URI | undefined = undefined;\n        if (link.url) {\n            try {\n                target = typeof link.url === 'string' ? URI.parse(link.url, true) : URI.revive(link.url);\n            } catch (err) {\n                // ignore\n            }\n        }\n        return new types.DocumentLink(toRange(link.range), target);\n    }\n}\n\nexport function fromDocumentHighlightKind(kind?: theia.DocumentHighlightKind): model.DocumentHighlightKind | undefined {\n    switch (kind) {\n        case types.DocumentHighlightKind.Text: return model.DocumentHighlightKind.Text;\n        case types.DocumentHighlightKind.Read: return model.DocumentHighlightKind.Read;\n        case types.DocumentHighlightKind.Write: return model.DocumentHighlightKind.Write;\n    }\n    return model.DocumentHighlightKind.Text;\n}\n\nexport function fromDocumentHighlight(documentHighlight: theia.DocumentHighlight): model.DocumentHighlight {\n    return <model.DocumentHighlight>{\n        range: fromRange(documentHighlight.range),\n        kind: fromDocumentHighlightKind(documentHighlight.kind)\n    };\n}\n\nexport namespace ParameterInformation {\n    export function from(info: types.ParameterInformation): model.ParameterInformation {\n        return {\n            label: info.label,\n            documentation: info.documentation ? fromMarkdown(info.documentation) : undefined\n        };\n    }\n    export function to(info: model.ParameterInformation): types.ParameterInformation {\n        return {\n            label: info.label,\n            documentation: MarkdownStringDTO.is(info.documentation) ? toMarkdown(info.documentation) : info.documentation\n        };\n    }\n}\n\nexport namespace SignatureInformation {\n\n    export function from(info: types.SignatureInformation): model.SignatureInformation {\n        return {\n            label: info.label,\n            documentation: info.documentation ? fromMarkdown(info.documentation) : undefined,\n            parameters: info.parameters && info.parameters.map(ParameterInformation.from),\n            activeParameter: info.activeParameter\n        };\n    }\n\n    export function to(info: model.SignatureInformation): types.SignatureInformation {\n        return {\n            label: info.label,\n            documentation: MarkdownStringDTO.is(info.documentation) ? toMarkdown(info.documentation) : info.documentation,\n            parameters: info.parameters && info.parameters.map(ParameterInformation.to),\n            activeParameter: info.activeParameter\n        };\n    }\n}\n\nexport namespace SignatureHelp {\n\n    export function from(id: number, help: types.SignatureHelp): model.SignatureHelp {\n        return {\n            id,\n            activeSignature: help.activeSignature,\n            activeParameter: help.activeParameter,\n            signatures: help.signatures && help.signatures.map(SignatureInformation.from)\n        };\n    }\n\n    export function to(help: model.SignatureHelp): types.SignatureHelp {\n        return {\n            activeSignature: help.activeSignature,\n            activeParameter: help.activeParameter,\n            signatures: help.signatures && help.signatures.map(SignatureInformation.to)\n        };\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fromWorkspaceEdit(value: theia.WorkspaceEdit, documents?: any): WorkspaceEditDto {\n    const result: WorkspaceEditDto = {\n        edits: []\n    };\n    for (const entry of (value as types.WorkspaceEdit)._allEntries()) {\n        if (entry?._type === types.FileEditType.Text) {\n            const doc = documents ? documents.getDocument(entry.uri.toString()) : undefined;\n            const workspaceTextEditDto: WorkspaceTextEditDto = {\n                resource: entry.uri,\n                modelVersionId: doc?.version,\n                textEdit: fromTextEdit(entry.edit),\n                metadata: entry.metadata\n            };\n            result.edits.push(workspaceTextEditDto);\n        } else if (entry?._type === types.FileEditType.Snippet) {\n            const doc = documents ? documents.getDocument(entry.uri.toString()) : undefined;\n            const workspaceTextEditDto: WorkspaceTextEditDto = {\n                resource: entry.uri,\n                modelVersionId: doc?.version,\n                textEdit: fromSnippetTextEdit(entry.edit),\n                metadata: entry.metadata\n            };\n            result.edits.push(workspaceTextEditDto);\n        } else if (entry?._type === types.FileEditType.File) {\n            const workspaceFileEditDto: WorkspaceFileEditDto = {\n                oldResource: entry.from,\n                newResource: entry.to,\n                options: entry.options,\n                metadata: entry.metadata\n            };\n            result.edits.push(workspaceFileEditDto);\n        } else if (entry?._type === types.FileEditType.Cell) {\n            if (entry.edit) {\n                result.edits.push({\n                    metadata: entry.metadata,\n                    resource: entry.uri,\n                    cellEdit: entry.edit,\n                });\n            }\n        } else if (entry?._type === types.FileEditType.CellReplace) {\n            result.edits.push({\n                metadata: entry.metadata,\n                resource: entry.uri,\n                cellEdit: {\n                    editType: notebooks.CellEditType.Replace,\n                    index: entry.index,\n                    count: entry.count,\n                    cells: entry.cells.map(NotebookCellData.from)\n                }\n            });\n        }\n    }\n    return result;\n}\n\nexport namespace SymbolKind {\n    const fromMapping: { [kind: number]: model.SymbolKind } = Object.create(null);\n    fromMapping[model.SymbolKind.File] = model.SymbolKind.File;\n    fromMapping[model.SymbolKind.Module] = model.SymbolKind.Module;\n    fromMapping[model.SymbolKind.Namespace] = model.SymbolKind.Namespace;\n    fromMapping[model.SymbolKind.Package] = model.SymbolKind.Package;\n    fromMapping[model.SymbolKind.Class] = model.SymbolKind.Class;\n    fromMapping[model.SymbolKind.Method] = model.SymbolKind.Method;\n    fromMapping[model.SymbolKind.Property] = model.SymbolKind.Property;\n    fromMapping[model.SymbolKind.Field] = model.SymbolKind.Field;\n    fromMapping[model.SymbolKind.Constructor] = model.SymbolKind.Constructor;\n    fromMapping[model.SymbolKind.Enum] = model.SymbolKind.Enum;\n    fromMapping[model.SymbolKind.Interface] = model.SymbolKind.Interface;\n    fromMapping[model.SymbolKind.Function] = model.SymbolKind.Function;\n    fromMapping[model.SymbolKind.Variable] = model.SymbolKind.Variable;\n    fromMapping[model.SymbolKind.Constant] = model.SymbolKind.Constant;\n    fromMapping[model.SymbolKind.String] = model.SymbolKind.String;\n    fromMapping[model.SymbolKind.Number] = model.SymbolKind.Number;\n    fromMapping[model.SymbolKind.Boolean] = model.SymbolKind.Boolean;\n    fromMapping[model.SymbolKind.Array] = model.SymbolKind.Array;\n    fromMapping[model.SymbolKind.Object] = model.SymbolKind.Object;\n    fromMapping[model.SymbolKind.Key] = model.SymbolKind.Key;\n    fromMapping[model.SymbolKind.Null] = model.SymbolKind.Null;\n    fromMapping[model.SymbolKind.EnumMember] = model.SymbolKind.EnumMember;\n    fromMapping[model.SymbolKind.Struct] = model.SymbolKind.Struct;\n    fromMapping[model.SymbolKind.Event] = model.SymbolKind.Event;\n    fromMapping[model.SymbolKind.Operator] = model.SymbolKind.Operator;\n    fromMapping[model.SymbolKind.TypeParameter] = model.SymbolKind.TypeParameter;\n\n    export function fromSymbolKind(kind: theia.SymbolKind): model.SymbolKind {\n        return fromMapping[kind] || model.SymbolKind.Property;\n    }\n\n    export function toSymbolKind(kind: model.SymbolKind): theia.SymbolKind {\n        for (const k in fromMapping) {\n            if (fromMapping[k] === kind) {\n                return Number(k);\n            }\n        }\n        return model.SymbolKind.Property;\n    }\n}\n\nexport function toCodeActionTriggerKind(triggerKind: model.CodeActionTriggerKind): types.CodeActionTriggerKind {\n    switch (triggerKind) {\n        case model.CodeActionTriggerKind.Invoke:\n            return types.CodeActionTriggerKind.Invoke;\n\n        case model.CodeActionTriggerKind.Automatic:\n            return types.CodeActionTriggerKind.Automatic;\n    }\n}\n\nexport function fromDocumentSymbol(info: theia.DocumentSymbol): model.DocumentSymbol {\n    const result: model.DocumentSymbol = {\n        name: info.name,\n        detail: info.detail,\n        range: fromRange(info.range)!,\n        tags: info.tags ? info.tags.map(fromSymbolTag) : [],\n        selectionRange: fromRange(info.selectionRange)!,\n        kind: SymbolKind.fromSymbolKind(info.kind)\n    };\n    if (info.children) {\n        result.children = info.children.map(fromDocumentSymbol);\n    }\n    return result;\n}\n\nexport function toDocumentSymbol(symbol: model.DocumentSymbol): theia.DocumentSymbol {\n    return {\n        name: symbol.name,\n        detail: symbol.detail,\n        range: toRange(symbol.range)!,\n        tags: symbol.tags && symbol.tags.length > 0 ? symbol.tags.map(toSymbolTag) : [],\n        selectionRange: toRange(symbol.selectionRange)!,\n        children: symbol.children ? symbol.children.map(toDocumentSymbol) : [],\n        kind: SymbolKind.toSymbolKind(symbol.kind)\n    };\n}\n\nexport function fromSymbolTag(kind: types.SymbolTag): model.SymbolTag {\n    switch (kind) {\n        case types.SymbolTag.Deprecated: return model.SymbolTag.Deprecated;\n    }\n}\n\nexport function toSymbolTag(kind: model.SymbolTag): types.SymbolTag {\n    switch (kind) {\n        case model.SymbolTag.Deprecated: return types.SymbolTag.Deprecated;\n    }\n}\n\n/**\n * Creates a merged symbol of type theia.SymbolInformation & theia.DocumentSymbol.\n * Is only used as the result type of the `vscode.executeDocumentSymbolProvider` command.\n */\nexport function toMergedSymbol(uri: UriComponents, symbol: model.DocumentSymbol): theia.SymbolInformation & theia.DocumentSymbol {\n    const uriValue = URI.revive(uri);\n    const location = new types.Location(uriValue, toRange(symbol.range));\n    return {\n        name: symbol.name,\n        containerName: symbol.containerName ?? '',\n        kind: SymbolKind.toSymbolKind(symbol.kind),\n        tags: [],\n        location,\n        detail: symbol.detail,\n        range: location.range,\n        selectionRange: toRange(symbol.selectionRange),\n        children: symbol.children?.map(child => toMergedSymbol(uri, child)) ?? []\n    };\n}\n\nexport function isModelLocation(arg: unknown): arg is model.Location {\n    return isObject<model.Location>(arg) &&\n        isModelRange(arg.range) &&\n        isUriComponents(arg.uri);\n}\n\nexport function isModelRange(arg: unknown): arg is model.Range {\n    return isObject<model.Range>(arg) &&\n        typeof arg.startLineNumber === 'number' &&\n        typeof arg.startColumn === 'number' &&\n        typeof arg.endLineNumber === 'number' &&\n        typeof arg.endColumn === 'number';\n}\n\nexport function isUriComponents(arg: unknown): arg is UriComponents {\n    return isObject<UriComponents>(arg) &&\n        typeof arg.scheme === 'string' &&\n        (arg['$mid'] === 1 || (\n            typeof arg.path === 'string' &&\n            typeof arg.query === 'string' &&\n            typeof arg.fragment === 'string'));\n}\n\nexport function isModelCallHierarchyItem(arg: unknown): arg is model.CallHierarchyItem {\n    return isObject<model.CallHierarchyItem>(arg)\n        && isModelRange(arg.range)\n        && isModelRange(arg.selectionRange)\n        && isUriComponents(arg.uri)\n        && !!arg.name;\n}\n\nexport function isModelCallHierarchyIncomingCall(arg: unknown): arg is model.CallHierarchyIncomingCall {\n    return isObject<model.CallHierarchyIncomingCall>(arg) &&\n        'from' in arg &&\n        'fromRanges' in arg &&\n        isModelCallHierarchyItem(arg.from);\n}\n\nexport function isModelCallHierarchyOutgoingCall(arg: unknown): arg is model.CallHierarchyOutgoingCall {\n    return isObject<model.CallHierarchyOutgoingCall>(arg) &&\n        'to' in arg &&\n        'fromRanges' in arg &&\n        isModelCallHierarchyItem(arg.to);\n}\n\nexport function toLocation(value: model.Location): types.Location {\n    return new types.Location(URI.revive(value.uri), toRange(value.range));\n}\n\nexport function fromHierarchyItem(item: types.CallHierarchyItem | types.TypeHierarchyItem): model.HierarchyItem {\n    return {\n        kind: SymbolKind.fromSymbolKind(item.kind),\n        name: item.name,\n        detail: item.detail,\n        uri: item.uri,\n        range: fromRange(item.range),\n        selectionRange: fromRange(item.selectionRange),\n        tags: item.tags,\n        _itemId: item._itemId,\n        _sessionId: item._sessionId,\n    };\n}\n\nexport function fromCallHierarchyItem(item: types.CallHierarchyItem): model.CallHierarchyItem {\n    return <model.CallHierarchyItem>fromHierarchyItem(item);\n}\n\nexport function toCallHierarchyItem(value: model.CallHierarchyItem): types.CallHierarchyItem {\n    const item = new types.CallHierarchyItem(\n        SymbolKind.toSymbolKind(value.kind),\n        value.name,\n        value.detail ? value.detail : '',\n        URI.revive(value.uri),\n        toRange(value.range),\n        toRange(value.selectionRange),\n    );\n    item.tags = value.tags;\n    item._itemId = value._itemId;\n    item._sessionId = value._sessionId;\n\n    return item;\n}\n\nexport function toCallHierarchyIncomingCall(value: model.CallHierarchyIncomingCall): types.CallHierarchyIncomingCall {\n    return new types.CallHierarchyIncomingCall(\n        toCallHierarchyItem(value.from),\n        value.fromRanges && value.fromRanges.map(toRange));\n}\n\nexport function toCallHierarchyOutgoingCall(value: model.CallHierarchyOutgoingCall): types.CallHierarchyOutgoingCall {\n    return new types.CallHierarchyOutgoingCall(\n        toCallHierarchyItem(value.to),\n        value.fromRanges && value.fromRanges.map(toRange));\n}\n\nexport function isModelTypeHierarchyItem(arg: unknown): arg is model.TypeHierarchyItem {\n    return isObject<model.TypeHierarchyItem>(arg)\n        && isModelRange(arg.range)\n        && isModelRange(arg.selectionRange)\n        && isUriComponents(arg.uri)\n        && !!arg.name;\n}\n\nexport function fromTypeHierarchyItem(item: types.TypeHierarchyItem): model.TypeHierarchyItem {\n    return <model.TypeHierarchyItem>fromHierarchyItem(item);\n}\n\nexport function toTypeHierarchyItem(value: model.TypeHierarchyItem): types.TypeHierarchyItem {\n    const item = new types.TypeHierarchyItem(\n        SymbolKind.toSymbolKind(value.kind),\n        value.name,\n        value.detail ? value.detail : '',\n        URI.revive(value.uri),\n        toRange(value.selectionRange),\n        toRange(value.range),\n    );\n    item.tags = value.tags;\n    item._itemId = value._itemId;\n    item._sessionId = value._sessionId;\n\n    return item;\n}\n\nexport function toWorkspaceFolder(folder: model.WorkspaceFolder): theia.WorkspaceFolder {\n    return {\n        uri: URI.revive(folder.uri),\n        name: folder.name,\n        index: folder.index\n    };\n}\n\nexport function fromTask(task: theia.Task): TaskDto | undefined {\n    if (!task) {\n        return undefined;\n    }\n\n    const taskDto = {} as TaskDto;\n    taskDto.label = task.name;\n    taskDto.source = task.source;\n\n    taskDto.runOptions = { reevaluateOnRerun: task.runOptions.reevaluateOnRerun };\n\n    if ((task as types.Task).hasProblemMatchers) {\n        taskDto.problemMatcher = task.problemMatchers;\n    }\n    if ('detail' in task) {\n        taskDto.detail = task.detail;\n    }\n    if (typeof task.scope === 'number') {\n        taskDto.scope = task.scope;\n    } else if (task.scope !== undefined) {\n        taskDto.scope = task.scope.uri.toString();\n    } else {\n        taskDto.scope = types.TaskScope.Workspace;\n    }\n\n    if (task.presentationOptions) {\n        taskDto.presentation = task.presentationOptions;\n    }\n\n    if (task.group) {\n        taskDto.group = {\n            kind: <rpc.TaskGroupKind>task.group.id,\n            isDefault: !!task.group.isDefault\n        };\n    }\n\n    const taskDefinition = task.definition;\n    if (!taskDefinition) {\n        return taskDto;\n    }\n\n    taskDto.type = taskDefinition.type;\n    const { type, ...properties } = taskDefinition;\n    for (const key in properties) {\n        if (properties.hasOwnProperty(key)) {\n            taskDto[key] = properties[key];\n        }\n    }\n\n    const execution = task.execution;\n    if (!execution) {\n        return taskDto;\n    }\n\n    if (types.ShellExecution.is(execution)) {\n        return fromShellExecution(execution, taskDto);\n    }\n\n    if (types.ProcessExecution.is(execution)) {\n        return fromProcessExecution(execution, taskDto);\n    }\n\n    if (types.CustomExecution.is(execution)) {\n        return fromCustomExecution(execution, taskDto);\n    }\n\n    return taskDto;\n}\n\nexport function toTask(taskDto: TaskDto): theia.Task {\n    if (!taskDto) {\n        throw new Error('Task should be provided for converting');\n    }\n\n    const { type, executionType, label, source, scope, problemMatcher, detail, command, args, options, group, presentation, runOptions, ...properties } = taskDto;\n    const result = {} as theia.Task;\n    result.name = label;\n    result.source = source;\n    result.runOptions = runOptions ?? {};\n    if (detail) {\n        result.detail = detail;\n    }\n    if (typeof scope === 'string') {\n        const uri = URI.parse(scope);\n        result.scope = {\n            uri,\n            name: uri.toString(),\n            index: 0\n        };\n    } else {\n        result.scope = scope;\n    }\n\n    const taskDefinition: theia.TaskDefinition = {\n        type: type\n    };\n\n    result.definition = taskDefinition;\n\n    if (executionType === 'process') {\n        result.execution = getProcessExecution(taskDto);\n    }\n\n    const execution = { command, args, options };\n    if (executionType === 'shell' || types.ShellExecution.is(execution)) {\n        result.execution = getShellExecution(taskDto);\n    }\n\n    if (executionType === 'customExecution' || types.CustomExecution.is(execution)) {\n        result.execution = getCustomExecution(taskDto);\n        // if taskType is customExecution, we need to put all the information into taskDefinition,\n        // because some parameters may be in taskDefinition.\n        taskDefinition.label = label;\n        taskDefinition.command = command;\n        taskDefinition.args = args;\n        taskDefinition.options = options;\n    }\n\n    if (group) {\n        result.group = new types.TaskGroup(\n            group.kind,\n            group.kind,\n            group.isDefault\n        );\n    }\n\n    if (presentation) {\n        result.presentationOptions = presentation;\n    }\n\n    if (!properties) {\n        return result;\n    }\n\n    for (const key in properties) {\n        if (properties.hasOwnProperty(key)) {\n            taskDefinition[key] = properties[key];\n        }\n    }\n\n    return result;\n}\n\nexport function fromProcessExecution(execution: theia.ProcessExecution, taskDto: TaskDto): TaskDto {\n    taskDto.executionType = 'process';\n    taskDto.command = execution.process;\n    taskDto.args = execution.args;\n\n    const options = execution.options;\n    if (options) {\n        taskDto.options = options;\n    }\n    return taskDto;\n}\n\nexport function fromShellExecution(execution: theia.ShellExecution, taskDto: TaskDto): TaskDto {\n    taskDto.executionType = 'shell';\n    const options = execution.options;\n    if (options) {\n        taskDto.options = getShellExecutionOptions(options);\n    }\n\n    const commandLine = execution.commandLine;\n    if (commandLine) {\n        taskDto.command = commandLine;\n        return taskDto;\n    }\n\n    if (execution.command) {\n        taskDto.command = getCommand(execution.command);\n        taskDto.args = getShellArgs(execution.args);\n        return taskDto;\n    } else {\n        throw new Error('Command is undefined');\n    }\n}\n\nexport function fromCustomExecution(execution: types.CustomExecution, taskDto: TaskDto): TaskDto {\n    taskDto.executionType = 'customExecution';\n    const callback = execution.callback;\n    if (callback) {\n        taskDto.callback = callback;\n        return taskDto;\n    } else {\n        throw new Error('Converting CustomExecution callback is not implemented');\n    }\n}\n\nexport function getProcessExecution(taskDto: TaskDto): theia.ProcessExecution {\n    return new types.ProcessExecution(\n        taskDto.command,\n        taskDto.args || [],\n        taskDto.options || {});\n}\n\nexport function getShellExecution(taskDto: TaskDto): theia.ShellExecution {\n    if (taskDto.command && Array.isArray(taskDto.args) && taskDto.args.length !== 0) {\n        return new types.ShellExecution(\n            taskDto.command,\n            taskDto.args,\n            taskDto.options || {});\n    }\n    return new types.ShellExecution(\n        taskDto.command || taskDto.commandLine,\n        taskDto.options || {});\n}\n\nexport function getCustomExecution(taskDto: TaskDto): theia.CustomExecution {\n    return new types.CustomExecution(taskDto.callback);\n}\n\nexport function getShellArgs(args: undefined | (string | theia.ShellQuotedString)[]): string[] {\n    if (!args || args.length === 0) {\n        return [];\n    }\n\n    const element = args[0];\n    if (typeof element === 'string') {\n        return args as string[];\n    }\n\n    const result: string[] = [];\n    const shellQuotedArgs = args as theia.ShellQuotedString[];\n\n    shellQuotedArgs.forEach(arg => {\n        result.push(arg.value);\n    });\n\n    return result;\n}\n\nfunction getCommand(command: string | theia.ShellQuotedString): string {\n    return typeof command === 'string' ? command : command.value;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getShellExecutionOptions(options: theia.ShellExecutionOptions): { [key: string]: any } {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result = {} as { [key: string]: any };\n\n    const env = options.env;\n    if (env) {\n        result['env'] = env;\n    }\n\n    const executable = options.executable;\n    if (executable) {\n        result['executable'] = executable;\n    }\n\n    const shellQuoting = options.shellQuoting;\n    if (shellQuoting) {\n        result['shellQuoting'] = shellQuoting;\n    }\n\n    const shellArgs = options.shellArgs;\n    if (shellArgs) {\n        result['shellArgs'] = shellArgs;\n    }\n\n    const cwd = options.cwd;\n    if (cwd) {\n        Object.assign(result, { cwd });\n    }\n\n    return result;\n}\n\nexport function fromSymbolInformation(symbolInformation: theia.SymbolInformation): lstypes.SymbolInformation | undefined {\n    if (!symbolInformation) {\n        return undefined;\n    }\n\n    if (symbolInformation.location && symbolInformation.location.range) {\n        const p1 = lstypes.Position.create(symbolInformation.location.range.start.line, symbolInformation.location.range.start.character);\n        const p2 = lstypes.Position.create(symbolInformation.location.range.end.line, symbolInformation.location.range.end.character);\n        return lstypes.SymbolInformation.create(symbolInformation.name, symbolInformation.kind++ as lstypes.SymbolKind, lstypes.Range.create(p1, p2),\n            symbolInformation.location.uri.toString(), symbolInformation.containerName);\n    }\n\n    return {\n        name: symbolInformation.name,\n        containerName: symbolInformation.containerName,\n        kind: symbolInformation.kind++ as lstypes.SymbolKind,\n        location: {\n            uri: symbolInformation.location.uri.toString(),\n            range: symbolInformation.location.range,\n        }\n    };\n}\n\nexport function toSymbolInformation(symbolInformation: lstypes.SymbolInformation): theia.SymbolInformation | undefined {\n    if (!symbolInformation) {\n        return undefined;\n    }\n\n    return <theia.SymbolInformation>{\n        name: symbolInformation.name,\n        containerName: symbolInformation.containerName,\n        kind: symbolInformation.kind,\n        location: {\n            uri: URI.parse(symbolInformation.location.uri),\n            range: symbolInformation.location.range\n        }\n    };\n}\n\nexport function fromSelectionRange(selectionRange: theia.SelectionRange): model.SelectionRange {\n    return { range: fromRange(selectionRange.range) };\n}\n\nexport function fromFoldingRange(foldingRange: theia.FoldingRange): model.FoldingRange {\n    const range: model.FoldingRange = {\n        start: foldingRange.start + 1,\n        end: foldingRange.end + 1\n    };\n    if (foldingRange.kind) {\n        range.kind = fromFoldingRangeKind(foldingRange.kind);\n    }\n    return range;\n}\n\nexport function fromFoldingRangeKind(kind: theia.FoldingRangeKind | undefined): model.FoldingRangeKind | undefined {\n    if (kind) {\n        switch (kind) {\n            case types.FoldingRangeKind.Comment:\n                return model.FoldingRangeKind.Comment;\n            case types.FoldingRangeKind.Imports:\n                return model.FoldingRangeKind.Imports;\n            case types.FoldingRangeKind.Region:\n                return model.FoldingRangeKind.Region;\n        }\n    }\n    return undefined;\n}\n\nexport function fromColor(color: types.Color): [number, number, number, number] {\n    return [color.red, color.green, color.blue, color.alpha];\n}\n\nexport function toColor(color: [number, number, number, number]): types.Color {\n    return new types.Color(color[0], color[1], color[2], color[3]);\n}\n\nexport function fromColorPresentation(colorPresentation: theia.ColorPresentation): model.ColorPresentation {\n    return {\n        label: colorPresentation.label,\n        textEdit: colorPresentation.textEdit ? fromTextEdit(colorPresentation.textEdit) : undefined,\n        additionalTextEdits: colorPresentation.additionalTextEdits ? colorPresentation.additionalTextEdits.map(value => fromTextEdit(value)) : undefined\n    };\n}\n\nexport function convertIconPath(iconPath: types.URI | { light: types.URI; dark: types.URI } | theia.ThemeIcon | undefined):\n    UriComponents | { light: UriComponents; dark: UriComponents } | ThemeIcon | undefined {\n    if (!iconPath) {\n        return undefined;\n    }\n    if (iconPath instanceof types.URI) {\n        return iconPath.toJSON();\n    } else if ('dark' in iconPath) {\n        return {\n            dark: iconPath.dark.toJSON(),\n            light: iconPath.light?.toJSON()\n        };\n    } else if (ThemeIcon.is(iconPath)) {\n        return {\n            id: iconPath.id,\n            color: iconPath.color ? { id: iconPath.color.id } : undefined\n        };\n    } else {\n        return undefined;\n    }\n}\n\nexport function convertQuickInputButton(plugin: Plugin, button: theia.QuickInputButton, index: number): rpc.TransferQuickInputButton {\n    const iconPath = convertIconPath(button.iconPath);\n    if (!iconPath) {\n        throw new Error(`Could not convert icon path: '${button.iconPath}'`);\n    }\n    return {\n        handle: index,\n        iconUrl: PluginIconPath.toUrl(iconPath, plugin) ?? ThemeIcon.get(iconPath),\n        tooltip: button.tooltip\n    };\n}\n\nexport function convertToTransferQuickPickItems(plugin: Plugin, items: (theia.QuickPickItem | string)[]): rpc.TransferQuickPickItem[] {\n    return items.map((item, index) => {\n        if (typeof item === 'string') {\n            return { kind: 'item', label: item, handle: index };\n        } else if (item.kind === QuickPickItemKind.Separator) {\n            return { kind: 'separator', label: item.label, handle: index };\n        } else {\n            const { label, description, iconPath, detail, picked, alwaysShow, buttons } = item;\n            return {\n                kind: 'item',\n                label,\n                description,\n                iconUrl: PluginIconPath.toUrl(iconPath, plugin) ?? ThemeIcon.get(iconPath),\n                detail,\n                picked,\n                alwaysShow,\n                buttons: buttons ? buttons.map((button, i) => convertQuickInputButton(plugin, button, i)) : undefined,\n                handle: index,\n            };\n        }\n    });\n}\n\nexport namespace DecorationRenderOptions {\n    export function from(options: theia.DecorationRenderOptions): rpc.DecorationRenderOptions {\n        return {\n            isWholeLine: options.isWholeLine,\n            rangeBehavior: options.rangeBehavior ? DecorationRangeBehavior.from(options.rangeBehavior) : undefined,\n            overviewRulerLane: options.overviewRulerLane,\n            light: options.light ? ThemableDecorationRenderOptions.from(options.light) : undefined,\n            dark: options.dark ? ThemableDecorationRenderOptions.from(options.dark) : undefined,\n\n            backgroundColor: <string | types.ThemeColor>options.backgroundColor,\n            outline: options.outline,\n            outlineColor: <string | types.ThemeColor>options.outlineColor,\n            outlineStyle: options.outlineStyle,\n            outlineWidth: options.outlineWidth,\n            border: options.border,\n            borderColor: <string | types.ThemeColor>options.borderColor,\n            borderRadius: options.borderRadius,\n            borderSpacing: options.borderSpacing,\n            borderStyle: options.borderStyle,\n            borderWidth: options.borderWidth,\n            fontStyle: options.fontStyle,\n            fontWeight: options.fontWeight,\n            textDecoration: options.textDecoration,\n            cursor: options.cursor,\n            color: <string | types.ThemeColor>options.color,\n            opacity: options.opacity,\n            letterSpacing: options.letterSpacing,\n            gutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n            gutterIconSize: options.gutterIconSize,\n            overviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n            before: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n            after: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n        };\n    }\n}\n\nexport namespace DecorationRangeBehavior {\n    export function from(value: types.DecorationRangeBehavior): rpc.TrackedRangeStickiness {\n        if (typeof value === 'undefined') {\n            return value;\n        }\n        switch (value) {\n            case types.DecorationRangeBehavior.OpenOpen:\n                return rpc.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges;\n            case types.DecorationRangeBehavior.ClosedClosed:\n                return rpc.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges;\n            case types.DecorationRangeBehavior.OpenClosed:\n                return rpc.TrackedRangeStickiness.GrowsOnlyWhenTypingBefore;\n            case types.DecorationRangeBehavior.ClosedOpen:\n                return rpc.TrackedRangeStickiness.GrowsOnlyWhenTypingAfter;\n        }\n    }\n}\n\nexport namespace ThemableDecorationRenderOptions {\n    export function from(options: theia.ThemableDecorationRenderOptions): rpc.ThemeDecorationRenderOptions {\n        if (typeof options === 'undefined') {\n            return options;\n        }\n        return {\n            backgroundColor: <string | types.ThemeColor>options.backgroundColor,\n            outline: options.outline,\n            outlineColor: <string | types.ThemeColor>options.outlineColor,\n            outlineStyle: options.outlineStyle,\n            outlineWidth: options.outlineWidth,\n            border: options.border,\n            borderColor: <string | types.ThemeColor>options.borderColor,\n            borderRadius: options.borderRadius,\n            borderSpacing: options.borderSpacing,\n            borderStyle: options.borderStyle,\n            borderWidth: options.borderWidth,\n            fontStyle: options.fontStyle,\n            fontWeight: options.fontWeight,\n            textDecoration: options.textDecoration,\n            cursor: options.cursor,\n            color: <string | types.ThemeColor>options.color,\n            opacity: options.opacity,\n            letterSpacing: options.letterSpacing,\n            gutterIconPath: options.gutterIconPath ? pathOrURIToURI(options.gutterIconPath) : undefined,\n            gutterIconSize: options.gutterIconSize,\n            overviewRulerColor: <string | types.ThemeColor>options.overviewRulerColor,\n            before: options.before ? ThemableDecorationAttachmentRenderOptions.from(options.before) : undefined,\n            after: options.after ? ThemableDecorationAttachmentRenderOptions.from(options.after) : undefined,\n        };\n    }\n}\n\nexport namespace ThemableDecorationAttachmentRenderOptions {\n    export function from(options: theia.ThemableDecorationAttachmentRenderOptions): rpc.ContentDecorationRenderOptions {\n        if (typeof options === 'undefined') {\n            return options;\n        }\n        return {\n            contentText: options.contentText,\n            contentIconPath: options.contentIconPath ? pathOrURIToURI(options.contentIconPath) : undefined,\n            border: options.border,\n            borderColor: <string | types.ThemeColor>options.borderColor,\n            fontStyle: options.fontStyle,\n            fontWeight: options.fontWeight,\n            textDecoration: options.textDecoration,\n            color: <string | types.ThemeColor>options.color,\n            backgroundColor: <string | types.ThemeColor>options.backgroundColor,\n            margin: options.margin,\n            width: options.width,\n            height: options.height,\n        };\n    }\n}\n\nexport namespace ViewColumn {\n    export function from(column?: theia.ViewColumn): rpc.EditorGroupColumn {\n        if (typeof column === 'number' && column >= types.ViewColumn.One) {\n            return column - 1; // adjust zero index (ViewColumn.ONE => 0)\n        }\n\n        if (column === types.ViewColumn.Beside) {\n            return SIDE_GROUP;\n        }\n\n        return ACTIVE_GROUP; // default is always the active group\n    }\n\n    export function to(position: rpc.EditorGroupColumn): theia.ViewColumn {\n        if (typeof position === 'number' && position >= 0) {\n            return position + 1; // adjust to index (ViewColumn.ONE => 1)\n        }\n\n        throw new Error('invalid \\'EditorGroupColumn\\'');\n    }\n}\n\nexport function pathOrURIToURI(value: string | URI): URI {\n    if (typeof value === 'undefined') {\n        return value;\n    }\n    if (typeof value === 'string') {\n        return URI.file(value);\n    } else {\n        return value;\n    }\n}\n\nexport function pluginToPluginInfo(plugin: Plugin): rpc.PluginInfo {\n    return {\n        id: plugin.model.id,\n        name: plugin.model.name,\n        displayName: plugin.model.displayName\n    };\n}\n\nexport namespace InlayHintKind {\n    export function from(kind: theia.InlayHintKind): model.InlayHintKind {\n        return kind;\n    }\n    export function to(kind: model.InlayHintKind): theia.InlayHintKind {\n        return kind;\n    }\n}\n\nexport namespace DataTransferItem {\n    export function to(mime: string, item: model.DataTransferItemDTO, resolveFileData: (itemId: string) => Promise<Uint8Array>): theia.DataTransferItem {\n        const file = item.fileData;\n        if (file) {\n            return new class extends types.DataTransferItem {\n                override asFile(): theia.DataTransferFile {\n                    return {\n                        name: file.name,\n                        uri: URI.revive(file.uri),\n                        data: () => resolveFileData(file.id),\n                    };\n                }\n            }('');\n        }\n\n        if (mime === 'text/uri-list' && item.uriListData) {\n            return new types.DataTransferItem(reviveUriList(item.uriListData));\n        }\n\n        return new types.DataTransferItem(item.asString);\n    }\n\n    function reviveUriList(parts: ReadonlyArray<string | UriComponents>): string {\n        return parts.map(part => typeof part === 'string' ? part : URI.revive(part).toString()).join('\\r\\n');\n    }\n}\n\nexport namespace DataTransfer {\n    export function toDataTransfer(value: model.DataTransferDTO, resolveFileData: (itemId: string) => Promise<Uint8Array>): theia.DataTransfer {\n        const dataTransfer = new types.DataTransfer();\n        for (const [mimeType, item] of value.items) {\n            dataTransfer.set(mimeType, DataTransferItem.to(mimeType, item, resolveFileData));\n        }\n        return dataTransfer;\n    }\n}\n\nexport namespace NotebookDocumentContentOptions {\n    export function from(options: theia.NotebookDocumentContentOptions | undefined): notebooks.TransientOptions {\n        return {\n            transientOutputs: options?.transientOutputs ?? false,\n            transientCellMetadata: options?.transientCellMetadata ?? {},\n            transientDocumentMetadata: options?.transientDocumentMetadata ?? {},\n        };\n    }\n}\n\nexport namespace NotebookStatusBarItem {\n    export function from(item: theia.NotebookCellStatusBarItem, commandsConverter: CommandsConverter, disposables: DisposableCollection): notebooks.NotebookCellStatusBarItem {\n        const command = typeof item.command === 'string' ? { title: '', command: item.command } : item.command;\n        return {\n            alignment: item.alignment === types.NotebookCellStatusBarAlignment.Left ? notebooks.CellStatusbarAlignment.Left : notebooks.CellStatusbarAlignment.Right,\n            command: commandsConverter.toSafeCommand(command, disposables),\n            text: item.text,\n            tooltip: item.tooltip,\n            priority: item.priority\n        };\n    }\n}\n\nexport namespace NotebookData {\n\n    export function from(data: theia.NotebookData): rpc.NotebookDataDto {\n        const res: rpc.NotebookDataDto = {\n            metadata: data.metadata ?? Object.create(null),\n            cells: [],\n        };\n        for (const cell of data.cells) {\n            // types.NotebookCellData.validate(cell);\n            res.cells.push(NotebookCellData.from(cell));\n        }\n        return res;\n    }\n\n    export function to(data: rpc.NotebookDataDto): theia.NotebookData {\n        const res = new types.NotebookData(\n            data.cells.map(NotebookCellData.to),\n        );\n        if (!isEmptyObject(data.metadata)) {\n            res.metadata = data.metadata;\n        }\n        return res;\n    }\n}\n\nexport namespace NotebookCellData {\n\n    export function from(data: theia.NotebookCellData): rpc.NotebookCellDataDto {\n        return {\n            cellKind: NotebookCellKind.from(data.kind),\n            language: data.languageId,\n            source: data.value,\n            metadata: data.metadata,\n            internalMetadata: NotebookCellExecutionSummary.from(data.executionSummary ?? {}),\n            outputs: data.outputs ? data.outputs.map(NotebookCellOutputConverter.from) : []\n        };\n    }\n\n    export function to(data: rpc.NotebookCellDataDto): theia.NotebookCellData {\n        return new types.NotebookCellData(\n            NotebookCellKind.to(data.cellKind),\n            data.source,\n            data.language,\n            data.outputs ? data.outputs.map(NotebookCellOutput.to) : undefined,\n            data.metadata,\n            data.internalMetadata ? NotebookCellExecutionSummary.to(data.internalMetadata) : undefined\n        );\n    }\n}\n\nexport namespace NotebookCellKind {\n    export function from(data: theia.NotebookCellKind): notebooks.CellKind {\n        switch (data) {\n            case types.NotebookCellKind.Markup:\n                return notebooks.CellKind.Markup;\n            case types.NotebookCellKind.Code:\n            default:\n                return notebooks.CellKind.Code;\n        }\n    }\n\n    export function to(data: notebooks.CellKind): theia.NotebookCellKind {\n        switch (data) {\n            case notebooks.CellKind.Markup:\n                return types.NotebookCellKind.Markup;\n            case notebooks.CellKind.Code:\n            default:\n                return types.NotebookCellKind.Code;\n        }\n    }\n}\n\nexport namespace NotebookCellOutput {\n    export function from(output: theia.NotebookCellOutput & { outputId: string }): rpc.NotebookOutputDto {\n        return {\n            outputId: output.outputId,\n            items: output.items.map(NotebookCellOutputItem.from),\n            metadata: output.metadata\n        };\n    }\n\n    export function to(output: rpc.NotebookOutputDto): theia.NotebookCellOutput {\n        const items = output.items.map(NotebookCellOutputItem.to);\n        return new types.NotebookCellOutput(items, output.outputId, output.metadata);\n    }\n}\n\nexport namespace NotebookCellOutputItem {\n    export function from(item: types.NotebookCellOutputItem): rpc.NotebookOutputItemDto {\n        return {\n            mime: item.mime,\n            valueBytes: BinaryBuffer.wrap(item.data),\n        };\n    }\n\n    export function to(item: rpc.NotebookOutputItemDto): types.NotebookCellOutputItem {\n        return new types.NotebookCellOutputItem(item.valueBytes.buffer, item.mime);\n    }\n}\n\nexport namespace NotebookCellOutputConverter {\n    export function from(output: types.NotebookCellOutput): rpc.NotebookOutputDto {\n        return {\n            outputId: output.outputId,\n            items: output.items.map(NotebookCellOutputItem.from),\n            metadata: output.metadata\n        };\n    }\n\n    export function to(output: rpc.NotebookOutputDto): types.NotebookCellOutput {\n        const items = output.items.map(NotebookCellOutputItem.to);\n        return new types.NotebookCellOutput(items, output.outputId, output.metadata);\n    }\n\n    export function ensureUniqueMimeTypes(items: types.NotebookCellOutputItem[], warn: boolean = false): types.NotebookCellOutputItem[] {\n        const seen = new Set<string>();\n        const removeIdx = new Set<number>();\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            // We can have multiple text stream mime types in the same output.\n            if (!seen.has(item.mime) || isTextStreamMime(item.mime)) {\n                seen.add(item.mime);\n                continue;\n            }\n            // duplicated mime types... first has won\n            removeIdx.add(i);\n            if (warn) {\n                console.warn(`DUPLICATED mime type '${item.mime}' will be dropped`);\n            }\n        }\n        if (removeIdx.size === 0) {\n            return items;\n        }\n        return items.filter((_, index) => !removeIdx.has(index));\n    }\n}\n\nexport namespace NotebookCellExecutionSummary {\n    export function to(data: notebooks.NotebookCellInternalMetadata): theia.NotebookCellExecutionSummary {\n        return {\n            timing: typeof data.runStartTime === 'number' && typeof data.runEndTime === 'number' ? { startTime: data.runStartTime, endTime: data.runEndTime } : undefined,\n            executionOrder: data.executionOrder,\n            success: data.lastRunSuccess\n        };\n    }\n\n    export function from(data: theia.NotebookCellExecutionSummary): Partial<notebooks.NotebookCellInternalMetadata> {\n        return {\n            lastRunSuccess: data.success,\n            runStartTime: data.timing?.startTime,\n            runEndTime: data.timing?.endTime,\n            executionOrder: data.executionOrder\n        };\n    }\n}\n\nexport namespace NotebookRange {\n\n    export function from(range: theia.NotebookRange): CellRange {\n        return { start: range.start, end: range.end };\n    }\n\n    export function to(range: CellRange): types.NotebookRange {\n        return new types.NotebookRange(range.start, range.end);\n    }\n}\n\nexport namespace NotebookKernelSourceAction {\n    export function from(item: theia.NotebookKernelSourceAction, commandsConverter: CommandsConverter, disposables: DisposableCollection): rpc.NotebookKernelSourceActionDto {\n        const command = typeof item.command === 'string' ? { title: '', command: item.command } : item.command;\n\n        return {\n            command: commandsConverter.toSafeCommand(command, disposables),\n            label: item.label,\n            description: item.description,\n            detail: item.detail,\n            documentation: item.documentation\n        };\n    }\n}\n\nexport namespace TestMessage {\n    export function from(message: theia.TestMessage | readonly theia.TestMessage[]): TestMessageDTO[] {\n        if (isReadonlyArray(message)) {\n            return message.map(msg => TestMessage.from(msg)[0]);\n        }\n        return [{\n            location: fromLocationToLanguageServerLocation(message.location),\n            message: fromMarkdown(message.message)!,\n            expected: message.expectedOutput,\n            actual: message.actualOutput,\n            contextValue: message.contextValue,\n            stackTrace: message.stackTrace && message.stackTrace.map(frame => TestMessageStackFrame.from(frame))\n        }];\n    }\n}\n\nexport namespace TestMessageStackFrame {\n    export function from(stackTrace: theia.TestMessageStackFrame): TestMessageStackFrameDTO {\n        return {\n            label: stackTrace.label,\n            position: stackTrace.position,\n            uri: stackTrace?.uri?.toString()\n        };\n    }\n}\n\nexport namespace TestItem {\n    export function from(test: theia.TestItem): TestItemDTO {\n        return <TestItemDTO>TestItem.fromPartial(test);\n    }\n\n    export function fromPartial(test: Partial<theia.TestItem>): Partial<TestItemDTO> {\n        const result: Partial<Mutable<TestItemDTO>> = {};\n\n        if ('id' in test) {\n            result.id = test.id;\n        }\n\n        if ('uri' in test) {\n            result.uri = test.uri;\n        }\n\n        if ('label' in test) {\n            result.label = test.label;\n        }\n\n        if ('range' in test) {\n            result.range = fromRange(test.range);\n        }\n\n        if ('sortKey' in test) {\n            result.sortKey = test.sortText;\n        }\n\n        if ('tags' in test) {\n            result.tags = test.tags ? test.tags.map(tag => tag.id) : [];\n        }\n        if ('busy' in test) {\n            result.busy = test.busy!;\n        }\n        if ('sortKey' in test) {\n            result.sortKey = test.sortText;\n        }\n        if ('canResolveChildren' in test) {\n            result.canResolveChildren = test.canResolveChildren!;\n        }\n        if ('description' in test) {\n            result.description = test.description;\n        }\n\n        if ('description' in test) {\n            result.error = test.error;\n        }\n\n        if (test.children) {\n            const children: TestItemDTO[] = [];\n            test.children.forEach(item => {\n                children.push(TestItem.from(item));\n            });\n            result.children = children;\n        }\n\n        return result;\n\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, named, interfaces } from 'inversify';\nimport URI from '../../common/uri';\nimport { ContributionProvider, bindContributionProvider } from '../../common/contribution-provider';\n\nexport const PreferenceConfiguration = Symbol('PreferenceConfiguration');\nexport interface PreferenceConfiguration {\n    name: string;\n}\n\nexport function bindPreferenceConfigurations(bind: interfaces.Bind): void {\n    bindContributionProvider(bind, PreferenceConfiguration);\n    bind(PreferenceConfigurations).toSelf().inSingletonScope();\n}\n\n@injectable()\nexport class PreferenceConfigurations {\n\n    @inject(ContributionProvider) @named(PreferenceConfiguration)\n    protected readonly provider: ContributionProvider<PreferenceConfiguration>;\n\n    /* prefer Theia over VS Code by default */\n    getPaths(): string[] {\n        return ['.theia', '.vscode'];\n    }\n\n    getConfigName(): string {\n        return 'settings';\n    }\n\n    protected sectionNames: string[] | undefined;\n    getSectionNames(): string[] {\n        if (!this.sectionNames) {\n            this.sectionNames = this.provider.getContributions().map(p => p.name);\n        }\n        return this.sectionNames;\n    }\n\n    isSectionName(name: string): boolean {\n        return this.getSectionNames().indexOf(name) !== -1;\n    }\n\n    isAnyConfig(name: string): boolean {\n        return [...this.getSectionNames(), this.getConfigName()].includes(name);\n    }\n\n    isSectionUri(configUri: URI | undefined): boolean {\n        return !!configUri && this.isSectionName(this.getName(configUri));\n    }\n\n    isConfigUri(configUri: URI | undefined): boolean {\n        return !!configUri && this.getName(configUri) === this.getConfigName();\n    }\n\n    getName(configUri: URI): string {\n        return configUri.path.name;\n    }\n\n    getPath(configUri: URI): string {\n        return configUri.parent.path.base;\n    }\n\n    createUri(folder: URI, configPath: string = this.getPaths()[0], configName: string = this.getConfigName()): URI {\n        return folder.resolve(configPath).resolve(configName + '.json');\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { CancellationToken, CancellationTokenSource } from '../cancellation';\nimport { DisposableWrapper, Disposable, DisposableCollection } from '../disposable';\nimport { Emitter, Event } from '../event';\nimport { Deferred } from '../promise-util';\nimport { Channel } from './channel';\nimport { MsgPackMessageDecoder, MsgPackMessageEncoder, RpcMessage, RpcMessageDecoder, RpcMessageEncoder, RpcMessageType } from './rpc-message-encoder';\n\n/**\n * Handles request messages received by the {@link RPCProtocol}.\n */\nexport type RequestHandler = (method: string, args: any[]) => Promise<any>;\n\n/**\n * Initialization options for a {@link RpcProtocol}.\n */\nexport interface RpcProtocolOptions {\n    /**\n     * The message encoder that should be used. If `undefined` the default {@link RpcMessageEncoder} will be used.\n     */\n    encoder?: RpcMessageEncoder,\n    /**\n     * The message decoder that should be used. If `undefined` the default {@link RpcMessageDecoder} will be used.\n     */\n    decoder?: RpcMessageDecoder,\n    /**\n     * The runtime mode determines whether the RPC protocol is bi-directional (default) or acts as a client or server only.\n     */\n    mode?: 'default' | 'clientOnly' | 'serverOnly'\n}\n\n/**\n * Establish a RPC protocol on top of a given channel. By default the rpc protocol is bi-directional, meaning it is possible to send\n * requests and notifications to the remote side (i.e. acts as client) as well as receiving requests and notifications from the remote side (i.e. acts as a server).\n * Clients can get a promise for a remote request result that will be either resolved or\n * rejected depending on the success of the request. Keeps track of outstanding requests and matches replies to the appropriate request\n * Currently, there is no timeout handling for long running requests implemented.\n * The bi-directional mode can be reconfigured using the {@link RpcProtocolOptions} to construct an RPC protocol instance that acts only as client or server instead.\n */\nexport class RpcProtocol {\n    static readonly CANCELLATION_TOKEN_KEY = 'add.cancellation.token';\n\n    protected readonly pendingRequests: Map<number, Deferred<any>> = new Map();\n    protected readonly pendingRequestCancellationEventListeners: Map<number, DisposableWrapper> = new Map();\n\n    protected nextMessageId: number = 0;\n\n    protected readonly encoder: RpcMessageEncoder;\n    protected readonly decoder: RpcMessageDecoder;\n    protected readonly mode: 'default' | 'clientOnly' | 'serverOnly';\n\n    protected readonly onNotificationEmitter: Emitter<{ method: string; args: any[]; }> = new Emitter();\n    protected readonly cancellationTokenSources = new Map<number, CancellationTokenSource>();\n\n    get onNotification(): Event<{ method: string; args: any[]; }> {\n        return this.onNotificationEmitter.event;\n    }\n\n    protected toDispose = new DisposableCollection();\n\n    constructor(public readonly channel: Channel, public readonly requestHandler: RequestHandler | undefined, options: RpcProtocolOptions = {}) {\n        this.encoder = options.encoder ?? new MsgPackMessageEncoder();\n        this.decoder = options.decoder ?? new MsgPackMessageDecoder();\n        this.toDispose.push(this.onNotificationEmitter);\n        channel.onClose(event => {\n            this.pendingRequests.forEach(pending => pending.reject(new Error(event.reason)));\n            this.pendingRequests.clear();\n            this.pendingRequestCancellationEventListeners.forEach(disposable => disposable.dispose());\n            this.pendingRequestCancellationEventListeners.clear();\n            this.toDispose.dispose();\n        });\n        this.toDispose.push(channel.onMessage(readBuffer => this.handleMessage(this.decoder.parse(readBuffer()))));\n        this.mode = options.mode ?? 'default';\n\n        if (this.mode !== 'clientOnly' && requestHandler === undefined) {\n            console.error('RPCProtocol was initialized without a request handler but was not set to clientOnly mode.');\n        }\n    }\n\n    handleMessage(message: RpcMessage): void {\n        if (this.mode !== 'clientOnly') {\n            switch (message.type) {\n                case RpcMessageType.Cancel: {\n                    this.handleCancel(message.id);\n                    return;\n                }\n                case RpcMessageType.Request: {\n                    this.handleRequest(message.id, message.method, message.args);\n                    return;\n                }\n                case RpcMessageType.Notification: {\n                    this.handleNotify(message.method, message.args, message.id);\n                    return;\n                }\n            }\n        }\n        if (this.mode !== 'serverOnly') {\n            switch (message.type) {\n                case RpcMessageType.Reply: {\n                    this.handleReply(message.id, message.res);\n                    return;\n                }\n                case RpcMessageType.ReplyErr: {\n                    this.handleReplyErr(message.id, message.err);\n                    return;\n                }\n            }\n        }\n        // If the message was not handled until here, it is incompatible with the mode.\n        console.warn(`Received message incompatible with this RPCProtocol's mode '${this.mode}'. Type: ${message.type}. ID: ${message.id}.`);\n    }\n\n    protected handleReply(id: number, value: any): void {\n        const replyHandler = this.pendingRequests.get(id);\n        if (replyHandler) {\n            this.pendingRequests.delete(id);\n            replyHandler.resolve(value);\n        } else {\n            throw new Error(`No reply handler for reply with id: ${id}`);\n        }\n        this.disposeCancellationEventListener(id);\n    }\n\n    protected handleReplyErr(id: number, error: any): void {\n        const replyHandler = this.pendingRequests.get(id);\n        if (replyHandler) {\n            this.pendingRequests.delete(id);\n            replyHandler.reject(error);\n        } else {\n            throw new Error(`No reply handler for error reply with id: ${id}`);\n        }\n        this.disposeCancellationEventListener(id);\n    }\n\n    protected disposeCancellationEventListener(id: number): void {\n        const toDispose = this.pendingRequestCancellationEventListeners.get(id);\n        if (toDispose) {\n            this.pendingRequestCancellationEventListeners.delete(id);\n            toDispose.dispose();\n        }\n    }\n\n    sendRequest<T>(method: string, args: any[]): Promise<T> {\n        // The last element of the request args might be a cancellation token. As these tokens are not serializable we have to remove it from the\n        // args array and the `CANCELLATION_TOKEN_KEY` string instead.\n        const cancellationToken: CancellationToken | undefined = args.length && CancellationToken.is(args[args.length - 1]) ? args.pop() : undefined;\n\n        const id = this.nextMessageId++;\n        const reply = new Deferred<T>();\n\n        if (cancellationToken) {\n            args.push(RpcProtocol.CANCELLATION_TOKEN_KEY);\n        }\n\n        this.pendingRequests.set(id, reply);\n\n        // register disposable before output.commit() even when not available yet\n        const disposableWrapper = new DisposableWrapper();\n        this.pendingRequestCancellationEventListeners.set(id, disposableWrapper);\n\n        const output = this.channel.getWriteBuffer();\n        this.encoder.request(output, id, method, args);\n        output.commit();\n\n        if (cancellationToken?.isCancellationRequested) {\n            this.sendCancel(id);\n        } else {\n            const disposable = cancellationToken?.onCancellationRequested(() => this.sendCancel(id));\n            if (disposable) {\n                disposableWrapper.set(disposable);\n            }\n        }\n\n        return reply.promise;\n    }\n\n    sendNotification(method: string, args: any[]): void {\n        // If the notification supports a CancellationToken, it needs to be treated like a request\n        // because cancellation does not work with the simplified \"fire and forget\" approach of simple notifications.\n        if (args.length && CancellationToken.is(args[args.length - 1])) {\n            this.sendRequest(method, args);\n            return;\n        }\n\n        const output = this.channel.getWriteBuffer();\n        this.encoder.notification(output, method, args, this.nextMessageId++);\n        output.commit();\n    }\n\n    sendCancel(requestId: number): void {\n        const output = this.channel.getWriteBuffer();\n        this.encoder.cancel(output, requestId);\n        output.commit();\n    }\n\n    protected handleCancel(id: number): void {\n        const cancellationTokenSource = this.cancellationTokenSources.get(id);\n        if (cancellationTokenSource) {\n            cancellationTokenSource.cancel();\n        }\n    }\n\n    protected async handleRequest(id: number, method: string, args: any[]): Promise<void> {\n        const output = this.channel.getWriteBuffer();\n\n        // Check if the last argument of the received args is the key for indicating that a cancellation token should be used\n        // If so remove the key from the args and create a new cancellation token.\n        const addToken = args.length && args[args.length - 1] === RpcProtocol.CANCELLATION_TOKEN_KEY ? args.pop() : false;\n        if (addToken) {\n            const tokenSource = new CancellationTokenSource();\n            this.cancellationTokenSources.set(id, tokenSource);\n            args.push(tokenSource.token);\n        }\n\n        try {\n            const result = await this.requestHandler!(method, args);\n            this.cancellationTokenSources.delete(id);\n            this.encoder.replyOK(output, id, result);\n            output.commit();\n        } catch (err) {\n            // In case of an error the output buffer might already contains parts of an message.\n            // => Dispose the current buffer and retrieve a new, clean one for writing the response error.\n            if (Disposable.is(output)) {\n                output.dispose();\n            }\n            const errorOutput = this.channel.getWriteBuffer();\n            this.cancellationTokenSources.delete(id);\n            this.encoder.replyErr(errorOutput, id, err);\n            errorOutput.commit();\n        }\n    }\n\n    protected async handleNotify(method: string, args: any[], id?: number): Promise<void> {\n        if (this.toDispose.disposed) {\n            return;\n        }\n        this.onNotificationEmitter.fire({ method, args });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from 'inversify';\nimport { isObject } from '../types';\nimport { IndexedAccess, PreferenceSchemaService } from './preference-schema';\nimport { escapeRegExpCharacters } from '../strings';\nimport { JSONValue } from '@lumino/coreutils';\n\nexport interface OverridePreferenceName {\n    preferenceName: string\n    overrideIdentifier: string\n}\nexport namespace OverridePreferenceName {\n    export function is(arg: unknown): arg is OverridePreferenceName {\n        return isObject(arg) && 'preferenceName' in arg && 'overrideIdentifier' in arg;\n    }\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[(.*)\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\nexport const getOverridePattern = (identifier: string) => `\\\\[(${identifier})\\\\]$`;\n\n@injectable()\nexport class PreferenceLanguageOverrideService {\n    @inject(PreferenceSchemaService)\n    protected readonly preferenceSchemaService: PreferenceSchemaService;\n\n    static testOverrideValue(name: string, value: unknown): value is IndexedAccess<JSONValue> {\n        return isObject(value) && OVERRIDE_PROPERTY_PATTERN.test(name);\n    }\n\n    /**\n     * @param overrideIdentifier the language id associated for a language override, e.g. `typescript`\n     * @returns the form used to mark language overrides in preference files, e.g. `[typescript]`\n     */\n    markLanguageOverride(overrideIdentifier: string): string {\n        return `[${overrideIdentifier}]`;\n    }\n\n    /**\n     * @returns the flat JSON path to an overridden preference, e.g. [typescript].editor.tabSize.\n     */\n    overridePreferenceName({ preferenceName, overrideIdentifier }: OverridePreferenceName): string {\n        return `${this.markLanguageOverride(overrideIdentifier)}.${preferenceName}`;\n    }\n\n    /**\n     * @returns an OverridePreferenceName if the `name` contains a language override, e.g. [typescript].editor.tabSize.\n     */\n    overriddenPreferenceName(name: string): OverridePreferenceName | undefined {\n        const index = name.indexOf('.');\n        if (index === -1) {\n            return undefined;\n        }\n        const matches = name.substring(0, index).match(OVERRIDE_PROPERTY_PATTERN);\n        const overrideIdentifier = matches && matches[1];\n        if (!overrideIdentifier || !this.preferenceSchemaService.overrideIdentifiers.has(overrideIdentifier)) {\n            return undefined;\n        }\n        const preferenceName = name.substring(index + 1);\n        return { preferenceName, overrideIdentifier };\n    }\n\n    computeOverridePatternPropertiesKey(): string | undefined {\n        let param: string = '';\n        for (const overrideIdentifier of this.preferenceSchemaService.overrideIdentifiers) {\n            if (param.length) {\n                param += '|';\n            }\n            param += new RegExp(escapeRegExpCharacters(overrideIdentifier)).source;\n        }\n        return param.length ? getOverridePattern(param) : undefined;\n    }\n\n    *getOverridePreferenceNames(preferenceName: string): IterableIterator<string> {\n        for (const overrideIdentifier of this.preferenceSchemaService.overrideIdentifiers) {\n            yield this.overridePreferenceName({ preferenceName, overrideIdentifier });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ResourceLabelFormatter } from '@theia/plugin';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { LabelServiceExt, LabelServiceMain, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\n\nexport class LabelServiceExtImpl implements LabelServiceExt {\n    private handle: number = 0;\n    private proxy: LabelServiceMain;\n    constructor(readonly rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.LABEL_SERVICE_MAIN);\n    }\n\n    $registerResourceLabelFormatter(formatter: ResourceLabelFormatter): Disposable {\n        const handle = this.handle++;\n        this.proxy.$registerResourceLabelFormatter(handle, formatter);\n        return Disposable.create(() => {\n            this.proxy.$unregisterResourceLabelFormatter(handle);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core';\nimport { ChangeBatcher } from './collections';\n\nexport interface CollectionDelta<K, T> {\n    added?: T[];\n    removed?: K[];\n}\n\nexport enum DeltaKind {\n    NONE, ADDED, REMOVED, CHANGED\n}\n\nexport interface TreeDelta<K, T> {\n    path: K[];\n    type: DeltaKind;\n    value?: Partial<T>;\n    childDeltas?: TreeDelta<K, T>[];\n}\n\nexport interface TreeDeltaBuilder<K, T> {\n    reportAdded(path: K[], added: T): void;\n    reportRemoved(path: K[]): void;\n    reportChanged(path: K[], change: Partial<T>): void;\n}\n\nexport class MappingTreeDeltaBuilder<K, T, V> implements TreeDeltaBuilder<K, V> {\n    constructor(private readonly wrapped: TreeDeltaBuilder<K, T>, private readonly map: (value: V) => T, private readonly mapPartial: (value: Partial<V>) => Partial<T>) { }\n    reportAdded(path: K[], added: V): void {\n        this.wrapped.reportAdded(path, this.map(added));\n    }\n    reportRemoved(path: K[]): void {\n        this.wrapped.reportRemoved(path);\n    }\n    reportChanged(path: K[], change: Partial<V>): void {\n        this.wrapped.reportChanged(path, this.mapPartial(change));\n    }\n}\n\nexport class TreeDeltaBuilderImpl<K, T> {\n    protected _currentDelta: TreeDelta<K, T>[] = [];\n\n    get currentDelta(): TreeDelta<K, T>[] {\n        return this._currentDelta;\n    }\n\n    reportAdded(path: K[], added: T): void {\n        this.findNode(path, (parentCollection, nodeIndex, residual) => {\n            if (residual.length === 0) {\n                // we matched an exact node\n                const child = parentCollection[nodeIndex];\n                if (child.type === DeltaKind.REMOVED) {\n                    child.type = DeltaKind.CHANGED;\n                } else if (child.type === DeltaKind.NONE) {\n                    child.type = DeltaKind.ADDED;\n                }\n                child.value = added;\n            } else {\n                this.insert(parentCollection, nodeIndex, {\n                    path: residual,\n                    type: DeltaKind.ADDED,\n                    value: added,\n                });\n            }\n        });\n    }\n\n    reportRemoved(path: K[]): void {\n        this.findNode(path, (parentCollection, nodeIndex, residual) => {\n            if (residual.length === 0) {\n                // we matched an exact node\n                const child = parentCollection[nodeIndex];\n                if (child.type === DeltaKind.CHANGED) {\n                    child.type = DeltaKind.REMOVED;\n                    delete child.value;\n                } else if (child.type === DeltaKind.ADDED) {\n                    parentCollection.splice(nodeIndex, 1);\n                } else if (child.type === DeltaKind.NONE) {\n                    child.type = DeltaKind.REMOVED;\n                }\n            } else {\n                this.insert(parentCollection, nodeIndex, {\n                    path: residual,\n                    type: DeltaKind.REMOVED,\n                });\n            }\n        });\n\n    }\n\n    reportChanged(path: K[], change: Partial<T>): void {\n        this.findNode(path, (parentCollection, nodeIndex, residual) => {\n            if (residual.length === 0) {\n                // we matched an exact node\n                const child = parentCollection[nodeIndex];\n                if (child.type === DeltaKind.NONE) {\n                    child.type = DeltaKind.CHANGED;\n                    child.value = change;\n                } else if (child.type === DeltaKind.CHANGED) {\n                    Object.assign(child.value!, change);\n                }\n            } else {\n                this.insert(parentCollection, nodeIndex, {\n                    path: residual,\n                    type: DeltaKind.CHANGED,\n                    value: change,\n                });\n            }\n        });\n\n    }\n\n    private insert(parentCollection: TreeDelta<K, T>[], nodeIndex: number, delta: TreeDelta<K, T>): void {\n        if (nodeIndex < 0) {\n            parentCollection.push(delta);\n        } else {\n            const child = parentCollection[nodeIndex];\n            const prefixLength = computePrefixLength(delta.path, child.path);\n\n            if (prefixLength === delta.path.length) {\n                child.path = child.path.slice(prefixLength);\n                delta.childDeltas = [child];\n                parentCollection[nodeIndex] = delta;\n            } else {\n                const newNode: TreeDelta<K, T> = {\n                    path: child.path.slice(0, prefixLength),\n                    type: DeltaKind.NONE,\n                    childDeltas: []\n                };\n                parentCollection[nodeIndex] = newNode;\n                delta.path = delta.path.slice(prefixLength);\n                newNode.childDeltas!.push(delta);\n                child.path = child.path.slice(prefixLength);\n                newNode.childDeltas!.push(child);\n                if (newNode.path.length === 0) {\n                    console.log('newNode');\n                }\n            }\n            if (delta.path.length === 0) {\n                console.log('delta');\n            }\n\n            if (child.path.length === 0) {\n                console.log('child');\n            }\n        }\n    }\n\n    private findNode(path: K[], handler: (parentCollection: TreeDelta<K, T>[], nodeIndex: number, residualPath: K[]) => void): void {\n        doFindNode(this._currentDelta, path, handler);\n    }\n}\n\nfunction doFindNode<K, T>(rootCollection: TreeDelta<K, T>[], path: K[],\n    handler: (parentCollection: TreeDelta<K, T>[], nodeIndex: number, residualPath: K[]) => void): void {\n    // handler parameters:\n    // parent collection: the collection the node index refers to, if valid\n    // nodeIndex: the index of the node that has a common path prefix with the path of the path we're searching\n    // residual path: the path that has not been consumed looking for the path: if empty, we found the exact node\n\n    let commonPrefixLength = 0;\n    const childIndex = rootCollection.findIndex(delta => {\n        commonPrefixLength = computePrefixLength(delta.path, path);\n        return commonPrefixLength > 0;\n    });\n    if (childIndex >= 0) {\n        // we know which child to insert into\n        const child = rootCollection[childIndex];\n\n        if (commonPrefixLength === child.path.length) {\n            // we matched a child\n            if (commonPrefixLength === path.length) {\n                // it's an exact match: we already have a node for the given path\n                handler(rootCollection, childIndex, []);\n                return;\n            }\n            // we know the node is below the child\n            if (child.type === DeltaKind.REMOVED || child.type === DeltaKind.ADDED) {\n                // there will be no children deltas beneath added/remove nodes\n                return;\n            }\n            if (!child.childDeltas) {\n                child.childDeltas = [];\n            }\n            doFindNode(child.childDeltas, path.slice(child.path.length), handler);\n        } else {\n            handler(rootCollection, childIndex, path);\n        }\n    } else {\n        // we have no node to insert into\n        handler(rootCollection, -1, path);\n    }\n}\n\nfunction computePrefixLength<K>(left: K[], right: K[]): number {\n    let i = 0;\n    while (i < left.length && i < right.length && left[i] === right[i]) {\n        i++;\n    }\n\n    return i;\n}\n\nexport class AccumulatingTreeDeltaEmitter<K, T> extends TreeDeltaBuilderImpl<K, T> {\n    private batcher: ChangeBatcher;\n    private onDidFlushEmitter: Emitter<TreeDelta<K, T>[]> = new Emitter();\n    onDidFlush: Event<TreeDelta<K, T>[]> = this.onDidFlushEmitter.event;\n\n    constructor(timeoutMillis: number) {\n        super();\n        this.batcher = new ChangeBatcher(() => this.doEmitDelta(), timeoutMillis);\n    }\n\n    flush(): void {\n        this.batcher.flush();\n    }\n\n    doEmitDelta(): void {\n        const batch = this._currentDelta;\n        this._currentDelta = [];\n        this.onDidFlushEmitter.fire(batch);\n    }\n\n    override reportAdded(path: K[], added: T): void {\n        super.reportAdded(path, added);\n        // console.debug(`reported added, now: ${JSON.stringify(path, undefined, 3)}`);\n        // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n        this.batcher.changeOccurred();\n    }\n\n    override reportChanged(path: K[], change: Partial<T>): void {\n        super.reportChanged(path, change);\n        // console.debug(`reported changed, now: ${JSON.stringify(path, undefined, 3)}`);\n        // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n        this.batcher.changeOccurred();\n    }\n\n    override reportRemoved(path: K[]): void {\n        super.reportRemoved(path);\n        // console.debug(`reported removed, now: ${JSON.stringify(path, undefined, 3)}`);\n        // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n        this.batcher.changeOccurred();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { RpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { RPCProtocol } from './rpc-protocol';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { LogPart, KeysToAnyValues, KeysToKeysToAnyValue } from './types';\nimport { CharacterPair, CommentRule, PluginAPIFactory, Plugin, ThemeIcon } from './plugin-api-rpc';\nimport { ExtPluginApi } from './plugin-ext-api-contribution';\nimport { IJSONSchema, IJSONSchemaSnippet } from '@theia/core/lib/common/json-schema';\nimport { ProblemMatcherContribution, ProblemPatternContribution, TaskDefinition } from '@theia/task/lib/common';\nimport { ColorDefinition } from '@theia/core/lib/common/color';\nimport { ResourceLabelFormatter } from '@theia/core/lib/common/label-protocol';\nimport { PluginIdentifiers } from './plugin-identifiers';\nimport { JSONObject } from '@theia/core/shared/@lumino/coreutils';\nimport { PreferenceSchema } from '@theia/core';\n\nexport { PluginIdentifiers };\nexport const hostedServicePath = '/services/hostedPlugin';\n\n/**\n * Plugin engine (API) type, i.e. 'theiaPlugin', 'vscode', 'theiaHeadlessPlugin', etc.\n */\nexport type PluginEngine = string;\n\n/**\n * This interface describes a package.json object.\n */\nexport interface PluginPackage {\n    name: string;\n    // The publisher is not guaranteed to be defined for unpublished plugins. https://github.com/microsoft/vscode-vsce/commit/a38657ece04c20e4fbde15d5ac1ed39ca51cb856\n    publisher: string | undefined;\n    version: string;\n    engines: {\n        [type in PluginEngine]: string;\n    };\n    theiaPlugin?: {\n        frontend?: string;\n        backend?: string;\n        /* Requires the `@theia/plugin-ext-headless` extension. */\n        headless?: string;\n    };\n    main?: string;\n    browser?: string;\n    displayName: string;\n    description: string;\n    contributes?: PluginPackageContribution;\n    packagePath: string;\n    activationEvents?: string[];\n    extensionDependencies?: string[];\n    extensionPack?: string[];\n    l10n?: string;\n    icon?: string;\n    extensionKind?: Array<'ui' | 'workspace'>\n}\nexport namespace PluginPackage {\n    export function toPluginUrl(pck: PluginPackage | PluginModel, relativePath: string): string {\n        return `hostedPlugin/${getPluginId(pck)}/${encodeURIComponent(relativePath)}`;\n    }\n}\n\n/**\n * This interface describes a package.json contribution section object.\n */\nexport interface PluginPackageContribution {\n    authentication?: PluginPackageAuthenticationProvider[];\n    configuration?: JSONObject | JSONObject[];\n    configurationDefaults?: JSONObject;\n    languages?: PluginPackageLanguageContribution[];\n    grammars?: PluginPackageGrammarsContribution[];\n    customEditors?: PluginPackageCustomEditor[];\n    viewsContainers?: { [location: string]: PluginPackageViewContainer[] };\n    views?: { [location: string]: PluginPackageView[] };\n    viewsWelcome?: PluginPackageViewWelcome[];\n    commands?: PluginPackageCommand | PluginPackageCommand[];\n    menus?: { [location: string]: PluginPackageMenu[] };\n    submenus?: PluginPackageSubmenu[];\n    keybindings?: PluginPackageKeybinding | PluginPackageKeybinding[];\n    debuggers?: PluginPackageDebuggersContribution[];\n    snippets?: PluginPackageSnippetsContribution[];\n    themes?: PluginThemeContribution[];\n    iconThemes?: PluginIconThemeContribution[];\n    icons?: PluginIconContribution[];\n    colors?: PluginColorContribution[];\n    taskDefinitions?: PluginTaskDefinitionContribution[];\n    problemMatchers?: PluginProblemMatcherContribution[];\n    problemPatterns?: PluginProblemPatternContribution[];\n    jsonValidation?: PluginJsonValidationContribution[];\n    resourceLabelFormatters?: ResourceLabelFormatter[];\n    localizations?: PluginPackageLocalization[];\n    terminal?: PluginPackageTerminal;\n    notebooks?: PluginPackageNotebook[];\n    notebookRenderer?: PluginNotebookRendererContribution[];\n    notebookPreload?: PluginPackageNotebookPreload[];\n    mcpServerDefinitionProviders?: PluginPackageMcpServerDefinitionProviderContribution[];\n}\n\nexport interface PluginPackageNotebook {\n    type: string;\n    displayName: string;\n    selector?: readonly { filenamePattern?: string; excludeFileNamePattern?: string }[];\n    priority?: string;\n}\n\nexport interface PluginNotebookRendererContribution {\n    readonly id: string;\n    readonly displayName: string;\n    readonly mimeTypes: string[];\n    readonly entrypoint: string | { readonly extends: string; readonly path: string };\n    readonly requiresMessaging?: 'always' | 'optional' | 'never'\n}\n\nexport interface PluginPackageNotebookPreload {\n    type: string;\n    entrypoint: string;\n}\n\nexport interface PluginPackageMcpServerDefinitionProviderContribution {\n    id: string;\n    label: string;\n    description?: string;\n}\n\nexport interface PluginPackageAuthenticationProvider {\n    id: string;\n    label: string;\n}\n\nexport interface PluginPackageTerminalProfile {\n    title: string;\n    id: string;\n    icon?: string;\n}\n\nexport interface PluginPackageTerminal {\n    profiles: PluginPackageTerminalProfile[];\n}\n\nexport interface PluginPackageLocalization {\n    languageId: string;\n    languageName?: string;\n    localizedLanguageName?: string;\n    translations: PluginPackageTranslation[];\n    minimalTranslations?: { [key: string]: string };\n}\n\nexport interface PluginPackageTranslation {\n    id: string;\n    path: string;\n}\n\nexport interface PluginPackageCustomEditor {\n    viewType: string;\n    displayName: string;\n    selector?: CustomEditorSelector[];\n    priority?: CustomEditorPriority;\n}\n\nexport interface CustomEditorSelector {\n    readonly filenamePattern?: string;\n}\n\nexport enum CustomEditorPriority {\n    default = 'default',\n    builtin = 'builtin',\n    option = 'option',\n}\n\nexport interface PluginPackageViewContainer {\n    id: string;\n    title: string;\n    icon: string;\n}\n\nexport enum PluginViewType {\n    Tree = 'tree',\n    Webview = 'webview'\n}\n\nexport interface PluginPackageView {\n    id: string;\n    name: string;\n    when?: string;\n    type?: string;\n}\n\nexport interface PluginPackageViewWelcome {\n    view: string;\n    contents: string;\n    when?: string;\n    enablement?: string;\n}\n\nexport interface PluginPackageCommand {\n    command: string;\n    title: string;\n    shortTitle?: string;\n    original?: string;\n    category?: string;\n    icon?: string | { light: string; dark: string; };\n    enablement?: string;\n}\n\nexport interface PluginPackageMenu {\n    command?: string;\n    submenu?: string;\n    alt?: string;\n    group?: string;\n    when?: string;\n}\n\nexport interface PluginPackageSubmenu {\n    id: string;\n    label: string;\n    icon: IconUrl;\n}\n\nexport interface PluginPackageKeybinding {\n    key?: string;\n    command: string;\n    when?: string;\n    mac?: string;\n    linux?: string;\n    win?: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args?: any;\n}\n\nexport interface PluginPackageGrammarsContribution {\n    language?: string;\n    scopeName: string;\n    path: string;\n    embeddedLanguages?: ScopeMap;\n    tokenTypes?: ScopeMap;\n    injectTo?: string[];\n}\n\nexport interface ScopeMap {\n    [scopeName: string]: string;\n}\n\nexport interface PluginPackageSnippetsContribution {\n    language?: string;\n    path?: string;\n}\n\nexport interface PluginColorContribution {\n    id?: string;\n    description?: string;\n    defaults?: { light?: string, dark?: string, highContrast?: string };\n}\n\nexport type PluginUiTheme = 'vs' | 'vs-dark' | 'hc-black';\n\nexport interface PluginThemeContribution {\n    id?: string;\n    label?: string;\n    description?: string;\n    path?: string;\n    uiTheme?: PluginUiTheme;\n}\n\nexport interface PluginIconThemeContribution {\n    id?: string;\n    label?: string;\n    description?: string;\n    path?: string;\n    uiTheme?: PluginUiTheme;\n}\n\nexport interface PluginIconContribution {\n    [id: string]: {\n        description: string;\n        default: { fontPath: string; fontCharacter: string } | string;\n    };\n}\n\nexport interface PlatformSpecificAdapterContribution {\n    program?: string;\n    args?: string[];\n    runtime?: string;\n    runtimeArgs?: string[];\n}\n\n/**\n * This interface describes a package.json debuggers contribution section object.\n */\nexport interface PluginPackageDebuggersContribution extends PlatformSpecificAdapterContribution {\n    type: string;\n    label?: string;\n    languages?: string[];\n    enableBreakpointsFor?: { languageIds: string[] };\n    configurationAttributes: { [request: string]: IJSONSchema };\n    configurationSnippets: IJSONSchemaSnippet[];\n    variables?: ScopeMap;\n    adapterExecutableCommand?: string;\n    win?: PlatformSpecificAdapterContribution;\n    winx86?: PlatformSpecificAdapterContribution;\n    windows?: PlatformSpecificAdapterContribution;\n    osx?: PlatformSpecificAdapterContribution;\n    linux?: PlatformSpecificAdapterContribution;\n}\n\n/**\n * This interface describes a package.json languages contribution section object.\n */\nexport interface PluginPackageLanguageContribution {\n    id: string;\n    extensions?: string[];\n    filenames?: string[];\n    filenamePatterns?: string[];\n    firstLine?: string;\n    aliases?: string[];\n    mimetypes?: string[];\n    configuration?: string;\n    icon?: IconUrl;\n}\n\nexport interface PluginPackageLanguageContributionConfiguration {\n    comments?: CommentRule;\n    brackets?: CharacterPair[];\n    autoClosingPairs?: (CharacterPair | AutoClosingPairConditional)[];\n    surroundingPairs?: (CharacterPair | AutoClosingPair)[];\n    wordPattern?: string;\n    indentationRules?: IndentationRules;\n    folding?: FoldingRules;\n    onEnterRules?: OnEnterRule[];\n}\n\nexport interface PluginTaskDefinitionContribution {\n    type: string;\n    required: string[];\n    properties?: IJSONSchema['properties'];\n}\n\nexport interface PluginProblemMatcherContribution extends ProblemMatcherContribution {\n    name: string;\n}\n\nexport interface PluginProblemPatternContribution extends ProblemPatternContribution {\n    name: string;\n}\n\nexport interface PluginJsonValidationContribution {\n    fileMatch: string | string[];\n    url: string;\n}\n\nexport const PluginScanner = Symbol('PluginScanner');\n/**\n * This scanner process package.json object and returns plugin metadata objects.\n */\nexport interface PluginScanner {\n    /**\n     * The type of plugin's API (engine name)\n     */\n    apiType: PluginEngine;\n\n    /**\n     * Creates plugin's model.\n     *\n     * @param {PluginPackage} plugin\n     * @returns {PluginModel}\n     */\n    getModel(plugin: PluginPackage): PluginModel;\n\n    /**\n     * Creates plugin's lifecycle.\n     *\n     * @returns {PluginLifecycle}\n     */\n    getLifecycle(plugin: PluginPackage): PluginLifecycle;\n\n    getContribution(plugin: PluginPackage): Promise<PluginContribution | undefined>;\n\n    /**\n     * A mapping between a dependency as its defined in package.json\n     * and its deployable form, e.g. `publisher.name` -> `vscode:extension/publisher.name`\n     */\n    getDependencies(plugin: PluginPackage): Map<string, string> | undefined;\n}\n\n/**\n * A plugin resolver is handling how to resolve a plugin link into a local resource.\n */\nexport const PluginDeployerResolver = Symbol('PluginDeployerResolver');\n/**\n * A resolver handle a set of resource\n */\nexport interface PluginDeployerResolver {\n\n    init?(pluginDeployerResolverInit: PluginDeployerResolverInit): void;\n\n    accept(pluginSourceId: string): boolean;\n\n    resolve(pluginResolverContext: PluginDeployerResolverContext, options?: PluginDeployOptions): Promise<void>;\n\n}\n\nexport const PluginDeployerDirectoryHandler = Symbol('PluginDeployerDirectoryHandler');\nexport interface PluginDeployerDirectoryHandler {\n    accept(pluginDeployerEntry: PluginDeployerEntry): Promise<boolean>;\n\n    handle(context: PluginDeployerDirectoryHandlerContext): Promise<void>;\n}\n\nexport const PluginDeployerFileHandler = Symbol('PluginDeployerFileHandler');\nexport interface PluginDeployerFileHandler {\n\n    accept(pluginDeployerEntry: PluginDeployerEntry): Promise<boolean>;\n\n    handle(context: PluginDeployerFileHandlerContext): Promise<void>;\n}\n\nexport interface PluginDeployerResolverInit {\n\n}\n\nexport interface PluginDeployerResolverContext {\n\n    addPlugin(pluginId: string, path: string): void;\n\n    getPlugins(): PluginDeployerEntry[];\n\n    getOriginId(): string;\n\n}\n\nexport interface PluginDeployerStartContext {\n    readonly userEntries: string[]\n    readonly systemEntries: string[]\n}\n\nexport const PluginDeployer = Symbol('PluginDeployer');\nexport interface PluginDeployer {\n\n    start(): Promise<void>;\n\n}\n\nexport const PluginDeployerParticipant = Symbol('PluginDeployerParticipant');\n/**\n * A participant can hook into the plugin deployer lifecycle.\n */\nexport interface PluginDeployerParticipant {\n    onWillStart?(context: PluginDeployerStartContext): Promise<void>;\n}\n\nexport enum PluginDeployerEntryType {\n\n    FRONTEND,\n\n    BACKEND,\n\n    HEADLESS // Deployed in the Theia Node server outside the context of a frontend/backend connection\n}\n\n/**\n * Whether a plugin installed by a user or system.\n */\nexport enum PluginType {\n    System,\n    User\n};\n\nexport interface UnresolvedPluginEntry {\n    id: string;\n    type?: PluginType;\n}\n\nexport interface PluginDeployerEntry {\n\n    /**\n     * ID (before any resolution)\n     */\n    id(): string;\n\n    /**\n     * Original resolved path\n     */\n    originalPath(): string;\n\n    /**\n     * Local path on the filesystem.\n     */\n    path(): string;\n\n    /**\n     * Get a specific entry\n     */\n    getValue<T>(key: string): T;\n\n    /**\n     * Store a value\n     */\n    storeValue<T>(key: string, value: T): void;\n\n    /**\n     * Update path\n     */\n    updatePath(newPath: string): void;\n\n    getChanges(): string[];\n\n    isFile(): Promise<boolean>;\n\n    isDirectory(): Promise<boolean>;\n\n    /**\n     * Resolved if a resolver has handle this plugin\n     */\n    isResolved(): boolean;\n\n    resolvedBy(): string;\n\n    /**\n     * Accepted when a handler is telling this location can go live\n     */\n    isAccepted(...types: PluginDeployerEntryType[]): boolean;\n\n    accept(...types: PluginDeployerEntryType[]): void;\n\n    hasError(): boolean;\n\n    type: PluginType\n    /**\n     * A fs path to a directory where a plugin is located.\n     * Depending on a plugin format it can be different from `path`.\n     * Use `path` if you want to resolve something within a plugin, like `README.md` file.\n     * Use `rootPath` if you want to manipulate the entire plugin location, like delete or move it.\n     */\n    rootPath: string\n}\n\nexport interface PluginDeployerFileHandlerContext {\n\n    unzip(sourcePath: string, destPath: string): Promise<void>;\n\n    pluginEntry(): PluginDeployerEntry;\n\n}\n\nexport interface PluginDeployerDirectoryHandlerContext {\n\n    copy(origin: string, target: string): Promise<void>;\n\n    pluginEntry(): PluginDeployerEntry;\n\n}\n\n/**\n * This interface describes a plugin model object, which is populated from package.json.\n */\nexport interface PluginModel {\n    id: string;\n    name: string;\n    publisher: string;\n    version: string;\n    displayName: string;\n    description: string;\n    engine: {\n        type: PluginEngine;\n        version: string;\n    };\n    entryPoint: PluginEntryPoint;\n    packageUri: string;\n    /**\n     * @deprecated since 1.1.0 - because it lead to problems with getting a relative path\n     * needed by Icon Themes to correctly load Fonts, use packageUri instead.\n     */\n    packagePath: string;\n    iconUrl?: string;\n    l10n?: string;\n    readmeUrl?: string;\n    licenseUrl?: string;\n}\n\nexport interface PluginEntryPoint {\n    frontend?: string;\n    backend?: string;\n    headless?: string;\n}\n\n/**\n * This interface describes some static plugin contributions.\n */\nexport interface PluginContribution {\n    activationEvents?: string[];\n    authentication?: AuthenticationProviderInformation[];\n    configuration?: PreferenceSchema[];\n    configurationDefaults?: JSONObject;\n    languages?: LanguageContribution[];\n    grammars?: GrammarsContribution[];\n    customEditors?: CustomEditor[];\n    viewsContainers?: { [location: string]: ViewContainer[] };\n    views?: { [location: string]: View[] };\n    viewsWelcome?: ViewWelcome[];\n    commands?: PluginCommand[];\n    menus?: { [location: string]: Menu[] };\n    submenus?: Submenu[];\n    keybindings?: Keybinding[];\n    debuggers?: DebuggerContribution[];\n    snippets?: SnippetContribution[];\n    themes?: ThemeContribution[];\n    iconThemes?: IconThemeContribution[];\n    icons?: IconContribution[];\n    colors?: ColorDefinition[];\n    taskDefinitions?: TaskDefinition[];\n    problemMatchers?: ProblemMatcherContribution[];\n    problemPatterns?: ProblemPatternContribution[];\n    resourceLabelFormatters?: ResourceLabelFormatter[];\n    localizations?: Localization[];\n    terminalProfiles?: TerminalProfile[];\n    notebooks?: NotebookContribution[];\n    notebookRenderer?: NotebookRendererContribution[];\n    notebookPreload?: notebookPreloadContribution[];\n}\nexport interface NotebookContribution {\n    type: string;\n    displayName: string;\n    selector?: readonly { filenamePattern?: string; excludeFileNamePattern?: string }[];\n    priority?: string;\n}\n\nexport interface NotebookRendererContribution {\n    readonly id: string;\n    readonly displayName: string;\n    readonly mimeTypes: string[];\n    readonly entrypoint: string | { readonly extends: string; readonly path: string };\n    readonly requiresMessaging?: 'always' | 'optional' | 'never'\n}\n\nexport interface notebookPreloadContribution {\n    type: string;\n    entrypoint: string;\n}\n\nexport interface AuthenticationProviderInformation {\n    id: string;\n    label: string;\n}\n\nexport interface TerminalProfile {\n    title: string,\n    id: string,\n    icon?: string\n}\n\nexport interface Localization {\n    languageId: string;\n    languageName?: string;\n    localizedLanguageName?: string;\n    translations: Translation[];\n    minimalTranslations?: { [key: string]: string };\n}\n\nexport interface Translation {\n    id: string;\n    path: string;\n    cachedContents?: { [scope: string]: { [key: string]: string } };\n}\n\nexport interface SnippetContribution {\n    uri: string\n    source: string\n    language?: string\n}\n\nexport type UiTheme = 'vs' | 'vs-dark' | 'hc-black';\n\nexport interface ThemeContribution {\n    id?: string;\n    label?: string;\n    description?: string;\n    uri: string;\n    uiTheme?: UiTheme;\n}\n\nexport interface IconThemeContribution {\n    id: string;\n    label?: string;\n    description?: string;\n    uri: string;\n    uiTheme?: UiTheme;\n}\n\nexport interface IconDefinition {\n    fontCharacter: string;\n    location: string;\n}\n\nexport type IconDefaults = ThemeIcon | IconDefinition;\n\nexport interface IconContribution {\n    id: string;\n    extensionId: string;\n    description: string | undefined;\n    defaults: IconDefaults;\n}\n\nexport namespace IconContribution {\n    export function isIconDefinition(defaults: IconDefaults): defaults is IconDefinition {\n        return 'fontCharacter' in defaults;\n    }\n}\n\nexport interface GrammarsContribution {\n    format: 'json' | 'plist';\n    language?: string;\n    scope: string;\n    grammar?: string | object;\n    grammarLocation?: string;\n    embeddedLanguages?: ScopeMap;\n    tokenTypes?: ScopeMap;\n    injectTo?: string[];\n    balancedBracketScopes?: string[];\n    unbalancedBracketScopes?: string[];\n}\n\n/**\n * The language contribution\n */\nexport interface LanguageContribution {\n    id: string;\n    extensions?: string[];\n    filenames?: string[];\n    filenamePatterns?: string[];\n    firstLine?: string;\n    aliases?: string[];\n    mimetypes?: string[];\n    configuration?: LanguageConfiguration;\n    /**\n     * @internal\n     */\n    icon?: IconUrl;\n}\n\nexport interface RegExpOptions {\n    pattern: string;\n    flags?: string;\n}\n\nexport interface LanguageConfiguration {\n    brackets?: CharacterPair[];\n    indentationRules?: IndentationRules;\n    surroundingPairs?: AutoClosingPair[];\n    autoClosingPairs?: AutoClosingPairConditional[];\n    comments?: CommentRule;\n    folding?: FoldingRules;\n    wordPattern?: string | RegExpOptions;\n    onEnterRules?: OnEnterRule[];\n}\n\n/**\n * This interface describes a package.json debuggers contribution section object.\n */\nexport interface DebuggerContribution extends PlatformSpecificAdapterContribution {\n    type: string,\n    label?: string,\n    languages?: string[],\n    enableBreakpointsFor?: {\n        languageIds: string[]\n    },\n    configurationAttributes?: {\n        [request: string]: IJSONSchema\n    },\n    configurationSnippets?: IJSONSchemaSnippet[],\n    variables?: ScopeMap,\n    adapterExecutableCommand?: string\n    win?: PlatformSpecificAdapterContribution;\n    winx86?: PlatformSpecificAdapterContribution;\n    windows?: PlatformSpecificAdapterContribution;\n    osx?: PlatformSpecificAdapterContribution;\n    linux?: PlatformSpecificAdapterContribution;\n}\n\nexport interface IndentationRules {\n    increaseIndentPattern: string | RegExpOptions;\n    decreaseIndentPattern: string | RegExpOptions;\n    unIndentedLinePattern?: string | RegExpOptions;\n    indentNextLinePattern?: string | RegExpOptions;\n}\nexport interface AutoClosingPair {\n    close: string;\n    open: string;\n}\n\nexport interface AutoClosingPairConditional extends AutoClosingPair {\n    notIn?: string[];\n}\n\nexport interface FoldingMarkers {\n    start: string | RegExpOptions;\n    end: string | RegExpOptions;\n}\n\nexport interface FoldingRules {\n    offSide?: boolean;\n    markers?: FoldingMarkers;\n}\n\nexport interface OnEnterRule {\n    beforeText: string | RegExpOptions;\n    afterText?: string | RegExpOptions;\n    previousLineText?: string | RegExpOptions;\n    action: EnterAction;\n}\n\nexport interface EnterAction {\n    indent: 'none' | 'indent' | 'outdent' | 'indentOutdent';\n    appendText?: string;\n    removeText?: number;\n}\n\n/**\n * Custom Editors contribution\n */\nexport interface CustomEditor {\n    viewType: string;\n    displayName: string;\n    selector: CustomEditorSelector[];\n    priority: CustomEditorPriority;\n}\n\n/**\n * Views Containers contribution\n */\nexport interface ViewContainer {\n    id: string;\n    title: string;\n    iconUrl: string;\n    themeIcon?: string;\n}\n\n/**\n * View contribution\n */\nexport interface View {\n    id: string;\n    name: string;\n    when?: string;\n    type?: string;\n}\n\n/**\n * View Welcome contribution\n */\nexport interface ViewWelcome {\n    view: string;\n    content: string;\n    when?: string;\n    enablement?: string;\n    order: number;\n}\n\nexport interface PluginCommand {\n    command: string;\n    title: string;\n    shortTitle?: string;\n    originalTitle?: string;\n    category?: string;\n    iconUrl?: IconUrl;\n    themeIcon?: string;\n    enablement?: string;\n}\n\nexport type IconUrl = string | { light: string; dark: string; };\n\n/**\n * Menu contribution\n */\nexport interface Menu {\n    command?: string;\n    submenu?: string\n    alt?: string;\n    group?: string;\n    when?: string;\n}\n\nexport interface Submenu {\n    id: string;\n    label: string;\n    icon?: IconUrl;\n}\n\n/**\n * Keybinding contribution\n */\nexport interface Keybinding {\n    keybinding?: string;\n    command: string;\n    when?: string;\n    mac?: string;\n    linux?: string;\n    win?: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args?: any;\n}\n\n/**\n * This interface describes a plugin lifecycle object.\n */\nexport interface PluginLifecycle {\n    startMethod: string;\n    stopMethod: string;\n    /**\n     * Frontend module name, frontend plugin should expose this name.\n     */\n    frontendModuleName?: string;\n    /**\n     * Path to the script which should do some initialization before frontend plugin is loaded.\n     */\n    frontendInitPath?: string;\n    /**\n     * Path to the script which should do some initialization before backend plugin is loaded.\n     */\n    backendInitPath?: string;\n}\n\n/**\n * The export function of initialization module of backend plugin.\n */\nexport interface BackendInitializationFn {\n    (apiFactory: PluginAPIFactory, plugin: Plugin): void;\n}\n\nexport interface BackendLoadingFn {\n    (rpc: RPCProtocol, plugin: Plugin): void;\n}\n\nexport interface PluginContext {\n    subscriptions: Disposable[];\n}\n\nexport interface ExtensionContext {\n    subscriptions: Disposable[];\n}\n\nexport interface PluginMetadata {\n    host: string;\n    model: PluginModel;\n    lifecycle: PluginLifecycle;\n    isUnderDevelopment?: boolean;\n    outOfSync: boolean;\n}\n\nexport const MetadataProcessor = Symbol('MetadataProcessor');\nexport interface MetadataProcessor {\n    process(pluginMetadata: PluginMetadata): void;\n}\n\nexport function getPluginId(plugin: PluginPackage | PluginModel): string {\n    return `${plugin.publisher}_${plugin.name}`.replace(/\\W/g, '_');\n}\n\nexport function buildFrontendModuleName(plugin: PluginPackage | PluginModel): string {\n    return `${plugin.publisher}_${plugin.name}`.replace(/\\W/g, '_');\n}\n\nexport const HostedPluginClient = Symbol('HostedPluginClient');\nexport interface HostedPluginClient {\n    postMessage(pluginHost: string, buffer: Uint8Array): Promise<void>;\n\n    log(logPart: LogPart): void;\n\n    onDidDeploy(): void;\n}\n\nexport interface PluginDependencies {\n    metadata: PluginMetadata\n    /**\n     * Actual listing of plugin dependencies.\n     * Mapping from {@link PluginIdentifiers.UnversionedId external representation} of plugin identity to a string\n     * that can be used to identify the resolver for the specific plugin case, e.g. with scheme `vscode://<id>`.\n     */\n    mapping?: Map<string, string>\n}\n\nexport const PluginDeployerHandler = Symbol('PluginDeployerHandler');\nexport interface PluginDeployerHandler {\n    deployFrontendPlugins(frontendPlugins: PluginDeployerEntry[]): Promise<number | undefined>;\n    deployBackendPlugins(backendPlugins: PluginDeployerEntry[]): Promise<number | undefined>;\n    getDeployedPluginIds(): Promise<readonly PluginIdentifiers.VersionedId[]>;\n\n    getDeployedPlugins(): Promise<DeployedPlugin[]>;\n    getDeployedPluginsById(pluginId: string): DeployedPlugin[];\n\n    getDeployedPlugin(pluginId: PluginIdentifiers.VersionedId): DeployedPlugin | undefined;\n    /**\n     * Removes the plugin from the location it originally resided on disk.\n     * Unless `--uncompressed-plugins-in-place` is passed to the CLI, this operation is safe.\n     */\n    uninstallPlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean>;\n\n    /**\n     * Removes the plugin from the locations to which it had been deployed.\n     * This operation is not safe - references to deleted assets may remain.\n     */\n    undeployPlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean>;\n\n    getPluginDependencies(pluginToBeInstalled: PluginDeployerEntry): Promise<PluginDependencies | undefined>;\n\n    /**\n     * Marks the given plugins as \"disabled\". While the plugin remains installed, it will no longer\n     * be used. Has no effect if the plugin is not installed\n     * @param pluginId the plugin to disable\n     * @returns whether the plugin was installed, enabled and could be disabled\n     */\n    disablePlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean>;\n\n    /**\n     * Marks the given plugins as \"enabled\". Has no effect if the plugin is not installed.\n     * @param pluginId the plugin to enabled\n     * @returns whether the plugin was installed, disabled and could be enabled\n     */\n    enablePlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean>;\n\n}\n\nexport interface DeployedPlugin {\n    /**\n     * defaults to system\n     */\n    type?: PluginType;\n    metadata: PluginMetadata;\n    contributes?: PluginContribution;\n}\n\nexport const HostedPluginServer = Symbol('HostedPluginServer');\nexport interface HostedPluginServer extends RpcServer<HostedPluginClient> {\n\n    getDeployedPluginIds(): Promise<PluginIdentifiers.VersionedId[]>;\n\n    getUninstalledPluginIds(): Promise<readonly PluginIdentifiers.VersionedId[]>;\n\n    getDisabledPluginIds(): Promise<readonly PluginIdentifiers.VersionedId[]>;\n\n    getDeployedPlugins(ids: PluginIdentifiers.VersionedId[]): Promise<DeployedPlugin[]>;\n\n    getExtPluginAPI(): Promise<ExtPluginApi[]>;\n\n    onMessage(targetHost: string, message: Uint8Array): Promise<void>;\n\n}\n\nexport const PLUGIN_HOST_BACKEND = 'main';\n\nexport interface WorkspaceStorageKind {\n    workspace?: string | undefined;\n    roots: string[];\n}\nexport type GlobalStorageKind = undefined;\nexport type PluginStorageKind = GlobalStorageKind | WorkspaceStorageKind;\n\nexport interface PluginDeployOptions {\n    version: string;\n    /** Instructs the deployer to ignore any existing plugins with different versions */\n    ignoreOtherVersions?: boolean;\n}\n\nexport const pluginServerJsonRpcPath = '/services/plugin-ext';\nexport const PluginServer = Symbol('PluginServer');\nexport interface PluginServer {\n\n    /**\n     * Deploy a plugin.\n     *\n     * @param type whether a plugin is installed by a system or a user, defaults to a user\n     */\n    install(pluginEntry: string, type?: PluginType, options?: PluginDeployOptions): Promise<void>;\n    uninstall(pluginId: PluginIdentifiers.VersionedId): Promise<void>;\n\n    enablePlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean>;\n    disablePlugin(pluginId: PluginIdentifiers.VersionedId): Promise<boolean>;\n\n    getInstalledPlugins(): Promise<readonly PluginIdentifiers.VersionedId[]>;\n    getUninstalledPlugins(): Promise<readonly PluginIdentifiers.VersionedId[]>;\n    getDisabledPlugins(): Promise<readonly PluginIdentifiers.VersionedId[]>;\n\n    setStorageValue(key: string, value: KeysToAnyValues, kind: PluginStorageKind): Promise<boolean>;\n    getStorageValue(key: string, kind: PluginStorageKind): Promise<KeysToAnyValues>;\n    getAllStorageValues(kind: PluginStorageKind): Promise<KeysToKeysToAnyValue>;\n}\n\nexport const ServerPluginRunner = Symbol('ServerPluginRunner');\nexport interface ServerPluginRunner {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    acceptMessage(pluginHostId: string, jsonMessage: Uint8Array): boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onMessage(pluginHostId: string, jsonMessage: Uint8Array): void;\n    setClient(client: HostedPluginClient): void;\n    setDefault(defaultRunner: ServerPluginRunner): void;\n    clientClosed(): void;\n}\n\nexport const PluginHostEnvironmentVariable = Symbol('PluginHostEnvironmentVariable');\nexport interface PluginHostEnvironmentVariable {\n    process(env: NodeJS.ProcessEnv): void;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport type * as monaco from '@theia/monaco-editor-core';\nimport { MarkdownString as MarkdownStringDTO } from '@theia/core/lib/common/markdown-rendering';\nimport { UriComponents } from './uri-components';\nimport { CompletionItemTag, DocumentPasteEditKind, SnippetString } from '../plugin/types-impl';\nimport { Event as TheiaEvent } from '@theia/core/lib/common/event';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { SerializedRegExp } from './plugin-api-rpc';\n\n// Should contains internal Plugin API types\n\n/**\n * Represents options to configure the behavior of showing a document in an editor.\n */\nexport interface TextDocumentShowOptions {\n    /**\n     * An optional selection to apply for the document in the editor.\n     */\n    selection?: Range;\n\n    /**\n     * An optional flag that when `true` will stop the editor from taking focus.\n     */\n    preserveFocus?: boolean;\n\n    /**\n     * An optional flag that controls if an editor-tab will be replaced\n     * with the next editor or if it will be kept.\n     */\n    preview?: boolean;\n\n    /**\n     * Denotes a location of an editor in the window. Editors can be arranged in a grid\n     * and each column represents one editor location in that grid by counting the editors\n     * in order of their appearance.\n     */\n    viewColumn?: theia.ViewColumn;\n}\n\nexport interface Range {\n    /**\n     * Line number on which the range starts (starts at 1).\n     */\n    readonly startLineNumber: number;\n    /**\n     * Column on which the range starts in line `startLineNumber` (starts at 1).\n     */\n    readonly startColumn: number;\n    /**\n     * Line number on which the range ends.\n     */\n    readonly endLineNumber: number;\n    /**\n     * Column on which the range ends in line `endLineNumber`.\n     */\n    readonly endColumn: number;\n}\n\nexport interface Position {\n    /**\n     * line number (starts at 1)\n     */\n    readonly lineNumber: number,\n    /**\n     * column (starts at 1)\n     */\n    readonly column: number\n}\n\nexport { MarkdownStringDTO as MarkdownString };\n\nexport interface SerializedDocumentFilter {\n    $serialized: true;\n    language?: string;\n    scheme?: string;\n    pattern?: theia.GlobPattern;\n    notebookType?: string;\n}\n\nexport enum CompletionTriggerKind {\n    Invoke = 0,\n    TriggerCharacter = 1,\n    TriggerForIncompleteCompletions = 2\n}\n\nexport interface CompletionContext {\n    triggerKind: CompletionTriggerKind;\n    triggerCharacter?: string;\n}\n\nexport enum CompletionItemInsertTextRule {\n    KeepWhitespace = 1,\n    InsertAsSnippet = 4\n}\n\nexport interface Completion {\n    label: string | theia.CompletionItemLabel;\n    label2?: string;\n    kind: CompletionItemKind;\n    detail?: string;\n    documentation?: string | MarkdownStringDTO;\n    sortText?: string;\n    filterText?: string;\n    preselect?: boolean;\n    insertText: string;\n    insertTextRules?: CompletionItemInsertTextRule;\n    range?: Range | {\n        insert: Range;\n        replace: Range;\n    };\n    commitCharacters?: string[];\n    additionalTextEdits?: SingleEditOperation[];\n    command?: Command;\n    tags?: CompletionItemTag[];\n    /** @deprecated use tags instead. */\n    deprecated?: boolean;\n}\n\nexport interface SingleEditOperation {\n    range: Range;\n    text: string | null;\n    /**\n     * This indicates that this operation has \"insert\" semantics.\n     * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n     */\n    forceMoveMarkers?: boolean;\n}\n\nexport interface Command {\n    id: string;\n    title: string;\n    tooltip?: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    arguments?: any[];\n}\n\nexport enum CompletionItemKind {\n    Method = 0,\n    Function = 1,\n    Constructor = 2,\n    Field = 3,\n    Variable = 4,\n    Class = 5,\n    Struct = 6,\n    Interface = 7,\n    Module = 8,\n    Property = 9,\n    Event = 10,\n    Operator = 11,\n    Unit = 12,\n    Value = 13,\n    Constant = 14,\n    Enum = 15,\n    EnumMember = 16,\n    Keyword = 17,\n    Text = 18,\n    Color = 19,\n    File = 20,\n    Reference = 21,\n    Customcolor = 22,\n    Folder = 23,\n    TypeParameter = 24,\n    User = 25,\n    Issue = 26,\n    Snippet = 27\n}\n\nexport class IdObject {\n    id?: number;\n}\nexport interface CompletionDto extends Completion {\n    id: number;\n    parentId: number;\n}\n\nexport interface CompletionResultDto extends IdObject {\n    id: number;\n    defaultRange: {\n        insert: Range,\n        replace: Range\n    }\n    completions: CompletionDto[];\n    incomplete?: boolean;\n}\n\nexport interface MarkerData {\n    code?: string;\n    severity: MarkerSeverity;\n    message: string;\n    source?: string;\n    startLineNumber: number;\n    startColumn: number;\n    endLineNumber: number;\n    endColumn: number;\n    relatedInformation?: RelatedInformation[];\n    tags?: MarkerTag[];\n}\n\nexport interface RelatedInformation {\n    resource: string;\n    message: string;\n    startLineNumber: number;\n    startColumn: number;\n    endLineNumber: number;\n    endColumn: number;\n}\n\nexport enum MarkerSeverity {\n    Hint = 1,\n    Info = 2,\n    Warning = 4,\n    Error = 8,\n}\n\nexport enum MarkerTag {\n    Unnecessary = 1,\n    Deprecated = 2,\n}\n\nexport interface ParameterInformation {\n    label: string | [number, number];\n    documentation?: string | MarkdownStringDTO;\n}\n\nexport interface SignatureInformation {\n    label: string;\n    documentation?: string | MarkdownStringDTO;\n    parameters: ParameterInformation[];\n    activeParameter?: number;\n}\n\nexport interface SignatureHelp extends IdObject {\n    signatures: SignatureInformation[];\n    activeSignature: number;\n    activeParameter: number;\n}\n\nexport interface SignatureHelpContext {\n    triggerKind: theia.SignatureHelpTriggerKind;\n    triggerCharacter?: string;\n    isRetrigger: boolean;\n    activeSignatureHelp?: SignatureHelp;\n}\n\nexport interface Hover {\n    contents: MarkdownStringDTO[];\n    range?: Range;\n}\n\nexport interface HoverProvider {\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Hover | undefined | Thenable<Hover | undefined>;\n}\n\nexport interface EvaluatableExpression {\n    range: Range;\n    expression?: string;\n}\n\nexport interface EvaluatableExpressionProvider {\n    provideEvaluatableExpression(model: monaco.editor.ITextModel, position: monaco.Position,\n        token: monaco.CancellationToken): EvaluatableExpression | undefined | Thenable<EvaluatableExpression | undefined>;\n}\n\nexport interface InlineValueContext {\n    frameId: number;\n    stoppedLocation: Range;\n}\n\nexport interface InlineValueText {\n    type: 'text';\n    range: Range;\n    text: string;\n}\n\nexport interface InlineValueVariableLookup {\n    type: 'variable';\n    range: Range;\n    variableName?: string;\n    caseSensitiveLookup: boolean;\n}\n\nexport interface InlineValueEvaluatableExpression {\n    type: 'expression';\n    range: Range;\n    expression?: string;\n}\n\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueEvaluatableExpression;\n\nexport interface InlineValuesProvider {\n    onDidChangeInlineValues?: TheiaEvent<void> | undefined;\n    provideInlineValues(model: monaco.editor.ITextModel, viewPort: Range, context: InlineValueContext, token: monaco.CancellationToken):\n        InlineValue[] | undefined | Thenable<InlineValue[] | undefined>;\n}\n\nexport enum DocumentHighlightKind {\n    Text = 0,\n    Read = 1,\n    Write = 2\n}\n\nexport interface DocumentHighlight {\n    range: Range;\n    kind?: DocumentHighlightKind;\n}\n\nexport interface DocumentHighlightProvider {\n    provideDocumentHighlights(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): DocumentHighlight[] | undefined;\n}\n\nexport interface FormattingOptions {\n    tabSize: number;\n    insertSpaces: boolean;\n}\n\nexport interface TextEdit {\n    range: Range;\n    text: string;\n    eol?: monaco.editor.EndOfLineSequence;\n}\n\nexport interface DocumentDropEdit {\n    insertText: string | SnippetString;\n    additionalEdit?: WorkspaceEdit;\n}\n\nexport interface DocumentDropEditProviderMetadata {\n    readonly providedDropEditKinds?: readonly DocumentPasteEditKind[];\n    readonly dropMimeTypes: readonly string[];\n}\n\nexport interface DataTransferFileDTO {\n    readonly id: string;\n    readonly name: string;\n    readonly uri?: UriComponents;\n}\n\nexport interface DataTransferItemDTO {\n    readonly asString: string;\n    readonly fileData: DataTransferFileDTO | undefined;\n    readonly uriListData?: ReadonlyArray<string | UriComponents>;\n}\n\nexport interface DataTransferDTO {\n    readonly items: Array<[/* type */string, DataTransferItemDTO]>;\n}\n\nexport interface Location {\n    uri: UriComponents;\n    range: Range;\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\nexport interface LocationLink {\n    uri: UriComponents;\n    range: Range;\n    originSelectionRange?: Range;\n    targetSelectionRange?: Range;\n}\n\nexport interface DefinitionProvider {\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Definition | undefined;\n}\n\nexport interface DeclarationProvider {\n    provideDeclaration(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken): Definition | undefined;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\n    /**\n     * Include the declaration of the current symbol.\n     */\n    includeDeclaration: boolean;\n}\n\nexport type CacheId = number;\nexport type ChainedCacheId = [CacheId, CacheId];\n\nexport type CachedSessionItem<T> = T & { cacheId?: ChainedCacheId };\nexport type CachedSession<T> = T & { cacheId?: CacheId };\n\nexport interface DocumentLink {\n    cacheId?: ChainedCacheId,\n    range: Range;\n    url?: UriComponents | string;\n    tooltip?: string;\n}\n\nexport interface DocumentLinkProvider {\n    provideLinks(model: monaco.editor.ITextModel, token: monaco.CancellationToken): DocumentLink[] | undefined | PromiseLike<DocumentLink[] | undefined>;\n    resolveLink?: (link: DocumentLink, token: monaco.CancellationToken) => DocumentLink | PromiseLike<DocumentLink[]>;\n}\n\nexport interface CodeLensSymbol {\n    range: Range;\n    command?: Command;\n}\n\nexport interface CodeAction {\n    cacheId: number;\n    title: string;\n    command?: Command;\n    edit?: WorkspaceEdit;\n    diagnostics?: MarkerData[];\n    kind?: string;\n    disabled?: { reason: string };\n    isPreferred?: boolean;\n}\n\nexport enum CodeActionTriggerKind {\n    Invoke = 1,\n    Automatic = 2,\n}\n\nexport interface CodeActionContext {\n    only?: string;\n    trigger: CodeActionTriggerKind\n}\n\nexport type CodeActionProviderDocumentation = ReadonlyArray<{ command: Command, kind: string }>;\n\nexport interface CodeActionProvider {\n    provideCodeActions(\n        model: monaco.editor.ITextModel,\n        range: Range | Selection,\n        context: monaco.languages.CodeActionContext,\n        token: monaco.CancellationToken\n    ): CodeAction[] | PromiseLike<CodeAction[]>;\n\n    providedCodeActionKinds?: string[];\n}\n\n// copied from https://github.com/microsoft/vscode/blob/b165e20587dd0797f37251515bc9e4dbe513ede8/src/vs/editor/common/modes.ts\nexport interface WorkspaceEditMetadata {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n    iconPath?: UriComponents | {\n        id: string;\n    } | {\n        light: UriComponents;\n        dark: UriComponents;\n    };\n}\n\nexport interface WorkspaceFileEdit {\n    newResource?: UriComponents;\n    oldResource?: UriComponents;\n    options?: { overwrite?: boolean, ignoreIfNotExists?: boolean, ignoreIfExists?: boolean, recursive?: boolean };\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceTextEdit {\n    resource: UriComponents;\n    modelVersionId?: number;\n    textEdit: TextEdit;\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n    edits: Array<WorkspaceTextEdit | WorkspaceFileEdit>;\n}\n\nexport enum SymbolKind {\n    File = 0,\n    Module = 1,\n    Namespace = 2,\n    Package = 3,\n    Class = 4,\n    Method = 5,\n    Property = 6,\n    Field = 7,\n    Constructor = 8,\n    Enum = 9,\n    Interface = 10,\n    Function = 11,\n    Variable = 12,\n    Constant = 13,\n    String = 14,\n    Number = 15,\n    Boolean = 16,\n    Array = 17,\n    Object = 18,\n    Key = 19,\n    Null = 20,\n    EnumMember = 21,\n    Struct = 22,\n    Event = 23,\n    Operator = 24,\n    TypeParameter = 25\n}\n\nexport enum SymbolTag {\n    Deprecated = 1\n}\n\nexport interface DocumentSymbol {\n    name: string;\n    detail: string;\n    kind: SymbolKind;\n    tags: ReadonlyArray<SymbolTag>;\n    containerName?: string;\n    range: Range;\n    selectionRange: Range;\n    children?: DocumentSymbol[];\n}\n\nexport interface WorkspaceRootsChangeEvent {\n    roots: string[];\n}\n\nexport interface WorkspaceFolder {\n    uri: UriComponents;\n    name: string;\n    index: number;\n}\n\nexport interface Breakpoint {\n    readonly id: string;\n    readonly enabled: boolean;\n    readonly condition?: string;\n    readonly hitCondition?: string;\n    readonly logMessage?: string;\n    readonly location?: Location;\n    readonly functionName?: string;\n}\n\nexport interface WorkspaceSymbolParams {\n    query: string\n}\n\nexport interface FoldingContext {\n}\n\nexport interface FoldingRange {\n    start: number;\n    end: number;\n    kind?: FoldingRangeKind;\n}\n\nexport class FoldingRangeKind {\n    static readonly Comment = new FoldingRangeKind('comment');\n    static readonly Imports = new FoldingRangeKind('imports');\n    static readonly Region = new FoldingRangeKind('region');\n    public constructor(public value: string) { }\n}\n\nexport interface SelectionRange {\n    range: Range;\n}\n\nexport interface Color {\n    readonly red: number;\n    readonly green: number;\n    readonly blue: number;\n    readonly alpha: number;\n}\n\nexport interface ColorPresentation {\n    label: string;\n    textEdit?: TextEdit;\n    additionalTextEdits?: TextEdit[];\n}\n\nexport interface ColorInformation {\n    range: Range;\n    color: Color;\n}\n\nexport interface DocumentColorProvider {\n    provideDocumentColors(model: monaco.editor.ITextModel): PromiseLike<ColorInformation[]>;\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: ColorInformation): PromiseLike<ColorPresentation[]>;\n}\n\nexport interface Rejection {\n    rejectReason?: string;\n}\n\nexport interface RenameLocation {\n    range: Range;\n    text: string;\n}\n\nexport class HierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    tags?: readonly SymbolTag[];\n    name: string;\n    detail?: string;\n    uri: UriComponents;\n    range: Range;\n    selectionRange: Range;\n}\n\nexport class TypeHierarchyItem extends HierarchyItem { }\n\nexport interface CallHierarchyItem extends HierarchyItem {\n    data?: unknown;\n}\n\nexport interface CallHierarchyIncomingCall {\n    from: CallHierarchyItem;\n    fromRanges: Range[];\n}\n\nexport interface CallHierarchyOutgoingCall {\n    to: CallHierarchyItem;\n    fromRanges: Range[];\n}\n\nexport interface LinkedEditingRanges {\n    ranges: Range[];\n    wordPattern?: SerializedRegExp;\n}\n\nexport interface SearchInWorkspaceResult {\n    root: string;\n    fileUri: string;\n    matches: SearchMatch[];\n}\n\nexport interface SearchMatch {\n    line: number;\n    character: number;\n    length: number;\n    lineText: string | LinePreview;\n\n}\nexport interface LinePreview {\n    text: string;\n    character: number;\n}\n\n/**\n * @deprecated Use {@link theia.AuthenticationSession} instead.\n */\nexport interface AuthenticationSession extends theia.AuthenticationSession {\n}\n\n/**\n * @deprecated Use {@link theia.AuthenticationProviderAuthenticationSessionsChangeEvent} instead.\n */\nexport interface AuthenticationSessionsChangeEvent extends theia.AuthenticationProviderAuthenticationSessionsChangeEvent {\n}\n\n/**\n * @deprecated Use {@link theia.AuthenticationProviderInformation} instead.\n */\nexport interface AuthenticationProviderInformation extends theia.AuthenticationProviderInformation {\n}\n\nexport interface CommentOptions {\n    /**\n     * An optional string to show on the comment input box when it's collapsed.\n     */\n    prompt?: string;\n\n    /**\n     * An optional string to show as placeholder in the comment input box when it's focused.\n     */\n    placeHolder?: string;\n}\n\nexport enum CommentMode {\n    Editing = 0,\n    Preview = 1\n}\n\nexport interface Comment {\n    readonly uniqueIdInThread: number;\n    readonly body: MarkdownStringDTO;\n    readonly userName: string;\n    readonly userIconPath?: string;\n    readonly contextValue?: string;\n    readonly label?: string;\n    readonly mode?: CommentMode;\n    /** Timestamp serialized as ISO date string via Date.prototype.toISOString */\n    readonly timestamp?: string;\n}\n\nexport enum CommentThreadState {\n    Unresolved = 0,\n    Resolved = 1\n}\n\nexport enum CommentThreadCollapsibleState {\n    /**\n     * Determines an item is collapsed\n     */\n    Collapsed = 0,\n    /**\n     * Determines an item is expanded\n     */\n    Expanded = 1\n}\n\nexport interface CommentInput {\n    value: string;\n    uri: URI;\n}\n\nexport interface CommentThread {\n    commentThreadHandle: number;\n    controllerHandle: number;\n    extensionId?: string;\n    threadId: string;\n    resource: string | null;\n    range: Range | undefined;\n    label: string | undefined;\n    contextValue: string | undefined;\n    comments: Comment[] | undefined;\n    onDidChangeComments: TheiaEvent<Comment[] | undefined>;\n    collapsibleState?: CommentThreadCollapsibleState;\n    state?: CommentThreadState;\n    input?: CommentInput;\n    onDidChangeInput: TheiaEvent<CommentInput | undefined>;\n    onDidChangeRange: TheiaEvent<Range | undefined>;\n    onDidChangeLabel: TheiaEvent<string | undefined>;\n    onDidChangeState: TheiaEvent<CommentThreadState | undefined>;\n    onDidChangeCollapsibleState: TheiaEvent<CommentThreadCollapsibleState | undefined>;\n    isDisposed: boolean;\n    canReply: boolean | theia.CommentAuthorInformation;\n    onDidChangeCanReply: TheiaEvent<boolean | theia.CommentAuthorInformation>;\n}\n\nexport interface CommentThreadChangedEventMain extends CommentThreadChangedEvent {\n    owner: string;\n}\n\nexport interface CommentThreadChangedEvent {\n    /**\n     * Added comment threads.\n     */\n    readonly added: CommentThread[];\n\n    /**\n     * Removed comment threads.\n     */\n    readonly removed: CommentThread[];\n\n    /**\n     * Changed comment threads.\n     */\n    readonly changed: CommentThread[];\n}\n\nexport interface CommentingRanges {\n    readonly resource: URI;\n    ranges: Range[];\n    fileComments: boolean;\n}\n\nexport interface CommentInfo {\n    extensionId?: string;\n    threads: CommentThread[];\n    commentingRanges: CommentingRanges;\n}\n\nexport interface ProvidedTerminalLink extends theia.TerminalLink {\n    providerId: string\n}\n\nexport interface InlayHintLabelPart {\n    label: string;\n    tooltip?: string | MarkdownStringDTO;\n    location?: Location;\n    command?: Command;\n}\n\nexport interface InlayHint {\n    position: { lineNumber: number, column: number };\n    label: string | InlayHintLabelPart[];\n    tooltip?: string | MarkdownStringDTO | undefined;\n    kind?: InlayHintKind;\n    textEdits?: TextEdit[];\n    paddingLeft?: boolean;\n    paddingRight?: boolean;\n}\n\nexport enum InlayHintKind {\n    Type = 1,\n    Parameter = 2,\n}\n\nexport interface InlayHintsProvider {\n    onDidChangeInlayHints?: TheiaEvent<void> | undefined;\n    provideInlayHints(model: monaco.editor.ITextModel, range: Range, token: monaco.CancellationToken): InlayHint[] | undefined | Thenable<InlayHint[] | undefined>;\n    resolveInlayHint?(hint: InlayHint, token: monaco.CancellationToken): InlayHint[] | undefined | Thenable<InlayHint[] | undefined>;\n}\n\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport enum InlineCompletionTriggerKind {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    Automatic = 0,\n\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    Explicit = 1,\n}\n\nexport interface InlineCompletionContext {\n    /**\n     * How the completion was triggered.\n     */\n    readonly triggerKind: InlineCompletionTriggerKind;\n\n    readonly selectedSuggestionInfo: SelectedSuggestionInfo | undefined;\n}\n\nexport interface SelectedSuggestionInfo {\n    range: Range;\n    text: string;\n    isSnippetText: boolean;\n    completionKind: CompletionItemKind;\n}\n\nexport interface InlineCompletion {\n    /**\n     * The text to insert.\n     * If the text contains a line break, the range must end at the end of a line.\n     * If existing text should be replaced, the existing text must be a prefix of the text to insert.\n     *\n     * The text can also be a snippet. In that case, a preview with default parameters is shown.\n     * When accepting the suggestion, the full snippet is inserted.\n     */\n    readonly insertText: string | { snippet: string };\n\n    /**\n     * A text that is used to decide if this inline completion should be shown.\n     * An inline completion is shown if the text to replace is a subword of the filter text.\n     */\n    readonly filterText?: string;\n\n    /**\n     * An optional array of additional text edits that are applied when\n     * selecting this completion. Edits must not overlap with the main edit\n     * nor with themselves.\n     */\n    readonly additionalTextEdits?: SingleEditOperation[];\n\n    /**\n     * The range to replace.\n     * Must begin and end on the same line.\n     */\n    readonly range?: Range;\n\n    readonly command?: Command;\n\n    /**\n     * If set to `true`, unopened closing brackets are removed and unclosed opening brackets are closed.\n     * Defaults to `false`.\n     */\n    readonly completeBracketPairs?: boolean;\n}\n\nexport interface InlineCompletions<TItem extends InlineCompletion = InlineCompletion> {\n    readonly items: readonly TItem[];\n}\n\nexport interface InlineCompletionsProvider<T extends InlineCompletions = InlineCompletions> {\n    provideInlineCompletions(\n        model: monaco.editor.ITextModel,\n        position: monaco.Position,\n        context: InlineCompletionContext,\n        token: monaco.CancellationToken\n    ): T[] | undefined | Thenable<T[] | undefined>;\n\n    /**\n     * Will be called when an item is shown.\n     */\n    handleItemDidShow?(completions: T, item: T['items'][number]): void;\n\n    /**\n     * Will be called when a completions list is no longer in use and can be garbage-collected.\n     */\n    freeInlineCompletions(completions: T): void;\n}\n\nexport interface DebugStackFrameDTO {\n    readonly sessionId: string,\n    readonly frameId: number,\n    readonly threadId: number\n}\n\nexport interface DebugThreadDTO {\n    readonly sessionId: string,\n    readonly threadId: number\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * **IMPORTANT** this code is running in the plugin host process and should be closed as possible to VS Code counterpart:\n * https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/workbench/api/common/extHostFileSystem.ts\n * One should be able to diff them to see differences.\n */\n\n/* eslint-disable arrow-body-style */\n/* eslint-disable @typescript-eslint/quotes */\n/* eslint-disable @typescript-eslint/tslint/config */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { UriComponents } from '@theia/core/shared/vscode-uri';\nimport { FileChangeType, FileSystemError, URI } from './types-impl';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { PLUGIN_RPC_CONTEXT, FileSystemExt, FileSystemMain, IFileChangeDto } from '../common/plugin-api-rpc';\nimport * as vscode from '@theia/plugin';\nimport * as files from '@theia/filesystem/lib/common/files';\nimport * as typeConverter from './type-converters';\nimport { Schemes as Schemas } from '../common/uri-components';\nimport { State, StateMachine, LinkComputer, Edge } from '../common/link-computer';\nimport { commonPrefixLength } from '@theia/core/lib/common/strings';\nimport { CharCode } from '@theia/core/lib/common/char-code';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { MarkdownString } from '../common/plugin-api-rpc-model';\nimport { Emitter } from '@theia/core/lib/common';\nimport { createAPIObject } from './plugin-context';\n\ntype IDisposable = vscode.Disposable;\n\nexport class FsLinkProvider {\n\n    private _schemes: string[] = [];\n    private _stateMachine?: StateMachine;\n\n    add(scheme: string): void {\n        this._stateMachine = undefined;\n        this._schemes.push(scheme);\n    }\n\n    delete(scheme: string): void {\n        const idx = this._schemes.indexOf(scheme);\n        if (idx >= 0) {\n            this._schemes.splice(idx, 1);\n            this._stateMachine = undefined;\n        }\n    }\n\n    private _initStateMachine(): void {\n        if (!this._stateMachine) {\n\n            // sort and compute common prefix with previous scheme\n            // then build state transitions based on the data\n            const schemes = this._schemes.sort();\n            const edges: Edge[] = [];\n            let prevScheme: string | undefined;\n            let prevState: State;\n            let lastState = State.LastKnownState;\n            let nextState = State.LastKnownState;\n            for (const scheme of schemes) {\n\n                // skip the common prefix of the prev scheme\n                // and continue with its last state\n                let pos = !prevScheme ? 0 : commonPrefixLength(prevScheme, scheme);\n                if (pos === 0) {\n                    prevState = State.Start;\n                } else {\n                    prevState = nextState;\n                }\n\n                for (; pos < scheme.length; pos++) {\n                    // keep creating new (next) states until the\n                    // end (and the BeforeColon-state) is reached\n                    if (pos + 1 === scheme.length) {\n                        // Save the last state here, because we need to continue for the next scheme\n                        lastState = nextState;\n                        nextState = State.BeforeColon;\n                    } else {\n                        nextState += 1;\n                    }\n                    edges.push([prevState, scheme.toUpperCase().charCodeAt(pos), nextState]);\n                    edges.push([prevState, scheme.toLowerCase().charCodeAt(pos), nextState]);\n                    prevState = nextState;\n                }\n\n                prevScheme = scheme;\n                // Restore the last state\n                nextState = lastState;\n            }\n\n            // all link must match this pattern `<scheme>:/<more>`\n            edges.push([State.BeforeColon, CharCode.Colon, State.AfterColon]);\n            edges.push([State.AfterColon, CharCode.Slash, State.End]);\n\n            this._stateMachine = new StateMachine(edges);\n        }\n    }\n\n    provideDocumentLinks(document: vscode.TextDocument): vscode.ProviderResult<vscode.DocumentLink[]> {\n        this._initStateMachine();\n\n        const result: vscode.DocumentLink[] = [];\n        const links = LinkComputer.computeLinks({\n            getLineContent(lineNumber: number): string {\n                return document.lineAt(lineNumber - 1).text;\n            },\n            getLineCount(): number {\n                return document.lineCount;\n            }\n        }, this._stateMachine);\n\n        for (const link of links) {\n            const docLink = typeConverter.DocumentLink.to(link);\n            if (docLink.target) {\n                result.push(docLink);\n            }\n        }\n        return result;\n    }\n}\n\nclass ConsumerFileSystem implements vscode.FileSystem {\n    apiObject: vscode.FileSystem;\n\n    constructor(private _proxy: FileSystemMain, private _capabilities: Map<string, number>) {\n        this.apiObject = createAPIObject(this);\n    }\n\n    stat(uri: vscode.Uri): Promise<vscode.FileStat> {\n        return this._proxy.$stat(uri).catch(ConsumerFileSystem._handleError);\n    }\n    readDirectory(uri: vscode.Uri): Promise<[string, vscode.FileType][]> {\n        return this._proxy.$readdir(uri).catch(ConsumerFileSystem._handleError);\n    }\n    createDirectory(uri: vscode.Uri): Promise<void> {\n        return this._proxy.$mkdir(uri).catch(ConsumerFileSystem._handleError);\n    }\n    readFile(uri: vscode.Uri): Promise<Uint8Array> {\n        return this._proxy.$readFile(uri).then(buff => buff.buffer).catch(ConsumerFileSystem._handleError);\n    }\n    writeFile(uri: vscode.Uri, content: Uint8Array): Promise<void> {\n        return this._proxy.$writeFile(uri, BinaryBuffer.wrap(content)).catch(ConsumerFileSystem._handleError);\n    }\n    delete(uri: vscode.Uri, options?: { recursive?: boolean; useTrash?: boolean; }): Promise<void> {\n        return this._proxy.$delete(uri, { ...{ recursive: false, useTrash: false }, ...options }).catch(ConsumerFileSystem._handleError);\n    }\n    rename(oldUri: vscode.Uri, newUri: vscode.Uri, options?: { overwrite?: boolean; }): Promise<void> {\n        return this._proxy.$rename(oldUri, newUri, { ...{ overwrite: false }, ...options }).catch(ConsumerFileSystem._handleError);\n    }\n    copy(source: vscode.Uri, destination: vscode.Uri, options?: { overwrite?: boolean }): Promise<void> {\n        return this._proxy.$copy(source, destination, { ...{ overwrite: false }, ...options }).catch(ConsumerFileSystem._handleError);\n    }\n    isWritableFileSystem(scheme: string): boolean | undefined {\n        const capabilities = this._capabilities.get(scheme);\n        if (typeof capabilities === 'number') {\n            return (capabilities & files.FileSystemProviderCapabilities.Readonly) === 0;\n        }\n        return undefined;\n    }\n    private static _handleError(err: any): never {\n        // generic error\n        if (!(err instanceof Error)) {\n            throw new FileSystemError(String(err));\n        }\n\n        // no provider (unknown scheme) error\n        if (err.name === 'ENOPRO') {\n            throw FileSystemError.Unavailable(err.message);\n        }\n\n        // file system error\n        switch (err.name) {\n            case files.FileSystemProviderErrorCode.FileExists: throw FileSystemError.FileExists(err.message);\n            case files.FileSystemProviderErrorCode.FileNotFound: throw FileSystemError.FileNotFound(err.message);\n            case files.FileSystemProviderErrorCode.FileNotADirectory: throw FileSystemError.FileNotADirectory(err.message);\n            case files.FileSystemProviderErrorCode.FileIsADirectory: throw FileSystemError.FileIsADirectory(err.message);\n            case files.FileSystemProviderErrorCode.NoPermissions: throw FileSystemError.NoPermissions(err.message);\n            case files.FileSystemProviderErrorCode.Unavailable: throw FileSystemError.Unavailable(err.message);\n\n            default: throw new FileSystemError(err.message, err.name as files.FileSystemProviderErrorCode);\n        }\n    }\n}\n\nexport class FileSystemExtImpl implements FileSystemExt {\n\n    private readonly _proxy: FileSystemMain;\n    private readonly _linkProvider = new FsLinkProvider();\n    private readonly _fsProvider = new Map<number, vscode.FileSystemProvider>();\n    private readonly _capabilities = new Map<string, number>();\n    private readonly _usedSchemes = new Set<string>();\n    private readonly _watches = new Map<number, IDisposable>();\n\n    private readonly onWillRegisterFileSystemProviderEmitter = new Emitter<FsLinkProvider>();\n    readonly onWillRegisterFileSystemProvider = this.onWillRegisterFileSystemProviderEmitter.event;\n\n    private _handlePool: number = 0;\n\n    readonly fileSystem: ConsumerFileSystem;\n\n    constructor(rpc: RPCProtocol) {\n        this._proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.FILE_SYSTEM_MAIN);\n        this.fileSystem = new ConsumerFileSystem(this._proxy, this._capabilities);\n\n        // register used schemes\n        Object.keys(Schemas).forEach(scheme => this._usedSchemes.add(scheme));\n    }\n\n    dispose(): void {\n        this.onWillRegisterFileSystemProviderEmitter.dispose();\n    }\n\n    registerFileSystemProvider(scheme: string, provider: vscode.FileSystemProvider, options: { isCaseSensitive?: boolean, isReadonly?: boolean | MarkdownString } = {}) {\n\n        if (this._usedSchemes.has(scheme)) {\n            throw new Error(`a provider for the scheme '${scheme}' is already registered`);\n        }\n\n        this.onWillRegisterFileSystemProviderEmitter.fire(this._linkProvider);\n\n        const handle = this._handlePool++;\n        this._linkProvider.add(scheme);\n        this._usedSchemes.add(scheme);\n        this._fsProvider.set(handle, provider);\n\n        let capabilities = files.FileSystemProviderCapabilities.FileReadWrite;\n        if (options.isCaseSensitive) {\n            capabilities += files.FileSystemProviderCapabilities.PathCaseSensitive;\n        }\n        if (options.isReadonly) {\n            capabilities += files.FileSystemProviderCapabilities.Readonly;\n        }\n        if (typeof provider.copy === 'function') {\n            capabilities += files.FileSystemProviderCapabilities.FileFolderCopy;\n        }\n        if (typeof provider.open === 'function' && typeof provider.close === 'function'\n            && typeof provider.read === 'function' && typeof provider.write === 'function'\n        ) {\n            capabilities += files.FileSystemProviderCapabilities.FileOpenReadWriteClose;\n        }\n\n        let readonlyMessage: MarkdownString | undefined;\n        if (options.isReadonly && MarkdownString.is(options.isReadonly)) {\n            readonlyMessage = {\n                value: options.isReadonly.value,\n                isTrusted: options.isReadonly.isTrusted,\n                supportThemeIcons: options.isReadonly.supportThemeIcons,\n                supportHtml: options.isReadonly.supportHtml,\n                baseUri: options.isReadonly.baseUri,\n                uris: options.isReadonly.uris\n            };\n        }\n\n        this._proxy.$registerFileSystemProvider(handle, scheme, capabilities, readonlyMessage);\n\n        const subscription = provider.onDidChangeFile(event => {\n            const mapped: IFileChangeDto[] = [];\n            for (const e of event) {\n                const { uri: resource, type } = e;\n                if (resource.scheme !== scheme) {\n                    // dropping events for wrong scheme\n                    continue;\n                }\n                let newType: files.FileChangeType | undefined;\n                switch (type) {\n                    case FileChangeType.Changed:\n                        newType = files.FileChangeType.UPDATED;\n                        break;\n                    case FileChangeType.Created:\n                        newType = files.FileChangeType.ADDED;\n                        break;\n                    case FileChangeType.Deleted:\n                        newType = files.FileChangeType.DELETED;\n                        break;\n                    default:\n                        throw new Error('Unknown FileChangeType');\n                }\n                mapped.push({ resource, type: newType });\n            }\n            this._proxy.$onFileSystemChange(handle, mapped);\n        });\n\n        return {\n            dispose: () => {\n                subscription.dispose();\n                this._linkProvider.delete(scheme);\n                this._usedSchemes.delete(scheme);\n                this._fsProvider.delete(handle);\n                this._proxy.$unregisterProvider(handle);\n            }\n        };\n    }\n\n    private static _asIStat(stat: vscode.FileStat): files.Stat {\n        const { type, ctime, mtime, size, permissions } = stat;\n        return { type, ctime, mtime, size, permissions };\n    }\n\n    $acceptProviderInfos(scheme: string, capabilities?: files.FileSystemProviderCapabilities): void {\n        if (typeof capabilities === 'number') {\n            this._capabilities.set(scheme, capabilities);\n        } else {\n            this._capabilities.delete(scheme);\n        }\n    }\n\n    $stat(handle: number, resource: UriComponents): Promise<files.Stat> {\n        return Promise.resolve(this._getFsProvider(handle).stat(URI.revive(resource))).then(FileSystemExtImpl._asIStat);\n    }\n\n    $readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]> {\n        return Promise.resolve(this._getFsProvider(handle).readDirectory(URI.revive(resource)));\n    }\n\n    $readFile(handle: number, resource: UriComponents): Promise<BinaryBuffer> {\n        return Promise.resolve(this._getFsProvider(handle).readFile(URI.revive(resource))).then(data => BinaryBuffer.wrap(data));\n    }\n\n    $writeFile(handle: number, resource: UriComponents, content: BinaryBuffer, opts: files.FileWriteOptions): Promise<void> {\n        return Promise.resolve(this._getFsProvider(handle).writeFile(URI.revive(resource), content.buffer, opts));\n    }\n\n    $delete(handle: number, resource: UriComponents, opts: files.FileDeleteOptions): Promise<void> {\n        return Promise.resolve(this._getFsProvider(handle).delete(URI.revive(resource), opts));\n    }\n\n    $rename(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.FileOverwriteOptions): Promise<void> {\n        return Promise.resolve(this._getFsProvider(handle).rename(URI.revive(oldUri), URI.revive(newUri), opts));\n    }\n\n    $copy(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.FileOverwriteOptions): Promise<void> {\n        const provider = this._getFsProvider(handle);\n        if (!provider.copy) {\n            throw new Error('FileSystemProvider does not implement \"copy\"');\n        }\n        return Promise.resolve(provider.copy(URI.revive(oldUri), URI.revive(newUri), opts));\n    }\n\n    $mkdir(handle: number, resource: UriComponents): Promise<void> {\n        return Promise.resolve(this._getFsProvider(handle).createDirectory(URI.revive(resource)));\n    }\n\n    $watch(handle: number, session: number, resource: UriComponents, opts: files.WatchOptions): void {\n        const subscription = this._getFsProvider(handle).watch(URI.revive(resource), opts);\n        this._watches.set(session, subscription);\n    }\n\n    $unwatch(_handle: number, session: number): void {\n        const subscription = this._watches.get(session);\n        if (subscription) {\n            subscription.dispose();\n            this._watches.delete(session);\n        }\n    }\n\n    $open(handle: number, resource: UriComponents, opts: files.FileOpenOptions): Promise<number> {\n        const provider = this._getFsProvider(handle);\n        if (!provider.open) {\n            throw new Error('FileSystemProvider does not implement \"open\"');\n        }\n        return Promise.resolve(provider.open(URI.revive(resource), opts));\n    }\n\n    $close(handle: number, fd: number): Promise<void> {\n        const provider = this._getFsProvider(handle);\n        if (!provider.close) {\n            throw new Error('FileSystemProvider does not implement \"close\"');\n        }\n        return Promise.resolve(provider.close(fd));\n    }\n\n    $read(handle: number, fd: number, pos: number, length: number): Promise<BinaryBuffer> {\n        const provider = this._getFsProvider(handle);\n        if (!provider.read) {\n            throw new Error('FileSystemProvider does not implement \"read\"');\n        }\n        const data = BinaryBuffer.alloc(length);\n        return Promise.resolve(provider.read(fd, pos, data.buffer, 0, length)).then(read => {\n            return data.slice(0, read); // don't send zeros\n        });\n    }\n\n    $write(handle: number, fd: number, pos: number, data: BinaryBuffer): Promise<number> {\n        const provider = this._getFsProvider(handle);\n        if (!provider.write) {\n            throw new Error('FileSystemProvider does not implement \"write\"');\n        }\n        return Promise.resolve(provider.write(fd, pos, data.buffer, 0, data.byteLength));\n    }\n\n    private _getFsProvider(handle: number): vscode.FileSystemProvider {\n        const provider = this._fsProvider.get(handle);\n        if (!provider) {\n            const err = new Error();\n            err.name = 'ENOPRO';\n            err.message = `no provider`;\n            throw err;\n        }\n        return provider;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    QuickOpenExt, PLUGIN_RPC_CONTEXT as Ext, QuickOpenMain, TransferInputBox, Plugin,\n    TransferQuickInputButton, TransferQuickInput, TransferQuickPickItem\n} from '../common/plugin-api-rpc';\nimport * as theia from '@theia/plugin';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { InputBoxValidationSeverity, QuickInputButtons, QuickPickItemKind, ThemeIcon } from './types-impl';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as path from 'path';\nimport { convertToTransferQuickPickItems } from './type-converters';\nimport { PluginPackage } from '../common/plugin-protocol';\nimport { QuickInputButtonHandle } from '@theia/core/lib/browser';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { PluginIconPath } from './plugin-icon-path';\n\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isPromiseCanceledError(error: any): boolean {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\ntype Item = theia.QuickPickItem | string;\n\nexport class QuickOpenExtImpl implements QuickOpenExt {\n    private proxy: QuickOpenMain;\n    private onDidSelectItem: undefined | ((handle: number) => void);\n    private validateInputHandler?: (input: string) => MaybePromise<string | theia.InputBoxValidationMessage | null | undefined>;\n    private _sessions = new Map<number, QuickInputExt>(); // Each quickinput will have a number so that we know where to fire events\n    private _instances = 0;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(Ext.QUICK_OPEN_MAIN);\n    }\n\n    /* eslint-disable max-len */\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: theia.QuickPickItem[] | Promise<theia.QuickPickItem[]>, options: theia.QuickPickOptions & { canPickMany: true; }, token?: theia.CancellationToken): Promise<Array<theia.QuickPickItem> | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: string[] | Promise<string[]>, options?: theia.QuickPickOptions, token?: theia.CancellationToken): Promise<string | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: theia.QuickPickItem[] | Promise<theia.QuickPickItem[]>, options?: theia.QuickPickOptions, token?: theia.CancellationToken): Promise<theia.QuickPickItem | undefined>;\n    showQuickPick(plugin: Plugin, itemsOrItemsPromise: Item[] | Promise<Item[]>, options?: theia.QuickPickOptions, token: theia.CancellationToken = CancellationToken.None): Promise<Item | Item[] | undefined> {\n        this.onDidSelectItem = undefined;\n\n        const itemsPromise = Promise.resolve(itemsOrItemsPromise);\n\n        const instance = ++this._instances;\n\n        const widgetPromise = this.proxy.$show(instance, {\n            title: options && options.title,\n            canPickMany: options && options.canPickMany,\n            placeHolder: options && options.placeHolder,\n            matchOnDescription: options && options.matchOnDescription,\n            matchOnDetail: options && options.matchOnDetail,\n            ignoreFocusLost: options && options.ignoreFocusOut\n        }, token);\n\n        const widgetClosedMarker = {};\n        const widgetClosedPromise = widgetPromise.then(() => widgetClosedMarker);\n\n        return Promise.race([widgetClosedPromise, itemsPromise]).then(result => {\n            if (result === widgetClosedMarker) {\n                return undefined;\n            }\n            return itemsPromise.then(async items => {\n                const pickItems = convertToTransferQuickPickItems(plugin, items);\n\n                if (options && typeof options.onDidSelectItem === 'function') {\n                    this.onDidSelectItem = handle => {\n                        options.onDidSelectItem!(items[handle]);\n                    };\n                }\n\n                this.proxy.$setItems(instance, pickItems);\n\n                return widgetPromise.then(handle => {\n                    if (typeof handle === 'number') {\n                        if (options && options.canPickMany) {\n                            return Array.of(items[handle]);\n                        } else {\n                            return items[handle];\n                        }\n\n                    } else if (Array.isArray(handle)) {\n                        return handle.map(h => items[h]);\n                    }\n                    return undefined;\n                });\n            });\n        }).then(undefined, err => {\n            if (isPromiseCanceledError(err)) {\n                return undefined;\n            }\n\n            this.proxy.$setError(instance, err);\n\n            return Promise.reject(err);\n        });\n    }\n\n    $onItemSelected(handle: number): void {\n        if (this.onDidSelectItem) {\n            this.onDidSelectItem(handle);\n        }\n    }\n\n    // ---- input\n\n    showInput(options?: theia.InputBoxOptions, token: theia.CancellationToken = CancellationToken.None): PromiseLike<string | undefined> {\n        this.validateInputHandler = options?.validateInput;\n        if (!options) { options = { placeHolder: '' }; }\n        return this.proxy.$input(options, typeof this.validateInputHandler === 'function', token);\n    }\n\n    async showInputBox(options: TransferInputBox): Promise<string | undefined> {\n        this.validateInputHandler = typeof options.validateInput === 'function' ? options.validateInput : undefined;\n        return this.proxy.$showInputBox(options, typeof this.validateInputHandler === 'function');\n    }\n\n    async $validateInput(input: string): Promise<string | { content: string; severity: Severity; } | null | undefined> {\n        if (!this.validateInputHandler) {\n            return;\n        }\n\n        const result = await this.validateInputHandler(input);\n        if (!result || typeof result === 'string') {\n            return result;\n        }\n\n        let severity: Severity;\n        switch (result.severity) {\n            case InputBoxValidationSeverity.Info:\n                severity = Severity.Info;\n                break;\n            case InputBoxValidationSeverity.Warning:\n                severity = Severity.Warning;\n                break;\n            case InputBoxValidationSeverity.Error:\n                severity = Severity.Error;\n                break;\n            default:\n                severity = result.message ? Severity.Error : Severity.Ignore;\n                break;\n        }\n\n        return {\n            content: result.message,\n            severity\n        };\n    }\n\n    // ---- QuickInput\n\n    createQuickPick<T extends theia.QuickPickItem>(plugin: Plugin): theia.QuickPick<T> {\n        const session: any = new QuickPickExt<T>(this, this.proxy, plugin, () => this._sessions.delete(session._id));\n        this._sessions.set(session._id, session);\n        return session;\n    }\n\n    createInputBox(plugin: Plugin): theia.InputBox {\n        const session: any = new InputBoxExt(this, this.proxy, plugin, () => this._sessions.delete(session._id));\n        this._sessions.set(session._id, session);\n        return session;\n    }\n\n    hide(): void {\n        this.proxy.$hide();\n    }\n\n    async $acceptOnDidAccept(sessionId: number): Promise<void> {\n        const session = this._sessions.get(sessionId);\n        if (session) {\n            session._fireAccept();\n        }\n    }\n\n    async $acceptDidChangeValue(sessionId: number, changedValue: string): Promise<void> {\n        const session = this._sessions.get(sessionId);\n        if (session) {\n            session._fireChangedValue(changedValue);\n        }\n    }\n\n    async $acceptOnDidHide(sessionId: number): Promise<void> {\n        const session = this._sessions.get(sessionId);\n        if (session) {\n            session._fireHide();\n        }\n    }\n\n    async $acceptOnDidTriggerButton(sessionId: number, btn: QuickInputButtonHandle): Promise<void> {\n        const session = this._sessions.get(sessionId);\n        if (session) {\n            if (btn.handle === -1) {\n                session._fireButtonTrigger(QuickInputButtons.Back);\n            } else if (session && (session instanceof InputBoxExt || session instanceof QuickPickExt)) {\n                const btnFromHandle = session.buttons[btn.handle];\n                session._fireButtonTrigger(btnFromHandle as theia.QuickInputButton);\n            }\n        }\n    }\n\n    $onDidChangeActive(sessionId: number, handles: number[]): void {\n        const session = this._sessions.get(sessionId);\n        if (session instanceof QuickPickExt) {\n            session._fireDidChangeActive(handles);\n        }\n    }\n\n    $onDidChangeSelection(sessionId: number, handles: number[]): void {\n        const session = this._sessions.get(sessionId);\n        if (session instanceof QuickPickExt) {\n            session._fireDidChangeSelection(handles);\n        }\n    }\n\n    $onDidTriggerItemButton(sessionId: number, itemHandle: number, buttonHandle: number): void {\n        const session = this._sessions.get(sessionId);\n        if (session instanceof QuickPickExt) {\n            session._fireDidTriggerItemButton(itemHandle, buttonHandle);\n        }\n    }\n\n}\n\nexport class QuickInputExt implements theia.QuickInput {\n\n    private static _nextId = 1;\n    _id = QuickInputExt._nextId++;\n\n    private _busy: boolean;\n    private _enabled: boolean;\n    private _ignoreFocusOut: boolean;\n    private _step: number | undefined;\n    private _title: string | undefined;\n    private _totalSteps: number | undefined;\n    private _value: string;\n    private _placeholder: string | undefined;\n    private _buttons: theia.QuickInputButton[] = [];\n    private _handlesToButtons = new Map<number, theia.QuickInputButton>();\n    protected expectingHide = false;\n    protected visible: boolean;\n    private _disposed = false;\n    protected disposableCollection: DisposableCollection;\n\n    private onDidAcceptEmitter: Emitter<void>;\n    /**\n     * it has to be named `_onDidChangeValueEmitter`, since Gitlens extension relies on it\n     * https://github.com/eamodio/vscode-gitlens/blob/f22a9cd4199ac498c217643282a6a412e1fc01ae/src/commands/gitCommands.ts#L242-L243\n     */\n    private _onDidChangeValueEmitter: Emitter<string>;\n    private onDidHideEmitter: Emitter<void>;\n    private onDidTriggerButtonEmitter: Emitter<theia.QuickInputButton>;\n    private _updateTimeout: any;\n    private _pendingUpdate: TransferQuickInput = { id: this._id };\n\n    constructor(readonly quickOpen: QuickOpenExtImpl, readonly quickOpenMain: QuickOpenMain, readonly plugin: Plugin, private _onDidDispose: () => void) {\n        this.title = undefined;\n        this.step = undefined;\n        this.totalSteps = undefined;\n        this.enabled = true;\n        this.busy = false;\n        this.ignoreFocusOut = false;\n        this.value = '';\n\n        this.visible = false;\n\n        this.disposableCollection = new DisposableCollection();\n        this.disposableCollection.push(this.onDidAcceptEmitter = new Emitter());\n        this.disposableCollection.push(this._onDidChangeValueEmitter = new Emitter());\n        this.disposableCollection.push(this.onDidHideEmitter = new Emitter());\n        this.disposableCollection.push(this.onDidTriggerButtonEmitter = new Emitter());\n    }\n\n    get title(): string | undefined {\n        return this._title;\n    }\n\n    set title(title: string | undefined) {\n        this._title = title;\n        this.update({ title });\n    }\n\n    get step(): number | undefined {\n        return this._step;\n    }\n\n    set step(step: number | undefined) {\n        this._step = step;\n        this.update({ step });\n    }\n\n    get totalSteps(): number | undefined {\n        return this._totalSteps;\n    }\n\n    set totalSteps(totalSteps: number | undefined) {\n        this._totalSteps = totalSteps;\n        this.update({ totalSteps });\n    }\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    set enabled(enabled: boolean) {\n        this._enabled = enabled;\n        this.update({ enabled });\n    }\n\n    get busy(): boolean {\n        return this._busy;\n    }\n\n    set busy(busy: boolean) {\n        this._busy = busy;\n        this.update({ busy });\n    }\n\n    get ignoreFocusOut(): boolean {\n        return this._ignoreFocusOut;\n    }\n\n    set ignoreFocusOut(ignoreFocusOut: boolean) {\n        this._ignoreFocusOut = ignoreFocusOut;\n        this.update({ ignoreFocusOut });\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    set value(value: string) {\n        this._value = value;\n        this.update({ value });\n    }\n\n    get placeholder(): string | undefined {\n        return this._placeholder;\n    }\n\n    set placeholder(placeholder: string | undefined) {\n        this._placeholder = placeholder;\n        this.update({ placeholder });\n    }\n\n    get buttons(): theia.QuickInputButton[] {\n        return this._buttons;\n    }\n\n    set buttons(buttons: theia.QuickInputButton[]) {\n        this._buttons = buttons.slice();\n        this._handlesToButtons.clear();\n        buttons.forEach((button, i) => {\n            const handle = button === QuickInputButtons.Back ? -1 : i;\n            this._handlesToButtons.set(handle, button);\n        });\n        this.update({\n            buttons: buttons.map<TransferQuickInputButton>((button, i) => ({\n                iconUrl: PluginIconPath.toUrl(button.iconPath, this.plugin) ?? ThemeIcon.get(button.iconPath),\n                tooltip: button.tooltip,\n                handle: button === QuickInputButtons.Back ? -1 : i,\n            }))\n        });\n    }\n\n    show(): void {\n        this.visible = true;\n        this.expectingHide = true;\n        this.update({ visible: true });\n    }\n\n    dispose(): void {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        this._fireHide();\n        this.disposableCollection.dispose();\n        this._onDidDispose();\n        this.quickOpenMain.$dispose(this._id);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected update(properties: Record<string, any>): void {\n        if (this._disposed) {\n            return;\n        }\n        for (const key of Object.keys(properties)) {\n            const value = properties[key];\n            this._pendingUpdate[key] = value === undefined ? null : value;\n        }\n\n        if ('visible' in this._pendingUpdate) {\n            if (this._updateTimeout) {\n                clearTimeout(this._updateTimeout);\n                this._updateTimeout = undefined;\n            }\n            this.dispatchUpdate();\n        } else if (this.visible && !this._updateTimeout) {\n            // Defer the update so that multiple changes to setters dont cause a redraw each\n            this._updateTimeout = setTimeout(() => {\n                this._updateTimeout = undefined;\n                this.dispatchUpdate();\n            }, 0);\n        }\n    }\n\n    private dispatchUpdate(): void {\n        this.quickOpenMain.$createOrUpdate(this._pendingUpdate);\n        this._pendingUpdate = { id: this._id };\n    }\n\n    hide(): void {\n        this.quickOpenMain.$hide();\n    }\n\n    protected convertURL(iconPath: URI | { light: string | URI; dark: string | URI } | ThemeIcon):\n        URI | { light: string | URI; dark: string | URI } | ThemeIcon {\n        const toUrl = (arg: string | URI) => {\n            arg = arg instanceof URI && arg.scheme === 'file' ? arg.fsPath : arg;\n            if (typeof arg !== 'string') {\n                return arg.toString(true);\n            }\n            const { packagePath } = this.plugin.rawModel;\n            const absolutePath = path.isAbsolute(arg) ? arg : path.join(packagePath, arg);\n            const normalizedPath = path.normalize(absolutePath);\n            const relativePath = path.relative(packagePath, normalizedPath);\n            return PluginPackage.toPluginUrl(this.plugin.rawModel, relativePath);\n        };\n        if (ThemeIcon.is(iconPath)) {\n            return iconPath;\n        } else if (typeof iconPath === 'string' || iconPath instanceof URI) {\n            return URI.parse(toUrl(iconPath));\n        } else {\n            const { light, dark } = iconPath as { light: string | URI, dark: string | URI };\n            return {\n                light: toUrl(light),\n                dark: toUrl(dark)\n            };\n        }\n    }\n\n    _fireAccept(): void {\n        this.onDidAcceptEmitter.fire(undefined);\n    }\n\n    _fireChangedValue(changedValue: string): void {\n        this._value = changedValue;\n        this._onDidChangeValueEmitter.fire(changedValue);\n    }\n\n    _fireHide(): void {\n        if (this.expectingHide) {\n            this.expectingHide = false;\n            this.onDidHideEmitter.fire(undefined);\n        }\n    }\n\n    _fireButtonTrigger(btn: theia.QuickInputButton): void {\n        this.onDidTriggerButtonEmitter.fire(btn);\n    }\n\n    get onDidHide(): Event<void> {\n        return this.onDidHideEmitter.event;\n    }\n\n    get onDidAccept(): Event<void> {\n        return this.onDidAcceptEmitter.event;\n    }\n\n    get onDidChangeValue(): Event<string> {\n        return this._onDidChangeValueEmitter.event;\n    }\n\n    get onDidTriggerButton(): Event<theia.QuickInputButton> {\n        return this.onDidTriggerButtonEmitter.event;\n    }\n}\n\n/**\n * Base implementation of {@link InputBox} that uses {@link QuickOpenExt}.\n * Missing functionality is going to be implemented in the scope of https://github.com/eclipse-theia/theia/issues/5109\n */\nexport class InputBoxExt extends QuickInputExt implements theia.InputBox {\n\n    private _password: boolean;\n    private _prompt: string | undefined;\n    private _valueSelection: readonly [number, number] | undefined;\n    private _validationMessage: string | undefined;\n\n    constructor(\n        override readonly quickOpen: QuickOpenExtImpl,\n        override readonly quickOpenMain: QuickOpenMain,\n        override readonly plugin: Plugin,\n        onDispose: () => void\n    ) {\n        super(quickOpen, quickOpenMain, plugin, onDispose);\n\n        this.buttons = [];\n        this.password = false;\n        this.value = '';\n    }\n\n    get password(): boolean {\n        return this._password;\n    }\n\n    set password(password: boolean) {\n        this._password = password;\n        this.update({ password });\n    }\n\n    get prompt(): string | undefined {\n        return this._prompt;\n    }\n\n    set prompt(prompt: string | undefined) {\n        this._prompt = prompt;\n        this.update({ prompt });\n    }\n\n    get valueSelection(): readonly [number, number] | undefined {\n        return this._valueSelection;\n    }\n\n    set valueSelection(valueSelection: readonly [number, number] | undefined) {\n        this._valueSelection = valueSelection;\n        this.update({ valueSelection });\n    }\n\n    get validationMessage(): string | undefined {\n        return this._validationMessage;\n    }\n\n    set validationMessage(validationMessage: string | undefined) {\n        if (this._validationMessage !== validationMessage) {\n            this._validationMessage = validationMessage;\n            this.update({ validationMessage });\n        }\n    }\n}\n\n/**\n * Base implementation of {@link QuickPick} that uses {@link QuickOpenExt}.\n * Missing functionality is going to be implemented in the scope of https://github.com/eclipse-theia/theia/issues/5059\n */\nexport class QuickPickExt<T extends theia.QuickPickItem> extends QuickInputExt implements theia.QuickPick<T> {\n    private _items: T[] = [];\n    private _handlesToItems = new Map<number, T>();\n    private _itemsToHandles = new Map<T, number>();\n    private _canSelectMany = false;\n    private _matchOnDescription = true;\n    private _matchOnDetail = true;\n    private _sortByLabel = true;\n    private _keepScrollPosition = false;\n    private _activeItems: T[] = [];\n    private _selectedItems: T[] = [];\n    private readonly _onDidChangeActiveEmitter = new Emitter<T[]>();\n    private readonly _onDidChangeSelectionEmitter = new Emitter<T[]>();\n    private readonly _onDidTriggerItemButtonEmitter = new Emitter<theia.QuickPickItemButtonEvent<T>>();\n\n    constructor(\n        override readonly quickOpen: QuickOpenExtImpl,\n        override readonly quickOpenMain: QuickOpenMain,\n        override readonly plugin: Plugin,\n        onDispose: () => void\n    ) {\n        super(quickOpen, quickOpenMain, plugin, onDispose);\n        this.buttons = [];\n\n        this.disposableCollection.push(this._onDidChangeActiveEmitter);\n        this.disposableCollection.push(this._onDidChangeSelectionEmitter);\n        this.disposableCollection.push(this._onDidTriggerItemButtonEmitter);\n\n        this.update({ type: 'quickPick' });\n    }\n\n    get items(): T[] {\n        return this._items;\n    }\n\n    set items(items: T[]) {\n        this._items = items.slice();\n        this._handlesToItems.clear();\n        this._itemsToHandles.clear();\n        items.forEach((item, i) => {\n            this._handlesToItems.set(i, item);\n            this._itemsToHandles.set(item, i);\n        });\n\n        const pickItems: TransferQuickPickItem[] = [];\n        for (let handle = 0; handle < items.length; handle++) {\n            const item = items[handle];\n            if (item.kind === QuickPickItemKind.Separator) {\n                pickItems.push({ kind: 'separator', label: item.label, handle });\n            } else {\n                pickItems.push({\n                    kind: 'item',\n                    label: item.label,\n                    iconUrl: PluginIconPath.toUrl(item.iconPath, this.plugin) ?? ThemeIcon.get(item.iconPath),\n                    description: item.description,\n                    handle,\n                    detail: item.detail,\n                    picked: item.picked,\n                    alwaysShow: item.alwaysShow,\n                    buttons: item.buttons?.map<TransferQuickInputButton>((button, index) => ({\n                        iconUrl: PluginIconPath.toUrl(button.iconPath, this.plugin) ?? ThemeIcon.get(button.iconPath),\n                        tooltip: button.tooltip,\n                        handle: button === QuickInputButtons.Back ? -1 : index,\n                    }))\n                });\n            }\n        }\n\n        this.update({\n            items: pickItems,\n        });\n    }\n\n    get canSelectMany(): boolean {\n        return this._canSelectMany;\n    }\n\n    set canSelectMany(canSelectMany: boolean) {\n        this._canSelectMany = canSelectMany;\n        this.update({ canSelectMany });\n    }\n\n    get matchOnDescription(): boolean {\n        return this._matchOnDescription;\n    }\n\n    set matchOnDescription(matchOnDescription: boolean) {\n        this._matchOnDescription = matchOnDescription;\n        this.update({ matchOnDescription });\n    }\n\n    get matchOnDetail(): boolean {\n        return this._matchOnDetail;\n    }\n\n    set matchOnDetail(matchOnDetail: boolean) {\n        this._matchOnDetail = matchOnDetail;\n        this.update({ matchOnDetail });\n    }\n\n    get sortByLabel(): boolean {\n        return this._sortByLabel;\n    }\n\n    set sortByLabel(sortByLabel: boolean) {\n        this._sortByLabel = sortByLabel;\n        this.update({ sortByLabel });\n    }\n\n    get keepScrollPosition(): boolean {\n        return this._keepScrollPosition;\n    }\n\n    set keepScrollPosition(keepScrollPosition: boolean) {\n        this._keepScrollPosition = keepScrollPosition;\n        this.update({ keepScrollPosition });\n    }\n\n    get activeItems(): T[] {\n        return this._activeItems;\n    }\n\n    set activeItems(activeItems: T[]) {\n        this._activeItems = activeItems.filter(item => this._itemsToHandles.has(item));\n        this.update({ activeItems: this._activeItems.map(item => this._itemsToHandles.get(item)) });\n    }\n\n    onDidChangeActive = this._onDidChangeActiveEmitter.event;\n\n    get selectedItems(): T[] {\n        return this._selectedItems;\n    }\n\n    set selectedItems(selectedItems: T[]) {\n        this._selectedItems = selectedItems.filter(item => this._itemsToHandles.has(item));\n        this.update({ selectedItems: this._selectedItems.map(item => this._itemsToHandles.get(item)) });\n    }\n\n    onDidChangeSelection = this._onDidChangeSelectionEmitter.event;\n\n    _fireDidChangeActive(handles: number[]): void {\n        const items = handles.map(handle => this._handlesToItems.get(handle)).filter(e => !!e) as T[];\n        this._activeItems = items;\n        this._onDidChangeActiveEmitter.fire(items);\n    }\n\n    _fireDidChangeSelection(handles: number[]): void {\n        const items = handles.map(handle => this._handlesToItems.get(handle)).filter(e => !!e) as T[];\n        this._selectedItems = items;\n        this._onDidChangeSelectionEmitter.fire(items);\n    }\n\n    onDidTriggerItemButton = this._onDidTriggerItemButtonEmitter.event;\n\n    _fireDidTriggerItemButton(itemHandle: number, buttonHandle: number): void {\n        const item = this._handlesToItems.get(itemHandle)!;\n        if (!item || !item.buttons || !item.buttons.length) {\n            return;\n        }\n        const button = item.buttons[buttonHandle];\n        if (button) {\n            this._onDidTriggerItemButtonEmitter.fire({\n                button,\n                item\n            });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { FormattingOptions, TextEdit } from '../../common/plugin-api-rpc-model';\n\nexport class DocumentFormattingAdapter {\n\n    constructor(\n        private readonly provider: theia.DocumentFormattingEditProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideDocumentFormattingEdits(resource: URI, options: FormattingOptions, token: theia.CancellationToken): Promise<TextEdit[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Promise.resolve(this.provider.provideDocumentFormattingEdits(doc, <any>options, token)).then(value => {\n            if (Array.isArray(value)) {\n                return value.map(Converter.fromTextEdit);\n            }\n            return undefined;\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport debounce = require('p-debounce');\nimport { injectable } from 'inversify';\nimport { JSONObject } from '@lumino/coreutils';\nimport URI from '../../common/uri';\nimport { DisposableCollection, Emitter, Event, isObject, PreferenceLanguageOverrideService } from '../../common';\nimport { Deferred } from '../../common/promise-util';\nimport { PreferenceScope } from './preference-scope';\nimport { PreferenceProvider, PreferenceProviderDataChange, PreferenceProviderDataChanges, PreferenceResolveResult } from './preference-provider';\n\nexport abstract class PreferenceProviderBase {\n\n    protected readonly onDidPreferencesChangedEmitter = new Emitter<PreferenceProviderDataChanges>();\n    readonly onDidPreferencesChanged: Event<PreferenceProviderDataChanges> = this.onDidPreferencesChangedEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    protected deferredChanges: PreferenceProviderDataChanges | undefined;\n\n    constructor() {\n        this.toDispose.push(this.onDidPreferencesChangedEmitter);\n    }\n\n    /**\n     * Informs the listeners that one or more preferences of this provider are changed.\n     * The listeners are able to find what was changed from the emitted event.\n     */\n    protected emitPreferencesChangedEvent(changes: PreferenceProviderDataChanges | PreferenceProviderDataChange[]): Promise<boolean> {\n        if (Array.isArray(changes)) {\n            for (const change of changes) {\n                this.mergePreferenceProviderDataChange(change);\n            }\n        } else {\n            for (const preferenceName of Object.keys(changes)) {\n                this.mergePreferenceProviderDataChange(changes[preferenceName]);\n            }\n        }\n        return this.fireDidPreferencesChanged();\n    }\n\n    protected mergePreferenceProviderDataChange(change: PreferenceProviderDataChange): void {\n        if (!this.deferredChanges) {\n            this.deferredChanges = {};\n        }\n        const current = this.deferredChanges[change.preferenceName];\n        const { newValue, scope, domain } = change;\n        if (!current) {\n            // new\n            this.deferredChanges[change.preferenceName] = change;\n        } else if (current.oldValue === newValue) {\n            // delete\n            delete this.deferredChanges[change.preferenceName];\n        } else {\n            // update\n            Object.assign(current, { newValue, scope, domain });\n        }\n    }\n\n    protected fireDidPreferencesChanged = debounce(() => {\n        const changes = this.deferredChanges;\n        this.deferredChanges = undefined;\n        if (changes && Object.keys(changes).length) {\n            this.onDidPreferencesChangedEmitter.fire(changes);\n            return true;\n        }\n        return false;\n    }, 0);\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n\n/**\n * The {@link PreferenceProvider} is used to store and retrieve preference values. A {@link PreferenceProvider} does not operate in a global scope but is\n * configured for one or more {@link PreferenceScope}s. The (default implementation for the) {@link PreferenceService} aggregates all {@link PreferenceProvider}s and\n * serves as a common facade for manipulating preference values.\n */\n@injectable()\nexport abstract class PreferenceProviderImpl extends PreferenceProviderBase implements PreferenceProvider {\n\n    protected readonly _ready = new Deferred<void>();\n\n    constructor() {\n        super();\n    }\n\n    get<T>(preferenceName: string, resourceUri?: string): T | undefined {\n        return this.resolve<T>(preferenceName, resourceUri).value;\n    }\n\n    resolve<T>(preferenceName: string, resourceUri?: string): PreferenceResolveResult<T> {\n        const value = this.getPreferences(resourceUri)[preferenceName];\n        if (value !== undefined) {\n            return {\n                value: value as T,\n                configUri: this.getConfigUri(resourceUri)\n            };\n        }\n        return {};\n    }\n\n    abstract getPreferences(resourceUri?: string): JSONObject;\n    abstract setPreference(key: string, value: unknown, resourceUri?: string): Promise<boolean>;\n\n    /**\n     * Resolved when the preference provider is ready to provide preferences\n     * It should be resolved by subclasses.\n     */\n    get ready(): Promise<void> {\n        return this._ready.promise;\n    }\n\n    /**\n     * Retrieve the domain for this provider.\n     *\n     * @returns the domain or `undefined` if this provider is suitable for all domains.\n     */\n    getDomain(): string[] | undefined {\n        return undefined;\n    }\n\n    getConfigUri(resourceUri?: string, sectionName?: string): URI | undefined {\n        return undefined;\n    }\n\n    getContainingConfigUri?(resourceUri?: string, sectionName?: string): URI | undefined;\n\n    protected getParsedContent(jsonData: unknown): { [key: string]: unknown } {\n        const preferences: { [key: string]: unknown } = {};\n        if (!isObject(jsonData)) {\n            return preferences;\n        }\n        for (const [preferenceName, preferenceValue] of Object.entries(jsonData)) {\n            if (PreferenceLanguageOverrideService.testOverrideValue(preferenceName, preferenceValue)) {\n                for (const [overriddenPreferenceName, overriddenValue] of Object.entries(preferenceValue)) {\n                    preferences[`${preferenceName}.${overriddenPreferenceName}`] = overriddenValue;\n                }\n            } else {\n                preferences[preferenceName] = preferenceValue;\n            }\n        }\n        return preferences;\n    }\n\n    canHandleScope(scope: PreferenceScope): boolean {\n        return true;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/contrib/testing/common/testTypes.ts\n\n/* eslint-disable import/no-extraneous-dependencies */\n\nimport { MarkdownString } from '@theia/core/lib/common/markdown-rendering';\nimport { UriComponents } from './uri-components';\nimport { Location, Range } from './plugin-api-rpc-model';\nimport { isObject } from '@theia/core';\nimport * as languageProtocol from '@theia/core/shared/vscode-languageserver-protocol';\n\nexport enum TestRunProfileKind {\n    Run = 1,\n    Debug = 2,\n    Coverage = 3\n}\n\nexport interface TestRunProfileDTO {\n    readonly id: string;\n    readonly label: string;\n    readonly kind: TestRunProfileKind;\n    readonly isDefault: boolean;\n    readonly tag: string;\n    readonly canConfigure: boolean;\n}\nexport interface TestRunDTO {\n    readonly id: string;\n    readonly name: string;\n    readonly isRunning: boolean;\n}\n\nexport interface TestOutputDTO {\n    readonly output: string;\n    readonly location?: Location;\n    readonly itemPath?: string[];\n}\n\nexport enum TestExecutionState {\n    Queued = 1,\n    Running = 2,\n    Passed = 3,\n    Failed = 4,\n    Skipped = 5,\n    Errored = 6\n}\n\nexport interface TestStateChangeDTO {\n    readonly state: TestExecutionState;\n    readonly itemPath: string[];\n}\n\nexport interface TestFailureDTO extends TestStateChangeDTO {\n    readonly state: TestExecutionState.Failed | TestExecutionState.Errored;\n    readonly messages: TestMessageDTO[];\n    readonly duration?: number;\n}\n\nexport namespace TestFailureDTO {\n    export function is(ref: unknown): ref is TestFailureDTO {\n        return isObject<TestFailureDTO>(ref)\n            && (ref.state === TestExecutionState.Failed || ref.state === TestExecutionState.Errored);\n    }\n}\nexport interface TestSuccessDTO extends TestStateChangeDTO {\n    readonly state: TestExecutionState.Passed;\n    readonly duration?: number;\n}\n\nexport interface TestMessageStackFrameDTO {\n    uri?: languageProtocol.DocumentUri;\n    position?: languageProtocol.Position;\n    label: string;\n}\n\nexport interface TestMessageDTO {\n    readonly expected?: string;\n    readonly actual?: string;\n    readonly location?: languageProtocol.Location;\n    readonly message: string | MarkdownString;\n    readonly contextValue?: string;\n    readonly stackTrace?: TestMessageStackFrameDTO[];\n}\n\nexport interface TestItemDTO {\n    readonly id: string;\n    readonly label: string;\n    readonly range?: Range;\n    readonly sortKey?: string;\n    readonly tags: string[];\n    readonly uri?: UriComponents;\n    readonly busy: boolean;\n    readonly canResolveChildren: boolean;\n    readonly description?: string;\n    readonly error?: string | MarkdownString\n    readonly children?: TestItemDTO[];\n}\n\nexport interface TestRunRequestDTO {\n    controllerId: string;\n    profileId: string;\n    name: string;\n    includedTests: string[][]; // array of paths\n    excludedTests: string[][]; // array of paths\n    preserveFocus: boolean;\n}\n\nexport interface TestItemReference {\n    typeTag: '$type_test_item_reference',\n    controllerId: string;\n    testPath: string[];\n}\n\nexport namespace TestItemReference {\n    export function is(ref: unknown): ref is TestItemReference {\n        return isObject<TestItemReference>(ref)\n            && ref.typeTag === '$type_test_item_reference'\n            && typeof ref.controllerId === 'string'\n            && Array.isArray(ref.testPath);\n    }\n\n    export function create(controllerId: string, testPath: string[]): TestItemReference {\n        return {\n            typeTag: '$type_test_item_reference',\n            controllerId,\n            testPath\n        };\n    }\n}\n\nexport interface TestMessageArg {\n    testItemReference: TestItemReference | undefined,\n    testMessage: TestMessageDTO\n}\n\nexport namespace TestMessageArg {\n    export function is(arg: unknown): arg is TestMessageArg {\n        return isObject<TestMessageArg>(arg)\n            && isObject<TestMessageDTO>(arg.testMessage)\n            && (MarkdownString.is(arg.testMessage.message) || typeof arg.testMessage.message === 'string');\n    }\n\n    export function create(testItemReference: TestItemReference | undefined, testMessageDTO: TestMessageDTO): TestMessageArg {\n        return {\n            testItemReference: testItemReference,\n            testMessage: testMessageDTO\n        };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// based on https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/uuid.ts\n\nimport { v4, v5 } from 'uuid';\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n    return _UUIDPattern.test(value);\n}\n\nexport function generateUuid(): string {\n    return v4();\n}\n\nconst NAMESPACE = '4c90ee4f-d952-44b1-83ca-f04121ab8e05';\n/**\n * This function will hash the given value using SHA1. The result will be a uuid.\n * @param value the string to hash\n * @returns a uuid\n */\nexport function hashValue(value: string): string {\n    // as opposed to v4, v5 is deterministic and uses SHA1 hashing\n    return v5(value, NAMESPACE);\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * **IMPORTANT** this code is running in the plugin host process and should be closed as possible to VS Code counterpart:\n * https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/workbench/api/common/extHostFileSystemEventService.ts\n * One should be able to diff them to see differences.\n */\n\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/tslint/config */\n\nimport { Emitter, WaitUntilEvent, AsyncEmitter, WaitUntilData } from '@theia/core/lib/common/event';\nimport { IRelativePattern, parse } from '@theia/core/lib/common/glob';\nimport { UriComponents } from '@theia/core/shared/vscode-uri';\nimport { Disposable, URI, WorkspaceEdit } from './types-impl';\nimport { EditorsAndDocumentsExtImpl as ExtHostDocumentsAndEditors } from './editors-and-documents';\nimport type * as vscode from '@theia/plugin';\nimport * as typeConverter from './type-converters';\nimport { FileOperation } from '@theia/filesystem/lib/common/files';\nimport { flatten } from '../common/arrays';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport {\n    Plugin, TextEditorsMain as MainThreadTextEditorsShape, PLUGIN_RPC_CONTEXT, FileSystemEvents, ExtHostFileSystemEventServiceShape,\n    WorkspaceFileEditDto, WorkspaceTextEditDto\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\n\ntype Event<T> = vscode.Event<T>;\ntype IExtensionDescription = Plugin;\ntype IWaitUntil = WaitUntilEvent;\n\nexport class FileSystemWatcher implements vscode.FileSystemWatcher {\n\n    private readonly _onDidCreate = new Emitter<vscode.Uri>();\n    private readonly _onDidChange = new Emitter<vscode.Uri>();\n    private readonly _onDidDelete = new Emitter<vscode.Uri>();\n    private _disposable: Disposable;\n    private _config: number;\n\n    get ignoreCreateEvents(): boolean {\n        return Boolean(this._config & 0b001);\n    }\n\n    get ignoreChangeEvents(): boolean {\n        return Boolean(this._config & 0b010);\n    }\n\n    get ignoreDeleteEvents(): boolean {\n        return Boolean(this._config & 0b100);\n    }\n\n    constructor(dispatcher: Event<FileSystemEvents>, globPattern: string | IRelativePattern,\n        ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean, excludes?: string[]) {\n\n        this._config = 0;\n        if (ignoreCreateEvents) {\n            this._config += 0b001;\n        }\n        if (ignoreChangeEvents) {\n            this._config += 0b010;\n        }\n        if (ignoreDeleteEvents) {\n            this._config += 0b100;\n        }\n\n        const parsedPattern = parse(globPattern);\n        const excludePatterns = excludes?.map(exclude => parse(exclude)) || [];\n\n        const subscription = dispatcher(events => {\n            if (!ignoreCreateEvents) {\n                for (const created of events.created) {\n                    const uri = URI.revive(created);\n                    if (parsedPattern(uri.fsPath) && !excludePatterns.some(p => p(uri.fsPath))) {\n                        this._onDidCreate.fire(uri);\n                    }\n                }\n            }\n            if (!ignoreChangeEvents) {\n                for (const changed of events.changed) {\n                    const uri = URI.revive(changed);\n                    if (parsedPattern(uri.fsPath) && !excludePatterns.some(p => p(uri.fsPath))) {\n                        this._onDidChange.fire(uri);\n                    }\n                }\n            }\n            if (!ignoreDeleteEvents) {\n                for (const deleted of events.deleted) {\n                    const uri = URI.revive(deleted);\n                    if (parsedPattern(uri.fsPath) && !excludePatterns.some(p => p(uri.fsPath))) {\n                        this._onDidDelete.fire(uri);\n                    }\n                }\n            }\n        });\n\n        this._disposable = Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n    }\n\n    dispose(): void {\n        this._disposable.dispose();\n    }\n\n    get onDidCreate(): Event<vscode.Uri> {\n        return this._onDidCreate.event;\n    }\n\n    get onDidChange(): Event<vscode.Uri> {\n        return this._onDidChange.event;\n    }\n\n    get onDidDelete(): Event<vscode.Uri> {\n        return this._onDidDelete.event;\n    }\n}\n\ninterface IExtensionListener<E> {\n    extension: IExtensionDescription;\n    (e: E): any;\n}\n\nexport class ExtHostFileSystemEventService implements ExtHostFileSystemEventServiceShape {\n\n    private readonly _onFileSystemEvent = new Emitter<FileSystemEvents>();\n\n    private readonly _onDidRenameFile = new Emitter<vscode.FileRenameEvent>();\n    private readonly _onDidCreateFile = new Emitter<vscode.FileCreateEvent>();\n    private readonly _onDidDeleteFile = new Emitter<vscode.FileDeleteEvent>();\n    private readonly _onWillRenameFile = new AsyncEmitter<vscode.FileWillRenameEvent>();\n    private readonly _onWillCreateFile = new AsyncEmitter<vscode.FileWillCreateEvent>();\n    private readonly _onWillDeleteFile = new AsyncEmitter<vscode.FileWillDeleteEvent>();\n\n    readonly onDidRenameFile: Event<vscode.FileRenameEvent> = this._onDidRenameFile.event;\n    readonly onDidCreateFile: Event<vscode.FileCreateEvent> = this._onDidCreateFile.event;\n    readonly onDidDeleteFile: Event<vscode.FileDeleteEvent> = this._onDidDeleteFile.event;\n\n    constructor(\n        rpc: RPCProtocol,\n        private readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n        private readonly _mainThreadTextEditors: MainThreadTextEditorsShape = rpc.getProxy(PLUGIN_RPC_CONTEXT.TEXT_EDITORS_MAIN)\n    ) {\n        //\n    }\n\n    // --- file events\n\n    createFileSystemWatcher(globPattern: string | IRelativePattern, ignoreCreateEvents?: boolean,\n        ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): vscode.FileSystemWatcher {\n        return new FileSystemWatcher(this._onFileSystemEvent.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n    }\n\n    $onFileEvent(events: FileSystemEvents) {\n        this._onFileSystemEvent.fire(events);\n    }\n\n    // --- file operations\n\n    $onDidRunFileOperation(operation: FileOperation, target: UriComponents, source: UriComponents | undefined): void {\n        switch (operation) {\n            case FileOperation.MOVE:\n                this._onDidRenameFile.fire(Object.freeze({ files: [{ oldUri: URI.revive(source!), newUri: URI.revive(target) }] }));\n                break;\n            case FileOperation.DELETE:\n                this._onDidDeleteFile.fire(Object.freeze({ files: [URI.revive(target)] }));\n                break;\n            case FileOperation.CREATE:\n                this._onDidCreateFile.fire(Object.freeze({ files: [URI.revive(target)] }));\n                break;\n            default:\n            // ignore, dont send\n        }\n    }\n\n    getOnWillRenameFileEvent(extension: IExtensionDescription): Event<vscode.FileWillRenameEvent> {\n        return this._createWillExecuteEvent(extension, this._onWillRenameFile);\n    }\n\n    getOnWillCreateFileEvent(extension: IExtensionDescription): Event<vscode.FileWillCreateEvent> {\n        return this._createWillExecuteEvent(extension, this._onWillCreateFile);\n    }\n\n    getOnWillDeleteFileEvent(extension: IExtensionDescription): Event<vscode.FileWillDeleteEvent> {\n        return this._createWillExecuteEvent(extension, this._onWillDeleteFile);\n    }\n\n    private _createWillExecuteEvent<E extends IWaitUntil>(extension: IExtensionDescription, emitter: AsyncEmitter<E>): Event<E> {\n        return (listener, thisArg, disposables) => {\n            const wrappedListener: IExtensionListener<E> = function wrapped(e: E) { listener.call(thisArg, e); };\n            wrappedListener.extension = extension;\n            return emitter.event(wrappedListener, undefined, disposables);\n        };\n    }\n\n    async $onWillRunFileOperation(operation: FileOperation, target: UriComponents, source: UriComponents | undefined, timeout: number, token: CancellationToken): Promise<any> {\n        switch (operation) {\n            case FileOperation.MOVE:\n                await this._fireWillEvent(this._onWillRenameFile, { files: [{ oldUri: URI.revive(source!), newUri: URI.revive(target) }] }, timeout, token);\n                break;\n            case FileOperation.DELETE:\n                await this._fireWillEvent(this._onWillDeleteFile, { files: [URI.revive(target)] }, timeout, token);\n                break;\n            case FileOperation.CREATE:\n                await this._fireWillEvent(this._onWillCreateFile, { files: [URI.revive(target)] }, timeout, token);\n                break;\n            default:\n            // ignore, dont send\n        }\n    }\n\n    private async _fireWillEvent<E extends IWaitUntil>(emitter: AsyncEmitter<E>, data: WaitUntilData<E>, timeout: number, token: CancellationToken): Promise<any> {\n\n        const edits: WorkspaceEdit[] = [];\n        await emitter.fire(data, token, async (thenable, listener) => {\n            // ignore all results except for WorkspaceEdits. Those are stored in an array.\n            const now = Date.now();\n            const result = await Promise.resolve(thenable);\n            if (result instanceof WorkspaceEdit) {\n                edits.push(result);\n            }\n\n            if (Date.now() - now > timeout) {\n                console.warn('SLOW file-participant', (<IExtensionListener<E>>listener).extension?.model.id);\n            }\n        });\n\n        if (token.isCancellationRequested) {\n            return;\n        }\n\n        if (edits.length > 0) {\n            // flatten all WorkspaceEdits collected via waitUntil-call\n            // and apply them in one go.\n            const allEdits = new Array<Array<WorkspaceFileEditDto | WorkspaceTextEditDto>>();\n            for (const edit of edits) {\n                const { edits } = typeConverter.fromWorkspaceEdit(edit, this._extHostDocumentsAndEditors);\n                allEdits.push(edits);\n            }\n            return this._mainThreadTextEditors.$tryApplyWorkspaceEdit({ edits: flatten(allEdits) });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Mutable } from '@theia/core';\nimport { MarkdownStringImpl as BaseMarkdownString, MarkdownString as MarkdownStringInterface, MarkdownStringTrustedOptions } from '@theia/core/lib/common/markdown-rendering';\nimport * as pluginAPI from '@theia/plugin';\nimport { es5ClassCompat } from '../common/types';\nimport { URI } from './types-impl';\n\n// Copied from https://github.com/microsoft/vscode/blob/7d9b1c37f8e5ae3772782ba3b09d827eb3fdd833/src/vs/workbench/api/common/extHostTypes.ts\n\n@es5ClassCompat\nexport class MarkdownString implements pluginAPI.MarkdownString {\n\n    readonly #delegate: BaseMarkdownString;\n\n    /**\n     * @returns whether the thing is a markdown string implementation with helper methods.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isMarkdownString(thing: any): thing is pluginAPI.MarkdownString {\n        if (thing instanceof MarkdownString) {\n            return true;\n        }\n        return thing && thing.appendCodeblock && thing.appendMarkdown && thing.appendText && (thing.value !== undefined);\n    }\n\n    constructor(value?: string, supportThemeIcons: boolean = false) {\n        this.#delegate = new BaseMarkdownString(value, { supportThemeIcons });\n    }\n\n    get value(): string {\n        return this.#delegate.value;\n    }\n    set value(value: string) {\n        this.#delegate.value = value;\n    }\n\n    get isTrusted(): boolean | MarkdownStringTrustedOptions | undefined {\n        return this.#delegate.isTrusted;\n    }\n\n    set isTrusted(value: boolean | MarkdownStringTrustedOptions | undefined) {\n        this.#delegate.isTrusted = value;\n    }\n\n    get supportThemeIcons(): boolean | undefined {\n        return this.#delegate.supportThemeIcons;\n    }\n\n    set supportThemeIcons(value: boolean | undefined) {\n        this.#delegate.supportThemeIcons = value;\n    }\n\n    get supportHtml(): boolean | undefined {\n        return this.#delegate.supportHtml;\n    }\n\n    set supportHtml(value: boolean | undefined) {\n        this.#delegate.supportHtml = value;\n    }\n\n    get baseUri(): pluginAPI.Uri | undefined {\n        return URI.revive(this.#delegate.baseUri);\n    }\n\n    set baseUri(value: pluginAPI.Uri | undefined) {\n        this.#delegate.baseUri = value;\n    }\n\n    appendText(value: string): pluginAPI.MarkdownString {\n        this.#delegate.appendText(value);\n        return this;\n    }\n\n    appendMarkdown(value: string): pluginAPI.MarkdownString {\n        this.#delegate.appendMarkdown(value);\n        return this;\n    }\n\n    appendCodeblock(value: string, language?: string): pluginAPI.MarkdownString {\n        this.#delegate.appendCodeblock(language ?? '', value);\n        return this;\n    }\n\n    toJSON(): MarkdownStringInterface {\n        const plainObject: Mutable<MarkdownStringInterface> = { value: this.value };\n        if (this.isTrusted !== undefined) {\n            plainObject.isTrusted = this.isTrusted;\n        }\n        if (this.supportThemeIcons !== undefined) {\n            plainObject.supportThemeIcons = this.supportThemeIcons;\n        }\n        if (this.supportHtml !== undefined) {\n            plainObject.supportHtml = this.supportHtml;\n        }\n        if (this.baseUri !== undefined) {\n            plainObject.baseUri = this.baseUri.toJSON();\n        }\n        return plainObject;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject } from './types';\nimport URI from './uri';\n\nexport interface UriSelection {\n    readonly uri: URI\n}\n\nexport namespace UriSelection {\n\n    export function is(arg: unknown): arg is UriSelection {\n        return isObject<UriSelection>(arg) && arg.uri instanceof URI;\n    }\n\n    export function getUri(selection: unknown): URI | undefined {\n        if (is(selection)) {\n            return selection.uri;\n        }\n        if (Array.isArray(selection) && is(selection[0])) {\n            return selection[0].uri;\n        }\n        return undefined;\n    }\n\n    export function getUris(selection: unknown): URI[] {\n        if (is(selection)) {\n            return [selection.uri];\n        }\n        if (Array.isArray(selection)) {\n            return selection.filter(is).map(s => s.uri);\n        }\n        return [];\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { environment } from '@theia/application-package/lib/environment';\nexport * from './application-error';\nexport * from './cancellation';\nexport * from './command';\nexport * from './contribution-filter';\nexport * from './contribution-provider';\nexport * from './core-preferences';\nexport * from './disposable';\nexport * from './event';\nexport * from './inversify-utils';\nexport * from './listener';\nexport * from './logger';\nexport * from './lsp-types';\nexport * from './menu';\nexport * from './message-rpc';\nexport * from './message-service';\nexport * from './message-service-protocol';\nexport * from './messaging';\nexport * from './nls';\nexport * from './numbers';\nexport * from './objects';\nexport * from './os';\nexport * from './path';\nexport * from './performance';\nexport * from './preferences';\nexport * from './progress-service';\nexport * from './progress-service-protocol';\nexport * from './quick-pick-service';\nexport * from './reference';\nexport * from './resource';\nexport * from './selection';\nexport * from './selection-service';\nexport * from './strings';\nexport * from './telemetry';\nexport * from './tree-preference';\nexport * from './types';\nexport { default as URI } from './uri';\nexport * from './uuid';\nexport * from './view-column';\nexport * from './version';\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { Range as R, Position as P, Location as L } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { URI as TheiaURI } from '@theia/core/lib/common/uri';\nimport { cloneAndChange } from '../common/objects';\nimport { Position, Range, Location, CallHierarchyItem, TypeHierarchyItem, URI, TextDocumentShowOptions } from './types-impl';\nimport {\n    fromPosition, fromRange, fromLocation,\n    isModelLocation, toLocation,\n    isModelCallHierarchyItem, fromCallHierarchyItem, toCallHierarchyItem,\n    isModelTypeHierarchyItem, fromTypeHierarchyItem, toTypeHierarchyItem,\n    isModelCallHierarchyIncomingCall, toCallHierarchyIncomingCall,\n    isModelCallHierarchyOutgoingCall, toCallHierarchyOutgoingCall, fromTextDocumentShowOptions\n} from './type-converters';\n\n// Here is a mapping of VSCode commands to monaco commands with their conversions\nexport namespace KnownCommands {\n\n    /**\n     * Commands that you want to apply custom conversions to rather than pass through the automatic args converter.\n     * Would be useful in the case where theia provides some command and you need to provide custom conversions\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mappings: { [id: string]: [string, (args: any[] | undefined) => any[] | undefined, ((results: any[] | undefined) => any[] | undefined)?] } = {};\n    mappings['editor.action.showReferences'] = ['textEditor.commands.showReferences', createConversionFunction(\n        (uri: URI) => uri.toString(),\n        fromPositionToP,\n        toArrayConversion(fromLocationToL)),\n        createConversionFunction()];\n\n    /**\n     * Mapping of all editor.action commands to their conversion function.\n     * executeCommand<T> inside of the plugin command registry will automatically convert\n     * incoming arguments from vscode api types to monaco types\n     */\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const CONVERT_VSCODE_TO_MONACO = (args: any[] | undefined) => {\n        if (!args) {\n            return args;\n        }\n        const argStack: ConversionFunction[] = [];\n        args.forEach(_ => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            argStack.push((arg: any) => vscodeToMonacoArgsConverter(arg));\n        });\n        if (args) {\n            return createConversionFunction(...argStack)(args);\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const identity = (args: any[]) => args;\n\n    mappings['editor.action.select.all'] = ['editor.action.select.all', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.toggleHighContrast'] = ['editor.action.toggleHighContrast', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.moveCarretLeftAction'] = ['editor.action.moveCarretLeftAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.moveCarretRightAction'] = ['editor.action.moveCarretRightAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.transposeLetters'] = ['editor.action.transposeLetters', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.clipboardCopyWithSyntaxHighlightingAction'] = ['editor.action.clipboardCopyWithSyntaxHighlightingAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.commentLine'] = ['editor.action.commentLine', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.addCommentLine'] = ['editor.action.addCommentLine', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.removeCommentLine'] = ['editor.action.removeCommentLine', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.blockComment'] = ['editor.action.blockComment', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.showContextMenu'] = ['editor.action.showContextMenu', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorUndo'] = ['cursorUndo', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.unfold'] = ['editor.unfold', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.unfoldRecursively'] = ['editor.unfoldRecursively', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.fold'] = ['editor.fold', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldRecursively'] = ['editor.foldRecursively', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldAll'] = ['editor.foldAll', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.unfoldAll'] = ['editor.unfoldAll', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldAllBlockComments'] = ['editor.foldAllBlockComments', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldAllMarkerRegions'] = ['editor.foldAllMarkerRegions', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.unfoldAllMarkerRegions'] = ['editor.unfoldAllMarkerRegions', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel1'] = ['editor.foldLevel1', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel2'] = ['editor.foldLevel2', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel3'] = ['editor.foldLevel3', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel4'] = ['editor.foldLevel4', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel5'] = ['editor.foldLevel5', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel6'] = ['editor.foldLevel6', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.foldLevel7'] = ['editor.foldLevel7', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.fontZoomIn'] = ['editor.action.fontZoomIn', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.fontZoomOut'] = ['editor.action.fontZoomOut', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.fontZoomReset'] = ['editor.action.fontZoomReset', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.formatDocument'] = ['editor.action.formatDocument', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.formatSelection'] = ['editor.action.formatSelection', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.copyLinesUpAction'] = ['editor.action.copyLinesUpAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.copyLinesDownAction'] = ['editor.action.copyLinesDownAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.moveLinesUpAction'] = ['editor.action.moveLinesUpAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.moveLinesDownAction'] = ['editor.action.moveLinesDownAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.sortLinesAscending'] = ['editor.action.sortLinesAscending', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.sortLinesDescending'] = ['editor.action.sortLinesDescending', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.trimTrailingWhitespace'] = ['editor.action.trimTrailingWhitespace', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.deleteLines'] = ['editor.action.deleteLines', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.indentLines'] = ['editor.action.indentLines', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.outdentLines'] = ['editor.action.outdentLines', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.insertLineBefore'] = ['editor.action.insertLineBefore', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.insertLineAfter'] = ['editor.action.insertLineAfter', CONVERT_VSCODE_TO_MONACO];\n    mappings['deleteAllLeft'] = ['deleteAllLeft', CONVERT_VSCODE_TO_MONACO];\n    mappings['deleteAllRight'] = ['deleteAllRight', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.joinLines'] = ['editor.action.joinLines', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.transpose'] = ['editor.action.transpose', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.transformToUppercase'] = ['editor.action.transformToUppercase', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.transformToLowercase'] = ['editor.action.transformToLowercase', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.transformToTitlecase'] = ['editor.action.transformToTitlecase', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.smartSelect.expand'] = ['editor.action.smartSelect.expand', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.smartSelect.shrink'] = ['editor.action.smartSelect.shrink', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.forceRetokenize'] = ['editor.action.forceRetokenize', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.toggleTabFocusMode'] = ['editor.action.toggleTabFocusMode', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.gotoLine'] = ['editor.action.gotoLine', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.quickOutline'] = ['editor.action.quickOutline', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.inPlaceReplace.up'] = ['editor.action.inPlaceReplace.up', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.inPlaceReplace.down'] = ['editor.action.inPlaceReplace.down', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.diffReview.next'] = ['editor.action.diffReview.next', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.diffReview.prev'] = ['editor.action.diffReview.prev', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.selectToBracket'] = ['editor.action.selectToBracket', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.jumpToBracket'] = ['editor.action.jumpToBracket', CONVERT_VSCODE_TO_MONACO];\n    mappings['actions.findWithSelection'] = ['actions.findWithSelection', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.nextMatchFindAction'] = ['editor.action.nextMatchFindAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.previousMatchFindAction'] = ['editor.action.previousMatchFindAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.nextSelectionMatchFindAction'] = ['editor.action.nextSelectionMatchFindAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.previousSelectionMatchFindAction'] = ['editor.action.previousSelectionMatchFindAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.openLink'] = ['editor.action.openLink', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.quickFix'] = ['editor.action.quickFix', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.refactor'] = ['editor.action.refactor', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.sourceAction'] = ['editor.action.sourceAction', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.organizeImports'] = ['editor.action.organizeImports', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.autoFix'] = ['editor.action.autoFix', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.fixAll'] = ['editor.action.fixAll', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.rename'] = ['editor.action.rename', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.insertCursorAbove'] = ['editor.action.insertCursorAbove', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.insertCursorBelow'] = ['editor.action.insertCursorBelow', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.insertCursorAtEndOfEachLineSelected'] = ['editor.action.insertCursorAtEndOfEachLineSelected', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.addSelectionToNextFindMatch'] = ['editor.action.addSelectionToNextFindMatch', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.addSelectionToPreviousFindMatch'] = ['editor.action.addSelectionToPreviousFindMatch', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.moveSelectionToNextFindMatch'] = ['editor.action.moveSelectionToNextFindMatch', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.moveSelectionToPreviousFindMatch'] = ['editor.action.moveSelectionToPreviousFindMatch', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.selectHighlights'] = ['editor.action.selectHighlights', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.changeAll'] = ['editor.action.changeAll', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.addCursorsToBottom'] = ['editor.action.addCursorsToBottom', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.addCursorsToTop'] = ['editor.action.addCursorsToTop', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.triggerParameterHints'] = ['editor.action.triggerParameterHints', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.wordHighlight.next'] = ['editor.action.wordHighlight.next', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.wordHighlight.prev'] = ['editor.action.wordHighlight.prev', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.wordHighlight.trigger'] = ['editor.action.wordHighlight.trigger', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.showAccessibilityHelp'] = ['editor.action.showAccessibilityHelp', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.inspectTokens'] = ['editor.action.inspectTokens', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.marker.next'] = ['editor.action.marker.next', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.marker.prev'] = ['editor.action.marker.prev', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.marker.nextInFiles'] = ['editor.action.marker.nextInFiles', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.marker.prevInFiles'] = ['editor.action.marker.prevInFiles', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.showHover'] = ['editor.action.showHover', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.revealDefinition'] = ['editor.action.revealDefinition', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.revealDefinitionAside'] = ['editor.action.revealDefinitionAside', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.peekDefinition'] = ['editor.action.peekDefinition', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.revealDeclaration'] = ['editor.action.revealDeclaration', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.peekDeclaration'] = ['editor.action.peekDeclaration', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.goToImplementation'] = ['editor.action.goToImplementation', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.peekImplementation'] = ['editor.action.peekImplementation', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.goToTypeDefinition'] = ['editor.action.goToTypeDefinition', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.peekTypeDefinition'] = ['editor.action.peekTypeDefinition', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.referenceSearch.trigger'] = ['editor.action.referenceSearch.trigger', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.triggerSuggest'] = ['editor.action.triggerSuggest', CONVERT_VSCODE_TO_MONACO];\n    mappings['closeReferenceSearchEditor'] = ['closeReferenceSearchEditor', CONVERT_VSCODE_TO_MONACO];\n    mappings['cancelSelection'] = ['cancelSelection', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorBottom'] = ['cursorBottom', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorBottomSelect'] = ['cursorBottomSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorDown'] = ['cursorDown', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorDownSelect'] = ['cursorDownSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorEnd'] = ['cursorEnd', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorEndSelect'] = ['cursorEndSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorHome'] = ['cursorHome', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorHomeSelect'] = ['cursorHomeSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorLeft'] = ['cursorLeft', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorLeftSelect'] = ['cursorLeftSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorPageDown'] = ['cursorPageDown', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorPageDownSelect'] = ['cursorPageDownSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorPageUp'] = ['cursorPageUp', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorPageUpSelect'] = ['cursorPageUpSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorRight'] = ['cursorRight', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorRightSelect'] = ['cursorRightSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorTop'] = ['cursorTop', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorTopSelect'] = ['cursorTopSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorUp'] = ['cursorUp', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorUpSelect'] = ['cursorUpSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['deleteLeft'] = ['deleteLeft', CONVERT_VSCODE_TO_MONACO];\n    mappings['deleteRight'] = ['deleteRight', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.selectAll'] = ['editor.action.selectAll', CONVERT_VSCODE_TO_MONACO];\n    mappings['expandLineSelection'] = ['expandLineSelection', CONVERT_VSCODE_TO_MONACO];\n    mappings['outdent'] = ['outdent', CONVERT_VSCODE_TO_MONACO];\n    mappings['scrollLineDown'] = ['scrollLineDown', CONVERT_VSCODE_TO_MONACO];\n    mappings['scrollLineUp'] = ['scrollLineUp', CONVERT_VSCODE_TO_MONACO];\n    mappings['scrollPageDown'] = ['scrollPageDown', CONVERT_VSCODE_TO_MONACO];\n    mappings['scrollPageUp'] = ['scrollPageUp', CONVERT_VSCODE_TO_MONACO];\n    mappings['tab'] = ['tab', CONVERT_VSCODE_TO_MONACO];\n    mappings['removeSecondaryCursors'] = ['removeSecondaryCursors', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorWordRight'] = ['cursorWordEndRight', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorWordEndRight'] = ['cursorWordEndRight', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorWordEndRightSelect'] = ['cursorWordEndRightSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorWordLeft'] = ['cursorWordStartLeft', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorWordStartLeft'] = ['cursorWordStartLeft', CONVERT_VSCODE_TO_MONACO];\n    mappings['cursorWordStartLeftSelect'] = ['cursorWordStartLeftSelect', CONVERT_VSCODE_TO_MONACO];\n    mappings['deleteWordLeft'] = ['deleteWordLeft', CONVERT_VSCODE_TO_MONACO];\n    mappings['deleteWordRight'] = ['deleteWordRight', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.cancelOperation'] = ['editor.cancelOperation', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.gotoNextSymbolFromResult'] = ['editor.gotoNextSymbolFromResult', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.gotoNextSymbolFromResult.cancel'] = ['editor.gotoNextSymbolFromResult.cancel', CONVERT_VSCODE_TO_MONACO];\n    mappings['openReferenceToSide'] = ['openReferenceToSide', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleExplainMode'] = ['toggleExplainMode', CONVERT_VSCODE_TO_MONACO];\n    mappings['closeFindWidget'] = ['closeFindWidget', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.replaceAll'] = ['editor.action.replaceAll', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.replaceOne'] = ['editor.action.replaceOne', CONVERT_VSCODE_TO_MONACO];\n    mappings['editor.action.selectAllMatches'] = ['editor.action.selectAllMatches', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleFindCaseSensitive'] = ['toggleFindCaseSensitive', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleFindInSelection'] = ['toggleFindInSelection', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleFindRegex'] = ['toggleFindRegex', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleFindWholeWord'] = ['toggleFindWholeWord', CONVERT_VSCODE_TO_MONACO];\n    mappings['jumpToNextSnippetPlaceholder'] = ['jumpToNextSnippetPlaceholder', CONVERT_VSCODE_TO_MONACO];\n    mappings['jumpToPrevSnippetPlaceholder'] = ['jumpToPrevSnippetPlaceholder', CONVERT_VSCODE_TO_MONACO];\n    mappings['leaveEditorMessage'] = ['leaveEditorMessage', CONVERT_VSCODE_TO_MONACO];\n    mappings['leaveSnippet'] = ['leaveSnippet', CONVERT_VSCODE_TO_MONACO];\n    mappings['closeMarkersNavigation'] = ['closeMarkersNavigation', CONVERT_VSCODE_TO_MONACO];\n    mappings['goToNextReferenceFromEmbeddedEditor'] = ['goToNextReferenceFromEmbeddedEditor', CONVERT_VSCODE_TO_MONACO];\n    mappings['goToPreviousReferenceFromEmbeddedEditor'] = ['goToPreviousReferenceFromEmbeddedEditor', CONVERT_VSCODE_TO_MONACO];\n    mappings['closeParameterHints'] = ['closeParameterHints', CONVERT_VSCODE_TO_MONACO];\n    mappings['showNextParameterHint'] = ['showNextParameterHint', CONVERT_VSCODE_TO_MONACO];\n    mappings['showPrevParameterHint'] = ['showPrevParameterHint', CONVERT_VSCODE_TO_MONACO];\n    mappings['acceptSelectedSuggestion'] = ['acceptSelectedSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['acceptSelectedSuggestionOnEnter'] = ['acceptSelectedSuggestionOnEnter', CONVERT_VSCODE_TO_MONACO];\n    mappings['hideSuggestWidget'] = ['hideSuggestWidget', CONVERT_VSCODE_TO_MONACO];\n    mappings['insertBestCompletion'] = ['insertBestCompletion', CONVERT_VSCODE_TO_MONACO];\n    mappings['insertNextSuggestion'] = ['insertNextSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['insertPrevSuggestion'] = ['insertPrevSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['selectNextPageSuggestion'] = ['selectNextPageSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['selectNextSuggestion'] = ['selectNextSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['selectPrevPageSuggestion'] = ['selectPrevPageSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['selectPrevSuggestion'] = ['selectPrevSuggestion', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleSuggestionDetails'] = ['toggleSuggestionDetails', CONVERT_VSCODE_TO_MONACO];\n    mappings['toggleSuggestionFocus'] = ['toggleSuggestionFocus', CONVERT_VSCODE_TO_MONACO];\n    mappings['acceptRenameInput'] = ['acceptRenameInput', CONVERT_VSCODE_TO_MONACO];\n    mappings['cancelRenameInput'] = ['cancelRenameInput', CONVERT_VSCODE_TO_MONACO];\n    mappings['closeAccessibilityHelp'] = ['closeAccessibilityHelp', CONVERT_VSCODE_TO_MONACO];\n    mappings['history.showNext'] = ['history.showNext', CONVERT_VSCODE_TO_MONACO];\n    mappings['history.showPrevious'] = ['history.showPrevious', CONVERT_VSCODE_TO_MONACO];\n    mappings['closeReferenceSearch'] = ['closeReferenceSearch', CONVERT_VSCODE_TO_MONACO];\n    mappings['goToNextReference'] = ['goToNextReference', CONVERT_VSCODE_TO_MONACO];\n    mappings['goToPreviousReference'] = ['goToPreviousReference', CONVERT_VSCODE_TO_MONACO];\n    mappings['setContext'] = ['_setContext', CONVERT_VSCODE_TO_MONACO];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const CONVERT_MONACO_TO_VSCODE = (args: any | undefined) => {\n        if (!args) {\n            return args;\n        }\n        if (!Array.isArray(args)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return monacoToVscodeArgsConverter(args);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const argsArray: any[] = args;\n        const argStack: ConversionFunction[] = [];\n        argsArray.forEach(_ => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            argStack.push((arg: any) => monacoToVscodeArgsConverter(arg));\n        });\n        if (argsArray) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return createConversionFunction(...argStack)(argsArray);\n        }\n    };\n\n    // vscode-'executeXXX'-like commands\n    mappings['vscode.executeReferenceProvider'] = ['vscode.executeReferenceProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeImplementationProvider'] = ['vscode.executeImplementationProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeDefinitionProvider'] = ['vscode.executeDefinitionProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeDeclarationProvider'] = ['vscode.executeDeclarationProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeTypeDefinitionProvider'] = ['vscode.executeTypeDefinitionProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeHoverProvider'] = ['vscode.executeHoverProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeDocumentHighlights'] = ['vscode.executeDocumentHighlights', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeFormatDocumentProvider'] = ['vscode.executeFormatDocumentProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeFormatRangeProvider'] = ['vscode.executeFormatRangeProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeFormatOnTypeProvider'] = ['vscode.executeFormatOnTypeProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.executeCodeActionProvider'] = ['vscode.executeCodeActionProvider', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.prepareCallHierarchy'] = ['vscode.prepareCallHierarchy', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.provideIncomingCalls'] = ['vscode.provideIncomingCalls', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.provideOutgoingCalls'] = ['vscode.provideOutgoingCalls', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.prepareTypeHierarchy'] = ['vscode.prepareTypeHierarchy', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.provideSupertypes'] = ['vscode.provideSupertypes', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n    mappings['vscode.provideSubtypes'] = ['vscode.provideSubtypes', CONVERT_VSCODE_TO_MONACO, CONVERT_MONACO_TO_VSCODE];\n\n    mappings['vscode.open'] = ['vscode.open', CONVERT_VSCODE_TO_MONACO];\n    mappings['vscode.diff'] = ['vscode.diff', CONVERT_VSCODE_TO_MONACO];\n\n    // terminal commands\n    mappings['workbench.action.terminal.new'] = ['terminal:new', identity];\n    mappings['workbench.action.terminal.newWithProfile'] = ['terminal:new:profile', identity];\n    mappings['workbench.action.terminal.selectDefaultShell'] = ['terminal:profile:default', identity];\n    mappings['workbench.action.terminal.newInActiveWorkspace'] = ['terminal:new:active:workspace', identity];\n    mappings['workbench.action.terminal.clear'] = ['terminal:clear', identity];\n    mappings['openInTerminal'] = ['terminal:context', createConversionFunction((uri: URI) => new TheiaURI(uri))];\n    mappings['workbench.action.terminal.split'] = ['terminal:split', identity];\n    mappings['workbench.action.terminal.focusFind'] = ['terminal:find', identity];\n    mappings['workbench.action.terminal.hideFind'] = ['terminal:find:cancel', identity];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export function map<T>(id: string, args: any[] | undefined, toDo: (mappedId: string, mappedArgs: any[] | undefined, mappedResult: ConversionFunction | undefined) => T): T {\n        if (mappings[id]) {\n            return toDo(mappings[id][0], mappings[id][1](args), mappings[id][2] ? (result => mappings[id][2]!(result)) : undefined);\n        } else {\n            return toDo(id, args, undefined);\n        }\n    }\n\n    export function mapped(id: string): boolean {\n        return !!mappings[id];\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    export type ConversionFunction = ((parameter: any) => any) | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function createConversionFunction(...conversions: ConversionFunction[]): (args: any[] | undefined) => any[] | undefined {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function (args: any[] | undefined): any[] | undefined {\n            if (!args) {\n                return args;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return args.map(function (arg: any, index: number): any {\n                if (index < conversions.length) {\n                    const conversion = conversions[index];\n                    if (conversion) {\n                        return conversion(arg);\n                    }\n                }\n                return arg;\n            });\n        };\n    }\n\n    function fromPositionToP(p: theia.Position): P {\n        return P.create(p.line, p.character);\n    }\n\n    function fromRangeToR(r: theia.Range): R {\n        return R.create(fromPositionToP(r.start), fromPositionToP(r.end));\n    }\n\n    function fromLocationToL(l: theia.Location): L {\n        return L.create(l.uri.toString(), fromRangeToR(l.range));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/tslint/config\n    function vscodeToMonacoArgsConverter(args: any[]) {\n        // tslint:disable-next-line:typedef\n        return cloneAndChange(args, function (value) {\n            if (CallHierarchyItem.isCallHierarchyItem(value)) {\n                return fromCallHierarchyItem(value);\n            }\n            if (TypeHierarchyItem.isTypeHierarchyItem(value)) {\n                return fromTypeHierarchyItem(value);\n            }\n            if (TextDocumentShowOptions.isTextDocumentShowOptions(value)) {\n                return fromTextDocumentShowOptions(value);\n            }\n            if (Position.isPosition(value)) {\n                return fromPosition(value);\n            }\n            if (Range.isRange(value)) {\n                return fromRange(value);\n            }\n            if (Location.isLocation(value)) {\n                return fromLocation(value);\n            }\n            if (!Array.isArray(value)) {\n                return value;\n            }\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/tslint/config\n    function monacoToVscodeArgsConverter(args: any[]) {\n        // tslint:disable-next-line:typedef\n        return cloneAndChange(args, function (value) {\n            if (isModelCallHierarchyItem(value)) {\n                return toCallHierarchyItem(value);\n            }\n            if (isModelTypeHierarchyItem(value)) {\n                return toTypeHierarchyItem(value);\n            }\n            if (isModelCallHierarchyIncomingCall(value)) {\n                return toCallHierarchyIncomingCall(value);\n            }\n            if (isModelCallHierarchyOutgoingCall(value)) {\n                return toCallHierarchyOutgoingCall(value);\n            }\n            if (isModelLocation(value)) {\n                return toLocation(value);\n            }\n            if (!Array.isArray(value)) {\n                return value;\n            }\n\n        });\n    }\n}\n\nfunction toArrayConversion<T, U>(f: (a: T) => U): (a: T[]) => U[] {\n    // tslint:disable-next-line:typedef\n    return function (a: T[]) {\n        return a.map(f);\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { FormattingOptions, TextEdit } from '../../common/plugin-api-rpc-model';\nimport { Position } from '../../common/plugin-api-rpc';\n\nexport class OnTypeFormattingAdapter {\n\n    constructor(\n        private readonly provider: theia.OnTypeFormattingEditProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideOnTypeFormattingEdits(resource: URI, position: Position, ch: string,\n        options: FormattingOptions, token: theia.CancellationToken): Promise<TextEdit[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const pos = Converter.toPosition(position);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Promise.resolve(this.provider.provideOnTypeFormattingEdits(doc, pos, ch, <any>options, token)).then(value => {\n            if (Array.isArray(value)) {\n                return value.map(Converter.fromTextEdit);\n            }\n            return undefined;\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport class TelemetryTrustedValue<T> {\n    readonly value: T;\n\n    constructor(value: T) {\n        this.value = value;\n    }\n}\n\nexport interface TelemetryLogger {\n    readonly sender: TelemetrySender;\n    readonly options: TelemetryLoggerOptions | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logUsage(eventName: string, data?: Record<string, any | TelemetryTrustedValue<any>>): void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logError(eventNameOrException: string | Error, data?: Record<string, any | TelemetryTrustedValue<any>>): void;\n\n    dispose(): void;\n}\n\ninterface TelemetrySender {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendEventData(eventName: string, data?: Record<string, any>): void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendErrorData(error: Error, data?: Record<string, any>): void;\n    flush?(): void | Thenable<void>;\n}\n\ninterface TelemetryLoggerOptions {\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Range } from 'vscode-languageserver-protocol';\nimport { isNumber, isObject, isString, isUndefined } from './types';\n\nexport interface TextDocumentContentChangeDelta {\n    readonly range: Range;\n    readonly rangeLength?: number;\n    readonly text: string;\n}\nexport namespace TextDocumentContentChangeDelta {\n\n    export function is(arg: unknown): arg is TextDocumentContentChangeDelta {\n        return isObject<TextDocumentContentChangeDelta>(arg)\n            && isString(arg.text)\n            && (isNumber(arg.rangeLength) || isUndefined(arg.rangeLength))\n            && Range.is(arg.range);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { Path } from '@theia/core/lib/common/path';\nimport * as theia from '@theia/plugin';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { Breakpoint, DebugStackFrameDTO, DebugThreadDTO } from '../../common/plugin-api-rpc-model';\nimport { DebugConfigurationProviderTriggerKind, DebugExt, DebugMain, PLUGIN_RPC_CONTEXT as Ext, TerminalOptionsExt } from '../../common/plugin-api-rpc';\nimport { PluginPackageDebuggersContribution } from '../../common/plugin-protocol';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { ConnectionImpl } from '../../common/connection';\nimport { DEBUG_SCHEME, SCHEME_PATTERN } from '@theia/debug/lib/common/debug-uri-utils';\nimport { Disposable, Breakpoint as BreakpointExt, SourceBreakpoint, FunctionBreakpoint, Location, Range, URI as URIImpl, DebugStackFrame, DebugThread } from '../types-impl';\nimport { PluginDebugAdapterSession } from './plugin-debug-adapter-session';\nimport { PluginDebugAdapterTracker } from './plugin-debug-adapter-tracker';\nimport { generateUuid } from '@theia/core/lib/common/uuid';\nimport { DebugAdapter } from '@theia/debug/lib/common/debug-model';\nimport { PluginDebugAdapterCreator } from './plugin-debug-adapter-creator';\nimport { NodeDebugAdapterCreator } from '../node/debug/plugin-node-debug-adapter-creator';\nimport { DebugProtocol } from '@vscode/debugprotocol';\nimport { DebugConfiguration, DebugSessionOptions } from '@theia/debug/lib/common/debug-configuration';\nimport { checkTestRunInstance } from '../tests';\nimport { PluginLogger } from '../logger';\n\ninterface ConfigurationProviderRecord {\n    handle: number;\n    type: string;\n    trigger: DebugConfigurationProviderTriggerKind,\n    provider: theia.DebugConfigurationProvider;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n@injectable()\nexport class DebugExtImpl implements DebugExt {\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    // debug sessions by sessionId\n    private sessions = new Map<string, PluginDebugAdapterSession>();\n    private configurationProviderHandleGenerator: number;\n    private configurationProviders: ConfigurationProviderRecord[];\n\n    /**\n     * Only use internally, don't send it to the frontend. It's expensive!\n     * It's already there as a part of the plugin metadata.\n     */\n    private debuggersContributions = new Map<string, PluginPackageDebuggersContribution>();\n    private descriptorFactories = new Map<string, theia.DebugAdapterDescriptorFactory>();\n    private trackerFactories: [string, theia.DebugAdapterTrackerFactory][] = [];\n    private contributionPaths = new Map<string, string>();\n    private contributionTypes = new Map<string, theia.PluginType>();\n\n    private connectionExt: ConnectionImpl;\n    private commandRegistryExt: CommandRegistryImpl;\n\n    private proxy: DebugMain;\n    private logger: PluginLogger;\n\n    private readonly onDidChangeBreakpointsEmitter = new Emitter<theia.BreakpointsChangeEvent>();\n    private readonly onDidChangeActiveDebugSessionEmitter = new Emitter<theia.DebugSession | undefined>();\n    private readonly onDidTerminateDebugSessionEmitter = new Emitter<theia.DebugSession>();\n    private readonly onDidCreateDebugSessionEmitter = new Emitter<theia.DebugSession>();\n    private readonly onDidStartDebugSessionEmitter = new Emitter<theia.DebugSession>();\n    private readonly onDidReceiveDebugSessionCustomEmitter = new Emitter<theia.DebugSessionCustomEvent>();\n\n    activeDebugSession: theia.DebugSession | undefined;\n    activeDebugConsole: theia.DebugConsole;\n\n    _activeStackItem: theia.DebugStackFrame | theia.DebugThread | undefined;\n    private readonly onDidChangeActiveStackItemEmitter = new Emitter<theia.DebugStackFrame | theia.DebugThread | undefined>();\n\n    private readonly _breakpoints = new Map<string, theia.Breakpoint>();\n\n    private frontendAdapterCreator = new PluginDebugAdapterCreator();\n    private backendAdapterCreator = new NodeDebugAdapterCreator();\n\n    get breakpoints(): theia.Breakpoint[] {\n        return [...this._breakpoints.values()];\n    }\n\n    constructor() {\n        this.activeDebugConsole = {\n            append: (value: string) => this.proxy.$appendToDebugConsole(value),\n            appendLine: (value: string) => this.proxy.$appendLineToDebugConsole(value)\n        };\n        this.configurationProviderHandleGenerator = 0;\n        this.configurationProviders = [];\n    }\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(Ext.DEBUG_MAIN);\n        this.logger = new PluginLogger(this.rpc, 'debug');\n    }\n\n    /**\n     * Sets dependencies.\n     */\n    assistedInject(connectionExt: ConnectionImpl, commandRegistryExt: CommandRegistryImpl): void {\n        this.connectionExt = connectionExt;\n        this.commandRegistryExt = commandRegistryExt;\n    }\n\n    /**\n     * Registers contributions.\n     * @param pluginFolder plugin folder path\n     * @param pluginType plugin type\n     * @param contributions available debuggers contributions\n     */\n    registerDebuggersContributions(pluginFolder: string, pluginType: theia.PluginType, contributions: PluginPackageDebuggersContribution[]): void {\n        contributions.forEach(contribution => {\n            this.contributionPaths.set(contribution.type, pluginFolder);\n            this.contributionTypes.set(contribution.type, pluginType);\n            this.debuggersContributions.set(contribution.type, contribution);\n            this.proxy.$registerDebuggerContribution({\n                type: contribution.type,\n                label: contribution.label || contribution.type\n            });\n            this.logger.debug(`Debugger contribution has been registered: ${contribution.type}`);\n        });\n    }\n\n    get onDidReceiveDebugSessionCustomEvent(): theia.Event<theia.DebugSessionCustomEvent> {\n        return this.onDidReceiveDebugSessionCustomEmitter.event;\n    }\n\n    get onDidChangeActiveDebugSession(): theia.Event<theia.DebugSession | undefined> {\n        return this.onDidChangeActiveDebugSessionEmitter.event;\n    }\n\n    get onDidTerminateDebugSession(): theia.Event<theia.DebugSession> {\n        return this.onDidTerminateDebugSessionEmitter.event;\n    }\n\n    get onDidCreateDebugSession(): theia.Event<theia.DebugSession> {\n        return this.onDidCreateDebugSessionEmitter.event;\n    }\n\n    get onDidStartDebugSession(): theia.Event<theia.DebugSession> {\n        return this.onDidStartDebugSessionEmitter.event;\n    }\n\n    get onDidChangeActiveStackItem(): theia.Event<theia.DebugStackFrame | theia.DebugThread | undefined> {\n        return this.onDidChangeActiveStackItemEmitter.event;\n    }\n\n    get onDidChangeBreakpoints(): theia.Event<theia.BreakpointsChangeEvent> {\n        return this.onDidChangeBreakpointsEmitter.event;\n    }\n\n    addBreakpoints(breakpoints: readonly theia.Breakpoint[]): void {\n        const added: theia.Breakpoint[] = [];\n        for (const b of breakpoints) {\n            if (this._breakpoints.has(b.id)) {\n                continue;\n            }\n            this._breakpoints.set(b.id, b);\n            added.push(b);\n        }\n        if (added.length) {\n            this.onDidChangeBreakpointsEmitter.fire({ added, removed: [], changed: [] });\n            this.proxy.$addBreakpoints(added);\n        }\n    }\n\n    removeBreakpoints(breakpoints: readonly theia.Breakpoint[]): void {\n        const removed: theia.Breakpoint[] = [];\n        const removedIds: string[] = [];\n        for (const b of breakpoints) {\n            if (!this._breakpoints.has(b.id)) {\n                continue;\n            }\n            this._breakpoints.delete(b.id);\n            removed.push(b);\n            removedIds.push(b.id);\n        }\n        if (removed.length) {\n            this.onDidChangeBreakpointsEmitter.fire({ added: [], removed, changed: [] });\n            this.proxy.$removeBreakpoints(removedIds);\n        }\n    }\n\n    startDebugging(folder: theia.WorkspaceFolder | undefined, nameOrConfiguration: string | theia.DebugConfiguration, options: theia.DebugSessionOptions): PromiseLike<boolean> {\n        const optionsDto: DebugSessionOptions = {\n            parentSessionId: options.parentSession?.id,\n            compact: options.compact,\n            consoleMode: options.consoleMode,\n            suppressSaveBeforeStart: options.suppressSaveBeforeStart,\n            suppressDebugStatusbar: options.suppressDebugStatusbar,\n            suppressDebugView: options.suppressDebugView,\n            lifecycleManagedByParent: options.lifecycleManagedByParent,\n            noDebug: options.noDebug,\n        };\n        if (options.testRun) {\n            const run = checkTestRunInstance(options.testRun);\n            optionsDto.testRun = {\n                controllerId: run.controller.id,\n                runId: run.id\n            };\n        }\n        return this.proxy.$startDebugging(folder, nameOrConfiguration, optionsDto);\n    }\n\n    stopDebugging(session?: theia.DebugSession): PromiseLike<void> {\n        return this.proxy.$stopDebugging(session?.id);\n    }\n\n    asDebugSourceUri(source: theia.DebugProtocolSource, session?: theia.DebugSession): theia.Uri {\n        return this.getDebugSourceUri(source, session?.id);\n    }\n\n    private getDebugSourceUri(raw: DebugProtocol.Source, sessionId?: string): theia.Uri {\n        if (raw.sourceReference && raw.sourceReference > 0) {\n            let query = 'ref=' + String(raw.sourceReference);\n            if (sessionId) {\n                query += `&session=${sessionId}`;\n            }\n            return URIImpl.from({ scheme: DEBUG_SCHEME, path: raw.path ?? '', query });\n        }\n        if (!raw.path) {\n            throw new Error('Unrecognized source type: ' + JSON.stringify(raw));\n        }\n        if (raw.path.match(SCHEME_PATTERN)) {\n            return URIImpl.parse(raw.path);\n        }\n        return URIImpl.file(raw.path);\n    }\n\n    registerDebugAdapterDescriptorFactory(debugType: string, factory: theia.DebugAdapterDescriptorFactory): Disposable {\n        if (this.descriptorFactories.has(debugType)) {\n            throw new Error(`Descriptor factory for ${debugType} has been already registered`);\n        }\n        this.descriptorFactories.set(debugType, factory);\n        return Disposable.create(() => this.descriptorFactories.delete(debugType));\n    }\n\n    registerDebugAdapterTrackerFactory(debugType: string, factory: theia.DebugAdapterTrackerFactory): Disposable {\n        if (!factory) {\n            return Disposable.create(() => { });\n        }\n\n        this.trackerFactories.push([debugType, factory]);\n        return Disposable.create(() => {\n            this.trackerFactories = this.trackerFactories.filter(tuple => tuple[1] !== factory);\n        });\n    }\n\n    registerDebugConfigurationProvider(debugType: string, provider: theia.DebugConfigurationProvider, trigger: DebugConfigurationProviderTriggerKind): Disposable {\n        this.logger.info(`Debug configuration provider has been registered: ${debugType}, trigger: ${trigger}`);\n\n        const handle = this.configurationProviderHandleGenerator++;\n        this.configurationProviders.push({ handle, type: debugType, trigger, provider });\n        const descriptor = {\n            handle,\n            type: debugType,\n            trigger,\n            provideDebugConfiguration: !!provider.provideDebugConfigurations,\n            resolveDebugConfigurations: !!provider.resolveDebugConfiguration,\n            resolveDebugConfigurationWithSubstitutedVariables: !!provider.resolveDebugConfigurationWithSubstitutedVariables\n        };\n        this.proxy.$registerDebugConfigurationProvider(descriptor);\n        return Disposable.create(() => {\n            this.configurationProviders = this.configurationProviders.filter(p => (p.handle !== handle));\n            this.proxy.$unregisterDebugConfigurationProvider(handle);\n        });\n    }\n\n    set activeStackItem(stackItem: theia.DebugStackFrame | theia.DebugThread | undefined) {\n        if (this._activeStackItem === stackItem) {\n            return;\n        }\n        this._activeStackItem = stackItem;\n        this.onDidChangeActiveStackItemEmitter.fire(this.activeStackItem);\n    }\n\n    get activeStackItem(): theia.DebugStackFrame | theia.DebugThread | undefined {\n        return this._activeStackItem;\n    }\n\n    async $onDidChangeActiveThread(debugThread: DebugThreadDTO | undefined): Promise<void> {\n        if (!debugThread) {\n            this.activeStackItem = undefined;\n            return;\n        }\n        const session = this.sessions.get(debugThread.sessionId);\n        if (session) {\n            this.activeStackItem = new DebugThread(session, debugThread.threadId);\n        }\n    }\n\n    async $onDidChangeActiveFrame(debugFrame: DebugStackFrameDTO | undefined): Promise<void> {\n        if (!debugFrame) {\n            this.activeStackItem = undefined;\n            return;\n        }\n        const session = this.sessions.get(debugFrame!.sessionId);\n        if (session) {\n            this.activeStackItem = new DebugStackFrame(session, debugFrame.threadId, debugFrame.frameId);\n        }\n    }\n\n    async $onSessionCustomEvent(sessionId: string, event: string, body?: any): Promise<void> {\n        const session = this.sessions.get(sessionId);\n        if (session) {\n            this.onDidReceiveDebugSessionCustomEmitter.fire({ event, body, session });\n        }\n    }\n\n    async $sessionDidCreate(sessionId: string): Promise<void> {\n        const session = this.sessions.get(sessionId);\n        if (session) {\n            this.onDidCreateDebugSessionEmitter.fire(session);\n        }\n    }\n\n    async $sessionDidStart(sessionId: string): Promise<void> {\n        const session = this.sessions.get(sessionId);\n        if (session) {\n            this.onDidStartDebugSessionEmitter.fire(session);\n        }\n    }\n\n    async $sessionDidDestroy(sessionId: string): Promise<void> {\n        const session = this.sessions.get(sessionId);\n        if (session) {\n            this.onDidTerminateDebugSessionEmitter.fire(session);\n            this.sessions.delete(sessionId);\n        }\n    }\n\n    async $sessionDidChange(sessionId: string | undefined): Promise<void> {\n        this.activeDebugSession = sessionId ? this.sessions.get(sessionId) : undefined;\n        this.onDidChangeActiveDebugSessionEmitter.fire(this.activeDebugSession);\n    }\n\n    async $breakpointsDidChange(added: Breakpoint[], removed: string[], changed: Breakpoint[]): Promise<void> {\n        const a: theia.Breakpoint[] = [];\n        const r: theia.Breakpoint[] = [];\n        const c: theia.Breakpoint[] = [];\n        for (const b of added) {\n            if (this._breakpoints.has(b.id)) {\n                continue;\n            }\n            const bExt = this.toBreakpointExt(b);\n            if (bExt) {\n                this._breakpoints.set(bExt.id, bExt);\n                a.push(bExt);\n            }\n        }\n        for (const id of removed) {\n            const bExt = this._breakpoints.get(id);\n            if (bExt) {\n                this._breakpoints.delete(id);\n                r.push(bExt);\n            }\n        }\n        for (const b of changed) {\n            const bExt = this._breakpoints.get(b.id);\n            if (bExt) {\n                const { functionName, location, enabled, condition, hitCondition, logMessage } = b;\n                if (bExt instanceof FunctionBreakpoint && functionName) {\n                    Object.assign(bExt, { enabled, condition, hitCondition, logMessage, functionName });\n                } else if (bExt instanceof SourceBreakpoint && location) {\n                    const range = new Range(location.range.startLineNumber, location.range.startColumn, location.range.endLineNumber, location.range.endColumn);\n                    Object.assign(bExt, { enabled, condition, hitCondition, logMessage, location: new Location(URI.revive(location.uri), range) });\n                }\n                c.push(bExt);\n            }\n        }\n        this.onDidChangeBreakpointsEmitter.fire({ added: a, removed: r, changed: c });\n    }\n\n    protected toBreakpointExt({ functionName, location, enabled, condition, hitCondition, logMessage, id }: Breakpoint): BreakpointExt | undefined {\n        if (location) {\n            const range = new Range(location.range.startLineNumber, location.range.startColumn, location.range.endLineNumber, location.range.endColumn);\n            return new SourceBreakpoint(new Location(URI.revive(location.uri), range), enabled, condition, hitCondition, logMessage, id);\n        }\n        if (functionName) {\n            return new FunctionBreakpoint(functionName!, enabled, condition, hitCondition, logMessage, id);\n        }\n        return undefined;\n    }\n\n    async $createDebugSession(debugConfiguration: DebugConfiguration, workspaceFolderUri: string | undefined): Promise<string> {\n        const sessionId = generateUuid();\n\n        const parentSession = debugConfiguration.parentSessionId ? this.sessions.get(debugConfiguration.parentSessionId) : undefined;\n        const theiaSession: theia.DebugSession = {\n            id: sessionId,\n            type: debugConfiguration.type,\n            name: debugConfiguration.name,\n            parentSession: parentSession,\n            workspaceFolder: this.toWorkspaceFolder(workspaceFolderUri),\n            configuration: debugConfiguration,\n            customRequest: async (command: string, args?: any) => {\n                const response = await this.proxy.$customRequest(sessionId, command, args);\n                if (response && response.success) {\n                    return response.body;\n                }\n                return Promise.reject(new Error(response.message ?? 'custom request failed'));\n            },\n            getDebugProtocolBreakpoint: async (breakpoint: Breakpoint) =>\n                this.proxy.$getDebugProtocolBreakpoint(sessionId, breakpoint.id)\n        };\n\n        const tracker = await this.createDebugAdapterTracker(theiaSession);\n        const communicationProvider = await this.createDebugAdapter(theiaSession, debugConfiguration);\n\n        const debugAdapterSession = new PluginDebugAdapterSession(communicationProvider, tracker, theiaSession);\n        this.sessions.set(sessionId, debugAdapterSession);\n\n        const connection = await this.connectionExt!.ensureConnection(sessionId);\n        debugAdapterSession.start(connection);\n\n        return sessionId;\n    }\n\n    async $terminateDebugSession(sessionId: string): Promise<void> {\n        const debugAdapterSession = this.sessions.get(sessionId);\n        if (debugAdapterSession) {\n            await debugAdapterSession.stop();\n        }\n    }\n\n    async $getTerminalCreationOptions(debugType: string): Promise<TerminalOptionsExt | undefined> {\n        return this.doGetTerminalCreationOptions(debugType);\n    }\n\n    async doGetTerminalCreationOptions(debugType: string): Promise<TerminalOptionsExt | undefined> {\n        return undefined;\n    }\n\n    private getConfigurationProviderRecord(handle: number): {\n        provider: theia.DebugConfigurationProvider\n        type: string\n    } {\n        const record = this.configurationProviders.find(p => p.handle === handle);\n        if (!record) {\n            throw new Error('No Debug configuration provider found with given handle number: ' + handle);\n        }\n        const { provider, type } = record;\n        return { provider, type };\n    }\n\n    async $provideDebugConfigurationsByHandle(\n        handle: number,\n        workspaceFolderUri: string | undefined\n    ): Promise<theia.DebugConfiguration[]> {\n        const { provider, type } = this.getConfigurationProviderRecord(handle);\n\n        const configurations = await provider.provideDebugConfigurations?.(\n            this.toWorkspaceFolder(workspaceFolderUri)\n        );\n\n        if (!configurations) {\n            throw new Error(\n                'nothing returned from DebugConfigurationProvider.provideDebugConfigurations, type: ' + type\n            );\n        }\n\n        return configurations;\n    }\n\n    async $resolveDebugConfigurationByHandle(\n        handle: number,\n        workspaceFolderUri: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null> {\n        const { provider } = this.getConfigurationProviderRecord(handle);\n        return provider.resolveDebugConfiguration?.(\n            this.toWorkspaceFolder(workspaceFolderUri),\n            debugConfiguration\n        );\n    }\n\n    async $resolveDebugConfigurationWithSubstitutedVariablesByHandle(\n        handle: number,\n        workspaceFolderUri: string | undefined,\n        debugConfiguration: theia.DebugConfiguration\n    ): Promise<theia.DebugConfiguration | undefined | null> {\n        const { provider } = this.getConfigurationProviderRecord(handle);\n        return provider.resolveDebugConfigurationWithSubstitutedVariables?.(\n            this.toWorkspaceFolder(workspaceFolderUri),\n            debugConfiguration\n        );\n    }\n\n    protected async createDebugAdapterTracker(session: theia.DebugSession): Promise<theia.DebugAdapterTracker> {\n        return PluginDebugAdapterTracker.create(session, this.trackerFactories);\n    }\n\n    protected async createDebugAdapter(session: theia.DebugSession, debugConfiguration: theia.DebugConfiguration): Promise<DebugAdapter> {\n        const executable = await this.resolveDebugAdapterExecutable(debugConfiguration);\n        const descriptorFactory = this.descriptorFactories.get(session.type);\n        return this.getAdapterCreator(debugConfiguration).createDebugAdapter(session, debugConfiguration, executable, descriptorFactory);\n    }\n\n    protected async resolveDebugAdapterExecutable(debugConfiguration: theia.DebugConfiguration): Promise<theia.DebugAdapterExecutable | undefined> {\n        const { type } = debugConfiguration;\n        const contribution = this.debuggersContributions.get(type);\n        if (contribution) {\n            if (contribution.adapterExecutableCommand) {\n                const executable = await this.commandRegistryExt.executeCommand<theia.DebugAdapterExecutable>(contribution.adapterExecutableCommand);\n                if (executable) {\n                    return executable;\n                }\n            } else {\n                const contributionPath = this.contributionPaths.get(type);\n                if (contributionPath) {\n                    return this.getAdapterCreator(debugConfiguration).resolveDebugAdapterExecutable(contributionPath, contribution);\n                }\n            }\n        }\n\n        throw new Error(`It is not possible to provide debug adapter executable for '${debugConfiguration.type}'.`);\n    }\n\n    private toWorkspaceFolder(folder: string | undefined): theia.WorkspaceFolder | undefined {\n        if (!folder) {\n            return undefined;\n        }\n\n        const uri = URI.parse(folder);\n        const path = new Path(uri.path);\n        return {\n            uri: uri,\n            name: path.base,\n            index: 0\n        };\n    }\n\n    private getAdapterCreator(debugConfiguration: theia.DebugConfiguration): PluginDebugAdapterCreator {\n        const pluginType = this.contributionTypes.get(debugConfiguration.type);\n        return pluginType === 'frontend' ? this.frontendAdapterCreator : this.backendAdapterCreator;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { ResponseError } from '../message-rpc/rpc-message-encoder';\nimport { ApplicationError } from '../application-error';\nimport { Disposable } from '../disposable';\nimport { Emitter, Event } from '../event';\nimport { Channel } from '../message-rpc/channel';\nimport { RequestHandler, RpcProtocol } from '../message-rpc/rpc-protocol';\nimport { ConnectionHandler } from './handler';\nimport { Deferred } from '../promise-util';\nimport { decorate, injectable, unmanaged } from '../../../shared/inversify';\n\nexport type RpcServer<Client> = Disposable & {\n    /**\n     * If this server is a proxy to a remote server then\n     * a client is used as a local object\n     * to handle RPC messages from the remote server.\n     */\n    setClient(client: Client | undefined): void;\n    getClient?(): Client | undefined;\n};\n\nexport interface RpcConnectionEventEmitter {\n    readonly onDidOpenConnection: Event<void>;\n    readonly onDidCloseConnection: Event<void>;\n}\nexport type RpcProxy<T> = T & RpcConnectionEventEmitter;\n\nexport class RpcConnectionHandler<T extends object> implements ConnectionHandler {\n    constructor(\n        readonly path: string,\n        readonly targetFactory: (proxy: RpcProxy<T>) => any,\n        readonly factoryConstructor: new () => RpcProxyFactory<T> = RpcProxyFactory\n    ) { }\n\n    onConnection(connection: Channel): void {\n        const factory = new this.factoryConstructor();\n        const proxy = factory.createProxy();\n        factory.target = this.targetFactory(proxy);\n        factory.listen(connection);\n    }\n}\n/**\n * Factory for creating a new {@link RpcProtocol} for a given chanel and {@link RequestHandler}.\n */\nexport type RpcProtocolFactory = (channel: Channel, requestHandler: RequestHandler) => RpcProtocol;\n\nconst defaultRpcProtocolFactory: RpcProtocolFactory = (channel, requestHandler) => new RpcProtocol(channel, requestHandler);\n\n/**\n * Factory for RPC proxy objects.\n *\n * A RPC proxy exposes the programmatic interface of an object through\n * Theia's RPC protocol. This allows remote programs to call methods of this objects by\n * sending RPC requests. This takes place over a bi-directional stream,\n * where both ends can expose an object and both can call methods on each other'\n * exposed object.\n *\n * For example, assuming we have an object of the following type on one end:\n *\n *     class Foo {\n *         bar(baz: number): number { return baz + 1 }\n *     }\n *\n * which we want to expose through a RPC interface.  We would do:\n *\n *     let target = new Foo()\n *     let factory = new RpcProxyFactory<Foo>('/foo', target)\n *     factory.onConnection(connection)\n *\n * The party at the other end of the `connection`, in order to remotely call\n * methods on this object would do:\n *\n *     let factory = new RpcProxyFactory<Foo>('/foo')\n *     factory.onConnection(connection)\n *     let proxy = factory.createProxy();\n *     let result = proxy.bar(42)\n *     // result is equal to 43\n *\n * One the wire, it would look like this:\n *\n *     --> { \"type\":\"1\", \"id\": 1, \"method\": \"bar\", \"args\": [42]}\n *     <-- { \"type\":\"3\", \"id\": 1, \"res\": 43}\n *\n * Note that in the code of the caller, we didn't pass a target object to\n * RpcProxyFactory, because we don't want/need to expose an object.\n * If we had passed a target object, the other side could've called methods on\n * it.\n *\n * @param <T> - The type of the object to expose to RPC.\n */\n\nexport class RpcProxyFactory<T extends object> implements ProxyHandler<T> {\n\n    protected readonly onDidOpenConnectionEmitter = new Emitter<void>();\n    protected readonly onDidCloseConnectionEmitter = new Emitter<void>();\n\n    protected rpcDeferred: Deferred<RpcProtocol>;\n\n    /**\n     * Build a new RpcProxyFactory.\n     *\n     * @param target - The object to expose to RPC methods calls.  If this\n     *   is omitted, the proxy won't be able to handle requests, only send them.\n     */\n    constructor(public target?: any, protected rpcProtocolFactory = defaultRpcProtocolFactory) {\n        this.waitForConnection();\n    }\n\n    protected waitForConnection(): void {\n        this.rpcDeferred = new Deferred<RpcProtocol>();\n        this.rpcDeferred.promise.then(protocol => {\n            protocol.channel.onClose(() => {\n                this.onDidCloseConnectionEmitter.fire(undefined);\n                // Wait for connection in case the backend reconnects\n                this.waitForConnection();\n            });\n            this.onDidOpenConnectionEmitter.fire(undefined);\n        });\n    }\n\n    /**\n     * Connect a {@link Channel} to the factory by creating an {@link RpcProtocol} on top of it.\n     *\n     * This protocol will be used to send/receive RPC requests and\n     * responses.\n     */\n    listen(channel: Channel): void {\n        const protocol = this.rpcProtocolFactory(channel, (meth, args) => this.onRequest(meth, ...args));\n        protocol.onNotification(event => this.onNotification(event.method, ...event.args));\n\n        this.rpcDeferred.resolve(protocol);\n    }\n\n    /**\n     * Process an incoming RPC method call.\n     *\n     * onRequest is called when the RPC connection received a method call\n     * request.  It calls the corresponding method on [[target]].\n     *\n     * The return value is a Promise object that is resolved with the return\n     * value of the method call, if it is successful.  The promise is rejected\n     * if the called method does not exist or if it throws.\n     *\n     * @returns A promise of the method call completion.\n     */\n    protected async onRequest(method: string, ...args: any[]): Promise<any> {\n        try {\n            if (this.target) {\n                return await this.target[method](...args);\n            } else {\n                throw new Error(`no target was set to handle ${method}`);\n            }\n        } catch (error) {\n            throw this.serializeError(error);\n        }\n    }\n\n    /**\n     * Process an incoming RPC notification.\n     *\n     * Same as [[onRequest]], but called on incoming notifications rather than\n     * methods calls.\n     */\n    protected onNotification(method: string, ...args: any[]): void {\n        if (this.target) {\n            this.target[method](...args);\n        }\n    }\n\n    /**\n     * Create a Proxy exposing the interface of an object of type T.  This Proxy\n     * can be used to do RPC method calls on the remote target object as\n     * if it was local.\n     *\n     * If `T` implements `RpcServer` then a client is used as a target object for a remote target object.\n     */\n    createProxy(): RpcProxy<T> {\n        const result = new Proxy<T>(this as any, this);\n        return result as any;\n    }\n\n    /**\n     * Get a callable object that executes a RPC method call.\n     *\n     * Getting a property on the Proxy object returns a callable that, when\n     * called, executes a RPC call.  The name of the property defines the\n     * method to be called.  The callable takes a variable number of arguments,\n     * which are passed in the RPC method call.\n     *\n     * For example, if you have a Proxy object:\n     *\n     *     let fooProxyFactory = RpcProxyFactory<Foo>('/foo')\n     *     let fooProxy = fooProxyFactory.createProxy()\n     *\n     * accessing `fooProxy.bar` will return a callable that, when called,\n     * executes a RPC method call to method `bar`.  Therefore, doing\n     * `fooProxy.bar()` will call the `bar` method on the remote Foo object.\n     *\n     * @param target - unused.\n     * @param p - The property accessed on the Proxy object.\n     * @param receiver - unused.\n     * @returns A callable that executes the RPC call.\n     */\n    get(target: T, p: PropertyKey, receiver: any): any {\n        if (p === 'setClient') {\n            return (client: any) => {\n                this.target = client;\n            };\n        }\n        if (p === 'getClient') {\n            return () => this.target;\n        }\n        if (p === 'onDidOpenConnection') {\n            return this.onDidOpenConnectionEmitter.event;\n        }\n        if (p === 'onDidCloseConnection') {\n            return this.onDidCloseConnectionEmitter.event;\n        }\n        if (p === 'then') {\n            // Prevent inversify from identifying this proxy as a promise object.\n            return undefined;\n        }\n        if (p === 'toJSON') {\n            // Prevent packr from attempting to serialize proxies with `toJSON`.\n            return undefined;\n        }\n        const isNotify = this.isNotification(p);\n        return (...args: any[]) => {\n            const method = p.toString();\n            const capturedError = new Error(`Request '${method}' failed`);\n            return this.rpcDeferred.promise.then(connection =>\n                new Promise<void>((resolve, reject) => {\n                    try {\n                        if (isNotify) {\n                            connection.sendNotification(method, args);\n                            resolve(undefined);\n                        } else {\n                            const resultPromise = connection.sendRequest(method, args) as Promise<any>;\n                            resultPromise\n                                .catch((err: any) => reject(this.deserializeError(capturedError, err)))\n                                .then((result: any) => resolve(result));\n                        }\n                    } catch (err) {\n                        reject(err);\n                    }\n                })\n            );\n        };\n    }\n\n    /**\n     * Return whether the given property represents a notification.\n     *\n     * A property leads to a notification rather than a method call if its name\n     * begins with `notify` or `on`.\n     *\n     * @param p - The property being called on the proxy.\n     * @return Whether `p` represents a notification.\n     */\n    protected isNotification(p: PropertyKey): boolean {\n        return p.toString().startsWith('notify') || p.toString().startsWith('on');\n    }\n\n    protected serializeError(e: any): any {\n        if (ApplicationError.is(e)) {\n            return new ResponseError(e.code, '',\n                Object.assign({ kind: 'application' }, e.toJson())\n            );\n        }\n        return e;\n    }\n    protected deserializeError(capturedError: Error, e: any): any {\n        if (e instanceof ResponseError) {\n            const capturedStack = capturedError.stack || '';\n            if (e.data && e.data.kind === 'application') {\n                const { stack, data, message } = e.data;\n                return ApplicationError.fromJson(e.code, {\n                    message: message || capturedError.message,\n                    data,\n                    stack: `${capturedStack}\\nCaused by: ${stack}`\n                });\n            }\n            e.stack = capturedStack;\n        }\n        return e;\n    }\n\n}\n\n/**\n * @deprecated since 1.39.0 use `RpcConnectionEventEmitter` instead\n */\nexport type JsonRpcConnectionEventEmitter = RpcConnectionEventEmitter;\n\n/**\n * @deprecated since 1.39.0 use `RpcServer` instead\n */\nexport type JsonRpcServer<Client> = RpcServer<Client>;\n\n/**\n * @deprecated since 1.39.0 use `RpcProxy` instead\n */\nexport type JsonRpcProxy<T> = RpcProxy<T>;\n\n/**\n * @deprecated since 1.39.0 use `RpcConnectionHandler` instead\n */\nexport class JsonRpcConnectionHandler<T extends object> extends RpcConnectionHandler<T> {\n\n}\n\n/**\n * @deprecated since 1.39.0 use `RpcProxyFactory` instead\n */\nexport class JsonRpcProxyFactory<T extends object> extends RpcProxyFactory<T> {\n\n}\n\n// eslint-disable-next-line deprecation/deprecation\ndecorate(injectable(), JsonRpcProxyFactory);\n// eslint-disable-next-line deprecation/deprecation\ndecorate(unmanaged(), JsonRpcProxyFactory, 0);\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './handler';\nexport * from './proxy-factory';\nexport * from './connection-error-handler';\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport { DocumentLink } from '../../common/plugin-api-rpc-model';\nimport * as Converter from '../type-converters';\nimport { ObjectIdentifier } from '../../common/object-identifier';\n\nexport class LinkProviderAdapter {\n    private cacheId = 0;\n    private cache = new Map<number, theia.DocumentLink>();\n\n    constructor(\n        private readonly provider: theia.DocumentLinkProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideLinks(resource: URI, token: theia.CancellationToken): Promise<DocumentLink[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            // not all documents are replicated to the plugin host (e.g. breakpoint input)\n            console.warn(`There is no document for ${resource}`);\n            return Promise.resolve(undefined);\n        }\n\n        const doc = document.document;\n\n        return Promise.resolve(this.provider.provideDocumentLinks(doc, token)).then(links => {\n            if (!Array.isArray(links)) {\n                return undefined;\n            }\n            const result: DocumentLink[] = [];\n            for (const link of links) {\n                const data = Converter.DocumentLink.from(link);\n                const id = this.cacheId++;\n                ObjectIdentifier.mixin(data, id);\n                this.cache.set(id, link);\n                result.push(data);\n            }\n            return result;\n        });\n    }\n\n    resolveLink(link: DocumentLink, token: theia.CancellationToken): Promise<DocumentLink | undefined> {\n        if (typeof this.provider.resolveDocumentLink !== 'function') {\n            return Promise.resolve(undefined);\n        }\n        const id = ObjectIdentifier.of(link);\n        const item = this.cache.get(id);\n        if (!item) {\n            return Promise.resolve(undefined);\n        }\n        return Promise.resolve(this.provider.resolveDocumentLink(item, token)).then(value => {\n            if (value) {\n                return Converter.DocumentLink.from(value);\n            }\n            return undefined;\n        });\n    }\n\n    releaseDocumentLinks(ids: number[]): void {\n        ids.forEach(id => {\n            this.cache.delete(id);\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { FormattingOptions, TextEdit, Range } from '../../common/plugin-api-rpc-model';\n\nexport class RangeFormattingAdapter {\n\n    constructor(\n        private readonly provider: theia.DocumentRangeFormattingEditProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideDocumentRangeFormattingEdits(resource: URI, range: Range, options: FormattingOptions, token: theia.CancellationToken): Promise<TextEdit[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const ran = Converter.toRange(range);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Promise.resolve(this.provider.provideDocumentRangeFormattingEdits(doc, ran, <any>options, token)).then(value => {\n            if (Array.isArray(value)) {\n                return value.map(Converter.fromTextEdit);\n            }\n            return undefined;\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { DebugChannel } from '@theia/debug/lib/common/debug-service';\nimport { ConnectionExt, ConnectionMain } from './plugin-api-rpc';\nimport { Emitter } from '@theia/core/lib/common/event';\n\n/**\n * A channel communicating with a counterpart in a plugin host.\n */\nexport class PluginChannel implements DebugChannel {\n    private messageEmitter: Emitter<string> = new Emitter();\n    private errorEmitter: Emitter<unknown> = new Emitter();\n    private closedEmitter: Emitter<void> = new Emitter();\n\n    constructor(\n        protected readonly id: string,\n        protected readonly connection: ConnectionExt | ConnectionMain) { }\n\n    send(content: string): void {\n        this.connection.$sendMessage(this.id, content);\n    }\n\n    fireMessageReceived(msg: string): void {\n        this.messageEmitter.fire(msg);\n    }\n\n    fireError(error: unknown): void {\n        this.errorEmitter.fire(error);\n    }\n\n    fireClosed(): void {\n        this.closedEmitter.fire();\n    }\n\n    onMessage(cb: (message: string) => void): void {\n        this.messageEmitter.event(cb);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError(cb: (reason: any) => void): void {\n        this.errorEmitter.event(cb);\n    }\n\n    onClose(cb: (code: number, reason: string) => void): void {\n        this.closedEmitter.event(() => cb(-1, 'closed'));\n    }\n\n    close(): void {\n        this.connection.$deleteConnection(this.id);\n    }\n}\n\nexport class ConnectionImpl implements ConnectionMain, ConnectionExt {\n    private readonly proxy: ConnectionExt | ConnectionExt;\n    private readonly connections = new Map<string, PluginChannel>();\n\n    constructor(proxy: ConnectionMain | ConnectionExt) {\n        this.proxy = proxy;\n    }\n\n    /**\n     * Gets the connection between plugin by id and sends string message to it.\n     *\n     * @param id connection's id\n     * @param message incoming message\n     */\n    async $sendMessage(id: string, message: string): Promise<void> {\n        if (this.connections.has(id)) {\n            this.connections.get(id)!.fireMessageReceived(message);\n        } else {\n            console.warn(`Received message for unknown connection: ${id}`);\n        }\n    }\n\n    /**\n     * Instantiates a new connection by the given id.\n     * @param id the connection id\n     */\n    async $createConnection(id: string): Promise<void> {\n        console.debug(`Creating plugin connection: ${id}`);\n\n        await this.doEnsureConnection(id);\n    }\n\n    /**\n     * Deletes a connection.\n     * @param id the connection id\n     */\n    async $deleteConnection(id: string): Promise<void> {\n        console.debug(`Deleting plugin connection: ${id}`);\n        const connection = this.connections.get(id);\n        if (connection) {\n            this.connections.delete(id);\n            connection.fireClosed();\n        }\n    }\n\n    /**\n     * Returns existed connection or creates a new one.\n     * @param id the connection id\n     */\n    async ensureConnection(id: string): Promise<PluginChannel> {\n        console.debug(`Creating local connection: ${id}`);\n        const connection = await this.doEnsureConnection(id);\n        await this.proxy.$createConnection(id);\n        return connection;\n    }\n\n    /**\n     * Returns existed connection or creates a new one.\n     * @param id the connection id\n     */\n    async doEnsureConnection(id: string): Promise<PluginChannel> {\n        const connection = this.connections.get(id) || await this.doCreateConnection(id);\n        this.connections.set(id, connection);\n        return connection;\n    }\n\n    protected async doCreateConnection(id: string): Promise<PluginChannel> {\n        const channel = new PluginChannel(id, this.proxy);\n        channel.onClose(() => this.connections.delete(id));\n        return channel;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI as Uri } from 'vscode-uri';\nimport { Path } from './path';\n\nexport class URI {\n\n    public static fromComponents(components: UriComponents): URI;\n    public static fromComponents(components: undefined): undefined;\n    public static fromComponents(components: UriComponents | undefined): URI | undefined {\n        return components ? new URI(Uri.revive(components)) : undefined;\n    }\n\n    public static fromFilePath(path: string): URI {\n        return new URI(Uri.file(path));\n    }\n\n    private readonly codeUri: Uri;\n    private _path: Path | undefined;\n\n    constructor(uri: string | Uri = '') {\n        if (uri instanceof Uri) {\n            this.codeUri = uri;\n        } else {\n            this.codeUri = Uri.parse(uri);\n        }\n    }\n\n    /**\n     * TODO move implementation to `DefaultUriLabelProviderContribution.getName`\n     *\n     * @deprecated use `LabelProvider.getName` instead\n     */\n    get displayName(): string {\n        const base = this.path.base;\n        if (base) {\n            return base;\n        }\n        if (this.path.isRoot) {\n            return this.path.fsPath();\n        }\n        return '';\n    }\n\n    /**\n     * Return all uri from the current to the top most.\n     */\n    get allLocations(): URI[] {\n        const locations = [];\n        let location: URI = this;\n        while (!location.path.isRoot && location.path.hasDir) {\n            locations.push(location);\n            location = location.parent;\n        }\n        locations.push(location);\n        return locations;\n    }\n\n    get parent(): URI {\n        if (this.path.isRoot) {\n            return this;\n        }\n        return this.withPath(this.path.dir);\n    }\n\n    relative(uri: URI): Path | undefined {\n        if (this.authority !== uri.authority || this.scheme !== uri.scheme) {\n            return undefined;\n        }\n        return this.path.relative(uri.path);\n    }\n\n    resolve(path: string | Path): URI {\n        return this.withPath(this.path.join(path.toString()));\n    }\n\n    /**\n     * @returns a new, absolute URI if one can be computed from the path segments passed in.\n     */\n    resolveToAbsolute(...pathSegments: Array<string | Path>): URI | undefined {\n        const absolutePath = this.path.resolve(...pathSegments.map(path => path.toString()));\n        if (absolutePath) {\n            return this.withPath(absolutePath);\n        }\n    }\n\n    /**\n     * return a new URI replacing the current with the given scheme\n     */\n    withScheme(scheme: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return a new URI replacing the current with the given authority\n     */\n    withAuthority(authority: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            authority\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a authority\n     */\n    withoutAuthority(): URI {\n        return this.withAuthority('');\n    }\n\n    /**\n     * return a new URI replacing the current with the given path\n     */\n    withPath(path: string | Path): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            path: path.toString()\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a path\n     */\n    withoutPath(): URI {\n        return this.withPath('');\n    }\n\n    /**\n     * return a new URI replacing the current with the given query\n     */\n    withQuery(query: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            query\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a query\n     */\n    withoutQuery(): URI {\n        return this.withQuery('');\n    }\n\n    /**\n     * return a new URI replacing the current with the given fragment\n     */\n    withFragment(fragment: string): URI {\n        const newCodeUri = Uri.from({\n            ...this.codeUri.toJSON(),\n            scheme: this.codeUri.scheme,\n            fragment\n        });\n        return new URI(newCodeUri);\n    }\n\n    /**\n     * return this URI without a fragment\n     */\n    withoutFragment(): URI {\n        return this.withFragment('');\n    }\n\n    /**\n     * return a new URI replacing the current with its normalized path, resolving '..' and '.' segments\n     */\n    normalizePath(): URI {\n        return this.withPath(this.path.normalize());\n    }\n\n    get scheme(): string {\n        return this.codeUri.scheme;\n    }\n\n    get authority(): string {\n        return this.codeUri.authority;\n    }\n\n    get path(): Path {\n        if (this._path === undefined) {\n            this._path = new Path(this.codeUri.path);\n        }\n        return this._path;\n    }\n\n    get query(): string {\n        return this.codeUri.query;\n    }\n\n    get fragment(): string {\n        return this.codeUri.fragment;\n    }\n\n    toString(skipEncoding?: boolean): string {\n        return this.codeUri.toString(skipEncoding);\n    }\n\n    isEqual(uri: URI, caseSensitive: boolean = true): boolean {\n        if (!this.hasSameOrigin(uri)) {\n            return false;\n        }\n\n        return caseSensitive\n            ? this.toString() === uri.toString()\n            : this.toString().toLowerCase() === uri.toString().toLowerCase();\n    }\n\n    isEqualOrParent(uri: URI, caseSensitive: boolean = true): boolean {\n        if (!this.hasSameOrigin(uri)) {\n            return false;\n        }\n        let left = this.path;\n        let right = uri.path;\n        if (!caseSensitive) {\n            left = new Path(left.toString().toLowerCase());\n            right = new Path(right.toString().toLowerCase());\n        }\n        return left.isEqualOrParent(right);\n    }\n\n    static getDistinctParents(uris: URI[]): URI[] {\n        const result: URI[] = [];\n        uris.forEach((uri, i) => {\n            if (!uris.some((otherUri, index) => index !== i && otherUri.isEqualOrParent(uri))) {\n                result.push(uri);\n            }\n        });\n        return result;\n    }\n\n    private hasSameOrigin(uri: URI): boolean {\n        return (this.authority === uri.authority) && (this.scheme === uri.scheme);\n    }\n\n    toComponents(): UriComponents {\n        return {\n            scheme: this.scheme,\n            authority: this.authority,\n            path: this.path.toString(),\n            query: this.query,\n            fragment: this.fragment\n        };\n    }\n}\n\nexport interface UriComponents {\n    scheme: string;\n    authority: string;\n    path: string;\n    query: string;\n    fragment: string;\n    external?: string;\n}\n\nexport default URI;\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from './event';\nimport { isBoolean, isObject } from './types';\nimport { Disposable } from './disposable';\n\nexport interface CancellationToken {\n    readonly isCancellationRequested: boolean;\n    /*\n     * An event emitted when cancellation is requested\n     * @event\n     */\n    readonly onCancellationRequested: Event<void>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst shortcutEvent: Event<void> = Object.freeze(Object.assign(function (callback: any, context?: any): any {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose(): void { clearTimeout(handle); } };\n}, {\n    get maxListeners(): number { return 0; },\n    set maxListeners(maxListeners: number) { }\n}));\n\nexport namespace CancellationToken {\n\n    export const None: CancellationToken = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n\n    export const Cancelled: CancellationToken = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n\n    export function is(value: unknown): value is CancellationToken {\n        return isObject<CancellationToken>(value) && (value === CancellationToken.None\n            || value === CancellationToken.Cancelled\n            || (isBoolean(value.isCancellationRequested) && !!value.onCancellationRequested));\n    }\n}\n\nexport class CancellationError extends Error {\n    constructor() {\n        super('Canceled');\n        this.name = this.message;\n    }\n}\n\nclass MutableToken implements CancellationToken {\n\n    private _isCancelled: boolean = false;\n    private _emitter: Emitter<void> | undefined;\n\n    public cancel(): void {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this._emitter = undefined;\n            }\n        }\n    }\n\n    get isCancellationRequested(): boolean {\n        return this._isCancelled;\n    }\n\n    get onCancellationRequested(): Event<void> {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter<void>();\n        }\n        return this._emitter.event;\n    }\n\n    public dispose(): void {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\n\nexport class CancellationTokenSource {\n\n    private _token: CancellationToken;\n    private _parentListener?: Disposable = undefined;\n\n    constructor(parent?: CancellationToken) {\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n\n    get token(): CancellationToken {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n\n    cancel(): void {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        } else if (this._token !== CancellationToken.Cancelled) {\n            (<MutableToken>this._token).cancel();\n        }\n    }\n\n    dispose(): void {\n        this.cancel();\n        this._parentListener?.dispose();\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n\n        } else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n\nconst cancelledMessage = 'Cancelled';\n\nexport function cancelled(): Error {\n    return new Error(cancelledMessage);\n}\n\nexport function isCancelled(err: Error | undefined): boolean {\n    return !!err && err.message === cancelledMessage;\n}\n\nexport function checkCancelled(token?: CancellationToken): void {\n    if (!!token && token.isCancellationRequested) {\n        throw cancelled();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event } from '@theia/core';\nimport { CollectionDelta, TreeDeltaBuilder } from './tree-delta';\nimport { Emitter } from '@theia/core/shared/vscode-languageserver-protocol';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function observableProperty(observationFunction: string): (target: any, property: string) => any {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target: any, property: string): any => {\n        Reflect.defineProperty(target, property, {\n            // @ts-ignore\n            get(): unknown { return this['_' + property]; },\n            set(v: unknown): void {\n                // @ts-ignore\n                this[observationFunction](property, v);\n                // @ts-ignore\n                this['_' + property] = v;\n            }\n        });\n    };\n}\n\nexport class ChangeBatcher {\n    private handle: NodeJS.Timeout | undefined;\n    private startTime: number | undefined;\n    constructor(private emitBatch: () => void, readonly timeoutMs: number) {\n    }\n\n    changeOccurred(): void {\n        if (!this.startTime) {\n            this.startTime = Date.now();\n            this.handle = setTimeout(() => {\n                this.flush();\n            }, this.timeoutMs);\n        } else {\n            if (Date.now() - this.startTime > this.timeoutMs) {\n                this.flush();\n            }\n        }\n    }\n    flush(): void {\n        if (this.handle) {\n            clearTimeout(this.handle);\n            this.handle = undefined;\n        }\n        this.startTime = undefined;\n        this.emitBatch();\n    }\n}\n\nexport class SimpleObservableCollection<V> {\n    private _values: V[] = [];\n\n    constructor(private equals: (left: V, right: V) => boolean = (left, right) => left === right) {\n    }\n\n    add(value: V): boolean {\n        if (!this._values.find(v => this.equals(v, value))) {\n            this._values.push(value);\n            this.onChangeEmitter.fire({ added: [value] });\n            return true;\n        }\n        return false;\n    }\n\n    remove(value: V): boolean {\n        const index = this._values.findIndex(v => this.equals(v, value));\n        if (index >= 0) {\n            this._values.splice(index, 1);\n            this.onChangeEmitter.fire({ removed: [value] });\n            return true;\n        }\n        return false;\n    }\n\n    private onChangeEmitter = new Emitter<CollectionDelta<V, V>>();\n    onChanged: Event<CollectionDelta<V, V>> = this.onChangeEmitter.event;\n    get values(): readonly V[] {\n        return this._values;\n    }\n\n    clear(): void {\n        const copy = this._values;\n        this._values = [];\n        this.onChangeEmitter.fire({ removed: copy });\n    }\n}\n\nabstract class AbstractIndexedCollection<K, T> {\n    private keys: Map<K, T> = new Map();\n    private _values: T[] | undefined;\n\n    abstract add(item: T): T | undefined;\n\n    get values(): readonly T[] {\n        if (!this._values) {\n            this._values = [...this.keys.values()];\n        }\n        return this._values;\n    }\n\n    get size(): number {\n        return this.keys.size;\n    }\n\n    has(key: K): boolean {\n        return this.keys.has(key);\n    }\n\n    get(key: K): T | undefined {\n        return this.keys.get(key);\n    }\n\n    protected doAdd(key: K, value: T): T | undefined {\n        const previous = this.keys.get(key);\n        if (previous !== undefined) {\n            return previous;\n        } else {\n            this.keys.set(key, value);\n            this._values = undefined;\n            return undefined;\n        }\n    }\n\n    remove(key: K): T | undefined {\n        const previous = this.keys.get(key);\n        if (previous !== undefined) {\n            this.keys.delete(key);\n            this._values = undefined;\n            return previous;\n        }\n        return undefined;\n    }\n}\n\nexport class TreeCollection<K, T, P> extends AbstractIndexedCollection<K, T> implements Iterable<[K, T]> {\n\n    constructor(protected readonly owner: T | P,\n        protected readonly pathOf: (v: T) => K[],\n        protected readonly deltaBuilder: (v: T | undefined) => TreeDeltaBuilder<K, T> | undefined) {\n        super();\n    }\n\n    add(item: T): T | undefined {\n        const path = this.pathOf(item);\n        const previous = this.doAdd(path[path.length - 1], item);\n        const deltaBuilder = this.deltaBuilder(item);\n        if (deltaBuilder) {\n            if (previous) {\n                deltaBuilder.reportChanged(path, item);\n            } else {\n                deltaBuilder.reportAdded(path, item);\n            }\n        }\n        return previous;\n    }\n\n    override remove(key: K): T | undefined {\n        const toRemove = this.get(key);\n        if (toRemove) {\n            const deltaBuilder = this.deltaBuilder(toRemove);\n            const path = this.pathOf(toRemove);\n            super.remove(key);\n            if (deltaBuilder) {\n                deltaBuilder.reportRemoved(path);\n            }\n        }\n        return toRemove;\n    }\n\n    entries(): Iterator<[K, T], unknown, undefined> {\n        return this[Symbol.iterator]();\n    }\n\n    [Symbol.iterator](): Iterator<[K, T], unknown, undefined> {\n        const iter = this.values.entries();\n        const that = this;\n        return {\n            next(..._args): IteratorResult<[K, T]> {\n                const res = iter.next();\n                if (res.done) {\n                    return { done: true, value: res.value };\n                } else {\n                    const path = that.pathOf(res.value[1]);\n                    const result: [K, T] = [path[path.length - 1], res.value[1]];\n                    return {\n                        done: false,\n                        value: result\n                    };\n                }\n            }\n        };\n\n    }\n}\nexport function groupBy<K, T>(items: Iterable<T>, keyOf: (item: T) => K): Map<K, T[]> {\n    const result = new Map<K, T[]>();\n    for (const item of items) {\n        const key = keyOf(item);\n        let values = result.get(key);\n        if (!values) {\n            values = [];\n            result.set(key, values);\n        }\n        values.push(item);\n    }\n    return result;\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// code copied and modified from https://github.com/microsoft/vscode/blob/1.47.3/src/vs/workbench/api/common/extHostAuthentication.ts\n\nimport { Disposable } from './types-impl';\nimport {\n    AuthenticationExt,\n    AuthenticationMain, Plugin as InternalPlugin,\n    PLUGIN_RPC_CONTEXT\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport * as theia from '@theia/plugin';\n\nexport class AuthenticationExtImpl implements AuthenticationExt {\n    private proxy: AuthenticationMain;\n    private authenticationProviders: Map<string, theia.AuthenticationProvider> = new Map<string, theia.AuthenticationProvider>();\n\n    private onDidChangeSessionsEmitter = new Emitter<theia.AuthenticationSessionsChangeEvent>();\n    readonly onDidChangeSessions: Event<theia.AuthenticationSessionsChangeEvent> = this.onDidChangeSessionsEmitter.event;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.AUTHENTICATION_MAIN);\n    }\n\n    async getSession(requestingExtension: InternalPlugin, providerId: string, scopes: readonly string[],\n        options: theia.AuthenticationGetSessionOptions & ({ createIfNone: true } | { forceNewSession: true } | { forceNewSession: theia.AuthenticationForceNewSessionOptions })):\n        Promise<theia.AuthenticationSession>;\n    async getSession(requestingExtension: InternalPlugin, providerId: string, scopes: readonly string[],\n        options: theia.AuthenticationGetSessionOptions & { forceNewSession: true }): Promise<theia.AuthenticationSession>;\n    async getSession(requestingExtension: InternalPlugin, providerId: string, scopes: readonly string[],\n        options: theia.AuthenticationGetSessionOptions & { forceNewSession: theia.AuthenticationForceNewSessionOptions }): Promise<theia.AuthenticationSession>;\n    async getSession(requestingExtension: InternalPlugin, providerId: string, scopes: readonly string[],\n        options: theia.AuthenticationGetSessionOptions): Promise<theia.AuthenticationSession | undefined>;\n    async getSession(requestingExtension: InternalPlugin, providerId: string, scopes: readonly string[],\n        options: theia.AuthenticationGetSessionOptions = {}): Promise<theia.AuthenticationSession | undefined> {\n        const extensionName = requestingExtension.model.displayName || requestingExtension.model.name;\n        const extensionId = requestingExtension.model.id.toLowerCase();\n        return this.proxy.$getSession(providerId, scopes, extensionId, extensionName, options);\n    }\n\n    getAccounts(providerId: string): Thenable<readonly theia.AuthenticationSessionAccountInformation[]> {\n        return this.proxy.$getAccounts(providerId);\n    }\n\n    registerAuthenticationProvider(id: string, label: string, provider: theia.AuthenticationProvider, options?: theia.AuthenticationProviderOptions): theia.Disposable {\n        if (this.authenticationProviders.get(id)) {\n            throw new Error(`An authentication provider with id '${id}' is already registered.`);\n        }\n\n        this.authenticationProviders.set(id, provider);\n\n        provider.getSessions(undefined, {}).then(sessions => { // sessions might have been restored from secret storage\n            if (sessions.length > 0) {\n                this.proxy.$onDidChangeSessions(id, {\n                    added: sessions,\n                    removed: [],\n                    changed: []\n                });\n            }\n        });\n\n        const listener = provider.onDidChangeSessions(e => {\n            this.proxy.$onDidChangeSessions(id, e);\n        });\n\n        this.proxy.$registerAuthenticationProvider(id, label, !!options?.supportsMultipleAccounts);\n\n        return new Disposable(() => {\n            listener.dispose();\n            this.authenticationProviders.delete(id);\n            this.proxy.$unregisterAuthenticationProvider(id);\n        });\n    }\n\n    $createSession(providerId: string, scopes: string[], options: theia.AuthenticationProviderSessionOptions): Promise<theia.AuthenticationSession> {\n        const authProvider = this.authenticationProviders.get(providerId);\n        if (authProvider) {\n            return Promise.resolve(authProvider.createSession(scopes, options));\n        }\n\n        throw new Error(`Unable to find authentication provider with handle: ${providerId}`);\n    }\n\n    $removeSession(providerId: string, sessionId: string): Promise<void> {\n        const authProvider = this.authenticationProviders.get(providerId);\n        if (authProvider) {\n            return Promise.resolve(authProvider.removeSession(sessionId));\n        }\n\n        throw new Error(`Unable to find authentication provider with handle: ${providerId}`);\n    }\n\n    async $getSessions(providerId: string, scopes: string[] | undefined, options: theia.AuthenticationProviderSessionOptions): Promise<ReadonlyArray<theia.AuthenticationSession>> {\n        const authProvider = this.authenticationProviders.get(providerId);\n        if (authProvider) {\n            const sessions = await authProvider.getSessions(scopes, options);\n\n            /* Wrap the session object received from the plugin to prevent serialization mismatches\n            e.g. if the plugin object is constructed with the help of getters they won't be serialized:\n            class SessionImpl implements AuthenticationSession {\n                private _id;\n                get id() {\n                    return _id;\n                }\n            ...\n            } will translate to JSON as { _id: '<sessionid>' } not { id: '<sessionid>' } */\n            return sessions.map(session => ({\n                id: session.id,\n                accessToken: session.accessToken,\n                account: { id: session.account.id, label: session.account.label },\n                scopes: session.scopes\n            }));\n        }\n\n        throw new Error(`Unable to find authentication provider with handle: ${providerId}`);\n    }\n\n    async $onDidChangeAuthenticationSessions(provider: theia.AuthenticationProviderInformation): Promise<void> {\n        this.onDidChangeSessionsEmitter.fire({ provider });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { PLUGIN_RPC_CONTEXT as Ext, OpenDialogOptionsMain, DialogsMain, SaveDialogOptionsMain, UploadDialogOptionsMain } from '../common/plugin-api-rpc';\nimport { OpenDialogOptions, SaveDialogOptions, UploadDialogOptions } from '@theia/plugin';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { URI } from './types-impl';\n\nexport class DialogsExtImpl {\n    private proxy: DialogsMain;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(Ext.DIALOGS_MAIN);\n    }\n\n    showOpenDialog(options: OpenDialogOptions): PromiseLike<URI[] | undefined> {\n        const optionsMain = {\n            title: options.title,\n            openLabel: options.openLabel,\n            defaultUri: options.defaultUri ? options.defaultUri.path : undefined,\n            canSelectFiles: typeof options.canSelectFiles === 'boolean' ? options.canSelectFiles : true,\n            canSelectFolders: typeof options.canSelectFolders === 'boolean' ? options.canSelectFolders : false,\n            canSelectMany: options.canSelectMany,\n            filters: options.filters\n        } as OpenDialogOptionsMain;\n\n        return new Promise((resolve, reject) => {\n            this.proxy.$showOpenDialog(optionsMain).then(result => {\n                if (result) {\n                    const uris = [];\n                    for (let i = 0; i < result.length; i++) {\n                        const uri = URI.file(result[i]);\n                        uris.push(uri);\n                    }\n                    resolve(uris);\n                } else {\n                    resolve(undefined);\n                }\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n    showSaveDialog(options: SaveDialogOptions): PromiseLike<URI | undefined> {\n        const optionsMain = {\n            title: options.title,\n            saveLabel: options.saveLabel,\n            defaultUri: options.defaultUri ? options.defaultUri.path : undefined,\n            filters: options.filters\n        } as SaveDialogOptionsMain;\n\n        return new Promise((resolve, reject) => {\n            this.proxy.$showSaveDialog(optionsMain).then(result => {\n                if (result) {\n                    resolve(URI.parse('file://' + result));\n                } else {\n                    resolve(undefined);\n                }\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n    showUploadDialog(options: UploadDialogOptions): PromiseLike<URI[] | undefined> {\n        const optionsMain = {\n            defaultUri: options.defaultUri ? options.defaultUri.path : undefined\n        } as UploadDialogOptionsMain;\n\n        return new Promise((resolve, reject) => {\n            this.proxy.$showUploadDialog(optionsMain).then(result => {\n                if (result) {\n                    resolve(result.map(uri => URI.parse(uri)));\n                } else {\n                    resolve(undefined);\n                }\n            }).catch(reason => {\n                reject(reason);\n            });\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// copied and modified from https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/services/workspace/node/workspaceEditingService.ts\n\nimport * as paths from 'path';\nimport * as theia from '@theia/plugin';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport {\n    WorkspaceExt,\n    WorkspaceFolderPickOptionsMain,\n    WorkspaceMain,\n    PLUGIN_RPC_CONTEXT as Ext,\n    MainMessageType,\n} from '../common/plugin-api-rpc';\nimport { Path } from '@theia/core/lib/common/path';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { WorkspaceRootsChangeEvent, SearchInWorkspaceResult, Range } from '../common/plugin-api-rpc-model';\nimport { EditorsAndDocumentsExtImpl } from './editors-and-documents';\nimport { Disposable, URI } from './types-impl';\nimport { normalize } from '@theia/core/lib/common/paths';\nimport { relative } from '../common/paths-util';\nimport { Schemes, UriComponents } from '../common/uri-components';\nimport { toWorkspaceFolder } from './type-converters';\nimport { MessageRegistryExt } from './message-registry';\nimport * as Converter from './type-converters';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { isUndefinedOrNull, isUndefined } from '../common/types';\nimport { PluginLogger } from './logger';\nimport { consumeStream } from '@theia/core/lib/common/stream';\nimport { EncodingService } from '@theia/core/lib/common/encoding-service';\nimport { BinaryBuffer, BinaryBufferReadableStream } from '@theia/core/lib/common/buffer';\n\n@injectable()\nexport class WorkspaceExtImpl implements WorkspaceExt {\n\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    @inject(EditorsAndDocumentsExtImpl)\n    protected editorsAndDocuments: EditorsAndDocumentsExtImpl;\n\n    @inject(MessageRegistryExt)\n    protected messageService: MessageRegistryExt;\n\n    private proxy: WorkspaceMain;\n    private logger: PluginLogger;\n\n    @inject(EncodingService)\n    protected encodingService: EncodingService;\n\n    private workspaceFoldersChangedEmitter = new Emitter<theia.WorkspaceFoldersChangeEvent>();\n    public readonly onDidChangeWorkspaceFolders: Event<theia.WorkspaceFoldersChangeEvent> = this.workspaceFoldersChangedEmitter.event;\n\n    private folders: theia.WorkspaceFolder[] | undefined;\n    private workspaceFileUri: theia.Uri | undefined;\n    private documentContentProviders = new Map<string, theia.TextDocumentContentProvider>();\n    private searchInWorkspaceEmitter: Emitter<{ result?: theia.TextSearchResult, searchId: number }> = new Emitter<{ result?: theia.TextSearchResult, searchId: number }>();\n    protected workspaceSearchSequence: number = 0;\n\n    private _trusted?: boolean = undefined;\n    private didGrantWorkspaceTrustEmitter = new Emitter<void>();\n    public readonly onDidGrantWorkspaceTrust: Event<void> = this.didGrantWorkspaceTrustEmitter.event;\n\n    private canonicalUriProviders = new Map<string, theia.CanonicalUriProvider>();\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(Ext.WORKSPACE_MAIN);\n        this.logger = new PluginLogger(this.rpc, 'workspace');\n    }\n\n    get rootPath(): string | undefined {\n        const folder = this.folders && this.folders[0];\n        return folder && folder.uri.fsPath;\n    }\n\n    get workspaceFolders(): theia.WorkspaceFolder[] | undefined {\n        if (this.folders && this.folders.length === 0) {\n            return undefined;\n        }\n        return this.folders;\n    }\n\n    get workspaceFile(): theia.Uri | undefined {\n        return this.workspaceFileUri;\n    }\n\n    get name(): string | undefined {\n        if (this.workspaceFolders && this.workspaceFolders.length > 0) {\n            return new Path(this.workspaceFolders[0].uri.path).base;\n        }\n\n        return undefined;\n    }\n\n    resolveProxy(url: string): Promise<string | undefined> {\n        return this.proxy.$resolveProxy(url);\n    }\n\n    $onWorkspaceFoldersChanged(event: WorkspaceRootsChangeEvent): void {\n        const newRoots = event.roots || [];\n        const newFolders = newRoots.map((root, index) => this.toWorkspaceFolder(root, index));\n        const delta = this.deltaFolders(this.folders, newFolders);\n\n        this.folders = newFolders;\n\n        this.refreshWorkspaceFile();\n\n        this.workspaceFoldersChangedEmitter.fire(delta);\n    }\n\n    $onWorkspaceLocationChanged(stat: FileStat | undefined): void {\n        this.updateWorkSpace(stat);\n    }\n\n    $onTextSearchResult(searchRequestId: number, done: boolean, result?: SearchInWorkspaceResult): void {\n        if (result) {\n            result.matches.map(next => {\n                const range: Range = {\n                    endColumn: next.character + next.length,\n                    endLineNumber: next.line + 1,\n                    startColumn: next.character,\n                    startLineNumber: next.line + 1\n                };\n                const tRange = <theia.Range>Converter.toRange(range);\n                const searchResult: theia.TextSearchMatch = {\n                    uri: URI.parse(result.fileUri),\n                    preview: {\n                        text: typeof next.lineText === 'string' ? next.lineText : next.lineText.text,\n                        matches: tRange\n                    },\n                    ranges: tRange\n                };\n                return searchResult;\n            }).forEach(next => this.searchInWorkspaceEmitter.fire({ result: next, searchId: searchRequestId }));\n        } else if (done) {\n            this.searchInWorkspaceEmitter.fire({ searchId: searchRequestId });\n        }\n    }\n\n    private deltaFolders(currentFolders: theia.WorkspaceFolder[] = [], newFolders: theia.WorkspaceFolder[] = []): {\n        added: theia.WorkspaceFolder[]\n        removed: theia.WorkspaceFolder[]\n    } {\n        const added = this.foldersDiff(newFolders, currentFolders);\n        const removed = this.foldersDiff(currentFolders, newFolders);\n        return { added, removed };\n    }\n\n    private foldersDiff(folder1: theia.WorkspaceFolder[] = [], folder2: theia.WorkspaceFolder[] = []): theia.WorkspaceFolder[] {\n        const map = new Map();\n        folder1.forEach(folder => map.set(folder.uri.toString(), folder));\n        folder2.forEach(folder => map.delete(folder.uri.toString()));\n\n        return folder1.filter(folder => map.has(folder.uri.toString()));\n    }\n\n    private toWorkspaceFolder(root: string, index: number): theia.WorkspaceFolder {\n        const uri = URI.parse(root);\n        const path = new Path(uri.path);\n        return {\n            uri: uri,\n            name: path.base,\n            index: index\n        };\n    }\n\n    pickWorkspaceFolder(options?: theia.WorkspaceFolderPickOptions): PromiseLike<theia.WorkspaceFolder | undefined> {\n        return new Promise((resolve, reject) => {\n            const optionsMain: WorkspaceFolderPickOptionsMain = {\n                placeHolder: options && options.placeHolder ? options.placeHolder : undefined,\n                ignoreFocusOut: options && options.ignoreFocusOut\n            };\n\n            this.proxy.$pickWorkspaceFolder(optionsMain).then(value => {\n                resolve(value);\n            });\n        });\n    }\n\n    findFiles(include: theia.GlobPattern, exclude?: theia.GlobPattern | null, maxResults?: number, token: CancellationToken = CancellationToken.None): PromiseLike<URI[]> {\n        let includePattern: string;\n        let includeFolderUri: string | undefined;\n        if (include) {\n            if (typeof include === 'string') {\n                includePattern = include;\n            } else {\n                includePattern = include.pattern;\n                includeFolderUri = include.baseUri.toString();\n            }\n        } else {\n            includePattern = '';\n        }\n\n        let excludeString: string = '';\n        let useFileExcludes = true;\n        if (exclude === null) {\n            useFileExcludes = false;\n        } else if (exclude !== undefined) {\n            if (typeof exclude === 'string') {\n                excludeString = exclude;\n            } else {\n                excludeString = exclude.pattern;\n            }\n        }\n\n        if (token && token.isCancellationRequested) {\n            return Promise.resolve([]);\n        }\n\n        return this.proxy.$startFileSearch(includePattern, includeFolderUri, {\n            maxResults,\n            exclude: excludeString,\n            useDefaultExcludes: useFileExcludes,\n            useDefaultSearchExcludes: false,\n            useIgnoreFiles: false\n        }, token).then(data => Array.isArray(data) ? data.map(uri => URI.revive(uri)) : []);\n    }\n\n    findTextInFiles(query: theia.TextSearchQuery, optionsOrCallback: theia.FindTextInFilesOptions | ((result: theia.TextSearchResult) => void),\n        callbackOrToken?: CancellationToken | ((result: theia.TextSearchResult) => void), token?: CancellationToken): Promise<theia.TextSearchComplete> {\n        let options: theia.FindTextInFilesOptions;\n        let callback: (result: theia.TextSearchResult) => void;\n\n        if (typeof optionsOrCallback === 'object') {\n            options = optionsOrCallback;\n            callback = callbackOrToken as (result: theia.TextSearchResult) => void;\n        } else {\n            options = {};\n            callback = optionsOrCallback;\n            token = callbackOrToken as CancellationToken;\n        }\n        const nextSearchID = this.workspaceSearchSequence + 1;\n        this.workspaceSearchSequence = nextSearchID;\n        const disposable = this.searchInWorkspaceEmitter.event(searchResult => {\n            if (searchResult.searchId === nextSearchID) {\n                if (searchResult.result) {\n                    callback(searchResult.result);\n                } else {\n                    disposable.dispose();\n                }\n            }\n        });\n        if (token) {\n            token.onCancellationRequested(() => {\n                disposable.dispose();\n            });\n        }\n        return this.proxy.$findTextInFiles(query, options || {}, nextSearchID, token);\n    }\n\n    registerTextDocumentContentProvider(scheme: string, provider: theia.TextDocumentContentProvider): theia.Disposable {\n        // `file` and `untitled` schemas are reserved by `workspace.openTextDocument` API:\n        // `file`-scheme for opening a file\n        // `untitled`-scheme for opening a new file that should be saved\n        if (scheme === Schemes.file || scheme === Schemes.untitled) {\n            throw new Error(`Text Content Document Provider for scheme '${scheme}' is already registered`);\n        } else if (this.documentContentProviders.has(scheme)) {\n            // TODO: we should be able to handle multiple registrations, but for now we should ensure that it doesn't crash plugin activation.\n            this.logger.warn(`Repeat registration of TextContentDocumentProvider for scheme '${scheme}'. This registration will be ignored.`);\n            return { dispose: () => { } };\n        }\n\n        this.documentContentProviders.set(scheme, provider);\n        this.proxy.$registerTextDocumentContentProvider(scheme);\n\n        let onDidChangeSubscription: theia.Disposable;\n        if (typeof provider.onDidChange === 'function') {\n            onDidChangeSubscription = provider.onDidChange(async uri => {\n                if (uri.scheme === scheme && this.editorsAndDocuments.getDocument(uri.toString())) {\n                    const content = await this.$provideTextDocumentContent(uri.toString());\n                    if (content) {\n                        this.proxy.$onTextDocumentContentChange(uri.toString(), content);\n                    }\n                }\n            });\n        }\n\n        const instance = this;\n        return {\n            dispose(): void {\n                if (instance.documentContentProviders.delete(scheme)) {\n                    instance.proxy.$unregisterTextDocumentContentProvider(scheme);\n                }\n\n                if (onDidChangeSubscription) {\n                    onDidChangeSubscription.dispose();\n                }\n            }\n        };\n    }\n\n    async $provideTextDocumentContent(documentURI: string): Promise<string | undefined | null> {\n        const uri = URI.parse(documentURI);\n        const provider = this.documentContentProviders.get(uri.scheme);\n        if (provider) {\n            return provider.provideTextDocumentContent(uri, CancellationToken.None);\n        }\n\n        return undefined;\n    }\n\n    getWorkspaceFolder(uri: theia.Uri, resolveParent?: boolean): theia.WorkspaceFolder | undefined {\n        if (!this.folders || !this.folders.length) {\n            return undefined;\n        }\n\n        function dirname(resource: URI): URI {\n            if (resource.scheme === 'file') {\n                return URI.file(paths.dirname(resource.fsPath));\n            }\n            return resource.with({\n                path: paths.dirname(resource.path)\n            });\n        }\n\n        if (resolveParent && this.hasFolder(uri)) {\n            uri = dirname(uri);\n        }\n\n        const resourcePath = uri.toString();\n\n        let workspaceFolder: theia.WorkspaceFolder | undefined;\n        for (let i = 0; i < this.folders.length; i++) {\n            const folder = this.folders[i];\n            const folderPath = folder.uri.toString();\n\n            if (resourcePath === folderPath) {\n                return toWorkspaceFolder(folder);\n            }\n\n            if (resourcePath.startsWith(folderPath)\n                && resourcePath[folderPath.length] === '/'\n                && (!workspaceFolder || folderPath.length > workspaceFolder.uri.toString().length)) {\n                workspaceFolder = folder;\n            }\n        }\n        return workspaceFolder;\n    }\n\n    private hasFolder(uri: URI): boolean {\n        if (!this.folders) {\n            return false;\n        }\n        return this.folders.some(folder => folder.uri.toString() === uri.toString());\n    }\n\n    getRelativePath(pathOrUri: string | theia.Uri, includeWorkspace?: boolean): string | undefined {\n        let path: string | undefined;\n        if (typeof pathOrUri === 'string') {\n            path = pathOrUri;\n        } else if (typeof pathOrUri !== 'undefined') {\n            path = pathOrUri.fsPath;\n        }\n\n        if (!path) {\n            return path;\n        }\n\n        const folder = this.getWorkspaceFolder(\n            typeof pathOrUri === 'string' ? URI.file(pathOrUri) : pathOrUri,\n            true\n        ) as theia.WorkspaceFolder;\n\n        if (!folder) {\n            return path;\n        }\n\n        if (typeof includeWorkspace === 'undefined') {\n            includeWorkspace = this.folders!.length > 1;\n        }\n\n        let result = relative(folder.uri.fsPath, path);\n        if (includeWorkspace) {\n            result = `${folder.name}/${result}`;\n        }\n        return normalize(result, true);\n    }\n\n    updateWorkspaceFolders(start: number, deleteCount: number, ...workspaceFoldersToAdd: { uri: theia.Uri, name?: string }[]): boolean {\n        const rootsToAdd = new Set<string>();\n        if (Array.isArray(workspaceFoldersToAdd)) {\n            workspaceFoldersToAdd.forEach(folderToAdd => {\n                const uri = URI.isUri(folderToAdd.uri) && folderToAdd.uri.toString();\n                if (uri && !rootsToAdd.has(uri)) {\n                    rootsToAdd.add(uri);\n                }\n            });\n        }\n\n        if ([start, deleteCount].some(i => typeof i !== 'number' || i < 0)) {\n            return false; // validate numbers\n        }\n\n        if (deleteCount === 0 && rootsToAdd.size === 0) {\n            return false; // nothing to delete or add\n        }\n\n        const currentWorkspaceFolders = this.workspaceFolders || [];\n        if (start + deleteCount > currentWorkspaceFolders.length) {\n            return false; // cannot delete more than we have\n        }\n\n        // Simulate the updateWorkspaceFolders method on our data to do more validation\n        const newWorkspaceFolders = currentWorkspaceFolders.slice(0);\n        newWorkspaceFolders.splice(start, deleteCount, ...[...rootsToAdd].map(uri => ({ uri: URI.parse(uri), name: undefined!, index: undefined! })));\n\n        for (let i = 0; i < newWorkspaceFolders.length; i++) {\n            const folder = newWorkspaceFolders[i];\n            if (newWorkspaceFolders.some((otherFolder, index) => index !== i && folder.uri.toString() === otherFolder.uri.toString())) {\n                return false; // cannot add the same folder multiple times\n            }\n        }\n\n        const { added, removed } = this.deltaFolders(currentWorkspaceFolders, newWorkspaceFolders);\n        if (added.length === 0 && removed.length === 0) {\n            return false; // nothing actually changed\n        }\n\n        // Trigger on main side\n        this.proxy.$updateWorkspaceFolders(start, deleteCount, ...rootsToAdd).then(undefined, error =>\n            this.messageService.showMessage(MainMessageType.Error, `Failed to update workspace folders: ${error}`)\n        );\n\n        return true;\n    }\n\n    private async refreshWorkspaceFile(): Promise<void> {\n        const workspace = await this.proxy.$getWorkspace();\n        this.updateWorkSpace(workspace);\n    }\n\n    private updateWorkSpace(workspace: FileStat | undefined): void {\n        // A workspace directory implies an undefined workspace file\n        if (workspace && !workspace.isDirectory) {\n            this.workspaceFileUri = URI.parse(workspace.resource.toString());\n        }\n    }\n\n    get trusted(): boolean {\n        if (this._trusted === undefined) {\n            this.requestWorkspaceTrust();\n        }\n        return !!this._trusted;\n    }\n\n    requestWorkspaceTrust(options?: theia.WorkspaceTrustRequestOptions): Promise<boolean | undefined> {\n        return this.proxy.$requestWorkspaceTrust(options);\n    }\n\n    $onWorkspaceTrustChanged(trust: boolean | undefined): void {\n        if (!this._trusted && trust) {\n            this._trusted = trust;\n            this.didGrantWorkspaceTrustEmitter.fire();\n        }\n    }\n\n    registerCanonicalUriProvider(scheme: string, provider: theia.CanonicalUriProvider): theia.Disposable {\n        if (this.canonicalUriProviders.has(scheme)) {\n            throw new Error(`Canonical URI provider for scheme: '${scheme}' already exists locally`);\n        }\n\n        this.canonicalUriProviders.set(scheme, provider);\n        this.proxy.$registerCanonicalUriProvider(scheme).catch(e => {\n            this.logger.error(`Canonical URI provider for scheme: '${scheme}' already exists globally`);\n            this.canonicalUriProviders.delete(scheme);\n        });\n        const result = Disposable.create(() => { this.proxy.$unregisterCanonicalUriProvider(scheme); });\n        return result;\n    }\n\n    $disposeCanonicalUriProvider(scheme: string): void {\n        if (!this.canonicalUriProviders.delete(scheme)) {\n            this.logger.warn(`diposeCanonicalUriProvider: No canonical uri provider registered for '${scheme}'`);\n        }\n    }\n\n    async getCanonicalUri(uri: theia.Uri, options: theia.CanonicalUriRequestOptions, token: theia.CancellationToken): Promise<theia.Uri | undefined> {\n        const canonicalUri = await this.proxy.$getCanonicalUri(uri.toString(), options.targetScheme, token);\n        return isUndefined(canonicalUri) ? undefined : URI.parse(canonicalUri);\n    }\n\n    async $provideCanonicalUri(uri: string, targetScheme: string, token: CancellationToken): Promise<string | undefined> {\n        const parsed = URI.parse(uri);\n        const provider = this.canonicalUriProviders.get(parsed.scheme);\n        if (!provider) {\n            this.logger.warn(`provideCanonicalUri: No canonical uri provider registered for '${parsed.scheme}'`);\n            return undefined;\n        }\n        const result = await provider.provideCanonicalUri(parsed, { targetScheme: targetScheme }, token);\n        return isUndefinedOrNull(result) ? undefined : result.toString();\n    }\n\n    /** @stubbed */\n    $registerEditSessionIdentityProvider(scheme: string, provider: theia.EditSessionIdentityProvider): theia.Disposable {\n        return Disposable.NULL;\n    }\n\n    async decode(content: Uint8Array, args?: { uri?: theia.Uri; encoding?: string }): Promise<string> {\n        const [uri, opts] = this.asEncodeDecodeParameters(args);\n        const { preferredEncoding, guessEncoding } = await this.proxy.$resolveDecoding(uri, opts);\n        const decodeStreamOptions = {\n            guessEncoding,\n            overwriteEncoding: (detectedEncoding: string | undefined) => {\n                if (detectedEncoding === null || detectedEncoding === preferredEncoding) {\n                    return Promise.resolve(preferredEncoding);\n                }\n\n                return this.proxy.$getValidEncoding(uri, detectedEncoding, opts);\n            }\n        };\n        const stream = (await this.encodingService.decodeStream(BinaryBufferReadableStream.fromBuffer(BinaryBuffer.wrap(content)), decodeStreamOptions)).stream;\n        return consumeStream(stream, s => s.join(''));\n\n    }\n\n    async encode(content: string, args?: { uri?: theia.Uri; encoding?: string }): Promise<Uint8Array> {\n        const [uri, options] = this.asEncodeDecodeParameters(args);\n        const { encoding, hasBOM } = await this.proxy.$resolveEncoding(uri, options);\n        const buffer = this.encodingService.encode(content, { encoding, hasBOM });\n        return buffer.buffer;\n    }\n\n    private asEncodeDecodeParameters(opts?: { uri?: theia.Uri; encoding?: string }): [UriComponents | undefined, { encoding: string } | undefined] {\n        const uri = Converter.isUriComponents(opts?.uri) ? opts.uri : undefined;\n        const encoding = typeof opts?.encoding === 'string' ? opts.encoding : undefined;\n\n        return [uri, encoding ? { encoding } : undefined];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const Filter = Symbol('Filter');\n\n/**\n * @param toTest Object that should be tested\n * @returns `true` if the object passes the test, `false` otherwise.\n */\nexport type Filter<T extends Object> = (toTest: T) => boolean;\n","// *****************************************************************************\n// Copyright (C) 2025 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './defaults-preference-provider';\nexport * from './preference-language-override-service';\nexport * from './preference-provider-impl';\nexport * from './preference-provider';\nexport * from './preference-schema-service';\nexport * from './preference-schema';\nexport * from './preference-scope';\nexport * from './preference-service';\nexport * from './injectable-preference-proxy';\nexport * from './preference-proxy';\nexport * from './preference-configurations';\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { DebugAdapter } from './debug-model';\nimport * as theia from '@theia/plugin';\n\n/**\n * A debug adapter for using the inline implementation from a plugin.\n */\nexport class InlineDebugAdapter implements DebugAdapter {\n    private messageReceivedEmitter = new Emitter<string>();\n    onMessageReceived: Event<string> = this.messageReceivedEmitter.event;\n    onError: Event<Error> = Event.None;\n    private closeEmitter = new Emitter<void>();\n    onClose: Event<void> = this.closeEmitter.event;\n\n    constructor(private debugAdapter: theia.DebugAdapter) {\n        this.debugAdapter.onDidSendMessage(msg => {\n            this.messageReceivedEmitter.fire(JSON.stringify(msg));\n        });\n    }\n\n    async start(): Promise<void> {\n    }\n\n    send(message: string): void {\n        this.debugAdapter.handleMessage(JSON.parse(message));\n    }\n\n    async stop(): Promise<void> {\n        this.debugAdapter.dispose();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as theia from '@theia/plugin';\nimport { OutputChannelRegistryMain, PluginInfo } from '../../common/plugin-api-rpc';\n\nexport class OutputChannelImpl implements theia.OutputChannel {\n\n    private disposed: boolean;\n\n    constructor(readonly name: string, protected readonly proxy: OutputChannelRegistryMain, protected readonly pluginInfo: PluginInfo) {\n    }\n\n    dispose(): void {\n        if (!this.disposed) {\n            this.proxy.$dispose(this.name).then(() => {\n                this.disposed = true;\n            });\n        }\n    }\n\n    append(value: string): void {\n        this.validate();\n        this.proxy.$append(this.name, value, this.pluginInfo);\n    }\n\n    appendLine(value: string): void {\n        this.validate();\n        this.append(value + '\\n');\n    }\n\n    replace(value: string): void {\n        this.validate();\n        this.clear();\n        this.append(value);\n    }\n\n    clear(): void {\n        this.validate();\n        this.proxy.$clear(this.name);\n    }\n\n    show(preserveFocusOrColumn?: boolean | theia.ViewColumn, preserveFocus?: boolean): void {\n        this.validate();\n        if (typeof preserveFocusOrColumn === 'boolean') {\n            preserveFocus = preserveFocusOrColumn;\n        }\n        this.proxy.$reveal(this.name, !!preserveFocus);\n    }\n\n    hide(): void {\n        this.validate();\n        this.proxy.$close(this.name);\n    }\n\n    protected validate(): void {\n        if (this.disposed) {\n            throw new Error('Channel has been closed');\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { PLUGIN_RPC_CONTEXT as Ext, OutputChannelRegistryExt, OutputChannelRegistryMain, PluginInfo } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { isObject } from '../common/types';\nimport { LogOutputChannelImpl } from './output-channel/log-output-channel';\nimport { OutputChannelImpl } from './output-channel/output-channel-item';\n\nexport class OutputChannelRegistryExtImpl implements OutputChannelRegistryExt {\n\n    proxy: OutputChannelRegistryMain;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(Ext.OUTPUT_CHANNEL_REGISTRY_MAIN);\n    }\n\n    createOutputChannel(name: string, pluginInfo: PluginInfo): theia.OutputChannel;\n    createOutputChannel(name: string, pluginInfo: PluginInfo, options: { log: true; }): theia.LogOutputChannel;\n    createOutputChannel(name: string, pluginInfo: PluginInfo, options?: { log: true; }): theia.OutputChannel | theia.LogOutputChannel {\n        name = name.trim();\n        if (!name) {\n            throw new Error('illegal argument \\'name\\'. must not be falsy');\n        }\n        const isLogOutput = options && isObject(options);\n        return isLogOutput\n            ? this.doCreateLogOutputChannel(name, pluginInfo)\n            : this.doCreateOutputChannel(name, pluginInfo);\n    }\n\n    private doCreateOutputChannel(name: string, pluginInfo: PluginInfo): OutputChannelImpl {\n        return new OutputChannelImpl(name, this.proxy, pluginInfo);\n    }\n\n    private doCreateLogOutputChannel(name: string, pluginInfo: PluginInfo): LogOutputChannelImpl {\n        return new LogOutputChannelImpl(name, this.proxy, pluginInfo);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { LoggerWatcher } from './logger-watcher';\nimport { ILoggerServer, LogLevel, ConsoleLogger, rootLoggerName } from './logger-protocol';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport {\n    LogLevel, rootLoggerName\n};\n\n/* This is to be initialized from container composition root. It can be used outside of the inversify context.  */\nexport let logger: ILogger;\n\n/**\n * Counterpart of the `#setRootLogger(ILogger)`. Restores the `console.xxx` bindings to the original one.\n * Invoking has no side-effect if `setRootLogger` was not called before. Multiple function invocation has\n * no side-effect either.\n */\nexport function unsetRootLogger(): void {\n    if (logger !== undefined) {\n        ConsoleLogger.reset();\n        (<any>logger) = undefined;\n    }\n}\n\nexport function setRootLogger(aLogger: ILogger): void {\n    logger = aLogger;\n    const log = (logLevel: number, message?: any, ...optionalParams: any[]) =>\n        logger.log(logLevel, message, ...optionalParams);\n\n    console.error = log.bind(undefined, LogLevel.ERROR);\n    console.warn = log.bind(undefined, LogLevel.WARN);\n    console.info = log.bind(undefined, LogLevel.INFO);\n    console.debug = log.bind(undefined, LogLevel.DEBUG);\n    console.trace = log.bind(undefined, LogLevel.TRACE);\n    console.log = log.bind(undefined, LogLevel.INFO);\n}\n\nexport type Log = (message: any, ...params: any[]) => void;\nexport type Loggable = (log: Log) => void;\n\nexport const LoggerFactory = Symbol('LoggerFactory');\nexport type LoggerFactory = (name: string) => ILogger;\n\nexport const LoggerName = Symbol('LoggerName');\n\nexport const ILogger = Symbol('ILogger');\n\nexport interface ILogger {\n    /**\n     * Set the log level.\n     *\n     * @param loglevel - The loglevel to set. see Logger.LogLevel for\n     * possible options.\n     */\n    setLogLevel(logLevel: number): Promise<void>\n    /**\n     * Get the log level.\n     *\n     * @returns a Promise to the log level.\n     */\n    getLogLevel(): Promise<number>;\n\n    /**\n     * Test whether the given log level is enabled.\n     */\n    isEnabled(logLevel: number): Promise<boolean>;\n    /**\n     * Resolve if the given log is enabled.\n     */\n    ifEnabled(logLevel: number): Promise<void>;\n    /**\n     * Log a loggable with the given level if it is enabled.\n     */\n    log(logLevel: number, loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the given level if it is enabled.\n     *\n     * @param logLevel - The loglevel to use.\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    log(logLevel: number, message: any, ...params: any[]): void;\n\n    /**\n     * Test whether the trace level is enabled.\n     */\n    isTrace(): Promise<boolean>;\n    /**\n     * Resolve if the trace level is enabled.\n     */\n    ifTrace(): Promise<void>;\n    /**\n     * Log a loggable with the trace level if it is enabled.\n     */\n    trace(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the trace level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    trace(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the debug level is enabled.\n     */\n    isDebug(): Promise<boolean>;\n    /**\n     * Resolve if the debug level is enabled.\n     */\n    ifDebug(): Promise<void>;\n    /**\n     * Log a loggable with the debug level if it is enabled.\n     */\n    debug(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the debug level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    debug(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the info level is enabled.\n     */\n    isInfo(): Promise<boolean>;\n    /**\n     * Resolve if the info level is enabled.\n     */\n    ifInfo(): Promise<void>;\n    /**\n     * Log a loggable with the info level if it is enabled.\n     */\n    info(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the info level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    info(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the warn level is enabled.\n     */\n    isWarn(): Promise<boolean>;\n    /**\n     * Resolve if the warn level is enabled.\n     */\n    ifWarn(): Promise<void>;\n    /**\n     * Log a loggable with the warn level if it is enabled.\n     */\n    warn(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the warn level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    warn(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the error level is enabled.\n     */\n    isError(): Promise<boolean>;\n    /**\n     * Resolve if the error level is enabled.\n     */\n    ifError(): Promise<void>;\n    /**\n     * Log a loggable with the error level if it is enabled.\n     */\n    error(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the error level.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    error(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Test whether the fatal level is enabled.\n     */\n    isFatal(): Promise<boolean>;\n    /**\n     * Resolve if the fatal level is enabled.\n     */\n    ifFatal(): Promise<void>;\n    /**\n     * Log a loggable with the fatal level if it is enabled.\n     */\n    fatal(loggable: Loggable): Promise<void>;\n    /**\n     * Log a message with the fatal level if it is enabled.\n     *\n     * @param message - The message format string.\n     * @param params - The format string variables.\n     */\n    fatal(message: any, ...params: any[]): Promise<void>;\n\n    /**\n     * Create a child logger from this logger.\n     *\n     * @param name - The name of the child logger.\n     */\n    child(name: string): ILogger;\n}\n\n@injectable()\nexport class Logger implements ILogger {\n\n    /* Log level for the logger.  */\n    protected _logLevel: Promise<number>;\n\n    /* A promise resolved when the logger has been created by the backend.  */\n    protected created: Promise<void>;\n\n    @inject(ILoggerServer) protected readonly server: ILoggerServer;\n    @inject(LoggerWatcher) protected readonly loggerWatcher: LoggerWatcher;\n    @inject(LoggerFactory) protected readonly factory: LoggerFactory;\n    @inject(LoggerName) protected name: string;\n\n    protected cache = new Map<string, ILogger>();\n\n    @postConstruct()\n    protected init(): void {\n        if (this.name !== rootLoggerName) {\n            /* Creating a child logger.  */\n            this.created = this.server.child(this.name);\n        } else {\n            /* Creating the root logger (it already exists at startup).  */\n            this.created = Promise.resolve();\n        }\n\n        /* Fetch the log level so it's cached in the frontend.  */\n        this._logLevel = this.created.then(_ => this.server.getLogLevel(this.name));\n\n        /* Update the log level if it changes in the backend. */\n        this.loggerWatcher.onLogLevelChanged(event => {\n            this.created.then(() => {\n                if (event.loggerName === this.name) {\n                    this._logLevel = Promise.resolve(event.newLogLevel);\n                }\n            });\n        });\n\n        /* Refetch log level if overall config in backend changed. */\n        this.loggerWatcher.onLogConfigChanged(() => {\n            this._logLevel = this.created.then(_ => this.server.getLogLevel(this.name));\n        });\n    }\n\n    setLogLevel(logLevel: number): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.created.then(() => {\n                this._logLevel.then(oldLevel => {\n                    this.server.setLogLevel(this.name, logLevel).then(() => {\n                        this._logLevel = Promise.resolve(logLevel);\n                        resolve();\n                    });\n                });\n            });\n        });\n    }\n    getLogLevel(): Promise<number> {\n        return this._logLevel;\n    }\n\n    isEnabled(logLevel: number): Promise<boolean> {\n        return this._logLevel.then(level =>\n            logLevel >= level\n        );\n    }\n    ifEnabled(logLevel: number): Promise<void> {\n        return new Promise<void>(resolve =>\n            this.isEnabled(logLevel).then(enabled => {\n                if (enabled) {\n                    resolve();\n                }\n            })\n        );\n    }\n    log(logLevel: number, arg2: any | Loggable, ...params: any[]): Promise<void> {\n        return this.getLog(logLevel).then(log => {\n            if (typeof arg2 === 'function') {\n                const loggable = arg2;\n                loggable(log);\n            } else if (arg2) {\n                log(arg2, ...params);\n            }\n        });\n    }\n    protected getLog(logLevel: number): Promise<Log> {\n        return this.ifEnabled(logLevel).then(() =>\n            this.created.then(() =>\n                (message: any, ...params: any[]) =>\n                    this.server.log(this.name, logLevel, this.format(message), params.map(p => this.format(p)))\n            )\n        );\n    }\n    protected format(value: any): any {\n        if (value instanceof Error) {\n            return value.stack || value.toString();\n        }\n        return value;\n    }\n\n    isTrace(): Promise<boolean> {\n        return this.isEnabled(LogLevel.TRACE);\n    }\n    ifTrace(): Promise<void> {\n        return this.ifEnabled(LogLevel.TRACE);\n    }\n    trace(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.TRACE, arg, ...params);\n    }\n\n    isDebug(): Promise<boolean> {\n        return this.isEnabled(LogLevel.DEBUG);\n    }\n    ifDebug(): Promise<void> {\n        return this.ifEnabled(LogLevel.DEBUG);\n    }\n    debug(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.DEBUG, arg, ...params);\n    }\n\n    isInfo(): Promise<boolean> {\n        return this.isEnabled(LogLevel.INFO);\n    }\n    ifInfo(): Promise<void> {\n        return this.ifEnabled(LogLevel.INFO);\n    }\n    info(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.INFO, arg, ...params);\n    }\n\n    isWarn(): Promise<boolean> {\n        return this.isEnabled(LogLevel.WARN);\n    }\n    ifWarn(): Promise<void> {\n        return this.ifEnabled(LogLevel.WARN);\n    }\n    warn(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.WARN, arg, ...params);\n    }\n\n    isError(): Promise<boolean> {\n        return this.isEnabled(LogLevel.ERROR);\n    }\n    ifError(): Promise<void> {\n        return this.ifEnabled(LogLevel.ERROR);\n    }\n    error(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.ERROR, arg, ...params);\n    }\n\n    isFatal(): Promise<boolean> {\n        return this.isEnabled(LogLevel.FATAL);\n    }\n    ifFatal(): Promise<void> {\n        return this.ifEnabled(LogLevel.FATAL);\n    }\n    fatal(arg: any | Loggable, ...params: any[]): Promise<void> {\n        return this.log(LogLevel.FATAL, arg, ...params);\n    }\n\n    child(name: string): ILogger {\n        const existing = this.cache.get(name);\n        if (existing) {\n            return existing;\n        } else {\n            const child = this.factory(name);\n            this.cache.set(name, child);\n            return child;\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './markdown-string';\nexport * from './icon-utilities';\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { PluginIdentifiers, PluginModel, PluginPackage } from '../../../common/plugin-protocol';\nimport { Endpoint } from '@theia/core/lib/browser/endpoint';\nimport URI from '@theia/core/lib/common/uri';\n\nconst NLS_REGEX = /^%([\\w\\d.-]+)%$/i;\n\nfunction getUri(pluginModel: PluginModel, relativePath: string): URI {\n    const ownURI = new Endpoint().getRestUrl();\n    return ownURI.parent.resolve(PluginPackage.toPluginUrl(pluginModel, relativePath));\n}\n\nfunction readPluginFile(pluginModel: PluginModel, relativePath: string): Promise<string> {\n    return readContents(getUri(pluginModel, relativePath).toString());\n}\n\nfunction readContents(uri: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = function (): void {\n            if (this.readyState === XMLHttpRequest.DONE) {\n                if (this.status === 200) {\n                    resolve(this.response);\n                } else if (this.status === 404) {\n                    reject('NotFound');\n                } else {\n                    reject(new Error('Could not fetch plugin resource'));\n                }\n            }\n        };\n\n        request.open('GET', uri, true);\n        request.send();\n    });\n}\n\nasync function readPluginJson(pluginModel: PluginModel, relativePath: string): Promise<any> {\n    const content = await readPluginFile(pluginModel, relativePath);\n    const json = JSON.parse(content) as PluginPackage;\n    json.publisher ??= PluginIdentifiers.UNPUBLISHED;\n    return json;\n}\n\nexport async function loadManifest(pluginModel: PluginModel): Promise<any> {\n    const [manifest, translations] = await Promise.all([\n        readPluginJson(pluginModel, 'package.json'),\n        loadTranslations(pluginModel)\n    ]);\n    // translate vscode builtins, as they are published with a prefix.\n    const built_prefix = '@theia/vscode-builtin-';\n    if (manifest && manifest.name && manifest.name.startsWith(built_prefix)) {\n        manifest.name = manifest.name.substring(built_prefix.length);\n    }\n    return manifest && translations && Object.keys(translations).length ?\n        localize(manifest, translations) :\n        manifest;\n}\n\nasync function loadTranslations(pluginModel: PluginModel): Promise<any> {\n    try {\n        return await readPluginJson(pluginModel, 'package.nls.json');\n    } catch (e) {\n        if (e !== 'NotFound') {\n            throw e;\n        }\n        return {};\n    }\n}\n\nfunction localize(value: any, translations: {\n    [key: string]: string\n}): any {\n    if (typeof value === 'string') {\n        const match = NLS_REGEX.exec(value);\n        return match && translations[match[1]] || value;\n    }\n    if (Array.isArray(value)) {\n        const result = [];\n        for (const item of value) {\n            result.push(localize(item, translations));\n        }\n        return result;\n    }\n    if (value === null) {\n        return value;\n    }\n    if (typeof value === 'object') {\n        const result: { [key: string]: any } = {};\n        // eslint-disable-next-line guard-for-in\n        for (const propertyName in value) {\n            result[propertyName] = localize(value[propertyName], translations);\n        }\n        return result;\n    }\n    return value;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Google and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from 'inversify';\nimport { environment } from '@theia/application-package/lib/environment';\nimport { SUPPORTED_ENCODINGS } from './supported-encodings';\nimport { isOSX } from '../common/os';\nimport { nls } from '../common/nls';\nimport { PreferenceContribution, PreferenceSchema } from '../common/preferences/preference-schema';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService } from '../common/preferences';\nimport { PreferenceScope } from '../common/preferences/preference-scope';\n\n/* eslint-disable max-len */\nconst windowTitleDescription = [\n    nls.localizeByDefault('Controls the window title based on the current context such as the opened workspace or active editor. Variables are substituted based on the context:'),\n    nls.localizeByDefault('`${activeEditorShort}`: the file name (e.g. myFile.txt).'),\n    nls.localizeByDefault('`${activeEditorMedium}`: the path of the file relative to the workspace folder (e.g. myFolder/myFileFolder/myFile.txt).'),\n    nls.localizeByDefault('`${activeEditorLong}`: the full path of the file (e.g. /Users/Development/myFolder/myFileFolder/myFile.txt).'),\n    nls.localizeByDefault('`${activeFolderShort}`: the name of the folder the file is contained in (e.g. myFileFolder).'),\n    nls.localizeByDefault('`${activeFolderMedium}`: the path of the folder the file is contained in, relative to the workspace folder (e.g. myFolder/myFileFolder).'),\n    nls.localizeByDefault('`${activeFolderLong}`: the full path of the folder the file is contained in (e.g. /Users/Development/myFolder/myFileFolder).'),\n    nls.localizeByDefault('`${folderName}`: name of the workspace folder the file is contained in (e.g. myFolder).'),\n    nls.localizeByDefault('`${folderPath}`: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder).'),\n    nls.localizeByDefault('`${rootName}`: name of the workspace with optional remote name and workspace indicator if applicable (e.g. myFolder, myRemoteFolder [SSH] or myWorkspace (Workspace)).'),\n    nls.localizeByDefault('`${rootPath}`: file path of the opened workspace or folder (e.g. /Users/Development/myWorkspace).'),\n    nls.localizeByDefault('`${appName}`: e.g. VS Code.'),\n    nls.localizeByDefault('`${remoteName}`: e.g. SSH'),\n    nls.localizeByDefault('`${dirty}`: an indicator for when the active editor has unsaved changes.'),\n    nls.localizeByDefault('`${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.')\n].join('\\n- ');\n\nexport const corePreferenceSchema: PreferenceSchema = {\n    properties: {\n        'application.confirmExit': {\n            type: 'string',\n            enum: [\n                'never',\n                'ifRequired',\n                'always',\n            ],\n            default: 'ifRequired',\n            description: nls.localizeByDefault('Controls whether to show a confirmation dialog before closing the browser tab or window. Note that even if enabled, browsers may still decide to close a tab or window without confirmation and that this setting is only a hint that may not work in all cases.'),\n        },\n        'breadcrumbs.enabled': {\n            'type': 'boolean',\n            'default': true,\n            'description': nls.localizeByDefault('Enable/disable navigation breadcrumbs.'),\n            'scope': PreferenceScope.User\n        },\n        'files.encoding': {\n            'type': 'string',\n            'enum': Object.keys(SUPPORTED_ENCODINGS),\n            'default': 'utf8',\n            'description': nls.localizeByDefault(\n                'The default character set encoding to use when reading and writing files. This setting can also be configured per language.'),\n            'scope': PreferenceScope.Folder,\n            'enumDescriptions': Object.keys(SUPPORTED_ENCODINGS).map(key => SUPPORTED_ENCODINGS[key].labelLong),\n            'included': Object.keys(SUPPORTED_ENCODINGS).length > 1\n        },\n        'keyboard.dispatch': {\n            type: 'string',\n            enum: [\n                'code',\n                'keyCode',\n            ],\n            default: 'code',\n            markdownDescription: nls.localizeByDefault('Controls the dispatching logic for key presses to use either `code` (recommended) or `keyCode`.')\n        },\n        'window.tabbar.enhancedPreview': {\n            type: 'string',\n            enum: ['classic', 'enhanced', 'visual'],\n            markdownEnumDescriptions: [\n                nls.localize('theia/core/enhancedPreview/classic', 'Display a simple preview of the tab with basic information.'),\n                nls.localize('theia/core/enhancedPreview/enhanced', 'Display an enhanced preview of the tab with additional information.'),\n                nls.localize('theia/core/enhancedPreview/visual', 'Display a visual preview of the tab.'),\n            ],\n            default: 'classic',\n            description: nls.localize('theia/core/enhancedPreview', 'Controls what information about the tab should be displayed in horizontal tab bars, when hovering.')\n        },\n        'window.menuBarVisibility': {\n            type: 'string',\n            enum: ['classic', 'visible', 'hidden', 'compact'],\n            markdownEnumDescriptions: [\n                nls.localizeByDefault('Menu is displayed at the top of the window and only hidden in full screen mode.'),\n                nls.localizeByDefault('Menu is always visible at the top of the window even in full screen mode.'),\n                nls.localizeByDefault('Menu is always hidden.'),\n                environment.electron.is()\n                    ? nls.localizeByDefault('Menu is displayed as a compact button in the side bar. This value is ignored when {0} is {1}.', '`#window.titleBarStyle#`', '`native`')\n                    : nls.localizeByDefault('Menu is displayed as a compact button in the side bar.')\n            ],\n            default: 'classic',\n            scope: PreferenceScope.User,\n            markdownDescription: nls.localizeByDefault(\"Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. A setting of 'compact' will move the menu into the side bar.\"),\n            included: !(isOSX && environment.electron.is())\n        },\n        'window.title': {\n            type: 'string',\n            default: isOSX\n                ? '${activeEditorShort}${separator}${rootName}'\n                : '${dirty} ${activeEditorShort}${separator}${rootName}${separator}${appName}',\n            scope: PreferenceScope.User,\n            markdownDescription: windowTitleDescription\n        },\n        'window.titleSeparator': {\n            type: 'string',\n            default: ' - ',\n            scope: PreferenceScope.User,\n            markdownDescription: nls.localizeByDefault('Separator used by {0}.', '`#window.title#`')\n        },\n        'window.tabCloseIconPlacement': {\n            type: 'string',\n            enum: ['end', 'start'],\n            enumDescriptions: [\n                nls.localize('theia/core/window/tabCloseIconPlacement/end', 'Place the close icon at the end of the label. In left-to-right languages, this is the right side of the tab.'),\n                nls.localize('theia/core/window/tabCloseIconPlacement/start', 'Place the close icon at the start of the label. In left-to-right languages, this is the left side of the tab.'),\n            ],\n            default: 'end',\n            scope: PreferenceScope.User,\n            description: nls.localize('theia/core/window/tabCloseIconPlacement/description', 'Place the close icons on tab titles at the start or end of the tab. The default is end on all platforms.'),\n            included: isOSX\n        },\n        'window.secondaryWindowPlacement': {\n            type: 'string',\n            enum: ['originalSize', 'halfWidth', 'fullSize'],\n            enumDescriptions: [\n                nls.localize('theia/core/secondaryWindow/originalSize', 'The position and size of the extracted widget will be the same as the original widget.'),\n                nls.localize('theia/core/secondaryWindow/halfWidth', 'The position and size of the extracted widget will be half the width of the running Theia application.'),\n                nls.localize('theia/core/secondaryWindow/fullSize', 'The position and size of the extracted widget will be the same as the running Theia application.'),\n            ],\n            default: 'originalSize',\n            description: nls.localize('theia/core/secondaryWindow/description', 'Sets the initial position and size of the extracted secondary window.'),\n        },\n        'window.secondaryWindowAlwaysOnTop': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('theia/core/secondaryWindow/alwaysOnTop', 'When enabled, the secondary window stays above all other windows, including those of different applications.'),\n        },\n        'http.proxy': {\n            type: 'string',\n            pattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n            markdownDescription: nls.localizeByDefault('The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables. When during [remote development](https://aka.ms/vscode-remote) the {0} setting is disabled this setting can be configured in the local and the remote settings separately.'),\n            scope: PreferenceScope.User\n        },\n        'http.proxyStrictSSL': {\n            type: 'boolean',\n            default: true,\n            description: nls.localizeByDefault('Controls whether the proxy server certificate should be verified against the list of supplied CAs. When during [remote development](https://aka.ms/vscode-remote) the {0} setting is disabled this setting can be configured in the local and the remote settings separately.'),\n            scope: PreferenceScope.User\n        },\n        'http.proxyAuthorization': {\n            type: 'string',\n            markdownDescription: nls.localizeByDefault('The value to send as the `Proxy-Authorization` header for every network request. When during [remote development](https://aka.ms/vscode-remote) the {0} setting is disabled this setting can be configured in the local and the remote settings separately.'),\n            scope: PreferenceScope.User\n        },\n        'http.proxySupport': {\n            type: 'string',\n            enum: ['off', 'on', 'fallback', 'override'],\n            enumDescriptions: [\n                nls.localizeByDefault('Disable proxy support for extensions.'),\n                nls.localizeByDefault('Enable proxy support for extensions.'),\n                nls.localizeByDefault('Enable proxy support for extensions, fall back to request options, when no proxy found.'),\n                nls.localizeByDefault('Enable proxy support for extensions, override request options.'),\n            ],\n            default: 'override',\n            description: nls.localizeByDefault('Use the proxy support for extensions. When during [remote development](https://aka.ms/vscode-remote) the {0} setting is disabled this setting can be configured in the local and the remote settings separately.'),\n            scope: PreferenceScope.User\n        },\n        'http.systemCertificates': {\n            type: 'boolean',\n            default: true,\n            description: nls.localizeByDefault('Controls whether CA certificates should be loaded from the OS. On Windows and macOS, a reload of the window is required after turning this off. When during [remote development](https://aka.ms/vscode-remote) the {0} setting is disabled this setting can be configured in the local and the remote settings separately.'),\n            scope: PreferenceScope.User\n        },\n        'workbench.list.openMode': {\n            type: 'string',\n            enum: [\n                'singleClick',\n                'doubleClick'\n            ],\n            default: 'singleClick',\n            description: nls.localizeByDefault('Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.')\n        },\n        'workbench.editor.highlightModifiedTabs': {\n            'type': 'boolean',\n            'markdownDescription': nls.localize('theia/core/highlightModifiedTabs', 'Controls whether a top border is drawn on modified (dirty) editor tabs or not.'),\n            'default': false\n        },\n        'workbench.editor.closeOnFileDelete': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Controls whether editors showing a file that was opened during the session should close automatically when getting deleted or renamed by some other process. Disabling this will keep the editor open  on such an event. Note that deleting from within the application will always close the editor and that editors with unsaved changes will never close to preserve your data.'),\n            'default': false\n        },\n        'workbench.editor.mouseBackForwardToNavigate': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault(\"Enables the use of mouse buttons four and five for commands 'Go Back' and 'Go Forward'.\"),\n            'default': true\n        },\n        'workbench.editor.revealIfOpen': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Controls whether an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, such as when forcing an editor to open in a specific group or to the side of the currently active group.'),\n            'default': false\n        },\n        'workbench.editor.decorations.badges': {\n            'type': 'boolean',\n            'description': nls.localizeByDefault('Controls whether editor file decorations should use badges.'),\n            'default': true\n        },\n        'workbench.commandPalette.history': {\n            type: 'number',\n            default: 50,\n            minimum: 0,\n            description: nls.localizeByDefault('Controls the number of recently used commands to keep in history for the command palette. Set to 0 to disable command history.')\n        },\n        'workbench.colorTheme': {\n            type: 'string',\n            enum: ['dark', 'light', 'hc-theia'],\n            enumItemLabels: ['Dark (Theia)', 'Light (Theia)', 'High Contrast (Theia)'],\n            default: 'light',\n            description: nls.localizeByDefault('Specifies the color theme used in the workbench when {0} is not enabled.', '`#window.autoDetectColorScheme#`')\n        },\n        'workbench.iconTheme': {\n            type: ['string'],\n            enum: ['none', 'theia-file-icons'],\n            enumItemLabels: [nls.localizeByDefault('None'), 'File Icons (Theia)'],\n            default: 'none',\n            description: nls.localizeByDefault(\"Specifies the file icon theme used in the workbench or 'null' to not show any file icons.\")\n        },\n        'workbench.silentNotifications': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('theia/core/silentNotifications', 'Controls whether to suppress notification popups.')\n        },\n        'workbench.statusBar.visible': {\n            type: 'boolean',\n            default: true,\n            description: nls.localizeByDefault('Controls the visibility of the status bar at the bottom of the workbench.')\n        },\n        'workbench.tree.renderIndentGuides': {\n            type: 'string',\n            enum: ['onHover', 'none', 'always'],\n            default: 'onHover',\n            description: nls.localizeByDefault('Controls whether the tree should render indent guides.')\n        },\n        'workbench.hover.delay': {\n            type: 'number',\n            default: isOSX ? 1500 : 500,\n            description: nls.localizeByDefault('Controls the delay in milliseconds after which the hover is shown.')\n        },\n        'workbench.sash.hoverDelay': {\n            type: 'number',\n            default: 300,\n            minimum: 0,\n            maximum: 2000,\n            description: nls.localizeByDefault('Controls the hover feedback delay in milliseconds of the dragging area in between views/editors.')\n        },\n        'workbench.sash.size': {\n            type: 'number',\n            default: 4,\n            minimum: 1,\n            maximum: 20,\n            description: nls.localizeByDefault('Controls the feedback area size in pixels of the dragging area in between views/editors. Set it to a larger value if you feel it\\'s hard to resize views using the mouse.')\n        },\n        'workbench.tab.maximize': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('theia/core/tabMaximize', 'Controls whether to maximize tabs on double click.')\n        },\n        'workbench.tab.shrinkToFit.enabled': {\n            type: 'boolean',\n            default: false,\n            description: nls.localize('theia/core/tabShrinkToFit', 'Shrink tabs to fit available space.')\n        },\n        'workbench.tab.shrinkToFit.minimumSize': {\n            type: 'number',\n            default: 50,\n            minimum: 10,\n            description: nls.localize('theia/core/tabMinimumSize', 'Specifies the minimum size for tabs.')\n        },\n        'workbench.tab.shrinkToFit.defaultSize': {\n            type: 'number',\n            default: 200,\n            minimum: 10,\n            description: nls.localize('theia/core/tabDefaultSize', 'Specifies the default size for tabs.')\n        },\n        'workbench.editorAssociations': {\n            type: 'object',\n            markdownDescription: nls.localizeByDefault('Configure [glob patterns](https://aka.ms/vscode-glob-patterns) to editors (for example `\"*.hex\": \"hexEditor.hexedit\"`). These have precedence over the default behavior.'),\n            patternProperties: {\n                '.*': {\n                    type: 'string'\n                }\n            }\n        }\n    }\n};\n\nexport interface CoreConfiguration {\n    'application.confirmExit': 'never' | 'ifRequired' | 'always';\n    'breadcrumbs.enabled': boolean;\n    'files.encoding': string;\n    'keyboard.dispatch': 'code' | 'keyCode';\n    'window.tabbar.enhancedPreview': 'classic' | 'enhanced' | 'visual';\n    'window.menuBarVisibility': 'classic' | 'visible' | 'hidden' | 'compact';\n    'window.title': string;\n    'window.titleSeparator': string;\n    'window.tabCloseIconPlacement': 'end' | 'start';\n    'workbench.list.openMode': 'singleClick' | 'doubleClick';\n    'workbench.commandPalette.history': number;\n    'workbench.editor.highlightModifiedTabs': boolean;\n    'workbench.editor.mouseBackForwardToNavigate': boolean;\n    'workbench.editor.closeOnFileDelete': boolean;\n    'workbench.editor.revealIfOpen': boolean;\n    'workbench.editor.decorations.badges': boolean;\n    'workbench.colorTheme': string;\n    'workbench.iconTheme': string;\n    'workbench.silentNotifications': boolean;\n    'workbench.statusBar.visible': boolean;\n    'workbench.tree.renderIndentGuides': 'onHover' | 'none' | 'always';\n    'workbench.hover.delay': number;\n    'workbench.sash.hoverDelay': number;\n    'workbench.sash.size': number;\n    'workbench.tab.maximize': boolean;\n    'workbench.tab.shrinkToFit.enabled': boolean;\n    'workbench.tab.shrinkToFit.minimumSize': number;\n    'workbench.tab.shrinkToFit.defaultSize': number;\n}\n\nexport const CorePreferenceContribution = Symbol('CorePreferenceContribution');\nexport const CorePreferences = Symbol('CorePreferences');\nexport type CorePreferences = PreferenceProxy<CoreConfiguration>;\n\nexport function createCorePreferences(preferences: PreferenceService, schema: PreferenceSchema = corePreferenceSchema): CorePreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindCorePreferences(bind: interfaces.Bind): void {\n    bind(CorePreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(CorePreferenceContribution);\n        return createCorePreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(CorePreferenceContribution).toConstantValue({ schema: corePreferenceSchema });\n    bind(PreferenceContribution).toService(CorePreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// enum copied from monaco.d.ts\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport enum TextEditorCursorStyle {\n    /**\n     * As a vertical line\n     */\n    Line = 1,\n\n    /**\n     * As a block\n     */\n    Block = 2,\n\n    /**\n     * As a horizontal line, under character\n     */\n    Underline = 3,\n\n    /**\n     * As a thin vertical line\n     */\n    LineThin = 4,\n\n    /**\n     * As an outlined block, on top of a character\n     */\n    BlockOutline = 5,\n\n    /**\n     * As a thin horizontal line, under a character\n     */\n    UnderlineThin = 6\n}\n\nexport function cursorStyleToString(cursorStyle: TextEditorCursorStyle): 'line' | 'block' | 'underline' | 'line-thin' | 'block-outline' | 'underline-thin' {\n    switch (cursorStyle) {\n        case TextEditorCursorStyle.Line:\n            return 'line';\n        case TextEditorCursorStyle.Block:\n            return 'block';\n        case TextEditorCursorStyle.Underline:\n            return 'underline';\n        case TextEditorCursorStyle.LineThin:\n            return 'line-thin';\n        case TextEditorCursorStyle.BlockOutline:\n            return 'block-outline';\n        case TextEditorCursorStyle.UnderlineThin:\n            return 'underline-thin';\n        default:\n            throw new Error('cursorStyleToString: Unknown cursorStyle');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as dto from '../../common/plugin-api-rpc-model';\nimport * as rpc from '../../common/plugin-api-rpc';\nimport * as types from '../types-impl';\nimport { fromRange, SymbolKind } from '../type-converters';\n\nexport class CallHierarchyAdapter {\n\n    constructor(\n        private readonly provider: theia.CallHierarchyProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    protected sessionIds = 0;\n    protected readonly cache = new Map<string, Map<string, theia.CallHierarchyItem>>();\n\n    async provideRootDefinition(\n        resource: URI, position: rpc.Position, token: theia.CancellationToken\n    ): Promise<dto.CallHierarchyItem[] | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const definition = await this.provider.prepareCallHierarchy(documentData.document,\n            new types.Position(\n                position.lineNumber,\n                position.column\n            ),\n            token\n        );\n\n        if (!definition) {\n            return undefined;\n        }\n        const sessionId = (this.sessionIds++).toString(36);\n        this.cache.set(sessionId, new Map());\n        return Array.isArray(definition) ? definition.map(item => this.fromCallHierarchyItem(item, sessionId)) : [this.fromCallHierarchyItem(definition, sessionId)];\n    }\n\n    async provideCallers(definition: dto.CallHierarchyItem, token: theia.CancellationToken): Promise<dto.CallHierarchyIncomingCall[] | undefined> {\n        const callers = await this.provider.provideCallHierarchyIncomingCalls(this.toCallHierarchyItem(definition), token);\n        if (!callers) {\n            return undefined;\n        }\n\n        return callers.map(item => this.fromCallHierarchyIncomingCall(item, definition._sessionId!));\n    }\n\n    async provideCallees(definition: dto.CallHierarchyItem, token: theia.CancellationToken): Promise<dto.CallHierarchyOutgoingCall[] | undefined> {\n        const callees = await this.provider.provideCallHierarchyOutgoingCalls(this.toCallHierarchyItem(definition), token);\n        if (!callees) {\n            return undefined;\n        }\n\n        return callees.map(item => this.fromCallHierarchyOutgoingCall(item, definition._sessionId!));\n    }\n\n    private fromCallHierarchyItem(item: theia.CallHierarchyItem, sessionId: string): dto.CallHierarchyItem {\n        const sessionCache = this.cache.get(sessionId)!;\n        const itemId = sessionCache.size.toString(36);\n        const definition: dto.CallHierarchyItem = {\n            uri: item.uri,\n            range: fromRange(item.range),\n            selectionRange: fromRange(item.selectionRange),\n            name: item.name,\n            kind: SymbolKind.fromSymbolKind(item.kind),\n            tags: item.tags,\n            _itemId: itemId,\n            _sessionId: sessionId,\n        };\n        sessionCache.set(itemId, item);\n        return definition;\n    }\n\n    private toCallHierarchyItem(definition: dto.CallHierarchyItem): theia.CallHierarchyItem {\n        const cached = this.cache.get(definition._sessionId!)?.get(definition._itemId!);\n        if (!cached) {\n            throw new Error(`Found no cached item corresponding to ${definition.name} in ${definition.uri.path} with ID ${definition.data}.`);\n        }\n        return cached;\n    }\n\n    private fromCallHierarchyIncomingCall(caller: theia.CallHierarchyIncomingCall, sessionId: string): dto.CallHierarchyIncomingCall {\n        return {\n            from: this.fromCallHierarchyItem(caller.from, sessionId),\n            fromRanges: caller.fromRanges.map(r => fromRange(r))\n        };\n    }\n\n    protected fromCallHierarchyOutgoingCall(caller: theia.CallHierarchyOutgoingCall, sessionId: string): dto.CallHierarchyOutgoingCall {\n        return {\n            to: this.fromCallHierarchyItem(caller.to, sessionId),\n            fromRanges: caller.fromRanges.map(r => fromRange(r)),\n        };\n    }\n\n    releaseSession(session?: string): Promise<boolean> {\n        if (session !== undefined) {\n            return Promise.resolve(this.cache.delete(session));\n        } else {\n            this.cache.clear();\n            return Promise.resolve(true);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * An array of preference scopes that are valid in a given context, sorted from more general to more specific\n */\nexport const ValidPreferenceScopes = Symbol('ValidPreferenceScopes');\n\nexport enum PreferenceScope {\n    Default,\n    User,\n    Workspace,\n    Folder\n}\n\nexport namespace PreferenceScope {\n    export function is(scope: unknown): scope is PreferenceScope {\n        return typeof scope === 'number' && getScopes().includes(scope);\n    }\n\n    /**\n     * @returns preference scopes from broadest to narrowest: Default -> Folder.\n     */\n    export function getScopes(): PreferenceScope[] {\n        return Object.values(PreferenceScope).filter(nameOrIndex => !isNaN(Number(nameOrIndex))) as PreferenceScope[];\n    }\n\n    /**\n     * @returns preference scopes from narrowest to broadest. Folder -> Default.\n     */\n    export function getReversedScopes(): PreferenceScope[] {\n        return getScopes().reverse();\n    }\n\n    export function getScopeNames(scope?: PreferenceScope): string[] {\n        const names: string[] = [];\n        const scopes = getScopes();\n        if (scope) {\n            for (const scopeIndex of scopes) {\n                if (scopeIndex <= scope) {\n                    names.push(PreferenceScope[scopeIndex]);\n                }\n            }\n        }\n        return names;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as theia from '@theia/plugin';\nimport * as model from '../common/plugin-api-rpc-model';\nimport { CommandRegistryExt, PLUGIN_RPC_CONTEXT as Ext, CommandRegistryMain } from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Disposable } from './types-impl';\nimport { DisposableCollection } from '@theia/core';\nimport { KnownCommands } from './known-commands';\nimport { ArgumentProcessor } from '../common/commands';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Handler = <T>(...args: any[]) => T | PromiseLike<T | undefined>;\n\nexport class CommandRegistryImpl implements CommandRegistryExt {\n\n    private proxy: CommandRegistryMain;\n    private readonly commands = new Set<string>();\n    private readonly handlers = new Map<string, Handler>();\n    private readonly argumentProcessors: ArgumentProcessor[];\n    private readonly commandsConverter: CommandsConverter;\n\n    constructor(rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(Ext.COMMAND_REGISTRY_MAIN);\n        this.argumentProcessors = [];\n        this.commandsConverter = new CommandsConverter(this);\n    }\n\n    get converter(): CommandsConverter {\n        return this.commandsConverter;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerCommand(command: theia.CommandDescription, handler?: Handler, thisArg?: any): Disposable {\n        if (this.commands.has(command.id)) {\n            throw new Error(`Command ${command.id} already exist`);\n        }\n        this.commands.add(command.id);\n        this.proxy.$registerCommand(command);\n\n        const toDispose: Disposable[] = [];\n        if (handler) {\n            toDispose.push(this.registerHandler(command.id, handler, thisArg));\n        }\n        toDispose.push(Disposable.create(() => {\n            this.commands.delete(command.id);\n            this.proxy.$unregisterCommand(command.id);\n        }));\n        return Disposable.from(...toDispose);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerHandler(commandId: string, handler: Handler, thisArg?: any): Disposable {\n        if (this.handlers.has(commandId)) {\n            throw new Error(`Command \"${commandId}\" already has handler`);\n        }\n        this.proxy.$registerHandler(commandId);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.handlers.set(commandId, (...args: any[]) => handler.apply(thisArg, args));\n        return Disposable.create(() => {\n            this.handlers.delete(commandId);\n            this.proxy.$unregisterHandler(commandId);\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    $executeCommand<T>(id: string, ...args: any[]): PromiseLike<T | undefined> {\n        if (this.handlers.has(id)) {\n            return this.executeLocalCommand(id, ...args);\n        } else {\n            return Promise.reject(new Error(`Command: ${id} does not exist.`));\n        }\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    executeCommand<T>(id: string, ...args: any[]): PromiseLike<T | undefined> {\n        if (this.handlers.has(id)) {\n            return this.executeLocalCommand(id, ...args);\n        } else if (KnownCommands.mapped(id)) {\n            // Using the KnownCommand exclusions, convert the commands manually\n            return KnownCommands.map(id, args, (mappedId: string, mappedArgs: any[] | undefined, mappedResult: KnownCommands.ConversionFunction) => {\n                const mr: KnownCommands.ConversionFunction = mappedResult;\n                return this.proxy.$executeCommand(mappedId, ...mappedArgs || []).then((result: any) => {\n                    if (!result) {\n                        return undefined;\n                    }\n                    if (!mr) {\n                        return result;\n                    }\n                    return mr(result);\n                });\n            }\n            );\n        } else {\n            return this.proxy.$executeCommand(id, ...args);\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n    getKeyBinding(commandId: string): PromiseLike<theia.CommandKeyBinding[] | undefined> {\n        return this.proxy.$getKeyBinding(commandId);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private async executeLocalCommand<T>(id: string, ...args: any[]): Promise<T | undefined> {\n        const handler = this.handlers.get(id);\n        if (handler) {\n            return handler<T>(...args.map(arg => this.argumentProcessors.reduce((r, p) => p.processArgument(r), arg)));\n        } else {\n            throw new Error(`No handler exists for command '${id}'`);\n        }\n    }\n\n    async getCommands(filterUnderscoreCommands: boolean = false): Promise<string[]> {\n        const result = await this.proxy.$getCommands();\n        if (filterUnderscoreCommands) {\n            return result.filter(command => command[0] !== '_');\n        }\n        return result;\n    }\n\n    registerArgumentProcessor(processor: ArgumentProcessor): void {\n        this.argumentProcessors.push(processor);\n    }\n}\n\n// copied and modified from https://github.com/microsoft/vscode/blob/1.37.1/src/vs/workbench/api/common/extHostCommands.ts#L217-L259\nexport class CommandsConverter {\n\n    private readonly safeCommandId: string;\n    private readonly commands: CommandRegistryImpl;\n    private readonly commandsMap = new Map<number, theia.Command>();\n    private handle = 0;\n    private isSafeCommandRegistered: boolean;\n\n    constructor(commands: CommandRegistryImpl) {\n        this.safeCommandId = `theia_safe_cmd_${Date.now().toString()}`;\n        this.commands = commands;\n        this.isSafeCommandRegistered = false;\n    }\n\n    /**\n     * Convert to a command that can be safely passed over JSON-RPC.\n     */\n    toSafeCommand(command: undefined, disposables: DisposableCollection): undefined;\n    toSafeCommand(command: theia.Command, disposables: DisposableCollection): model.Command;\n    toSafeCommand(command: theia.Command | undefined, disposables: DisposableCollection): model.Command | undefined;\n    toSafeCommand(command: theia.Command | undefined, disposables: DisposableCollection): model.Command | undefined {\n        if (!command) {\n            return undefined;\n        }\n\n        const result = this.toInternalCommand(command);\n        if (KnownCommands.mapped(result.id)) {\n            return result;\n        }\n\n        if (!this.isSafeCommandRegistered) {\n            this.commands.registerCommand({ id: this.safeCommandId }, this.executeSafeCommand, this);\n            this.isSafeCommandRegistered = true;\n        }\n\n        if (command.arguments && command.arguments.length > 0) {\n            const id = this.handle++;\n            this.commandsMap.set(id, command);\n            disposables.push(new Disposable(() => this.commandsMap.delete(id)));\n            result.id = this.safeCommandId;\n            result.arguments = [id];\n        }\n\n        return result;\n    }\n\n    protected toInternalCommand(external: theia.Command): model.Command {\n        // we're deprecating Command.id, so it has to be optional.\n        // Existing code will have compiled against a non - optional version of the field, so asserting it to exist is ok\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return KnownCommands.map(external.command, external.arguments, (mappedId: string, mappedArgs: any[]) =>\n        ({\n            id: mappedId,\n            title: external.title || ' ',\n            tooltip: external.tooltip,\n            arguments: mappedArgs\n        }));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private executeSafeCommand<R>(...args: any[]): PromiseLike<R | undefined> {\n        const handle = args[0];\n        if (typeof handle !== 'number') {\n            return Promise.reject(`Invalid handle ${handle}`);\n        }\n        const command = this.commandsMap.get(handle);\n        if (!command || !command.command) {\n            return Promise.reject(`Safe command with handle ${handle} not found`);\n        }\n        const allArgs = (command.arguments ?? []).concat(args.slice(1));\n        return this.commands.executeCommand(command.command, ...allArgs);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './measurement';\nexport * from './stopwatch';\nexport * from './measurement-protocol';\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/editor/common/core/characterClassifier.ts\n\nimport { toUint8 } from './uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n    /**\n     * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n     */\n    protected _asciiMap: Uint8Array;\n\n    /**\n     * The entire map (sparse array).\n     */\n    protected _map: Map<number, number>;\n\n    protected _defaultValue: number;\n\n    constructor(_defaultValue: T) {\n        const defaultValue = toUint8(_defaultValue);\n\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map<number, number>();\n    }\n\n    private static _createAsciiMap(defaultValue: number): Uint8Array {\n        const asciiMap: Uint8Array = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n\n    public set(charCode: number, _value: T): void {\n        const value = toUint8(_value);\n\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        } else {\n            this._map.set(charCode, value);\n        }\n    }\n\n    public get(charCode: number): T {\n        if (charCode >= 0 && charCode < 256) {\n            return <T>this._asciiMap[charCode];\n        } else {\n            return <T>(this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { addExtension } from 'msgpackr';\n\n/**\n * Handles the global registration of custom MsgPackR extensions\n * required for the default RPC communication. MsgPackR extensions\n * are installed globally on both ends of the communication channel.\n * (frontend-backend, pluginExt-pluginMain).\n * Is implemented as singleton as it is also used in plugin child processes which have no access to inversify.\n */\nexport class MsgPackExtensionManager {\n    private static readonly INSTANCE = new MsgPackExtensionManager();\n    public static getInstance(): MsgPackExtensionManager {\n        return this.INSTANCE;\n    }\n\n    private extensions = new Map<number, MsgPackExtension>();\n\n    private constructor() {\n    }\n\n    registerExtensions(...extensions: MsgPackExtension[]): void {\n        extensions.forEach(extension => {\n            if (extension.tag < 1 || extension.tag > 100) {\n                // MsgPackR reserves the tag range 1-100 for custom extensions.\n                throw new Error(`MsgPack extension tag should be a number from 1-100 but was '${extension.tag}'`);\n            }\n            if (this.extensions.has(extension.tag)) {\n                throw new Error(`Another MsgPack extension with the tag '${extension.tag}' is already registered`);\n            }\n            this.extensions.set(extension.tag, extension);\n            addExtension({\n                Class: extension.class,\n                type: extension.tag,\n                write: instance => extension.serialize(instance),\n                read: serialized => extension.deserialize(serialized)\n            });\n        });\n    }\n\n    getExtension(tag: number): MsgPackExtension | undefined {\n        return this.extensions.get(tag);\n    }\n}\n\nexport interface MsgPackExtension {\n    class: Function,\n    tag: number,\n    serialize(instance: unknown): unknown,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    deserialize(serialized: any): unknown\n}\n\nexport type Constructor<T> = new (...params: unknown[]) => T;\n\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from 'inversify';\nimport {\n    MessageClient,\n    MessageType,\n    MessageOptions,\n    Progress,\n    ProgressUpdate,\n    ProgressMessage\n} from './message-service-protocol';\nimport { CancellationTokenSource } from './cancellation';\n\n/**\n * Service to log and categorize messages, show progress information and offer actions.\n *\n * The messages are processed by this service and forwarded to an injected {@link MessageClient}.\n * For example \"@theia/messages\" provides such a client, rendering messages as notifications\n * in the frontend.\n *\n * ### Example usage\n *\n * ```typescript\n *   @inject(MessageService)\n *   protected readonly messageService: MessageService;\n *\n *   messageService.warn(\"Typings not available\");\n *\n *   messageService.error(\"Could not restore state\", [\"Rollback\", \"Ignore\"])\n *   .then(action => action === \"Rollback\" && rollback());\n * ```\n */\n@injectable()\nexport class MessageService {\n\n    constructor(\n        @inject(MessageClient) protected readonly client: MessageClient\n    ) { }\n\n    /**\n     * Logs the message and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    log<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    log<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Log, message, args);\n    }\n\n    /**\n     * Logs the message as \"info\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    info<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message as \"info\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    info<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    info(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Info, message, args);\n    }\n\n    /**\n     * Logs the message as \"warning\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    warn<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message as \"warning\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    warn<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    warn(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Warning, message, args);\n    }\n\n    /**\n     * Logs the message as \"error\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    error<T extends string>(message: string, ...actions: T[]): Promise<T | undefined>;\n    /**\n     * Logs the message as \"error\" and, if given, offers actions to act on it.\n     * @param message the message to log.\n     * @param options additional options. Can be omitted\n     * @param actions the actions to offer. Can be omitted.\n     *\n     * @returns the selected action if there is any, `undefined` when there was no action or none was selected.\n     */\n    error<T extends string>(message: string, options?: MessageOptions, ...actions: T[]): Promise<T | undefined>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error(message: string, ...args: any[]): Promise<string | undefined> {\n        return this.processMessage(MessageType.Error, message, args);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected processMessage(type: MessageType, text: string, args?: any[]): Promise<string | undefined> {\n        if (!!args && args.length > 0) {\n            const first = args[0];\n            const actions = Array.from(new Set<string>(args.filter(a => typeof a === 'string')));\n            const options = (typeof first === 'object' && !Array.isArray(first))\n                ? <MessageOptions>first\n                : undefined;\n            return this.client.showMessage({ type, options, text, actions });\n        }\n        return this.client.showMessage({ type, text });\n    }\n\n    /**\n     * Shows the given message as a progress.\n     *\n     * @param message the message to show for the progress.\n     * @param onDidCancel an optional callback which will be invoked if the progress indicator was canceled.\n     *\n     * @returns a promise resolving to a {@link Progress} object with which the progress can be updated.\n     *\n     * ### Example usage\n     *\n     * ```typescript\n     *   @inject(MessageService)\n     *   protected readonly messageService: MessageService;\n     *\n     *   // this will show \"Progress\" as a cancelable message\n     *   this.messageService.showProgress({text: 'Progress'});\n     *\n     *   // this will show \"Rolling back\" with \"Cancel\" and an additional \"Skip\" action\n     *   this.messageService.showProgress({\n     *     text: `Rolling back`,\n     *     actions: [\"Skip\"],\n     *   },\n     *   () => console.log(\"canceled\"))\n     *   .then((progress) => {\n     *     // register if interested in the result (only necessary for custom actions)\n     *     progress.result.then((result) => {\n     *       // will be 'Cancel', 'Skip' or `undefined`\n     *       console.log(\"result is\", result);\n     *     });\n     *     progress.report({message: \"Cleaning references\", work: {done: 10, total: 100}});\n     *     progress.report({message: \"Restoring previous state\", work: {done: 80, total: 100}});\n     *     progress.report({message: \"Complete\", work: {done: 100, total: 100}});\n     *     // we are done so we can cancel the progress message, note that this will also invoke `onDidCancel`\n     *     progress.cancel();\n     *   });\n     * ```\n     */\n    async showProgress(message: ProgressMessage, onDidCancel?: () => void): Promise<Progress> {\n        const id = this.newProgressId();\n        const cancellationSource = new CancellationTokenSource();\n        const report = (update: ProgressUpdate) => {\n            this.client.reportProgress(id, update, message, cancellationSource.token);\n        };\n        const type = message.type ?? MessageType.Progress;\n        const actions = new Set<string>(message.actions);\n        if (ProgressMessage.isCancelable(message)) {\n            actions.delete(ProgressMessage.Cancel);\n            actions.add(ProgressMessage.Cancel);\n        }\n        const clientMessage = { ...message, type, actions: Array.from(actions) };\n        const result = this.client.showProgress(id, clientMessage, cancellationSource.token);\n        if (ProgressMessage.isCancelable(message) && typeof onDidCancel === 'function') {\n            result.then(value => {\n                if (value === ProgressMessage.Cancel) {\n                    onDidCancel();\n                }\n            });\n        }\n        return {\n            id,\n            cancel: () => cancellationSource.cancel(),\n            result,\n            report\n        };\n    }\n\n    private progressIdPrefix = Math.random().toString(36).substring(5);\n    private counter = 0;\n    protected newProgressId(): string {\n        return `${this.progressIdPrefix}-${++this.counter}`;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 EclipseSource.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type * as theia from '@theia/plugin';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport {\n    McpServerDefinitionRegistryExt,\n    McpServerDefinitionRegistryMain,\n    McpServerDefinitionDto,\n    isMcpHttpServerDefinitionDto,\n} from '../common/lm-protocol';\nimport { PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { PluginPackageMcpServerDefinitionProviderContribution } from '../common';\nimport { PluginLogger } from './logger';\nimport { McpHttpServerDefinition, McpServerDefinition, URI } from './types-impl';\n\n// Local interfaces that match the proposed MCP API\ninterface McpServerDefinitionProvider {\n    readonly onDidChangeMcpServerDefinitions?: theia.Event<void>;\n    provideMcpServerDefinitions(): theia.ProviderResult<McpServerDefinition[]>;\n    resolveMcpServerDefinition?(server: McpServerDefinition): theia.ProviderResult<McpServerDefinition>;\n}\n\nexport class LmExtImpl implements McpServerDefinitionRegistryExt {\n\n    private proxy: McpServerDefinitionRegistryMain;\n    private logger: PluginLogger;\n    private readonly providers = new Map<number, McpServerDefinitionProvider>();\n    private readonly providerChangeListeners = new Map<number, Disposable>();\n    private handleCounter = 0;\n    private announcedMCPProviders: string[] = [];\n\n    constructor(protected readonly rpc: RPCProtocol) {\n        this.proxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.MCP_SERVER_DEFINITION_REGISTRY_MAIN);\n        this.logger = new PluginLogger(this.rpc, 'lm');\n    }\n\n    registerMcpServerDefinitionProvider(id: string, provider: McpServerDefinitionProvider): theia.Disposable {\n        if (this.announcedMCPProviders.indexOf(id) === -1) {\n            this.logger.warn(`An unknown McpProvider tried to register, please check the package.json: ${id}`);\n        }\n        const handle = this.handleCounter++;\n        this.providers.set(handle, provider);\n\n        this.proxy.$registerMcpServerDefinitionProvider(handle, id);\n\n        if (provider.onDidChangeMcpServerDefinitions) {\n            const changeListener = provider.onDidChangeMcpServerDefinitions(() => {\n                this.proxy.$onDidChangeMcpServerDefinitions(handle);\n            });\n            this.providerChangeListeners.set(handle, changeListener);\n        }\n\n        return Disposable.create(() => {\n            this.providers.delete(handle);\n            const changeListener = this.providerChangeListeners.get(handle);\n            if (changeListener) {\n                changeListener.dispose();\n                this.providerChangeListeners.delete(handle);\n            }\n            this.proxy.$unregisterMcpServerDefinitionProvider(handle);\n        });\n    }\n\n    async $provideServerDefinitions(handle: number): Promise<McpServerDefinitionDto[]> {\n        const provider = this.providers.get(handle);\n        if (!provider) {\n            return [];\n        }\n\n        try {\n            const definitions = await provider.provideMcpServerDefinitions();\n            if (!definitions) {\n                return [];\n            }\n\n            return definitions.map(def => this.convertToDto(def));\n        } catch (error) {\n            this.logger.error('Error providing MCP server definitions:', error);\n            return [];\n        }\n    }\n\n    async $resolveServerDefinition(handle: number, server: McpServerDefinitionDto): Promise<McpServerDefinitionDto | undefined> {\n        const provider = this.providers.get(handle);\n        if (!provider || !provider.resolveMcpServerDefinition) {\n            return server;\n        }\n\n        try {\n            const definition = this.convertFromDto(server);\n            const resolved = await provider.resolveMcpServerDefinition(definition);\n            return resolved ? this.convertToDto(resolved) : undefined;\n        } catch (error) {\n            this.logger.error('Error resolving MCP server definition:', error);\n            return server;\n        }\n    }\n\n    private convertToDto(definition: McpServerDefinition): McpServerDefinitionDto {\n        if (isMcpHttpServerDefinition(definition)) {\n            return {\n                label: definition.label,\n                headers: definition.headers,\n                uri: definition.uri,\n                version: definition.version\n            };\n        }\n        return {\n            command: definition.command,\n            args: definition.args,\n            cwd: definition.cwd,\n            version: definition.version,\n            label: definition.label,\n            env: definition.env\n        };\n    }\n\n    private convertFromDto(dto: McpServerDefinitionDto): McpServerDefinition {\n        if (isMcpHttpServerDefinitionDto(dto)) {\n            return {\n                label: dto.label,\n                headers: dto.headers,\n                uri: URI.revive(dto.uri),\n                version: dto.version\n            };\n        }\n        return {\n            command: dto.command,\n            args: dto.args,\n            cwd: URI.revive(dto.cwd),\n            version: dto.version,\n            label: dto.label,\n            env: dto.env\n        };\n    }\n\n    registerMcpContributions(mcpContributions: PluginPackageMcpServerDefinitionProviderContribution[]): void {\n        this.announcedMCPProviders.push(...mcpContributions.map(contribution => contribution.id));\n    }\n}\n\nconst isMcpHttpServerDefinition = (definition: McpServerDefinition): definition is McpHttpServerDefinition => 'uri' in definition;\n\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'reflect-metadata';\nimport { Container } from '@theia/core/shared/inversify';\nimport * as theia from '@theia/plugin';\nimport { emptyPlugin, MAIN_RPC_CONTEXT, Plugin } from '../../../common/plugin-api-rpc';\nimport { ExtPluginApi } from '../../../common/plugin-ext-api-contribution';\nimport { getPluginId, PluginMetadata } from '../../../common/plugin-protocol';\nimport { RPCProtocol } from '../../../common/rpc-protocol';\nimport { ClipboardExt } from '../../../plugin/clipboard-ext';\nimport { EditorsAndDocumentsExtImpl } from '../../../plugin/editors-and-documents';\nimport { MessageRegistryExt } from '../../../plugin/message-registry';\nimport { createAPIFactory } from '../../../plugin/plugin-context';\nimport { PluginManagerExtImpl } from '../../../plugin/plugin-manager';\nimport { KeyValueStorageProxy } from '../../../plugin/plugin-storage';\nimport { PreferenceRegistryExtImpl } from '../../../plugin/preference-registry';\nimport { WebviewsExtImpl } from '../../../plugin/webviews';\nimport { WorkspaceExtImpl } from '../../../plugin/workspace';\nimport { loadManifest } from './plugin-manifest-loader';\nimport { EnvExtImpl } from '../../../plugin/env';\nimport { DebugExtImpl } from '../../../plugin/debug/debug-ext';\nimport { LocalizationExtImpl } from '../../../plugin/localization-ext';\nimport pluginHostModule from './worker-plugin-module';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ctx = self as any;\n\nconst pluginsApiImpl = new Map<string, typeof theia>();\nconst pluginsModulesNames = new Map<string, Plugin>();\n\nconst scripts = new Set<string>();\n\nfunction initialize(contextPath: string, pluginMetadata: PluginMetadata): void {\n    const path = './context/' + contextPath;\n\n    if (!scripts.has(path)) {\n        ctx.importScripts(path);\n        scripts.add(path);\n    }\n}\n\nconst container = new Container();\ncontainer.load(pluginHostModule);\n\nconst rpc: RPCProtocol = container.get(RPCProtocol);\nconst pluginManager = container.get(PluginManagerExtImpl);\npluginManager.setPluginHost({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        loadPlugin(plugin: Plugin): any {\n            if (plugin.pluginPath) {\n                if (isElectron()) {\n                    ctx.importScripts(plugin.pluginPath);\n                } else {\n                    if (plugin.lifecycle.frontendModuleName) {\n                        // Set current module name being imported\n                        ctx.frontendModuleName = plugin.lifecycle.frontendModuleName;\n                    }\n\n                    ctx.importScripts('./hostedPlugin/' + getPluginId(plugin.model) + '/' + plugin.pluginPath);\n                }\n            }\n\n            if (plugin.lifecycle.frontendModuleName) {\n                if (!ctx[plugin.lifecycle.frontendModuleName]) {\n                    console.error(`WebWorker: Cannot start plugin \"${plugin.model.name}\". Frontend plugin not found: \"${plugin.lifecycle.frontendModuleName}\"`);\n                    return;\n                }\n                return ctx[plugin.lifecycle.frontendModuleName];\n            }\n        },\n        async init(rawPluginData: PluginMetadata[]): Promise<[Plugin[], Plugin[]]> {\n            const result: Plugin[] = [];\n            const foreign: Plugin[] = [];\n            // Process the plugins concurrently, making sure to keep the order.\n            const plugins = await Promise.all<{\n                /** Where to push the plugin: `result` or `foreign` */\n                target: Plugin[],\n                plugin: Plugin\n            }>(rawPluginData.map(async plg => {\n                const pluginModel = plg.model;\n                const pluginLifecycle = plg.lifecycle;\n                if (pluginModel.entryPoint!.frontend) {\n                    let frontendInitPath = pluginLifecycle.frontendInitPath;\n                    if (frontendInitPath) {\n                        initialize(frontendInitPath, plg);\n                    } else {\n                        frontendInitPath = '';\n                    }\n                    const rawModel = await loadManifest(pluginModel);\n                    const plugin: Plugin = {\n                        pluginPath: pluginModel.entryPoint.frontend!,\n                        pluginFolder: pluginModel.packagePath,\n                        pluginUri: pluginModel.packageUri,\n                        model: pluginModel,\n                        lifecycle: pluginLifecycle,\n                        rawModel,\n                        isUnderDevelopment: !!plg.isUnderDevelopment\n                    };\n                    const apiImpl = apiFactory(plugin);\n                    pluginsApiImpl.set(plugin.model.id, apiImpl);\n                    pluginsModulesNames.set(plugin.lifecycle.frontendModuleName!, plugin);\n                    return { target: result, plugin };\n                } else {\n                    return {\n                        target: foreign,\n                        plugin: {\n                            pluginPath: pluginModel.entryPoint.backend,\n                            pluginFolder: pluginModel.packagePath,\n                            pluginUri: pluginModel.packageUri,\n                            model: pluginModel,\n                            lifecycle: pluginLifecycle,\n                            get rawModel(): never {\n                                throw new Error('not supported');\n                            },\n                            isUnderDevelopment: !!plg.isUnderDevelopment\n                        }\n                    };\n                }\n            }));\n            // Collect the ordered plugins and insert them in the target array:\n            for (const { target, plugin } of plugins) {\n                target.push(plugin);\n            }\n            return [result, foreign];\n        },\n        initExtApi(extApi: ExtPluginApi[]): void {\n            for (const api of extApi) {\n                try {\n                    if (api.frontendExtApi) {\n                        ctx.importScripts(api.frontendExtApi.initPath);\n                        ctx[api.frontendExtApi.initVariable][api.frontendExtApi.initFunction](rpc, pluginsModulesNames);\n                    }\n\n                } catch (e) {\n                    console.error(e);\n                }\n            }\n        }\n    });\n\nconst envExt = container.get(EnvExtImpl);\nconst debugExt = container.get(DebugExtImpl);\nconst preferenceRegistryExt = container.get(PreferenceRegistryExtImpl);\nconst editorsAndDocuments = container.get(EditorsAndDocumentsExtImpl);\nconst workspaceExt = container.get(WorkspaceExtImpl);\nconst messageRegistryExt = container.get(MessageRegistryExt);\nconst clipboardExt = container.get(ClipboardExt);\nconst webviewExt = container.get(WebviewsExtImpl);\nconst localizationExt = container.get(LocalizationExtImpl);\nconst storageProxy = container.get(KeyValueStorageProxy);\n\nconst apiFactory = createAPIFactory(\n    rpc,\n    pluginManager,\n    envExt,\n    debugExt,\n    preferenceRegistryExt,\n    editorsAndDocuments,\n    workspaceExt,\n    messageRegistryExt,\n    clipboardExt,\n    webviewExt,\n    localizationExt\n);\nlet defaultApi: typeof theia;\n\nconst handler = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get: (target: any, name: string) => {\n        const plugin = pluginsModulesNames.get(name);\n        if (plugin) {\n            const apiImpl = pluginsApiImpl.get(plugin.model.id);\n            return apiImpl;\n        }\n\n        if (!defaultApi) {\n            defaultApi = apiFactory(emptyPlugin);\n        }\n\n        return defaultApi;\n    }\n};\nctx['theia'] = new Proxy(Object.create(null), handler);\n\nrpc.set(MAIN_RPC_CONTEXT.HOSTED_PLUGIN_MANAGER_EXT, pluginManager);\nrpc.set(MAIN_RPC_CONTEXT.EDITORS_AND_DOCUMENTS_EXT, editorsAndDocuments);\nrpc.set(MAIN_RPC_CONTEXT.WORKSPACE_EXT, workspaceExt);\nrpc.set(MAIN_RPC_CONTEXT.PREFERENCE_REGISTRY_EXT, preferenceRegistryExt);\nrpc.set(MAIN_RPC_CONTEXT.STORAGE_EXT, storageProxy);\nrpc.set(MAIN_RPC_CONTEXT.WEBVIEWS_EXT, webviewExt);\n\nfunction isElectron(): boolean {\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { CompletionItemTag, CompletionList, Range, SnippetString } from '../types-impl';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { CompletionContext, CompletionResultDto, Completion, CompletionDto, CompletionItemInsertTextRule, ChainedCacheId } from '../../common/plugin-api-rpc-model';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\n\nexport class CompletionAdapter {\n    private cacheId = 0;\n    private readonly cache = new Map<number, theia.CompletionItem[]>();\n    private readonly disposables = new Map<number, DisposableCollection>();\n\n    constructor(\n        private readonly delegate: theia.CompletionItemProvider,\n        private readonly documents: DocumentsExtImpl,\n        private readonly commands: CommandRegistryImpl\n    ) { }\n\n    provideCompletionItems(resource: URI, position: Position, context: CompletionContext, token: theia.CancellationToken): Promise<CompletionResultDto | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for  ${resource}`));\n        }\n\n        const doc = document.document;\n\n        const pos = Converter.toPosition(position);\n\n        // The default insert/replace ranges. It's important to compute them\n        // before asynchronously asking the provider for its results. See\n        // https://github.com/microsoft/vscode/issues/83400#issuecomment-546851421\n        const replacing = doc.getWordRangeAtPosition(pos) || new Range(pos, pos);\n        const inserting = replacing.with({ end: pos });\n\n        return Promise.resolve(this.delegate.provideCompletionItems(doc, pos, token, context)).then(value => {\n            const id = this.cacheId++;\n\n            const toDispose = new DisposableCollection();\n            this.disposables.set(id, toDispose);\n\n            const result: CompletionResultDto = {\n                id,\n                completions: [],\n                defaultRange: {\n                    insert: Converter.fromRange(inserting),\n                    replace: Converter.fromRange(replacing)\n                }\n            };\n\n            let list: CompletionList;\n            if (!value) {\n                return undefined;\n            } else if (Array.isArray(value)) {\n                list = new CompletionList(value);\n            } else {\n                list = value;\n                result.incomplete = list.isIncomplete;\n            }\n\n            for (let i = 0; i < list.items.length; i++) {\n                const suggestion = this.convertCompletionItem(list.items[i], i, id, inserting, replacing);\n                if (suggestion) {\n                    result.completions.push(suggestion);\n                }\n            }\n            this.cache.set(id, list.items);\n\n            return result;\n        });\n    }\n\n    async resolveCompletionItem(chainedId: ChainedCacheId, token: theia.CancellationToken): Promise<Completion | undefined> {\n        const [parentId, id] = chainedId;\n        if (typeof this.delegate.resolveCompletionItem !== 'function') {\n            return undefined;\n        }\n        const item = this.cache.get(parentId)?.[id];\n        if (!item) {\n            return undefined;\n        }\n        const resolvedItem = await this.delegate.resolveCompletionItem(item, token);\n        if (!resolvedItem) {\n            return undefined;\n        }\n        return this.convertCompletionItem(resolvedItem, id, parentId);\n    }\n\n    async releaseCompletionItems(id: number): Promise<void> {\n        this.cache.delete(id);\n        const toDispose = this.disposables.get(id);\n        if (toDispose) {\n            toDispose.dispose();\n            this.disposables.delete(id);\n        }\n    }\n\n    private convertCompletionItem(item: theia.CompletionItem, id: number, parentId: number,\n        defaultInserting?: theia.Range, defaultReplacing?: theia.Range): CompletionDto | undefined {\n\n        const itemLabel = typeof item.label === 'string' ? item.label : item.label.label;\n        if (itemLabel.length === 0) {\n            console.warn('Invalid Completion Item -> must have at least a label');\n            return undefined;\n        }\n\n        const toDispose = this.disposables.get(parentId);\n        if (!toDispose) {\n            throw Error('DisposableCollection is missing...');\n        }\n\n        let insertText = itemLabel;\n        let insertTextRules = item.keepWhitespace ? CompletionItemInsertTextRule.KeepWhitespace : 0;\n        if (item.textEdit) {\n            insertText = item.textEdit.newText;\n        } else if (typeof item.insertText === 'string') {\n            insertText = item.insertText;\n        } else if (item.insertText instanceof SnippetString) {\n            insertText = item.insertText.value;\n            insertTextRules |= CompletionItemInsertTextRule.InsertAsSnippet;\n        }\n\n        let range: Completion['range'] | undefined;\n        const itemRange = item.textEdit?.range || item.range;\n        if (Range.isRange(itemRange)) {\n            range = Converter.fromRange(itemRange);\n        } else if (itemRange && (!defaultInserting?.isEqual(itemRange.inserting) || !defaultReplacing?.isEqual(itemRange.replacing))) {\n            range = {\n                insert: Converter.fromRange(itemRange.inserting),\n                replace: Converter.fromRange(itemRange.replacing)\n            };\n        }\n\n        const tags = (!!item.tags?.length || item.deprecated === true)\n            ? [CompletionItemTag.Deprecated]\n            : undefined;\n\n        const documentation = typeof item.documentation !== 'undefined'\n            ? Converter.fromMarkdown(item.documentation)\n            : undefined;\n\n        return {\n            id,\n            parentId,\n            label: item.label,\n            kind: Converter.fromCompletionItemKind(item.kind),\n            detail: item.detail,\n            documentation,\n            filterText: item.filterText,\n            sortText: item.sortText,\n            preselect: item.preselect,\n            insertText,\n            insertTextRules,\n            range,\n            additionalTextEdits: item.additionalTextEdits && item.additionalTextEdits.map(Converter.fromTextEdit),\n            command: this.commands.converter.toSafeCommand(item.command, toDispose),\n            commitCharacters: item.commitCharacters,\n            tags\n        };\n    }\n\n    static hasResolveSupport(provider: theia.CompletionItemProvider): boolean {\n        return typeof provider.resolveCompletionItem === 'function';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { CompoundMenuNode, ContextExpressionMatcher, Group, MenuNode, MenuPath, Submenu } from '../../common/menu/menu-types';\nimport { Event } from '../../common';\n\nexport class SubMenuLink implements CompoundMenuNode {\n    constructor(private readonly delegate: Submenu, private readonly _sortString?: string, private readonly _when?: string) { }\n\n    get id(): string { return this.delegate.id; };\n    get onDidChange(): Event<void> | undefined { return this.delegate.onDidChange; };\n    get children(): MenuNode[] { return this.delegate.children; }\n    get contextKeyOverlays(): Record<string, string> | undefined { return this.delegate.contextKeyOverlays; }\n    get label(): string { return this.delegate.label; };\n    get icon(): string | undefined { return this.delegate.icon; };\n\n    get sortString(): string { return this._sortString || this.delegate.sortString; };\n    isVisible<T>(effectiveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean {\n        return this.delegate.isVisible(effectiveMenuPath, contextMatcher, context) && this._when ? contextMatcher.match(this._when, context) : true;\n    }\n\n    isEmpty<T>(effectiveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean {\n        return this.delegate.isEmpty(effectiveMenuPath, contextMatcher, context, args);\n    }\n}\n\n/**\n * Node representing a (sub)menu in the menu tree structure.\n */\nexport abstract class AbstractCompoundMenuImpl implements MenuNode {\n    readonly children: MenuNode[] = [];\n\n    protected constructor(\n        readonly id: string,\n        protected readonly orderString?: string,\n        protected readonly when?: string\n    ) {\n    }\n\n    getOrCreate(menuPath: MenuPath, pathIndex: number, endIndex: number): CompoundMenuImpl {\n        if (pathIndex === endIndex) {\n            return this;\n        }\n        let child = this.getNode(menuPath[pathIndex]);\n        if (!child) {\n            child = new GroupImpl(menuPath[pathIndex]);\n            this.addNode(child);\n        }\n        if (child instanceof AbstractCompoundMenuImpl) {\n            return child.getOrCreate(menuPath, pathIndex + 1, endIndex);\n        } else {\n            throw new Error(`An item exists, but it's not a parent: ${menuPath} at ${pathIndex}`);\n        }\n\n    }\n\n    /**\n     * Menu nodes are sorted in ascending order based on their `sortString`.\n     */\n    isVisible<T>(effectiveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean {\n        return (!this.when || contextMatcher.match(this.when, context));\n    }\n\n    isEmpty<T>(effectiveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean {\n        for (const child of this.children) {\n            if (child.isVisible(effectiveMenuPath, contextMatcher, context, args)) {\n                if (!CompoundMenuNode.is(child) || !child.isEmpty(effectiveMenuPath, contextMatcher, context, args)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    addNode(...node: MenuNode[]): void {\n        this.children.push(...node);\n        this.children.sort(CompoundMenuNode.sortChildren);\n    }\n\n    getNode(id: string): MenuNode | undefined {\n        return this.children.find(node => node.id === id);\n    }\n\n    removeById(id: string): void {\n        const idx = this.children.findIndex(node => node.id === id);\n        if (idx >= 0) {\n            this.children.splice(idx, 1);\n        }\n    }\n\n    removeNode(node: MenuNode): void {\n        const idx = this.children.indexOf(node);\n        if (idx >= 0) {\n            this.children.splice(idx, 1);\n        }\n    }\n\n    get sortString(): string {\n        return this.orderString || this.id;\n    }\n}\n\nexport class GroupImpl extends AbstractCompoundMenuImpl implements Group {\n    constructor(\n        id: string,\n        orderString?: string,\n        when?: string\n    ) {\n        super(id, orderString, when);\n    }\n}\n\nexport class SubmenuImpl extends AbstractCompoundMenuImpl implements Submenu {\n\n    constructor(\n        id: string,\n        readonly label: string,\n        readonly contextKeyOverlays: Record<string, string> | undefined,\n        orderString?: string,\n        readonly icon?: string,\n        when?: string,\n    ) {\n        super(id, orderString, when);\n    }\n}\n\nexport type CompoundMenuImpl = SubmenuImpl | GroupImpl;\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport * as types from '../types-impl';\n\nexport function isLocationArray(array: unknown): array is types.Location[] {\n    return Array.isArray(array) && array.length > 0 && array[0] instanceof types.Location;\n}\n\nexport function isDefinitionLinkArray(array: unknown): array is theia.DefinitionLink[] {\n    return Array.isArray(array) && array.length > 0 && array[0].hasOwnProperty('targetUri') && array[0].hasOwnProperty('targetRange');\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    PLUGIN_RPC_CONTEXT,\n    TasksExt,\n    TasksMain,\n    TaskDto,\n    TaskExecutionDto\n} from '../../common/plugin-api-rpc';\nimport * as theia from '@theia/plugin';\nimport * as converter from '../type-converters';\nimport { CustomExecution, Disposable } from '../types-impl';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { TaskProviderAdapter } from './task-provider';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { TerminalServiceExtImpl } from '../terminal-ext';\nimport { UUID } from '@theia/core/shared/@lumino/coreutils';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\n\ntype ExecutionCallback = (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>;\nexport class TasksExtImpl implements TasksExt {\n    private proxy: TasksMain;\n\n    private callId = 0;\n    private adaptersMap = new Map<number, TaskProviderAdapter>();\n    private executions = new Map<number, theia.TaskExecution>();\n    protected callbackIdBase: string = UUID.uuid4();\n    protected callbackId: number;\n    protected customExecutionIds: Map<ExecutionCallback, string> = new Map();\n    protected customExecutionFunctions: Map<string, ExecutionCallback> = new Map();\n    protected lastStartedTask: number | undefined;\n\n    private readonly onDidExecuteTask: Emitter<theia.TaskStartEvent> = new Emitter<theia.TaskStartEvent>();\n    private readonly onDidTerminateTask: Emitter<theia.TaskEndEvent> = new Emitter<theia.TaskEndEvent>();\n    private readonly onDidExecuteTaskProcess: Emitter<theia.TaskProcessStartEvent> = new Emitter<theia.TaskProcessStartEvent>();\n    private readonly onDidTerminateTaskProcess: Emitter<theia.TaskProcessEndEvent> = new Emitter<theia.TaskProcessEndEvent>();\n\n    constructor(rpc: RPCProtocol, readonly terminalExt: TerminalServiceExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TASKS_MAIN);\n    }\n\n    get taskExecutions(): ReadonlyArray<theia.TaskExecution> {\n        return [...this.executions.values()];\n    }\n\n    get onDidStartTask(): Event<theia.TaskStartEvent> {\n        return this.onDidExecuteTask.event;\n    }\n\n    async $onDidStartTask(execution: TaskExecutionDto, terminalId: number): Promise<void> {\n        const customExecution = this.customExecutionFunctions.get(execution.task.executionId || '');\n        if (customExecution) {\n            const taskDefinition = converter.toTask(execution.task).definition;\n            const pty = await customExecution(taskDefinition);\n            this.terminalExt.attachPtyToTerminal(terminalId, pty);\n            if (pty.onDidClose) {\n                const disposable = pty.onDidClose((e: number | void = undefined) => {\n                    disposable.dispose();\n                    // eslint-disable-next-line no-void\n                    this.proxy.$customExecutionComplete(execution.id, e === void 0 ? undefined : e);\n                });\n            }\n        }\n        this.lastStartedTask = execution.id;\n\n        this.onDidExecuteTask.fire({\n            execution: this.getTaskExecution(execution)\n        });\n    }\n\n    get onDidEndTask(): Event<theia.TaskEndEvent> {\n        return this.onDidTerminateTask.event;\n    }\n\n    $onDidEndTask(id: number): void {\n        const taskExecution = this.executions.get(id);\n        if (!taskExecution) {\n            throw new Error(`Task execution with id ${id} is not found`);\n        }\n\n        this.executions.delete(id);\n\n        this.onDidTerminateTask.fire({\n            execution: taskExecution\n        });\n    }\n\n    get onDidStartTaskProcess(): Event<theia.TaskProcessStartEvent> {\n        return this.onDidExecuteTaskProcess.event;\n    }\n\n    $onDidStartTaskProcess(processId: number, executionDto: TaskExecutionDto): void {\n        this.onDidExecuteTaskProcess.fire({\n            processId,\n            execution: this.getTaskExecution(executionDto)\n        });\n    }\n\n    get onDidEndTaskProcess(): Event<theia.TaskProcessEndEvent> {\n        return this.onDidTerminateTaskProcess.event;\n    }\n\n    $onDidEndTaskProcess(exitCode: number, taskId: number): void {\n        const taskExecution = this.executions.get(taskId);\n        if (!taskExecution) {\n            throw new Error(`Task execution with id ${taskId} is not found`);\n        }\n\n        this.onDidTerminateTaskProcess.fire({\n            execution: taskExecution,\n            exitCode\n        });\n    }\n\n    registerTaskProvider(type: string, provider: theia.TaskProvider): theia.Disposable {\n        const callId = this.addNewAdapter(new TaskProviderAdapter(provider));\n        this.proxy.$registerTaskProvider(callId, type);\n        return this.createDisposable(callId);\n    }\n\n    async fetchTasks(filter?: theia.TaskFilter): Promise<theia.Task[]> {\n        const taskVersion = filter ? filter.version : undefined;\n        const taskType = filter ? filter.type : undefined;\n        const taskDtos = await this.proxy.$fetchTasks(taskVersion, taskType);\n        return taskDtos.map(dto => converter.toTask(dto));\n    }\n\n    async executeTask(task: theia.Task): Promise<theia.TaskExecution> {\n        const taskDto = converter.fromTask(task);\n        if (taskDto) {\n            // If this task is a custom execution, then we need to save it away\n            // in the provided custom execution map that is cleaned up after the\n            // task is executed.\n            if (CustomExecution.is(task.execution!)) {\n                taskDto.executionId = this.addCustomExecution(task.execution!.callback);\n            }\n            const executionDto = await this.proxy.$executeTask(taskDto);\n            if (executionDto) {\n                const taskExecution = this.getTaskExecution(executionDto);\n                return taskExecution;\n            }\n            throw new Error('Run task config does not return after being started');\n        }\n        throw new Error('Task was not successfully transformed into a task config');\n    }\n\n    async $provideTasks(handle: number): Promise<TaskDto[]> {\n        const adapter = this.adaptersMap.get(handle);\n        if (adapter) {\n            return adapter.provideTasks(CancellationToken.None).then(tasks => {\n                for (const task of tasks) {\n                    if (task.executionType === 'customExecution') {\n                        this.applyCustomExecution(task);\n                    }\n                }\n                return tasks;\n            });\n        } else {\n            throw new Error('No adapter found to provide tasks');\n        }\n    }\n\n    async $resolveTask(handle: number, task: TaskDto, token: theia.CancellationToken): Promise<TaskDto> {\n        const adapter = this.adaptersMap.get(handle);\n        if (adapter) {\n            return adapter.resolveTask(task, token).then(resolvedTask => {\n                // ensure we do not lose task type and execution id during resolution as we need it for custom execution\n                resolvedTask.executionType = resolvedTask.executionType ?? task.executionType;\n                if (resolvedTask.executionType === 'customExecution') {\n                    this.applyCustomExecution(resolvedTask);\n                }\n                return resolvedTask;\n            });\n        } else {\n            throw new Error('No adapter found to resolve task');\n        }\n    }\n\n    private applyCustomExecution(task: TaskDto): void {\n        if (task.callback) {\n            task.executionId = this.addCustomExecution(task.callback);\n            task.callback = undefined;\n        }\n    }\n\n    private addNewAdapter(adapter: TaskProviderAdapter): number {\n        const callId = this.nextCallId();\n        this.adaptersMap.set(callId, adapter);\n        return callId;\n    }\n\n    private nextCallId(): number {\n        return this.callId++;\n    }\n\n    private createDisposable(callId: number): theia.Disposable {\n        return new Disposable(() => {\n            this.adaptersMap.delete(callId);\n            this.proxy.$unregister(callId);\n        });\n    }\n\n    // Initial `this.executions` map with the running tasks from the previous session\n    async $initLoadedTasks(taskExecutions: TaskExecutionDto[]): Promise<void> {\n        taskExecutions.forEach(execution => this.getTaskExecution(execution));\n    }\n\n    private getTaskExecution(execution: TaskExecutionDto): theia.TaskExecution {\n        const executionId = execution.id;\n        let result: theia.TaskExecution | undefined = this.executions.get(executionId);\n        if (result) {\n            return result;\n        }\n\n        result = {\n            task: converter.toTask(execution.task),\n            terminate: () => {\n                this.proxy.$terminateTask(executionId);\n            }\n        };\n        this.executions.set(executionId, result);\n        return result;\n    }\n\n    private addCustomExecution(callback: ExecutionCallback): string {\n        let id = this.customExecutionIds.get(callback);\n        if (!id) {\n            id = this.nextCallbackId();\n            this.customExecutionIds.set(callback, id);\n            this.customExecutionFunctions.set(id, callback);\n        }\n        return id;\n    }\n\n    private nextCallbackId(): string {\n        return this.callbackIdBase + this.callbackId++;\n    }\n}\n","/********************************************************************************\n* Copyright (c) 2021 STMicroelectronics and others.\n*\n* This program and the accompanying materials are made available under the\n* terms of the Eclipse Public License 2.0 which is available at\n* http://www.eclipse.org/legal/epl-2.0.\n*\n* This Source Code may also be made available under the following Secondary\n* Licenses when the conditions for such availability set forth in the Eclipse\n* Public License v. 2.0 are satisfied: GNU General Public License, version 2\n* with the GNU Classpath Exception which is available at\n* https://www.gnu.org/software/classpath/license.html.\n*\n* SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n*******************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable } from 'inversify';\nimport { Measurement, MeasurementOptions } from './measurement';\nimport { Stopwatch } from './stopwatch';\n\nexport const BackendStopwatch = Symbol('BackendStopwatch');\n\n/** API path of the stopwatch service that exposes the back-end stopwatch to clients. */\nexport const stopwatchPath = '/services/stopwatch';\n\n/** Token representing a remote measurement in the {@link BackendStopwatch} protocol. */\nexport type RemoteMeasurement = number;\n\nexport const BackendStopwatchOptions = Symbol('BackendStopwatchOptions');\n\n/**\n * A service that exposes the back-end's {@link Stopwatch} to clients\n * via the remote API. If you do not need this service then bind or re-bind\n * the {@link NullBackendStopwatch} implementation to this service interface.\n */\nexport interface BackendStopwatch {\n\n    /**\n     * Create a {@link Measurement} that will compute the time that elapsed on the back-end when logged.\n     *\n     * @param name the {@link Measurement.name measurement name}\n     * @param options optional configuration of the new measurement\n     * @returns a token identifying an unique self-timing measurement relative to the back-end's timeline\n     */\n    start(name: string, options?: MeasurementOptions): Promise<RemoteMeasurement>;\n\n    /**\n     * Stop a measurement previously {@link start started} and log in the back-end a measurement of\n     * its duration relative to the back-end's timeline.\n     *\n     * @param measurement token identifying a measurement previously {@link start started}\n     * @param message a message to log\n     * @param messageArgs optional arguments to the `message`\n     */\n    stop(measurement: RemoteMeasurement, message: string, messageArgs: any[]): Promise<void>;\n\n}\n\n/**\n * Default implementation of the (remote) back-end stopwatch service.\n */\n@injectable()\nexport class DefaultBackendStopwatch {\n\n    readonly measurements = new Map<number, Measurement>();\n\n    protected idSequence: number = 0;\n\n    @inject(Stopwatch)\n    protected readonly stopwatch: Stopwatch;\n\n    start(name: string, options?: MeasurementOptions): RemoteMeasurement {\n        const result = ++this.idSequence;\n        this.measurements.set(result, this.stopwatch.start(name, options));\n        return result;\n    }\n\n    stop(measurementToken: RemoteMeasurement, message: string, messageArgs: any[]): void {\n        const measurement = this.measurements.get(measurementToken);\n        if (measurement) {\n            this.measurements.delete(measurementToken);\n            measurement.log(message, ...messageArgs);\n        }\n    }\n\n}\n\n/**\n * No-op implementation of the (remote) back-end stopwatch service.\n */\n@injectable()\nexport class NullBackendStopwatch implements BackendStopwatch {\n\n    start(): Promise<RemoteMeasurement> {\n        return Promise.resolve(0);\n    }\n\n    stop(): Promise<void> {\n        return Promise.resolve();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport { ArrayUtils } from './array-utils';\nexport { Prioritizeable } from './prioritizeable';\n\ntype UnknownObject<T extends object> = Record<string | number | symbol, unknown> & { [K in keyof T]: unknown };\n\nexport type Deferred<T> = { [P in keyof T]: Promise<T[P]> };\nexport type MaybeArray<T> = T | T[];\nexport type MaybeNull<T> = { [P in keyof T]: T[P] | null };\nexport type MaybePromise<T> = T | PromiseLike<T>;\nexport type MaybeUndefined<T> = { [P in keyof T]?: T[P] | undefined };\nexport type Mutable<T> = { -readonly [P in keyof T]: T[P] };\nexport type RecursivePartial<T> = {\n    [P in keyof T]?: T[P] extends (infer I)[]\n    ? RecursivePartial<I>[]\n    : RecursivePartial<T[P]>;\n};\n\nexport function isBoolean(value: unknown): value is boolean {\n    return value === true || value === false;\n}\n\nexport function isString(value: unknown): value is string {\n    return typeof value === 'string' || value instanceof String;\n}\n\nexport function isNumber(value: unknown): value is number {\n    return typeof value === 'number' || value instanceof Number;\n}\n\nexport function isError(value: unknown): value is Error {\n    return value instanceof Error;\n}\n\nexport function isErrorLike(value: unknown): value is Error {\n    return isObject(value) && isString(value.name) && isString(value.message) && (isUndefined(value.stack) || isString(value.stack));\n}\n\n// eslint-disable-next-line space-before-function-paren\nexport function isFunction<T extends (...args: unknown[]) => unknown>(value: unknown): value is T {\n    return typeof value === 'function';\n}\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n    if (!isObject(obj)) {\n        return false;\n    }\n\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function isObject<T extends object>(value: unknown): value is UnknownObject<T> {\n    // eslint-disable-next-line no-null/no-null\n    return typeof value === 'object' && value !== null;\n}\n\nexport function isUndefined(value: unknown): value is undefined {\n    return typeof value === 'undefined';\n}\n\n/**\n * @param value value to check.\n * @param every optional predicate ran on every element of the array.\n * @param thisArg value to substitute `this` with when invoking in the predicate.\n * @returns whether or not `value` is an array.\n */\nexport function isArray<T>(value: unknown, every?: (value: unknown) => unknown, thisArg?: unknown): value is T[] {\n    return Array.isArray(value) && (!isFunction(every) || value.every(every, thisArg));\n}\n\nexport function isStringArray(value: unknown): value is string[] {\n    return isArray(value, isString);\n}\n\n/**\n * Creates a shallow copy with all ownkeys of the original object that are `null` made `undefined`\n */\nexport function nullToUndefined<T>(nullable: MaybeNull<T>): MaybeUndefined<T> {\n    const undefinable = { ...nullable } as MaybeUndefined<T>;\n    for (const key in nullable) {\n        // eslint-disable-next-line no-null/no-null\n        if (nullable[key] === null && Object.prototype.hasOwnProperty.call(nullable, key)) {\n            undefinable[key] = undefined;\n        }\n    }\n    return undefinable;\n}\n\n/**\n * Throws when called and statically makes sure that all variants of a type were consumed.\n */\nexport function unreachable(_never: never, message: string = 'unhandled case'): never {\n    throw new Error(message);\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/types.ts\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n    return !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n    // eslint-disable-next-line no-null/no-null\n    return (isUndefined(obj) || obj === null);\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { Disposable } from '../disposable';\nimport { Emitter, Event } from '../event';\nimport { ReadBuffer, WriteBuffer } from './message-buffer';\n\n/**\n * The default {@link WriteBuffer} implementation. Uses a {@link Uint8Array} for buffering.\n * The {@link Uint8ArrayWriteBuffer.onCommit} hook can be used to rect to on-commit events.\n * After the {@link Uint8ArrayWriteBuffer.commit} method has been called the buffer is disposed\n * and can no longer be used for writing data. If the writer buffer is no longer needed but the message\n * has not been committed yet it has to be disposed manually.\n */\nexport class Uint8ArrayWriteBuffer implements WriteBuffer, Disposable {\n\n    private encoder = new TextEncoder();\n    private msg: DataView;\n    private isDisposed = false;\n    private offset: number;\n\n    constructor(private buffer: Uint8Array = new Uint8Array(1024), writePosition: number = 0) {\n        this.offset = buffer.byteOffset + writePosition;\n        this.msg = new DataView(buffer.buffer);\n    }\n\n    ensureCapacity(value: number): this {\n        let newLength = this.buffer.byteLength;\n        while (newLength < this.offset + value) {\n            newLength *= 2;\n        }\n        if (newLength !== this.buffer.byteLength) {\n            const newBuffer = new Uint8Array(newLength);\n            newBuffer.set(this.buffer);\n            this.buffer = newBuffer;\n            this.msg = new DataView(this.buffer.buffer);\n        }\n        return this;\n    }\n\n    writeLength(length: number): this {\n        if (length < 0 || (length % 1) !== 0) {\n            throw new Error(`Could not write the given length value. '${length}' is not an integer >= 0`);\n        }\n        if (length < 127) {\n            this.writeUint8(length);\n        } else {\n            this.writeUint8(128 + (length & 127));\n            this.writeLength(length >> 7);\n        }\n        return this;\n    }\n\n    writeNumber(value: number): this {\n        this.ensureCapacity(8);\n        this.msg.setFloat64(this.offset, value);\n        this.offset += 8;\n        return this;\n    }\n\n    writeUint8(value: number): this {\n        this.ensureCapacity(1);\n        this.buffer[this.offset++] = value;\n        return this;\n    }\n\n    writeRaw(bytes: Uint8Array): this {\n        this.ensureCapacity(bytes.byteLength);\n        this.buffer.set(bytes, this.offset);\n        this.offset += bytes.byteLength;\n        return this;\n    }\n\n    writeUint16(value: number): this {\n        this.ensureCapacity(2);\n        this.msg.setUint16(this.offset, value);\n        this.offset += 2;\n        return this;\n    }\n\n    writeUint32(value: number): this {\n        this.ensureCapacity(4);\n        this.msg.setUint32(this.offset, value);\n        this.offset += 4;\n        return this;\n    }\n\n    writeString(value: string): this {\n        this.ensureCapacity(4 * value.length);\n        const result = this.encoder.encodeInto(value, this.buffer.subarray(this.offset + 4));\n        this.msg.setUint32(this.offset, result.written!);\n        this.offset += 4 + result.written!;\n        return this;\n    }\n\n    writeBytes(value: Uint8Array): this {\n        this.writeLength(value.byteLength);\n        this.ensureCapacity(value.length);\n        this.buffer.set(value, this.offset);\n        this.offset += value.length;\n        return this;\n    }\n\n    private onCommitEmitter = new Emitter<Uint8Array>();\n    get onCommit(): Event<Uint8Array> {\n        return this.onCommitEmitter.event;\n    }\n\n    commit(): void {\n        if (this.isDisposed) {\n            throw new Error(\"Could not invoke 'commit'. The WriteBuffer is already disposed.\");\n        }\n        this.onCommitEmitter.fire(this.getCurrentContents());\n        this.dispose();\n    }\n\n    getCurrentContents(): Uint8Array {\n        return this.buffer.slice(this.buffer.byteOffset, this.offset);\n    }\n\n    dispose(): void {\n        if (!this.isDisposed) {\n            this.onCommitEmitter.dispose();\n            this.isDisposed = true;\n        }\n    }\n\n}\n/**\n * The default {@link ReadBuffer} implementation. Uses a {@link Uint8Array} for buffering.\n * Is for single message read. A message can only be read once.\n */\nexport class Uint8ArrayReadBuffer implements ReadBuffer {\n    private offset: number = 0;\n    private msg: DataView;\n    private decoder = new TextDecoder();\n\n    constructor(private readonly buffer: Uint8Array, readPosition = 0) {\n        this.offset = buffer.byteOffset + readPosition;\n        this.msg = new DataView(buffer.buffer);\n    }\n\n    readUint8(): number {\n        return this.msg.getUint8(this.offset++);\n    }\n\n    readUint16(): number {\n        const result = this.msg.getUint16(this.offset);\n        this.offset += 2;\n        return result;\n    }\n\n    readUint32(): number {\n        const result = this.msg.getUint32(this.offset);\n        this.offset += 4;\n        return result;\n    }\n\n    readLength(): number {\n        let shift = 0;\n        let byte = this.readUint8();\n        let value = (byte & 127) << shift;\n        while (byte > 127) {\n            shift += 7;\n            byte = this.readUint8();\n            value = value + ((byte & 127) << shift);\n        }\n        return value;\n    }\n\n    readNumber(): number {\n        const result = this.msg.getFloat64(this.offset);\n        this.offset += 8;\n        return result;\n    }\n\n    readString(): string {\n        const len = this.readUint32();\n        const sliceOffset = this.offset - this.buffer.byteOffset;\n        const result = this.decodeString(this.buffer.slice(sliceOffset, sliceOffset + len));\n        this.offset += len;\n        return result;\n    }\n\n    private decodeString(buf: Uint8Array): string {\n        return this.decoder.decode(buf);\n    }\n\n    readBytes(): Uint8Array {\n        const length = this.readLength();\n        const sliceOffset = this.offset - this.buffer.byteOffset;\n        const result = this.buffer.slice(sliceOffset, sliceOffset + length);\n        this.offset += length;\n        return result;\n    }\n\n    sliceAtReadPosition(): ReadBuffer {\n        const sliceOffset = this.offset - this.buffer.byteOffset;\n        return new Uint8ArrayReadBuffer(this.buffer, sliceOffset);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2024 STMicroelectronics.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport {\n    UriExt,\n    PLUGIN_RPC_CONTEXT, PluginInfo, UriMain\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Disposable, URI } from './types-impl';\nimport { UriComponents } from '../common/uri-components';\n\nexport class UriExtImpl implements UriExt {\n\n    private handlers = new Map<string, theia.UriHandler>();\n\n    private readonly proxy: UriMain;\n\n    constructor(readonly rpc: RPCProtocol) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.URI_MAIN);\n    }\n\n    registerUriHandler(handler: theia.UriHandler, plugin: PluginInfo): theia.Disposable {\n        const pluginId = plugin.id;\n        if (this.handlers.has(pluginId)) {\n            throw new Error(`URI handler already registered for plugin ${pluginId}`);\n        }\n\n        this.handlers.set(pluginId, handler);\n        this.proxy.$registerUriHandler(pluginId, plugin.displayName || plugin.name);\n\n        return new Disposable(() => {\n            this.proxy.$unregisterUriHandler(pluginId);\n            this.handlers.delete(pluginId);\n        });\n    }\n\n    $handleExternalUri(uri: UriComponents): Promise<void> {\n        const handler = this.handlers.get(uri.authority);\n        if (!handler) {\n            return Promise.resolve();\n        }\n        handler.handleUri(URI.revive(uri));\n        return Promise.resolve();\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\nimport { RpcServer } from './messaging/proxy-factory';\n\nexport const ILoggerServer = Symbol('ILoggerServer');\n\nexport const loggerPath = '/services/logger';\n\nexport interface ILoggerServer extends RpcServer<ILoggerClient> {\n    setLogLevel(name: string, logLevel: number): Promise<void>;\n    getLogLevel(name: string): Promise<number>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    log(name: string, logLevel: number, message: any, params: any[]): Promise<void>;\n    child(name: string): Promise<void>;\n}\n\nexport const ILoggerClient = Symbol('ILoggerClient');\n\nexport interface ILogLevelChangedEvent {\n    loggerName: string;\n    newLogLevel: number;\n}\n\nexport interface ILoggerClient {\n    onLogLevelChanged(event: ILogLevelChangedEvent): void;\n    onLogConfigChanged(): void;\n}\n\n@injectable()\nexport class DispatchingLoggerClient implements ILoggerClient {\n\n    readonly clients = new Set<ILoggerClient>();\n\n    onLogLevelChanged(event: ILogLevelChangedEvent): void {\n        this.clients.forEach(client => client.onLogLevelChanged(event));\n    }\n\n    onLogConfigChanged(): void {\n        this.clients.forEach(client => client.onLogConfigChanged());\n    }\n}\n\nexport const rootLoggerName = 'root';\n\nexport enum LogLevel {\n    FATAL = 60,\n    ERROR = 50,\n    WARN = 40,\n    INFO = 30,\n    DEBUG = 20,\n    TRACE = 10\n}\nexport namespace LogLevel {\n    export const strings = new Map<LogLevel, string>([\n        [LogLevel.FATAL, 'fatal'],\n        [LogLevel.ERROR, 'error'],\n        [LogLevel.WARN, 'warn'],\n        [LogLevel.INFO, 'info'],\n        [LogLevel.DEBUG, 'debug'],\n        [LogLevel.TRACE, 'trace']\n    ]);\n\n    export function toString(level: LogLevel): string | undefined {\n        return strings.get(level);\n    }\n\n    export function fromString(levelStr: string): LogLevel | undefined {\n        for (const pair of strings) {\n            if (pair[1] === levelStr) {\n                return pair[0];\n            }\n        }\n\n        return undefined;\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport namespace ConsoleLogger {\n    type Console = (message?: any, ...optionalParams: any[]) => void;\n    const originalConsoleLog = console.log;\n    const consoles = new Map<LogLevel, Console>([\n        [LogLevel.FATAL, console.error],\n        [LogLevel.ERROR, console.error],\n        [LogLevel.WARN, console.warn],\n        [LogLevel.INFO, console.info],\n        [LogLevel.DEBUG, console.debug],\n        [LogLevel.TRACE, console.trace]\n    ]);\n    export function reset(): void {\n        console.error = consoles.get(LogLevel.ERROR)!;\n        console.warn = consoles.get(LogLevel.WARN)!;\n        console.info = consoles.get(LogLevel.INFO)!;\n        console.debug = consoles.get(LogLevel.DEBUG)!;\n        console.trace = consoles.get(LogLevel.TRACE)!;\n        console.log = originalConsoleLog;\n    }\n    export function log(name: string, logLevel: number, message: string, params: any[]): string {\n        const console = consoles.get(logLevel) || originalConsoleLog;\n        const severity = (LogLevel.strings.get(logLevel) || 'unknown').toUpperCase();\n        const now = new Date();\n        const formattedMessage = `${now.toISOString()} ${name} ${severity} ${message}`;\n        console(formattedMessage, ...params);\n        return formattedMessage;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// copied from https://github.com/Microsoft/vscode/blob/bf7ac9201e7a7d01741d4e6e64b5dc9f3197d97b/src/vs/base/common/glob.ts\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as strings from './strings';\nimport * as paths from './paths';\nimport { CharCode } from './char-code';\n\n/* eslint-disable @typescript-eslint/no-shadow, no-null/no-null */\nexport interface IExpression {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [pattern: string]: boolean | SiblingClause | any;\n}\n\nexport interface IRelativePattern {\n    base: string;\n    pattern: string;\n    pathToRelative(from: string, to: string): string;\n}\n\nexport function getEmptyExpression(): IExpression {\n    return Object.create(null);\n}\n\nexport interface SiblingClause {\n    when: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';        // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';    // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n    }\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n    if (!pattern) {\n        return [];\n    }\n\n    const segments: string[] = [];\n\n    let inBraces = false;\n    let inBrackets = false;\n\n    let char: string;\n    let curVal = '';\n    for (let i = 0; i < pattern.length; i++) {\n        char = pattern[i];\n\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n\n        curVal += char;\n    }\n\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n\n    return segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n    if (!pattern) {\n        return '';\n    }\n\n    let regEx = '';\n\n    // Split up into segments for each slash found\n    // eslint-disable-next-line prefer-const\n    let segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n    // Special case where we only have globstars\n    if (segments.every(s => s === GLOBSTAR)) {\n        regEx = '.*';\n    }\n\n    // Build regex over segments\n    // tslint:disable-next-line:one-line\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n\n            // Globstar is special\n            if (segment === GLOBSTAR) {\n\n                // if we have more than one globstar after another, just ignore it\n                if (!previousSegmentWasGlobStar) {\n                    regEx += starsToRegExp(2);\n                    previousSegmentWasGlobStar = true;\n                }\n\n                return;\n            }\n\n            // States\n            let inBraces = false;\n            let braceVal = '';\n\n            let inBrackets = false;\n            let bracketVal = '';\n\n            let char: string;\n            for (let i = 0; i < segment.length; i++) {\n                char = segment[i];\n\n                // Support brace expansion\n                if (char !== '}' && inBraces) {\n                    braceVal += char;\n                    continue;\n                }\n\n                // Support brackets\n                if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                    let res: string;\n\n                    // range operator\n                    if (char === '-') {\n                        res = char;\n                    }\n\n                    // negation operator (only valid on first index in bracket)\n                    // tslint:disable-next-line:one-line\n                    else if ((char === '^' || char === '!') && !bracketVal) {\n                        res = '^';\n                    }\n\n                    // glob split matching is not allowed within character ranges\n                    // see http://man7.org/linux/man-pages/man7/glob.7.html\n                    // tslint:disable-next-line:one-line\n                    else if (char === GLOB_SPLIT) {\n                        res = '';\n                    }\n\n                    // anything else gets escaped\n                    // tslint:disable-next-line:one-line\n                    else {\n                        res = strings.escapeRegExpCharacters(char);\n                    }\n\n                    bracketVal += res;\n                    continue;\n                }\n\n                switch (char) {\n                    case '{':\n                        inBraces = true;\n                        continue;\n\n                    case '[':\n                        inBrackets = true;\n                        continue;\n\n                    case '}':\n                        // eslint-disable-next-line prefer-const\n                        let choices = splitGlobAware(braceVal, ',');\n\n                        // Converts {foo,bar} => [foo|bar]\n                        // eslint-disable-next-line prefer-const\n                        let braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n                        regEx += braceRegExp;\n\n                        inBraces = false;\n                        braceVal = '';\n\n                        break;\n\n                    case ']':\n                        regEx += ('[' + bracketVal + ']');\n\n                        inBrackets = false;\n                        bracketVal = '';\n\n                        break;\n\n                    case '?':\n                        regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                        continue;\n\n                    case '*':\n                        regEx += starsToRegExp(1);\n                        continue;\n\n                    default:\n                        regEx += strings.escapeRegExpCharacters(char);\n                }\n            }\n\n            // Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n            // For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n            // a folder called \"something\" to match as well.\n            // However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behavior\n            // is to match 0-N segments.\n            if (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n                regEx += PATH_REGEX;\n            }\n\n            // reset state\n            previousSegmentWasGlobStar = false;\n        });\n    }\n\n    return regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/;                                        // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/;                                            // **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/;     // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/;     // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/;                                        // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/;                                    // something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\n// eslint-disable-next-line max-len\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | Promise<string> /* the matching pattern */;\n\nexport interface IGlobOptions {\n    /**\n     * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n     */\n    trimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n    (path: string, basename: string): string | Promise<string> /* the matching pattern */;\n    basenames?: string[];\n    patterns?: string[];\n    allBasenames?: string[];\n    allPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n    (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>): string | Promise<string> /* the matching pattern */;\n    requiresSiblings?: boolean;\n    allBasenames?: string[];\n    allPaths?: string[];\n}\n\nconst CACHE = new Map<string, ParsedStringPattern>();  // new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function (): boolean {\n    return false;\n};\n\nconst NULL = function (): string {\n    return null!;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n    if (!arg1) {\n        return NULL;\n    }\n\n    // Handle IRelativePattern\n    let pattern: string;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    } else {\n        pattern = arg1;\n    }\n\n    // Whitespace trimming\n    pattern = pattern.trim();\n\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n\n    // Check for Trivias\n    let match: RegExpExecArray;\n    if (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n        const base = pattern.substring(4); // '**/*'.length === 4\n        parsedPattern = function (path, basename): string {\n            return path && strings.endsWith(path, base) ? pattern : null!;\n        };\n    } else if (match = T2.exec(trimForExclusions(pattern, options))!) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    } else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    } else if (match = T4.exec(trimForExclusions(pattern, options))!) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substring(1), pattern, true);\n    } else if (match = T5.exec(trimForExclusions(pattern, options))!) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n\n    // Otherwise convert to pattern\n    // tslint:disable-next-line:one-line\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n\n    return wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n\n    return function (path, basename): string | Promise<string> {\n        if (!paths.isEqualOrParent(path, arg2.base)) {\n            return null!;\n        }\n\n        return parsedPattern(paths.normalize(arg2.pathToRelative(arg2.base, path)), basename);\n    };\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n    return options.trimForExclusions && strings.endsWith(pattern, '/**') ? pattern.substring(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern: ParsedStringPattern = function (path, basename): string {\n        if (!path) {\n            return null!;\n        }\n        if (basename) {\n            return basename === base ? originalPattern : null!;\n        }\n        return path === base || strings.endsWith(path, slashBase) || strings.endsWith(path, backslashBase) ? originalPattern : null!;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [originalPattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const n = parsedPatterns.length;\n    if (!n) {\n        return NULL;\n    }\n    if (n === 1) {\n        return <ParsedStringPattern>parsedPatterns[0];\n    }\n    const parsedPattern: ParsedStringPattern = function (path: string, basename: string): string {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n                return pattern;\n            }\n        }\n        return null!;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n    // const withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n    const nativePath = paths.nativeSep !== paths.sep ? path.replace(ALL_FORWARD_SLASHES, paths.nativeSep) : path;\n    const nativePathEnd = paths.nativeSep + nativePath;\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename): string {\n        return path && (path === nativePath || strings.endsWith(path, nativePathEnd)) ? pattern : null!;\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n    } : function (path, basename): string {\n        return path && path === nativePath ? pattern : null!;\n    };\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n    return parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path: string, basename: string): string {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return path && regExp.test(path) ? pattern : null!;\n        };\n    } catch (error) {\n        return NULL;\n    }\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - `*` matches anything inside a path segment\n * - `?` matches 1 character inside a path segment\n * - `**` matches anything including an empty path segment\n * - simple brace expansion (`{js,ts}` => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): any {\n    if (!arg1 || !path) {\n        return false;\n    }\n\n    return parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): any {\n    if (!arg1) {\n        return FALSE;\n    }\n\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1 as string | IRelativePattern, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path: string, basename: string): boolean {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (<ParsedStringPattern><any>resultPattern).allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (<ParsedStringPattern><any>resultPattern).allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n\n    // Glob with Expression\n    return parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>): ((name: string) => Promise<boolean>) | undefined {\n    if (!siblingsFn) {\n        return undefined;\n    }\n\n    let siblings: Promise<Record<string, true>>;\n    return (name: string) => {\n        if (!siblings) {\n            siblings = (siblingsFn() || Promise.resolve([]))\n                .then(list => list ? listToMap(list) : {});\n        }\n        return siblings.then(map => !!map[name]);\n    };\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]): ((name: string) => boolean) | undefined {\n    if (!siblingsFn) {\n        return undefined;\n    }\n\n    let siblings: Record<string, true>;\n    return (name: string) => {\n        if (!siblings) {\n            const list = siblingsFn();\n            siblings = list ? listToMap(list) : {};\n        }\n        return !!siblings[name];\n    };\n}\n\nfunction listToMap(list: string[]): Record<string, true> {\n    const map: Record<string, true> = {};\n    for (const key of list) {\n        map[key] = true;\n    }\n    return map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n    const rp = obj as IRelativePattern;\n\n    return !!rp && typeof rp === 'object' && typeof rp.base === 'string' && typeof rp.pattern === 'string' && typeof rp.pathToRelative === 'function';\n}\n\n/**\n * Same as `parse`, but the ParsedExpression is guaranteed to return a Promise\n */\nexport function parseToAsync(expression: IExpression, options?: IGlobOptions): ParsedExpression {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const parsedExpression = parse(expression, options);\n    return (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | Promise<string> => {\n        const result = parsedExpression(path, basename, hasSibling);\n        return result instanceof Promise ? result : Promise.resolve(result);\n    };\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n    return (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n    return (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n\n    const n = parsedPatterns.length;\n    if (!n) {\n        return NULL;\n    }\n\n    if (!parsedPatterns.some(parsedPattern => (<ParsedExpressionPattern>parsedPattern).requiresSiblings!)) {\n        if (n === 1) {\n            return <ParsedStringPattern>parsedPatterns[0];\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const resultExpression: ParsedStringPattern = function (path: string, basename: string): string | Promise<string> {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            // tslint:disable-next-line:one-variable-per-declaration\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                // Pattern matches path\n                const result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n                if (result) {\n                    return result;\n                }\n            }\n\n            return null!;\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n\n        return resultExpression;\n    }\n\n    const resultExpression: ParsedStringPattern = function (path: string, basename: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | Promise<string> {\n        let name: string = null!;\n\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!basename) {\n                    basename = paths.basename(path);\n                }\n                if (!name) {\n                    name = basename.substring(0, basename.length - paths.extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, basename, name, hasSibling!);\n            if (result) {\n                return result;\n            }\n        }\n\n        return null!;\n    };\n\n    const withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n    }\n\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n\n    return resultExpression;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseExpressionPattern(pattern: string, value: any, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = (<SiblingClause>value).when;\n        if (typeof when === 'string') {\n            const result: ParsedExpressionPattern = (path: string, basename: string, name: string, hasSibling: (name: string) => boolean | Promise<boolean>) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null!;\n                }\n\n                const clausePattern = when.replace('$(basename)', name);\n                const matched = hasSibling(clausePattern);\n                return matched instanceof Promise ?\n                    matched.then(m => m ? pattern : null!) :\n                    matched ? pattern : null!;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n\n    // Expression is Anything\n    return parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: (ParsedStringPattern | ParsedExpressionPattern)[], result?: string): (ParsedStringPattern | ParsedExpressionPattern)[] {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n\n    const basenames = basenamePatterns.reduce<string[]>((all, current) => all.concat((<ParsedStringPattern>current).basenames!), []);\n    let patterns: string[];\n    if (result) {\n        patterns = [];\n        // tslint:disable-next-line:one-variable-per-declaration\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    } else {\n        patterns = basenamePatterns.reduce((all, current) => all.concat((<ParsedStringPattern>current).patterns!), <string[]>[]);\n    }\n    const aggregate: ParsedStringPattern = function (path, basename): string {\n        if (!path) {\n            return null!;\n        }\n        if (!basename) {\n            let i: number;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === CharCode.Slash || ch === CharCode.Backslash) {\n                    break;\n                }\n            }\n            basename = path.substring(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null!;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// Here we expose types from @theia/plugin, so it becomes a direct dependency\nexport * from './plugin-protocol';\nexport * from './plugin-api-rpc';\nexport * from './plugin-ext-api-contribution';\n\nimport { registerMsgPackExtensions } from './rpc-protocol';\n\nregisterMsgPackExtensions();\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { RawColorInfo } from '../../common/plugin-api-rpc';\nimport { ColorPresentation } from '../../common/plugin-api-rpc-model';\n\nexport class ColorProviderAdapter {\n\n    constructor(\n        private documents: DocumentsExtImpl,\n        private provider: theia.DocumentColorProvider\n    ) { }\n\n    provideColors(resource: URI, token: theia.CancellationToken): Promise<RawColorInfo[]> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n\n        return Promise.resolve(\n            this.provider.provideDocumentColors(doc, token)\n        ).then(colors => {\n            if (!Array.isArray(colors)) {\n                return [];\n            }\n\n            const colorInfos: RawColorInfo[] = colors.map(colorInfo => ({\n                color: Converter.fromColor(colorInfo.color),\n                range: Converter.fromRange(colorInfo.range)!\n            }));\n\n            return colorInfos;\n        });\n    }\n\n    provideColorPresentations(resource: URI, raw: RawColorInfo, token: theia.CancellationToken): Promise<ColorPresentation[]> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There are no document for ${resource}`));\n        }\n\n        const doc = document.document;\n        const range = Converter.toRange(raw.range);\n        const color = Converter.toColor(raw.color);\n        return Promise.resolve(\n            this.provider.provideColorPresentations(color, { document: doc, range: range }, token)\n        ).then(value => {\n            if (!Array.isArray(value)) {\n                return [];\n            }\n\n            return value.map(Converter.fromColorPresentation);\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n// copied from https://github.com/microsoft/vscode/blob/1.37.0/src/vs/workbench/api/common/extHostTypes.ts\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable no-null/no-null */\n\nimport { UUID } from '@theia/core/shared/@lumino/coreutils';\nimport { illegalArgument } from '../common/errors';\nimport type * as theia from '@theia/plugin';\nimport { URI as CodeURI, UriComponents } from '@theia/core/shared/vscode-uri';\nimport { relative } from '../common/paths-util';\nimport { startsWithIgnoreCase } from '@theia/core/lib/common/strings';\nimport { SymbolKind } from '../common/plugin-api-rpc-model';\nimport { FileSystemProviderErrorCode, markAsFileSystemProviderError } from '@theia/filesystem/lib/common/files';\nimport * as paths from 'path';\nimport { es5ClassCompat } from '../common/types';\nimport { isObject, isStringArray } from '@theia/core/lib/common';\nimport { CellEditType, CellMetadataEdit, NotebookDocumentMetadataEdit } from '@theia/notebook/lib/common';\n\n/**\n * This is an implementation of #theia.Uri based on vscode-uri.\n * This is supposed to fix https://github.com/eclipse-theia/theia/issues/8752\n * We cannot simply upgrade the dependency, because the current version 3.x\n * is not compatible with our current codebase\n */\n@es5ClassCompat\nexport class URI extends CodeURI implements theia.Uri {\n    protected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n    protected constructor(components: UriComponents);\n    protected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n        if (typeof schemeOrData === 'string') {\n            super(schemeOrData, authority, path, query, fragment, _strict);\n        } else {\n            super(schemeOrData);\n        }\n    }\n\n    /**\n     * Override to create the correct class.\n     */\n    override with(change: {\n        scheme?: string;\n        authority?: string | null;\n        path?: string | null;\n        query?: string | null;\n        fragment?: string | null;\n    }): URI {\n        return new URI(super.with(change));\n    }\n\n    static joinPath(uri: URI, ...pathSegments: string[]): URI {\n        if (!uri.path) {\n            throw new Error('\\'joinPath\\' called on URI without path');\n        }\n        const newPath = paths.posix.join(uri.path, ...pathSegments);\n        return new URI(uri.scheme, uri.authority, newPath, uri.query, uri.fragment);\n    }\n\n    /**\n     * Override to create the correct class.\n     * @param data\n     */\n    static override revive(data: UriComponents | CodeURI): URI;\n    static override revive(data: UriComponents | CodeURI | null): URI | null;\n    static override revive(data: UriComponents | CodeURI | undefined): URI | undefined;\n    static override revive(data: UriComponents | CodeURI | undefined | null): URI | undefined | null {\n        const uri = CodeURI.revive(data);\n        return uri ? new URI(uri) : undefined;\n    }\n\n    static override parse(value: string, _strict?: boolean): URI {\n        return new URI(CodeURI.parse(value, _strict));\n    }\n\n    static override file(path: string): URI {\n        return new URI(CodeURI.file(path));\n    }\n\n    /**\n     * There is quite some magic in to vscode URI class related to\n     * transferring via JSON.stringify(). Making the CodeURI instance\n     * makes sure we transfer this object as a vscode-uri URI.\n     */\n    override toJSON(): UriComponents {\n        return CodeURI.from(this).toJSON();\n    }\n}\n\n@es5ClassCompat\nexport class Disposable {\n    private disposable: undefined | (() => void);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from(...disposables: { dispose(): any }[]): Disposable {\n        return new Disposable(() => {\n            if (disposables) {\n                for (const disposable of disposables) {\n                    if (disposable && typeof disposable.dispose === 'function') {\n                        disposable.dispose();\n                    }\n                }\n            }\n        });\n    }\n\n    constructor(func: () => void) {\n        this.disposable = func;\n    }\n    /**\n     * Dispose this object.\n     */\n    dispose(): void {\n        if (this.disposable) {\n            this.disposable();\n            this.disposable = undefined;\n        }\n    }\n\n    static create(func: () => void): Disposable {\n        return new Disposable(func);\n    }\n\n    static NULL: Disposable;\n}\n\nexport interface AccessibilityInformation {\n    label: string;\n    role?: string;\n}\n\nexport enum StatusBarAlignment {\n    Left = 1,\n    Right = 2\n}\n\nexport enum TextEditorLineNumbersStyle {\n    Off = 0,\n    On = 1,\n    Relative = 2,\n    Interval = 3\n}\n\n/**\n * Denotes a column in the editor window.\n * Columns are used to show editors side by side.\n */\nexport enum ViewColumn {\n    Active = -1,\n    Beside = -2,\n    One = 1,\n    Two = 2,\n    Three = 3,\n    Four = 4,\n    Five = 5,\n    Six = 6,\n    Seven = 7,\n    Eight = 8,\n    Nine = 9\n}\n\n/**\n * Represents a color theme kind.\n */\nexport enum ColorThemeKind {\n    Light = 1,\n    Dark = 2,\n    HighContrast = 3,\n    HighContrastLight = 4\n}\n\nexport enum ExtensionMode {\n    /**\n     * The extension is installed normally (for example, from the marketplace\n     * or VSIX) in the editor.\n     */\n    Production = 1,\n\n    /**\n     * The extension is running from an `--extensionDevelopmentPath` provided\n     * when launching the editor.\n     */\n    Development = 2,\n\n    /**\n     * The extension is running from an `--extensionTestsPath` and\n     * the extension host is running unit tests.\n     */\n    Test = 3,\n}\n\nexport enum ExtensionKind {\n    UI = 1,\n    Workspace = 2\n}\n\n/**\n * Represents the validation type of the Source Control input.\n */\nexport enum SourceControlInputBoxValidationType {\n\n    /**\n     * Something not allowed by the rules of a language or other means.\n     */\n    Error = 0,\n\n    /**\n     * Something suspicious but allowed.\n     */\n    Warning = 1,\n\n    /**\n     * Something to inform about but not a problem.\n     */\n    Information = 2\n}\n\nexport enum ExternalUriOpenerPriority {\n    None = 0,\n    Option = 1,\n    Default = 2,\n    Preferred = 3,\n}\n\n@es5ClassCompat\nexport class ColorTheme implements theia.ColorTheme {\n    constructor(public readonly kind: ColorThemeKind) { }\n}\n\n/**\n * Represents sources that can cause `window.onDidChangeEditorSelection`\n */\nexport enum TextEditorSelectionChangeKind {\n    Keyboard = 1,\n\n    Mouse = 2,\n\n    Command = 3\n}\n\nexport namespace TextEditorSelectionChangeKind {\n    export function fromValue(s: string | undefined): TextEditorSelectionChangeKind | undefined {\n        switch (s) {\n            case 'keyboard': return TextEditorSelectionChangeKind.Keyboard;\n            case 'mouse': return TextEditorSelectionChangeKind.Mouse;\n            case 'api': return TextEditorSelectionChangeKind.Command;\n        }\n        return undefined;\n    }\n}\n\nexport enum TextDocumentChangeReason {\n    Undo = 1,\n    Redo = 2,\n}\n\n@es5ClassCompat\nexport class Position {\n    private _line: number;\n    private _character: number;\n    constructor(line: number, char: number) {\n        if (line < 0) {\n            throw new Error('line number cannot be negative');\n        }\n        if (char < 0) {\n            throw new Error('char number cannot be negative');\n        }\n        this._line = line;\n        this._character = char;\n    }\n\n    get line(): number {\n        return this._line;\n    }\n\n    get character(): number {\n        return this._character;\n    }\n\n    isBefore(other: Position): boolean {\n        if (this._line < other._line) {\n            return true;\n        }\n        if (other._line < this._line) {\n            return false;\n        }\n        return this._character < other._character;\n    }\n\n    isBeforeOrEqual(other: Position): boolean {\n        if (this._line < other._line) {\n            return true;\n        }\n        if (other._line < this._line) {\n            return false;\n        }\n        return this._character <= other._character;\n    }\n\n    isAfter(other: Position): boolean {\n        return !this.isBeforeOrEqual(other);\n    }\n\n    isAfterOrEqual(other: Position): boolean {\n        return !this.isBefore(other);\n    }\n\n    isEqual(other: Position): boolean {\n        return this._line === other._line && this._character === other._character;\n    }\n\n    compareTo(other: Position): number {\n        if (this._line < other._line) {\n            return -1;\n        } else if (this._line > other.line) {\n            return 1;\n        } else {\n            // equal line\n            if (this._character < other._character) {\n                return -1;\n            } else if (this._character > other._character) {\n                return 1;\n            } else {\n                // equal line and character\n                return 0;\n            }\n        }\n    }\n\n    translate(change: { lineDelta?: number; characterDelta?: number; }): Position;\n    translate(lineDelta?: number, characterDelta?: number): Position;\n    translate(lineDeltaOrChange: number | { lineDelta?: number; characterDelta?: number; } | undefined, characterDelta: number = 0): Position {\n\n        if (lineDeltaOrChange === null || characterDelta === null) {\n            throw illegalArgument();\n        }\n\n        let lineDelta: number;\n        if (typeof lineDeltaOrChange === 'undefined') {\n            lineDelta = 0;\n        } else if (typeof lineDeltaOrChange === 'number') {\n            lineDelta = lineDeltaOrChange;\n        } else {\n            lineDelta = typeof lineDeltaOrChange.lineDelta === 'number' ? lineDeltaOrChange.lineDelta : 0;\n            characterDelta = typeof lineDeltaOrChange.characterDelta === 'number' ? lineDeltaOrChange.characterDelta : 0;\n        }\n\n        if (lineDelta === 0 && characterDelta === 0) {\n            return this;\n        }\n        return new Position(this.line + lineDelta, this.character + characterDelta);\n    }\n\n    with(change: { line?: number; character?: number; }): Position;\n    with(line?: number, character?: number): Position;\n    with(lineOrChange: number | { line?: number; character?: number; } | undefined, character: number = this.character): Position {\n\n        if (lineOrChange === null || character === null) {\n            throw illegalArgument();\n        }\n\n        let line: number;\n        if (typeof lineOrChange === 'undefined') {\n            line = this.line;\n\n        } else if (typeof lineOrChange === 'number') {\n            line = lineOrChange;\n\n        } else {\n            line = typeof lineOrChange.line === 'number' ? lineOrChange.line : this.line;\n            character = typeof lineOrChange.character === 'number' ? lineOrChange.character : this.character;\n        }\n\n        if (line === this.line && character === this.character) {\n            return this;\n        }\n        return new Position(line, character);\n    }\n\n    static Min(...positions: Position[]): Position {\n        let result = positions.pop();\n        for (const p of positions) {\n            if (p.isBefore(result!)) {\n                result = p;\n            }\n        }\n        return result!;\n    }\n\n    static Max(...positions: Position[]): Position {\n        let result = positions.pop();\n        for (const p of positions) {\n            if (p.isAfter(result!)) {\n                result = p;\n            }\n        }\n        return result!;\n    }\n\n    static isPosition(other: unknown): other is Position {\n        if (!other) {\n            return false;\n        }\n        if (typeof other !== 'object' || Array.isArray(other)) {\n            return false;\n        }\n        if (other instanceof Position) {\n            return true;\n        }\n        const { line, character } = <Position>other;\n        if (typeof line === 'number' && typeof character === 'number') {\n            return true;\n        }\n        return false;\n    }\n\n    toJSON(): unknown {\n        return { line: this.line, character: this.character };\n    }\n}\n\n@es5ClassCompat\nexport class Range {\n    protected _start: Position;\n    protected _end: Position;\n\n    constructor(start: Position, end: Position);\n    constructor(startLine: number, startColumn: number, endLine: number, endColumn: number);\n    constructor(startLineOrStart: number | Position, startColumnOrEnd: number | Position, endLine?: number, endColumn?: number) {\n        let start: Position | undefined = undefined;\n        let end: Position | undefined = undefined;\n\n        if (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\n            start = new Position(startLineOrStart, startColumnOrEnd);\n            end = new Position(endLine, endColumn);\n        } else if (startLineOrStart instanceof Position && startColumnOrEnd instanceof Position) {\n            start = startLineOrStart;\n            end = startColumnOrEnd;\n        }\n\n        if (!start || !end) {\n            throw new Error('Invalid arguments');\n        }\n\n        if (start.isBefore(end)) {\n            this._start = start;\n            this._end = end;\n        } else {\n            this._start = end;\n            this._end = start;\n        }\n    }\n\n    get start(): Position {\n        return this._start;\n    }\n\n    get end(): Position {\n        return this._end;\n    }\n\n    contains(positionOrRange: Position | Range): boolean {\n        if (positionOrRange instanceof Range) {\n            return this.contains(positionOrRange._start)\n                && this.contains(positionOrRange._end);\n\n        } else if (positionOrRange instanceof Position) {\n            if (positionOrRange.isBefore(this._start)) {\n                return false;\n            }\n            if (this._end.isBefore(positionOrRange)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEqual(other: Range): boolean {\n        return this._start.isEqual(other._start) && this._end.isEqual(other._end);\n    }\n\n    intersection(other: Range): Range | undefined {\n        const start = Position.Max(other.start, this._start);\n        const end = Position.Min(other.end, this._end);\n        if (start.isAfter(end)) {\n            // this happens when there is no overlap:\n            // |-----|\n            //          |----|\n            return undefined;\n        }\n        return new Range(start, end);\n    }\n\n    union(other: Range): Range {\n        if (this.contains(other)) {\n            return this;\n        } else if (other.contains(this)) {\n            return other;\n        }\n        const start = Position.Min(other.start, this._start);\n        const end = Position.Max(other.end, this.end);\n        return new Range(start, end);\n    }\n\n    get isEmpty(): boolean {\n        return this._start.isEqual(this._end);\n    }\n\n    get isSingleLine(): boolean {\n        return this._start.line === this._end.line;\n    }\n\n    with(change: { start?: Position, end?: Position }): Range;\n    with(start?: Position, end?: Position): Range;\n    with(startOrChange: Position | { start?: Position, end?: Position } | undefined, end: Position = this.end): Range {\n\n        if (startOrChange === null || end === null) {\n            throw illegalArgument();\n        }\n\n        let start: Position;\n        if (!startOrChange) {\n            start = this.start;\n\n        } else if (Position.isPosition(startOrChange)) {\n            start = startOrChange;\n\n        } else {\n            start = startOrChange.start || this.start;\n            end = startOrChange.end || this.end;\n        }\n\n        if (start.isEqual(this._start) && end.isEqual(this.end)) {\n            return this;\n        }\n        return new Range(start, end);\n    }\n\n    static isRange(arg: unknown): arg is theia.Range {\n        if (arg instanceof Range) {\n            return true;\n        }\n        return isObject<theia.Range>(arg)\n            && Position.isPosition(arg.start)\n            && Position.isPosition(arg.end);\n    }\n\n    toJSON(): unknown {\n        return [this.start, this.end];\n    }\n}\n\n@es5ClassCompat\nexport class Selection extends Range {\n    private _anchor: Position;\n    private _active: Position;\n    constructor(anchor: Position, active: Position);\n    constructor(anchorLine: number, anchorColumn: number, activeLine: number, activeColumn: number);\n    constructor(anchorLineOrAnchor: number | Position, anchorColumnOrActive: number | Position, activeLine?: number, activeColumn?: number) {\n        let anchor: Position | undefined = undefined;\n        let active: Position | undefined = undefined;\n\n        if (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\n            anchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\n            active = new Position(activeLine, activeColumn);\n        } else if (anchorLineOrAnchor instanceof Position && anchorColumnOrActive instanceof Position) {\n            anchor = anchorLineOrAnchor;\n            active = anchorColumnOrActive;\n        }\n\n        if (!anchor || !active) {\n            throw new Error('Invalid arguments');\n        }\n\n        super(anchor, active);\n\n        this._anchor = anchor;\n        this._active = active;\n    }\n\n    get active(): Position {\n        return this._active;\n    }\n\n    get anchor(): Position {\n        return this._anchor;\n    }\n\n    get isReversed(): boolean {\n        return this._anchor === this._end;\n    }\n}\n\nexport namespace TextDocumentShowOptions {\n    /**\n     * @param candidate\n     * @returns `true` if `candidate` is an instance of options that includes a selection.\n     * This function should be used to determine whether TextDocumentOptions passed into commands by plugins\n     * need to be translated to TextDocumentShowOptions in the style of the RPC model. Selection is the only field that requires translation.\n     */\n    export function isTextDocumentShowOptions(candidate: unknown): candidate is theia.TextDocumentShowOptions {\n        if (!candidate) {\n            return false;\n        }\n        const options = candidate as theia.TextDocumentShowOptions;\n        return Range.isRange(options.selection);\n    }\n}\n\nexport enum EndOfLine {\n    LF = 1,\n    CRLF = 2\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\n@es5ClassCompat\nexport class SnippetString {\n\n    static isSnippetString(thing: {}): thing is SnippetString {\n        if (thing instanceof SnippetString) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<SnippetString>thing).value === 'string';\n    }\n\n    private static _escape(value: string): string {\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\n    }\n\n    private _tabstop: number = 1;\n\n    value: string;\n\n    constructor(value?: string) {\n        this.value = value || '';\n    }\n\n    appendText(string: string): SnippetString {\n        this.value += SnippetString._escape(string);\n        return this;\n    }\n\n    appendTabstop(number: number = this._tabstop++): SnippetString {\n        this.value += '$';\n        this.value += number;\n        return this;\n    }\n\n    appendPlaceholder(value: string | ((snippet: SnippetString) => void), number: number = this._tabstop++): SnippetString {\n\n        if (typeof value === 'function') {\n            const nested = new SnippetString();\n            nested._tabstop = this._tabstop;\n            value(nested);\n            this._tabstop = nested._tabstop;\n            value = nested.value;\n        } else {\n            value = SnippetString._escape(value);\n        }\n\n        this.value += '${';\n        this.value += number;\n        this.value += ':';\n        this.value += value;\n        this.value += '}';\n\n        return this;\n    }\n\n    appendChoice(values: string[], number: number = this._tabstop++): SnippetString {\n        const value = values.map(s => s.replace(/\\$|}|\\\\|,/g, '\\\\$&')).join(',');\n        this.value += `\\$\\{${number}|${value}|\\}`;\n        return this;\n    }\n\n    appendVariable(name: string, defaultValue?: string | ((snippet: SnippetString) => void)): SnippetString {\n\n        if (typeof defaultValue === 'function') {\n            const nested = new SnippetString();\n            nested._tabstop = this._tabstop;\n            defaultValue(nested);\n            this._tabstop = nested._tabstop;\n            defaultValue = nested.value;\n\n        } else if (typeof defaultValue === 'string') {\n            defaultValue = defaultValue.replace(/\\$|}/g, '\\\\$&');\n        }\n\n        this.value += '${';\n        this.value += name;\n        if (defaultValue) {\n            this.value += ':';\n            this.value += defaultValue;\n        }\n        this.value += '}';\n\n        return this;\n    }\n}\n\n@es5ClassCompat\nexport class ThemeColor {\n    constructor(public readonly id: string) { }\n}\n\n@es5ClassCompat\nexport class ThemeIcon {\n\n    static readonly File: ThemeIcon = new ThemeIcon('file');\n\n    static readonly Folder: ThemeIcon = new ThemeIcon('folder');\n\n    private constructor(public id: string, public color?: ThemeColor) {\n    }\n\n}\n\nexport namespace ThemeIcon {\n    export function is(item: unknown): item is ThemeIcon {\n        return isObject(item) && 'id' in item;\n    }\n    export function get(item: unknown): ThemeIcon | undefined {\n        return is(item) ? item : undefined;\n    }\n}\n\nexport enum TextEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\n/**\n * These values match very carefully the values of `TrackedRangeStickiness`\n */\nexport enum DecorationRangeBehavior {\n    /**\n     * TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n     */\n    OpenOpen = 0,\n    /**\n     * TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n     */\n    ClosedClosed = 1,\n    /**\n     * TrackedRangeStickiness.GrowsOnlyWhenTypingBefore\n     */\n    OpenClosed = 2,\n    /**\n     * TrackedRangeStickiness.GrowsOnlyWhenTypingAfter\n     */\n    ClosedOpen = 3\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n    Left = 1,\n    Center = 2,\n    Right = 4,\n    Full = 7\n}\n\nexport enum ConfigurationTarget {\n    Global = 1,\n    Workspace,\n    WorkspaceFolder,\n    Default,\n    Memory\n}\n\n@es5ClassCompat\nexport class RelativePattern {\n\n    private _base!: string;\n    get base(): string {\n        return this._base;\n    }\n    set base(base: string) {\n        this._base = base;\n        this._baseUri = URI.file(base);\n    }\n\n    private _baseUri!: URI;\n    get baseUri(): URI {\n        return this._baseUri;\n    }\n    set baseUri(baseUri: URI) {\n        this._baseUri = baseUri;\n        this.base = baseUri.fsPath;\n    }\n\n    constructor(base: theia.WorkspaceFolder | URI | string, public pattern: string) {\n        if (typeof base !== 'string') {\n            if (!base || !URI.isUri(base) && !URI.isUri(base.uri)) {\n                throw illegalArgument('base');\n            }\n        }\n\n        if (typeof pattern !== 'string') {\n            throw illegalArgument('pattern');\n        }\n\n        if (typeof base === 'string') {\n            this.baseUri = URI.file(base);\n        } else if (URI.isUri(base)) {\n            this.baseUri = base;\n        } else {\n            this.baseUri = base.uri;\n        }\n    }\n\n    pathToRelative(from: string, to: string): string {\n        return relative(from, to);\n    }\n}\n\nexport enum IndentAction {\n    None = 0,\n    Indent = 1,\n    IndentOutdent = 2,\n    Outdent = 3\n}\n\nexport namespace SyntaxTokenType {\n    export function toString(v: SyntaxTokenType | unknown): 'other' | 'comment' | 'string' | 'regex' {\n        switch (v) {\n            case SyntaxTokenType.Other: return 'other';\n            case SyntaxTokenType.Comment: return 'comment';\n            case SyntaxTokenType.String: return 'string';\n            case SyntaxTokenType.RegEx: return 'regex';\n        }\n        return 'other';\n    }\n}\n\nexport enum SyntaxTokenType {\n    /**\n     * Everything except tokens that are part of comments, string literals and regular expressions.\n     */\n    Other = 0,\n    /**\n     * A comment.\n     */\n    Comment = 1,\n    /**\n     * A string literal.\n     */\n    String = 2,\n    /**\n     * A regular expression.\n     */\n    RegEx = 3\n}\n\n@es5ClassCompat\nexport class TextEdit {\n\n    protected _range: Range;\n    protected _newText: string;\n    protected _newEol: EndOfLine | undefined;\n\n    get range(): Range {\n        return this._range;\n    }\n\n    set range(value: Range) {\n        if (value && !Range.isRange(value)) {\n            throw illegalArgument('range');\n        }\n        this._range = value;\n    }\n\n    get newText(): string {\n        return this._newText || '';\n    }\n\n    set newText(value: string) {\n        if (value && typeof value !== 'string') {\n            throw illegalArgument('newText');\n        }\n        this._newText = value;\n    }\n\n    get newEol(): EndOfLine | undefined {\n        return this._newEol;\n    }\n\n    set newEol(value: EndOfLine) {\n        if (value && typeof value !== 'number') {\n            throw illegalArgument('newEol');\n        }\n        this._newEol = value;\n    }\n\n    constructor(range: Range | undefined, newText: string | undefined) {\n        this.range = range!;\n        this.newText = newText!;\n    }\n\n    static isTextEdit(thing: {}): thing is TextEdit {\n        if (thing instanceof TextEdit) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return Range.isRange((<TextEdit>thing).range)\n            && typeof (<TextEdit>thing).newText === 'string';\n    }\n\n    static replace(range: Range, newText: string): TextEdit {\n        return new TextEdit(range, newText);\n    }\n\n    static insert(position: Position, newText: string): TextEdit {\n        return TextEdit.replace(new Range(position, position), newText);\n    }\n\n    static delete(range: Range): TextEdit {\n        return TextEdit.replace(range, '');\n    }\n\n    static setEndOfLine(eol: EndOfLine): TextEdit {\n        const ret = new TextEdit(undefined, undefined);\n        ret.newEol = eol;\n        return ret;\n    }\n}\n\nexport enum CompletionTriggerKind {\n    Invoke = 0,\n    TriggerCharacter = 1,\n    TriggerForIncompleteCompletions = 2\n}\n\nexport enum CompletionItemKind {\n    Text = 0,\n    Method = 1,\n    Function = 2,\n    Constructor = 3,\n    Field = 4,\n    Variable = 5,\n    Class = 6,\n    Interface = 7,\n    Module = 8,\n    Property = 9,\n    Unit = 10,\n    Value = 11,\n    Enum = 12,\n    Keyword = 13,\n    Snippet = 14,\n    Color = 15, // eslint-disable-line @typescript-eslint/no-shadow\n    File = 16,\n    Reference = 17,\n    Folder = 18,\n    EnumMember = 19,\n    Constant = 20,\n    Struct = 21,\n    Event = 22,\n    Operator = 23,\n    TypeParameter = 24,\n    User = 25,\n    Issue = 26\n}\n\n@es5ClassCompat\nexport class CompletionItem implements theia.CompletionItem {\n\n    label: string;\n    kind?: CompletionItemKind;\n    tags?: CompletionItemTag[];\n    detail: string;\n    documentation: string | theia.MarkdownString;\n    sortText: string;\n    filterText: string;\n    preselect: boolean;\n    insertText: string | SnippetString;\n    range: Range;\n    textEdit: TextEdit;\n    additionalTextEdits: TextEdit[];\n    command: theia.Command;\n\n    constructor(label: string, kind?: CompletionItemKind) {\n        this.label = label;\n        this.kind = kind;\n    }\n}\n\n@es5ClassCompat\nexport class CompletionList {\n\n    isIncomplete?: boolean;\n\n    items: theia.CompletionItem[];\n\n    constructor(items: theia.CompletionItem[] = [], isIncomplete: boolean = false) {\n        this.items = items;\n        this.isIncomplete = isIncomplete;\n    }\n}\n\nexport enum InlineCompletionTriggerKind {\n    Invoke = 0,\n    Automatic = 1,\n}\n\n@es5ClassCompat\nexport class InlineCompletionItem implements theia.InlineCompletionItem {\n\n    filterText?: string;\n    insertText: string;\n    range?: Range;\n    command?: theia.Command;\n\n    constructor(insertText: string, range?: Range, command?: theia.Command) {\n        this.insertText = insertText;\n        this.range = range;\n        this.command = command;\n    }\n}\n\n@es5ClassCompat\nexport class InlineCompletionList implements theia.InlineCompletionList {\n\n    items: theia.InlineCompletionItem[];\n    commands: theia.Command[] | undefined = undefined;\n\n    constructor(items: theia.InlineCompletionItem[]) {\n        this.items = items;\n    }\n}\n\nexport enum DiagnosticSeverity {\n    Error = 0,\n    Warning = 1,\n    Information = 2,\n    Hint = 3\n}\n\nexport enum DebugConsoleMode {\n    Separate = 0,\n    MergeWithParent = 1\n}\n\n@es5ClassCompat\nexport class Location {\n    uri: URI;\n    range: Range;\n\n    constructor(uri: URI, rangeOrPosition: Range | Position | undefined) {\n        this.uri = uri;\n        if (rangeOrPosition instanceof Range) {\n            this.range = rangeOrPosition;\n        } else if (rangeOrPosition instanceof Position) {\n            this.range = new Range(rangeOrPosition, rangeOrPosition);\n        }\n    }\n\n    static isLocation(thing: {}): thing is theia.Location {\n        if (thing instanceof Location) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return Range.isRange((<Location>thing).range)\n            && URI.isUri((<Location>thing).uri);\n    }\n}\n\n@es5ClassCompat\nexport class DiagnosticRelatedInformation {\n    location: Location;\n    message: string;\n\n    constructor(location: Location, message: string) {\n        this.location = location;\n        this.message = message;\n    }\n}\n\nexport enum DiagnosticTag {\n    Unnecessary = 1,\n    Deprecated = 2,\n}\n\nexport enum CompletionItemTag {\n    Deprecated = 1,\n}\n\n@es5ClassCompat\nexport class Diagnostic {\n    range: Range;\n    message: string;\n    severity: DiagnosticSeverity;\n    source?: string;\n    code?: string | number;\n    relatedInformation?: DiagnosticRelatedInformation[];\n    tags?: DiagnosticTag[];\n\n    constructor(range: Range, message: string, severity: DiagnosticSeverity = DiagnosticSeverity.Error) {\n        this.range = range;\n        this.message = message;\n        this.severity = severity;\n    }\n}\n\nexport enum MarkerSeverity {\n    Hint = 1,\n    Info = 2,\n    Warning = 4,\n    Error = 8,\n}\n\nexport enum MarkerTag {\n    Unnecessary = 1,\n    Deprecated = 2,\n}\n\nexport enum NotebookCellKind {\n    Markup = 1,\n    Code = 2\n}\n\nexport enum NotebookCellStatusBarAlignment {\n    Left = 1,\n    Right = 2\n}\n\nexport enum NotebookControllerAffinity {\n    Default = 1,\n    Preferred = 2\n}\n\nexport enum NotebookEditorRevealType {\n    Default = 0,\n    InCenter = 1,\n    InCenterIfOutsideViewport = 2,\n    AtTop = 3\n}\n\nexport enum NotebookCellExecutionState {\n    /**\n     * The cell is idle.\n     */\n    Idle = 1,\n    /**\n     * Execution for the cell is pending.\n     */\n    Pending = 2,\n    /**\n     * The cell is currently executing.\n     */\n    Executing = 3,\n}\n\nexport class NotebookKernelSourceAction {\n    description?: string;\n    detail?: string;\n    command?: theia.Command;\n    constructor(\n        public label: string\n    ) { }\n}\n\n@es5ClassCompat\nexport class NotebookCellData implements theia.NotebookCellData {\n    languageId: string;\n    kind: NotebookCellKind;\n    value: string;\n    outputs?: theia.NotebookCellOutput[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: { [key: string]: any };\n    executionSummary?: theia.NotebookCellExecutionSummary;\n\n    constructor(kind: NotebookCellKind, value: string, languageId: string,\n        outputs?: theia.NotebookCellOutput[], metadata?: Record<string, unknown>, executionSummary?: theia.NotebookCellExecutionSummary) {\n        this.kind = kind;\n        this.value = value;\n        this.languageId = languageId;\n        this.outputs = outputs ?? [];\n        this.metadata = metadata;\n        this.executionSummary = executionSummary;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookCellOutput implements theia.NotebookCellOutput {\n    outputId: string;\n    items: theia.NotebookCellOutputItem[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: { [key: string]: any };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(items: theia.NotebookCellOutputItem[], idOrMetadata?: string | Record<string, any>, metadata?: { [key: string]: any }) {\n        this.items = items;\n        if (typeof idOrMetadata === 'string') {\n            this.outputId = idOrMetadata;\n            this.metadata = metadata;\n        } else {\n            this.outputId = UUID.uuid4();\n            this.metadata = idOrMetadata ?? metadata;\n        }\n    }\n}\n\nexport class NotebookCellOutputItem implements theia.NotebookCellOutputItem {\n    mime: string;\n    data: Uint8Array;\n\n    static #encoder = new TextEncoder();\n\n    static text(value: string, mime?: string): NotebookCellOutputItem {\n        const bytes = NotebookCellOutputItem.#encoder.encode(String(value));\n        return new NotebookCellOutputItem(bytes, mime || 'text/plain');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static json(value: any, mime?: string): NotebookCellOutputItem {\n        const jsonStr = JSON.stringify(value, undefined, '\\t');\n        return NotebookCellOutputItem.text(jsonStr, mime);\n    }\n\n    static stdout(value: string): NotebookCellOutputItem {\n        return NotebookCellOutputItem.text(value, 'application/vnd.code.notebook.stdout');\n    }\n\n    static stderr(value: string): NotebookCellOutputItem {\n        return NotebookCellOutputItem.text(value, 'application/vnd.code.notebook.stderr');\n    }\n\n    static error(value: Error): NotebookCellOutputItem {\n        return NotebookCellOutputItem.json(value, 'application/vnd.code.notebook.error');\n    }\n\n    constructor(data: Uint8Array, mime: string) {\n        this.data = data;\n        this.mime = mime;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookCellStatusBarItem implements theia.NotebookCellStatusBarItem {\n    text: string;\n    alignment: NotebookCellStatusBarAlignment;\n    command?: string | theia.Command;\n    tooltip?: string;\n    priority?: number;\n    accessibilityInformation?: AccessibilityInformation;\n\n    /**\n     * Creates a new NotebookCellStatusBarItem.\n     * @param text The text to show for the item.\n     * @param alignment Whether the item is aligned to the left or right.\n     * @stubbed\n     */\n    constructor(text: string, alignment: NotebookCellStatusBarAlignment) {\n        this.text = text;\n        this.alignment = alignment;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookData implements theia.NotebookData {\n    cells: NotebookCellData[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata?: { [key: string]: any };\n\n    constructor(cells: NotebookCellData[]) {\n        this.cells = cells;\n    }\n}\n\nexport class NotebookRange implements theia.NotebookRange {\n    static isNotebookRange(thing: unknown): thing is theia.NotebookRange {\n        if (thing instanceof NotebookRange) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<NotebookRange>thing).start === 'number'\n            && typeof (<NotebookRange>thing).end === 'number';\n    }\n\n    readonly start: number;\n    readonly end: number;\n    readonly isEmpty: boolean;\n\n    with(change: { start?: number; end?: number }): NotebookRange {\n        let newStart = this.start;\n        let newEnd = this.end;\n\n        if (change.start !== undefined) {\n            newStart = change.start;\n        }\n        if (change.end !== undefined) {\n            newEnd = change.end;\n        }\n        if (newStart === this.start && newEnd === this.end) {\n            return this;\n        }\n        return new NotebookRange(newStart, newEnd);\n    }\n\n    constructor(start: number, end: number) {\n        this.start = start;\n        this.end = end;\n    }\n\n}\n\nexport class SnippetTextEdit implements theia.SnippetTextEdit {\n    range: Range;\n    snippet: SnippetString;\n    keepWhitespace?: boolean;\n\n    static isSnippetTextEdit(thing: unknown): thing is SnippetTextEdit {\n        return thing instanceof SnippetTextEdit || isObject<SnippetTextEdit>(thing)\n            && Range.isRange((<SnippetTextEdit>thing).range)\n            && SnippetString.isSnippetString((<SnippetTextEdit>thing).snippet);\n    }\n\n    static replace(range: Range, snippet: SnippetString): SnippetTextEdit {\n        return new SnippetTextEdit(range, snippet);\n    }\n\n    static insert(position: Position, snippet: SnippetString): SnippetTextEdit {\n        return SnippetTextEdit.replace(new Range(position, position), snippet);\n    }\n\n    constructor(range: Range, snippet: SnippetString) {\n        this.range = range;\n        this.snippet = snippet;\n    }\n}\n\n@es5ClassCompat\nexport class NotebookEdit implements theia.NotebookEdit {\n    range: theia.NotebookRange;\n    newCells: theia.NotebookCellData[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newCellMetadata?: { [key: string]: any; } | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newNotebookMetadata?: { [key: string]: any; } | undefined;\n\n    static isNotebookCellEdit(thing: unknown): thing is NotebookEdit {\n        if (thing instanceof NotebookEdit) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return NotebookRange.isNotebookRange((<NotebookEdit>thing))\n            && Array.isArray((<NotebookEdit>thing).newCells);\n    }\n\n    static replaceCells(range: NotebookRange, newCells: NotebookCellData[]): NotebookEdit {\n        return new NotebookEdit(range, newCells);\n    }\n\n    static insertCells(index: number, newCells: NotebookCellData[]): NotebookEdit {\n        return new NotebookEdit(new NotebookRange(index, index), newCells);\n    }\n\n    static deleteCells(range: NotebookRange): NotebookEdit {\n        return new NotebookEdit(range, []);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static updateCellMetadata(index: number, newCellMetadata: { [key: string]: any }): NotebookEdit {\n        return new NotebookEdit(new NotebookRange(index, index), [], newCellMetadata);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static updateNotebookMetadata(newNotebookMetadata: { [key: string]: any }): NotebookEdit {\n        return new NotebookEdit(new NotebookRange(0, 0), [], undefined, newNotebookMetadata);\n    }\n\n    constructor(range: NotebookRange, newCells: NotebookCellData[], newCellMetadata?: { [key: string]: unknown }, newNotebookMetadata?: { [key: string]: unknown }) {\n        this.range = range;\n        this.newCells = newCells;\n        this.newCellMetadata = newCellMetadata;\n        this.newNotebookMetadata = newNotebookMetadata;\n    }\n\n}\n\nexport class NotebookRendererScript implements theia.NotebookRendererScript {\n    provides: readonly string[];\n\n    constructor(\n        public uri: theia.Uri,\n        provides?: string | readonly string[]\n    ) {\n        this.provides = Array.isArray(provides) ? provides : [provides];\n    };\n\n}\n\n@es5ClassCompat\nexport class ParameterInformation {\n    label: string | [number, number];\n    documentation?: string | theia.MarkdownString;\n\n    constructor(label: string | [number, number], documentation?: string | theia.MarkdownString) {\n        this.label = label;\n        this.documentation = documentation;\n    }\n}\n\n@es5ClassCompat\nexport class SignatureInformation {\n    label: string;\n    documentation?: string | theia.MarkdownString;\n    parameters: ParameterInformation[];\n    activeParameter?: number;\n\n    constructor(label: string, documentation?: string | theia.MarkdownString) {\n        this.label = label;\n        this.documentation = documentation;\n        this.parameters = [];\n    }\n}\n\nexport enum SignatureHelpTriggerKind {\n    Invoke = 1,\n    TriggerCharacter = 2,\n    ContentChange = 3,\n}\n\n@es5ClassCompat\nexport class SignatureHelp {\n    signatures: SignatureInformation[];\n    activeSignature: number;\n    activeParameter: number;\n\n    constructor() {\n        this.signatures = [];\n    }\n}\n\n@es5ClassCompat\nexport class Hover {\n\n    public contents: Array<theia.MarkdownString | theia.MarkedString>;\n    public range?: Range;\n\n    constructor(\n        contents: theia.MarkdownString | theia.MarkedString | Array<theia.MarkdownString | theia.MarkedString>,\n        range?: Range\n    ) {\n        if (!contents) {\n            illegalArgument('contents must be defined');\n        }\n        if (Array.isArray(contents)) {\n            this.contents = contents;\n        } else {\n            this.contents = [contents];\n        }\n        this.range = range;\n    }\n}\n\n@es5ClassCompat\nexport class EvaluatableExpression {\n\n    public range: Range;\n    public expression?: string;\n\n    constructor(\n        range: Range,\n        expression?: string\n    ) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        this.range = range;\n        this.expression = expression;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueContext implements theia.InlineValueContext {\n    public frameId: number;\n    public stoppedLocation: Range;\n\n    constructor(frameId: number, stoppedLocation: Range) {\n        if (!frameId) {\n            illegalArgument('frameId must be defined');\n        }\n        if (!stoppedLocation) {\n            illegalArgument('stoppedLocation must be defined');\n        }\n        this.frameId = frameId;\n        this.stoppedLocation = stoppedLocation;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueText implements theia.InlineValueText {\n    public type = 'text';\n    public range: Range;\n    public text: string;\n\n    constructor(range: Range, text: string) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        if (!text) {\n            illegalArgument('text must be defined');\n        }\n        this.range = range;\n        this.text = text;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueVariableLookup implements theia.InlineValueVariableLookup {\n    public type = 'variable';\n    public range: Range;\n    public variableName?: string;\n    public caseSensitiveLookup: boolean;\n\n    constructor(range: Range, variableName?: string, caseSensitiveLookup?: boolean) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        this.range = range;\n        this.caseSensitiveLookup = caseSensitiveLookup || true;\n        this.variableName = variableName;\n    }\n}\n\n@es5ClassCompat\nexport class InlineValueEvaluatableExpression implements theia.InlineValueEvaluatableExpression {\n    public type = 'expression';\n    public range: Range;\n    public expression?: string;\n\n    constructor(range: Range, expression?: string) {\n        if (!range) {\n            illegalArgument('range must be defined');\n        }\n        this.range = range;\n        this.expression = expression;\n    }\n}\n\nexport type InlineValue = InlineValueText | InlineValueVariableLookup | InlineValueEvaluatableExpression;\n\nexport enum DocumentHighlightKind {\n    Text = 0,\n    Read = 1,\n    Write = 2\n}\n\n@es5ClassCompat\nexport class DocumentHighlight {\n\n    public range: Range;\n    public kind?: DocumentHighlightKind;\n\n    constructor(\n        range: Range,\n        kind?: DocumentHighlightKind\n    ) {\n        this.range = range;\n        this.kind = kind;\n    }\n}\n\n@es5ClassCompat\nexport class MultiDocumentHighlight {\n\n    /**\n     * The URI of the document containing the highlights.\n     */\n    uri: URI;\n\n    /**\n     * The highlights for the document.\n     */\n    highlights: DocumentHighlight[];\n\n    /**\n     * Creates a new instance of MultiDocumentHighlight.\n     * @param uri The URI of the document containing the highlights.\n     * @param highlights The highlights for the document.\n     */\n    constructor(uri: URI, highlights: DocumentHighlight[]) {\n        this.uri = uri;\n        this.highlights = highlights;\n    }\n}\n\nexport type Definition = Location | Location[];\n\n@es5ClassCompat\nexport class DocumentLink {\n\n    range: Range;\n\n    target?: URI;\n\n    tooltip?: string;\n\n    constructor(range: Range, target: URI | undefined) {\n        if (target && !(URI.isUri(target))) {\n            throw illegalArgument('target');\n        }\n        if (!Range.isRange(range) || range.isEmpty) {\n            throw illegalArgument('range');\n        }\n        this.range = range;\n        this.target = target;\n    }\n}\n\n@es5ClassCompat\nexport class DocumentDropOrPasteEditKind {\n    static readonly Empty: DocumentDropOrPasteEditKind = new DocumentDropOrPasteEditKind('');\n    static readonly Text: DocumentDropOrPasteEditKind = new DocumentDropOrPasteEditKind('text');\n    static readonly TextUpdateImports: DocumentDropOrPasteEditKind = new DocumentDropOrPasteEditKind('updateImports');\n\n    private static sep = '.';\n\n    constructor(\n        public readonly value: string\n    ) { }\n\n    public append(...parts: string[]): DocumentDropOrPasteEditKind {\n        return new DocumentDropOrPasteEditKind((this.value ? [this.value, ...parts] : parts).join(DocumentDropOrPasteEditKind.sep));\n    }\n\n    public intersects(other: DocumentDropOrPasteEditKind): boolean {\n        return this.contains(other) || other.contains(this);\n    }\n\n    public contains(other: DocumentDropOrPasteEditKind): boolean {\n        return this.value === other.value || other.value.startsWith(this.value + DocumentDropOrPasteEditKind.sep);\n    }\n}\n\n@es5ClassCompat\nexport class DocumentDropEdit {\n    title?: string;\n    kind: DocumentDropOrPasteEditKind;\n    handledMimeType?: string;\n    yieldTo?: ReadonlyArray<DocumentDropOrPasteEditKind>;\n    insertText: string | SnippetString;\n    additionalEdit?: WorkspaceEdit;\n\n    constructor(insertText: string | SnippetString) {\n        this.insertText = insertText;\n    }\n}\n\n@es5ClassCompat\nexport class CodeLens {\n\n    range: Range;\n\n    command?: theia.Command;\n\n    get isResolved(): boolean {\n        return !!this.command;\n    }\n\n    constructor(range: Range, command?: theia.Command) {\n        this.range = range;\n        this.command = command;\n    }\n}\n\nexport enum CodeActionTrigger {\n    Automatic = 1,\n    Manual = 2,\n}\n\n/**\n * The reason why code actions were requested.\n */\nexport enum CodeActionTriggerKind {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    Invoke = 1,\n\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    Automatic = 2,\n}\n\n@es5ClassCompat\nexport class CodeActionKind {\n    private static readonly sep = '.';\n\n    public static readonly Empty = new CodeActionKind('');\n    public static readonly QuickFix = CodeActionKind.Empty.append('quickfix');\n    public static readonly Refactor = CodeActionKind.Empty.append('refactor');\n    public static readonly RefactorExtract = CodeActionKind.Refactor.append('extract');\n    public static readonly RefactorInline = CodeActionKind.Refactor.append('inline');\n    public static readonly RefactorMove = CodeActionKind.Refactor.append('move');\n    public static readonly RefactorRewrite = CodeActionKind.Refactor.append('rewrite');\n    public static readonly Source = CodeActionKind.Empty.append('source');\n    public static readonly SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\n    public static readonly SourceFixAll = CodeActionKind.Source.append('fixAll');\n    public static readonly Notebook = CodeActionKind.Empty.append('notebook');\n\n    constructor(\n        public readonly value: string\n    ) { }\n\n    public append(parts: string): CodeActionKind {\n        return new CodeActionKind(this.value ? this.value + CodeActionKind.sep + parts : parts);\n    }\n\n    public contains(other: CodeActionKind): boolean {\n        return this.value === other.value || startsWithIgnoreCase(other.value, this.value + CodeActionKind.sep);\n    }\n\n    public intersects(other: CodeActionKind): boolean {\n        return this.contains(other) || other.contains(this);\n    }\n}\n\nexport enum TextDocumentSaveReason {\n    Manual = 1,\n    AfterDelay = 2,\n    FocusOut = 3\n}\n\n@es5ClassCompat\nexport class CodeAction {\n    title: string;\n\n    command?: theia.Command;\n\n    edit?: WorkspaceEdit;\n\n    diagnostics?: Diagnostic[];\n\n    kind?: CodeActionKind;\n\n    disabled?: { reason: string };\n\n    isPreferred?: boolean;\n\n    constructor(title: string, kind?: CodeActionKind) {\n        this.title = title;\n        this.kind = kind;\n    }\n}\n\nexport interface FileOperationOptions {\n    overwrite?: boolean;\n    ignoreIfExists?: boolean;\n    ignoreIfNotExists?: boolean;\n    recursive?: boolean;\n}\n\n// copied from https://github.com/microsoft/vscode/blob/b165e20587dd0797f37251515bc9e4dbe513ede8/src/vs/editor/common/modes.ts\nexport interface WorkspaceEditMetadata {\n    needsConfirmation: boolean;\n    label: string;\n    description?: string;\n    iconPath?: {\n        light: URI;\n        dark: URI;\n    } | ThemeIcon;\n}\n\nexport const enum FileEditType {\n    File = 1,\n    Text = 2,\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    Cell = 3,\n    CellReplace = 5,\n    Snippet = 6,\n}\n\nexport interface FileOperation {\n    _type: FileEditType.File;\n    from: URI | undefined;\n    to: URI | undefined;\n    options?: FileOperationOptions;\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface FileTextEdit {\n    _type: FileEditType.Text;\n    uri: URI;\n    edit: TextEdit;\n    metadata?: WorkspaceEditMetadata;\n}\n\nexport interface FileSnippetTextEdit {\n    readonly _type: FileEditType.Snippet;\n    readonly uri: URI;\n    readonly range: Range;\n    readonly edit: SnippetTextEdit;\n    readonly metadata?: theia.WorkspaceEditEntryMetadata;\n}\n\nexport interface FileCellEdit {\n    readonly _type: FileEditType.Cell;\n    readonly uri: URI;\n    readonly edit?: CellMetadataEdit | NotebookDocumentMetadataEdit;\n    readonly notebookMetadata?: Record<string, unknown>;\n    readonly metadata?: theia.WorkspaceEditEntryMetadata;\n}\n\nexport interface CellEdit {\n    readonly _type: FileEditType.CellReplace;\n    readonly metadata?: theia.WorkspaceEditEntryMetadata;\n    readonly uri: URI;\n    readonly index: number;\n    readonly count: number;\n    readonly cells: theia.NotebookCellData[];\n}\n\ntype WorkspaceEditEntry = FileOperation | FileTextEdit | FileSnippetTextEdit | FileCellEdit | CellEdit | undefined;\n\n@es5ClassCompat\nexport class WorkspaceEdit implements theia.WorkspaceEdit {\n\n    private _edits = new Array<WorkspaceEditEntry>();\n\n    renameFile(from: theia.Uri, to: theia.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean }, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 1, from, to, options, metadata });\n    }\n\n    createFile(uri: theia.Uri, options?: { overwrite?: boolean, ignoreIfExists?: boolean }, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 1, from: undefined, to: uri, options, metadata });\n    }\n\n    deleteFile(uri: theia.Uri, options?: { recursive?: boolean, ignoreIfNotExists?: boolean }, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 1, from: uri, to: undefined, options, metadata });\n    }\n\n    replace(uri: URI, range: Range, newText: string, metadata?: WorkspaceEditMetadata): void {\n        this._edits.push({ _type: 2, uri, edit: new TextEdit(range, newText), metadata });\n    }\n\n    insert(resource: URI, position: Position, newText: string, metadata?: WorkspaceEditMetadata): void {\n        this.replace(resource, new Range(position, position), newText, metadata);\n    }\n\n    delete(resource: URI, range: Range, metadata?: WorkspaceEditMetadata): void {\n        this.replace(resource, range, '', metadata);\n    }\n\n    has(uri: URI): boolean {\n        for (const edit of this._edits) {\n            if (edit && edit._type === 2 && edit.uri.toString() === uri.toString()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    set(uri: URI, edits: ReadonlyArray<TextEdit | SnippetTextEdit>): void;\n    set(uri: URI, edits: ReadonlyArray<[TextEdit | SnippetTextEdit, theia.WorkspaceEditEntryMetadata | undefined]>): void;\n    set(uri: URI, edits: ReadonlyArray<NotebookEdit>): void;\n    set(uri: URI, edits: ReadonlyArray<[NotebookEdit, theia.WorkspaceEditEntryMetadata | undefined]>): void;\n\n    set(uri: URI, edits: ReadonlyArray<TextEdit | SnippetTextEdit\n        | NotebookEdit | [NotebookEdit, theia.WorkspaceEditEntryMetadata | undefined]\n        | [TextEdit | SnippetTextEdit, theia.WorkspaceEditEntryMetadata | undefined]>): void {\n        if (!edits) {\n            // remove all text edits for `uri`\n            for (let i = 0; i < this._edits.length; i++) {\n                const element = this._edits[i];\n                if (element &&\n                    (element._type === FileEditType.Text || element._type === FileEditType.Snippet) &&\n                    element.uri.toString() === uri.toString()) {\n                    this._edits[i] = undefined;\n                }\n            }\n            this._edits = this._edits.filter(e => !!e);\n        } else {\n            // append edit to the end\n            for (const editOrTuple of edits) {\n                if (!editOrTuple) {\n                    continue;\n                }\n\n                let edit: TextEdit | SnippetTextEdit | NotebookEdit;\n                let metadata: theia.WorkspaceEditEntryMetadata | undefined;\n                if (Array.isArray(editOrTuple)) {\n                    edit = editOrTuple[0];\n                    metadata = editOrTuple[1];\n                } else {\n                    edit = editOrTuple;\n                }\n\n                if (NotebookEdit.isNotebookCellEdit(edit)) {\n                    if (edit.newCellMetadata) {\n                        this._edits.push({\n                            _type: FileEditType.Cell, metadata, uri,\n                            edit: { editType: CellEditType.Metadata, index: edit.range.start, metadata: edit.newCellMetadata }\n                        });\n                    } else if (edit.newNotebookMetadata) {\n                        this._edits.push({\n                            _type: FileEditType.Cell, metadata, uri,\n                            edit: { editType: CellEditType.DocumentMetadata, metadata: edit.newNotebookMetadata }, notebookMetadata: edit.newNotebookMetadata\n                        });\n                    } else {\n                        const start = edit.range.start;\n                        const end = edit.range.end;\n\n                        if (start !== end || edit.newCells.length > 0) {\n                            this._edits.push({ _type: FileEditType.CellReplace, uri, index: start, count: end - start, cells: edit.newCells, metadata });\n                        }\n                    }\n\n                } else if (SnippetTextEdit.isSnippetTextEdit(edit)) {\n                    this._edits.push({ _type: FileEditType.Snippet, uri, range: edit.range, edit, metadata });\n                } else {\n                    this._edits.push({ _type: FileEditType.Text, uri, edit });\n                }\n            }\n        }\n    }\n\n    get(uri: URI): TextEdit[] {\n        const res: TextEdit[] = [];\n        for (const candidate of this._edits) {\n            if (candidate && candidate._type === 2 && candidate.uri.toString() === uri.toString()) {\n                res.push(candidate.edit);\n            }\n        }\n        if (res.length === 0) {\n            return undefined!;\n        }\n        return res;\n    }\n\n    entries(): [URI, TextEdit[]][] {\n        const textEdits = new Map<string, [URI, TextEdit[]]>();\n        for (const candidate of this._edits) {\n            if (candidate && candidate._type === FileEditType.Text) {\n                let textEdit = textEdits.get(candidate.uri.toString());\n                if (!textEdit) {\n                    textEdit = [candidate.uri, []];\n                    textEdits.set(candidate.uri.toString(), textEdit);\n                }\n                textEdit[1].push(candidate.edit);\n            }\n        }\n        const result: [URI, TextEdit[]][] = [];\n        textEdits.forEach(v => result.push(v));\n        return result;\n    }\n\n    // _allEntries(): ([URI, Array<TextEdit | SnippetTextEdit>, theia.WorkspaceEditEntryMetadata] | [URI, URI, FileOperationOptions, WorkspaceEditMetadata])[] {\n    //     const res: ([URI, Array<TextEdit | SnippetTextEdit>, theia.WorkspaceEditEntryMetadata] | [URI, URI, FileOperationOptions, WorkspaceEditMetadata])[] = [];\n    //     for (const edit of this._edits) {\n    //         if (!edit) {\n    //             continue;\n    //         }\n    //         if (edit._type === FileEditType.File) {\n    //             res.push([edit.from!, edit.to!, edit.options!, edit.metadata!]);\n    //         } else {\n    //             res.push([edit.uri, [edit.edit], edit.metadata!]);\n    //         }\n    //     }\n    //     return res;\n    // }\n\n    _allEntries(): ReadonlyArray<WorkspaceEditEntry> {\n        return this._edits;\n    }\n\n    get size(): number {\n        return this.entries().length;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON(): any {\n        return this.entries();\n    }\n}\n\nexport class DataTransferItem {\n    asString(): Thenable<string> {\n        return Promise.resolve(typeof this.value === 'string' ? this.value : JSON.stringify(this.value));\n    }\n\n    asFile(): theia.DataTransferFile | undefined {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(readonly value: any) {\n    }\n}\n\n/**\n * A map containing a mapping of the mime type of the corresponding transferred data.\n *\n * Drag and drop controllers that implement {@link TreeDragAndDropController.handleDrag `handleDrag`} can add additional mime types to the\n * data transfer. These additional mime types will only be included in the `handleDrop` when the the drag was initiated from\n * an element in the same drag and drop controller.\n */\n@es5ClassCompat\nexport class DataTransfer implements Iterable<[mimeType: string, item: DataTransferItem]> {\n    private items = new Map<string, DataTransferItem>();\n    get(mimeType: string): DataTransferItem | undefined {\n        return this.items.get(mimeType);\n    }\n    set(mimeType: string, value: DataTransferItem): void {\n        this.items.set(mimeType, value);\n    }\n\n    has(mimeType: string): boolean {\n        return this.items.has(mimeType);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    forEach(callbackfn: (item: DataTransferItem, mimeType: string, dataTransfer: DataTransfer) => void, thisArg?: any): void {\n        this.items.forEach((item, mimetype) => {\n            callbackfn.call(thisArg, item, mimetype, this);\n        });\n    }\n    [Symbol.iterator](): IterableIterator<[mimeType: string, item: DataTransferItem]> {\n        return this.items[Symbol.iterator]();\n    }\n\n    clear(): void {\n        this.items.clear();\n    }\n}\n@es5ClassCompat\nexport class TreeItem {\n\n    label?: string | theia.TreeItemLabel;\n\n    id?: string;\n\n    iconPath?: string | URI | { light: string | URI; dark: string | URI } | ThemeIcon;\n\n    resourceUri?: URI;\n\n    tooltip?: string | undefined;\n\n    command?: theia.Command;\n\n    contextValue?: string;\n\n    checkboxState?: theia.TreeItemCheckboxState | {\n        readonly state: theia.TreeItemCheckboxState;\n        readonly tooltip?: string;\n        readonly accessibilityInformation?: AccessibilityInformation\n    };\n\n    constructor(label: string | theia.TreeItemLabel, collapsibleState?: theia.TreeItemCollapsibleState);\n    constructor(resourceUri: URI, collapsibleState?: theia.TreeItemCollapsibleState);\n    constructor(arg1: string | theia.TreeItemLabel | URI, public collapsibleState: theia.TreeItemCollapsibleState = TreeItemCollapsibleState.None) {\n        if (arg1 instanceof URI) {\n            this.resourceUri = arg1;\n        } else {\n            this.label = arg1;\n        }\n    }\n}\n\nexport enum TreeItemCollapsibleState {\n    None = 0,\n    Collapsed = 1,\n    Expanded = 2\n}\n\nexport enum TreeItemCheckboxState {\n    Unchecked = 0,\n    Checked = 1\n}\n\nexport enum SymbolTag {\n    Deprecated = 1\n}\n\n@es5ClassCompat\nexport class SymbolInformation {\n\n    static validate(candidate: SymbolInformation): void {\n        if (!candidate.name) {\n            throw new Error('Should provide a name inside candidate field');\n        }\n    }\n\n    name: string;\n    location: Location;\n    kind: SymbolKind;\n    tags?: SymbolTag[];\n    containerName: undefined | string;\n    constructor(name: string, kind: SymbolKind, containerName: string, location: Location);\n    constructor(name: string, kind: SymbolKind, range: Range, uri?: URI, containerName?: string);\n    constructor(name: string, kind: SymbolKind, rangeOrContainer: string | Range, locationOrUri?: Location | URI, containerName?: string) {\n        this.name = name;\n        this.kind = kind;\n        this.containerName = containerName;\n\n        if (typeof rangeOrContainer === 'string') {\n            this.containerName = rangeOrContainer;\n        }\n\n        if (locationOrUri instanceof Location) {\n            this.location = locationOrUri;\n        } else if (rangeOrContainer instanceof Range) {\n            this.location = new Location(locationOrUri!, rangeOrContainer);\n        }\n\n        SymbolInformation.validate(this);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON(): any {\n        return {\n            name: this.name,\n            kind: SymbolKind[this.kind],\n            location: this.location,\n            containerName: this.containerName\n        };\n    }\n}\n\n@es5ClassCompat\nexport class DocumentSymbol {\n\n    static validate(candidate: DocumentSymbol): void {\n        if (!candidate.name) {\n            throw new Error('Should provide a name inside candidate field');\n        }\n        if (!candidate.range.contains(candidate.selectionRange)) {\n            throw new Error('selectionRange must be contained in fullRange');\n        }\n        if (candidate.children) {\n            candidate.children.forEach(DocumentSymbol.validate);\n        }\n    }\n\n    name: string;\n    detail: string;\n    kind: SymbolKind;\n    tags?: SymbolTag[];\n    range: Range;\n    selectionRange: Range;\n    children: DocumentSymbol[];\n\n    constructor(name: string, detail: string, kind: SymbolKind, range: Range, selectionRange: Range) {\n        this.name = name;\n        this.detail = detail;\n        this.kind = kind;\n        this.range = range;\n        this.selectionRange = selectionRange;\n        this.children = [];\n\n        DocumentSymbol.validate(this);\n    }\n}\n\nexport enum CommentThreadState {\n    Unresolved = 0,\n    Resolved = 1\n}\n\nexport enum CommentThreadCollapsibleState {\n    Collapsed = 0,\n    Expanded = 1\n}\n\n@es5ClassCompat\nexport class QuickInputButtons {\n    static readonly Back: theia.QuickInputButton = {\n        iconPath: {\n            id: 'Back',\n        },\n        tooltip: 'Back'\n    };\n}\n\n@es5ClassCompat\nexport class TerminalLink {\n\n    static validate(candidate: TerminalLink): void {\n        if (typeof candidate.startIndex !== 'number') {\n            throw new Error('Should provide a startIndex inside candidate field');\n        }\n        if (typeof candidate.length !== 'number') {\n            throw new Error('Should provide a length inside candidate field');\n        }\n    }\n\n    startIndex: number;\n    length: number;\n    tooltip?: string;\n\n    constructor(startIndex: number, length: number, tooltip?: string) {\n        this.startIndex = startIndex;\n        this.length = length;\n        this.tooltip = tooltip;\n    }\n}\n\nexport enum TerminalLocation {\n    Panel = 1,\n    Editor = 2\n}\n\nexport enum TerminalOutputAnchor {\n    Top = 0,\n    Bottom = 1\n}\n\nexport class TerminalProfile {\n    /**\n     * Creates a new terminal profile.\n     * @param options The options that the terminal will launch with.\n     */\n    constructor(readonly options: theia.TerminalOptions | theia.ExtensionTerminalOptions) {\n    }\n}\n\nexport enum TerminalExitReason {\n    Unknown = 0,\n    Shutdown = 1,\n    Process = 2,\n    User = 3,\n    Extension = 4,\n}\n\n@es5ClassCompat\nexport class FileDecoration {\n\n    static validate(d: FileDecoration): void {\n        if (d.badge && d.badge.length !== 1 && d.badge.length !== 2) {\n            throw new Error('The \\'badge\\'-property must be undefined or a short character');\n        }\n        if (!d.color && !d.badge && !d.tooltip) {\n            throw new Error('The decoration is empty');\n        }\n    }\n\n    badge?: string;\n    tooltip?: string;\n    color?: theia.ThemeColor;\n    priority?: number;\n    propagate?: boolean;\n\n    constructor(badge?: string, tooltip?: string, color?: ThemeColor) {\n        this.badge = badge;\n        this.tooltip = tooltip;\n        this.color = color;\n    }\n}\n\nexport enum CommentMode {\n    Editing = 0,\n    Preview = 1\n}\n\n// #region file api\n\nexport enum FileChangeType {\n    Changed = 1,\n    Created = 2,\n    Deleted = 3,\n}\n\n@es5ClassCompat\nexport class FileSystemError extends Error {\n\n    static FileExists(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileExists, FileSystemError.FileExists);\n    }\n    static FileNotFound(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotFound, FileSystemError.FileNotFound);\n    }\n    static FileNotADirectory(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileNotADirectory, FileSystemError.FileNotADirectory);\n    }\n    static FileIsADirectory(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.FileIsADirectory, FileSystemError.FileIsADirectory);\n    }\n    static NoPermissions(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.NoPermissions, FileSystemError.NoPermissions);\n    }\n    static Unavailable(messageOrUri?: string | URI): FileSystemError {\n        return new FileSystemError(messageOrUri, FileSystemProviderErrorCode.Unavailable, FileSystemError.Unavailable);\n    }\n\n    readonly code: string;\n\n    constructor(uriOrMessage?: string | URI, code: FileSystemProviderErrorCode = FileSystemProviderErrorCode.Unknown, terminator?: Function) {\n        super(URI.isUri(uriOrMessage) ? uriOrMessage.toString(true) : uriOrMessage);\n\n        this.code = terminator?.name ?? 'Unknown';\n\n        // mark the error as file system provider error so that\n        // we can extract the error code on the receiving side\n        markAsFileSystemProviderError(this, code);\n\n        // workaround when extending builtin objects and when compiling to ES5, see:\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        if (typeof Object.setPrototypeOf === 'function') {\n            Object.setPrototypeOf(this, FileSystemError.prototype);\n        }\n\n        if (typeof Error.captureStackTrace === 'function' && typeof terminator === 'function') {\n            // nice stack traces\n            Error.captureStackTrace(this, terminator);\n        }\n    }\n}\n\n// #endregion\n\nexport enum FileType {\n    Unknown = 0,\n    File = 1,\n    Directory = 2,\n    SymbolicLink = 64\n}\n\nexport interface FileStat {\n    readonly type: FileType;\n    readonly ctime: number;\n    readonly mtime: number;\n    readonly size: number;\n}\n\n@es5ClassCompat\nexport class ProgressOptions {\n    /**\n     * The location at which progress should show.\n     */\n    location: ProgressLocation;\n    /**\n     * A human-readable string which will be used to describe the\n     * operation.\n     */\n    title?: string;\n    /**\n     * Controls if a cancel button should show to allow the user to\n     * cancel the long running operation.  Note that currently only\n     * `ProgressLocation.Notification` is supporting to show a cancel\n     * button.\n     */\n    cancellable?: boolean;\n    constructor(location: ProgressLocation, title?: string, cancellable?: boolean) {\n        this.location = location;\n    }\n}\n\n@es5ClassCompat\nexport class Progress<T> {\n    /**\n     * Report a progress update.\n     * @param value A progress item, like a message and/or an\n     * report on how much work finished\n     */\n    report(value: T): void {\n    }\n}\nexport enum ProgressLocation {\n    /**\n     * Show progress for the source control viewlet, as overlay for the icon and as progress bar\n     * inside the viewlet (when visible). Neither supports cancellation nor discrete progress.\n     */\n    SourceControl = 1,\n    /**\n     * Show progress in the status bar of the editor. Neither supports cancellation nor discrete progress.\n     */\n    Window = 10,\n    /**\n     * Show progress as notification with an optional cancel button. Supports to show infinite and discrete progress.\n     */\n    Notification = 15\n}\n\n@es5ClassCompat\nexport class ProcessExecution {\n    private executionProcess: string;\n    private arguments: string[];\n    private executionOptions: theia.ProcessExecutionOptions | undefined;\n\n    constructor(process: string, options?: theia.ProcessExecutionOptions);\n    constructor(process: string, args: string[], options?: theia.ProcessExecutionOptions);\n    constructor(process: string, varg1?: string[] | theia.ProcessExecutionOptions, varg2?: theia.ProcessExecutionOptions) {\n        if (typeof process !== 'string') {\n            throw illegalArgument('process');\n        }\n        this.executionProcess = process;\n        if (varg1 !== undefined) {\n            if (Array.isArray(varg1)) {\n                this.arguments = varg1;\n                this.executionOptions = varg2;\n            } else {\n                this.executionOptions = varg1;\n            }\n        }\n        if (this.arguments === undefined) {\n            this.arguments = [];\n        }\n    }\n\n    get process(): string {\n        return this.executionProcess;\n    }\n\n    set process(value: string) {\n        if (typeof value !== 'string') {\n            throw illegalArgument('process');\n        }\n        this.executionProcess = value;\n    }\n\n    get args(): string[] {\n        return this.arguments;\n    }\n\n    set args(value: string[]) {\n        if (!Array.isArray(value)) {\n            value = [];\n        }\n        this.arguments = value;\n    }\n\n    get options(): theia.ProcessExecutionOptions | undefined {\n        return this.executionOptions;\n    }\n\n    set options(value: theia.ProcessExecutionOptions | undefined) {\n        this.executionOptions = value;\n    }\n\n    public static is(value: theia.ShellExecution | theia.ProcessExecution | theia.CustomExecution): value is ProcessExecution {\n        const candidate = value as ProcessExecution;\n        return candidate && !!candidate.process;\n    }\n}\n\nexport enum QuickPickItemKind {\n    Separator = -1,\n    Default = 0,\n}\n\nexport enum ShellQuoting {\n    Escape = 1,\n    Strong = 2,\n    Weak = 3\n}\n\nexport enum TaskPanelKind {\n    Shared = 1,\n    Dedicated = 2,\n    New = 3\n}\n\nexport enum TaskRevealKind {\n    Always = 1,\n    Silent = 2,\n    Never = 3\n}\n\n@es5ClassCompat\nexport class ShellExecution {\n    private shellCommandLine: string;\n    private shellCommand: string | theia.ShellQuotedString;\n    private arguments: (string | theia.ShellQuotedString)[];\n    private shellOptions: theia.ShellExecutionOptions | undefined;\n\n    constructor(commandLine: string, options?: theia.ShellExecutionOptions);\n    constructor(command: string | theia.ShellQuotedString, args: (string | theia.ShellQuotedString)[], options?: theia.ShellExecutionOptions);\n\n    constructor(arg0: string | theia.ShellQuotedString, arg1?: theia.ShellExecutionOptions | (string | theia.ShellQuotedString)[], arg2?: theia.ShellExecutionOptions) {\n        if (Array.isArray(arg1) || typeof arg1 === 'string') {\n            if (!arg0) {\n                throw illegalArgument('command can\\'t be undefined or null');\n            }\n            if (typeof arg0 !== 'string' && typeof arg0.value !== 'string') {\n                throw illegalArgument('command');\n            }\n            this.shellCommand = arg0;\n            this.arguments = arg1 as (string | theia.ShellQuotedString)[];\n            this.shellOptions = arg2;\n        } else {\n            if (typeof arg0 !== 'string') {\n                throw illegalArgument('commandLine');\n            }\n            this.shellCommandLine = arg0;\n            this.shellOptions = arg1;\n        }\n    }\n\n    get commandLine(): string {\n        return this.shellCommandLine;\n    }\n\n    set commandLine(value: string) {\n        if (typeof value !== 'string') {\n            throw illegalArgument('commandLine');\n        }\n        this.shellCommandLine = value;\n    }\n\n    get command(): string | theia.ShellQuotedString {\n        return this.shellCommand;\n    }\n\n    set command(value: string | theia.ShellQuotedString) {\n        if (typeof value !== 'string' && typeof value.value !== 'string') {\n            throw illegalArgument('command');\n        }\n        this.shellCommand = value;\n    }\n\n    get args(): (string | theia.ShellQuotedString)[] {\n        return this.arguments;\n    }\n\n    set args(value: (string | theia.ShellQuotedString)[]) {\n        this.arguments = value || [];\n    }\n\n    get options(): theia.ShellExecutionOptions | undefined {\n        return this.shellOptions;\n    }\n\n    set options(value: theia.ShellExecutionOptions | undefined) {\n        this.shellOptions = value;\n    }\n\n    public static is(value: theia.ShellExecution | theia.ProcessExecution | theia.CustomExecution): value is ShellExecution {\n        const candidate = value as ShellExecution;\n        return candidate && (!!candidate.commandLine || !!candidate.command);\n    }\n}\n\n@es5ClassCompat\nexport class CustomExecution {\n    private _callback: (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>;\n    constructor(callback: (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>) {\n        this._callback = callback;\n    }\n\n    public set callback(value: (resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>) {\n        this._callback = value;\n    }\n\n    public get callback(): ((resolvedDefinition: theia.TaskDefinition) => Thenable<theia.Pseudoterminal>) {\n        return this._callback;\n    }\n\n    public static is(value: theia.ShellExecution | theia.ProcessExecution | theia.CustomExecution): value is CustomExecution {\n        const candidate = value as CustomExecution;\n        return candidate && (!!candidate._callback);\n    }\n}\n\n@es5ClassCompat\nexport class TaskGroup {\n\n    public static Clean: TaskGroup = new TaskGroup('clean', 'Clean');\n    public static Build: TaskGroup = new TaskGroup('build', 'Build');\n    public static Rebuild: TaskGroup = new TaskGroup('rebuild', 'Rebuild');\n    public static Test: TaskGroup = new TaskGroup('test', 'Test');\n\n    public static from(value: string): TaskGroup | undefined {\n        switch (value) {\n            case 'clean':\n                return TaskGroup.Clean;\n            case 'build':\n                return TaskGroup.Build;\n            case 'rebuild':\n                return TaskGroup.Rebuild;\n            case 'test':\n                return TaskGroup.Test;\n            default:\n                return undefined;\n        }\n    }\n\n    constructor(id: 'clean' | 'build' | 'rebuild' | 'test', label: string);\n    constructor(id: 'clean' | 'build' | 'rebuild' | 'test', label: string, isDefault?: boolean | undefined);\n    constructor(readonly id: 'clean' | 'build' | 'rebuild' | 'test', label: string, isDefault?: boolean | undefined) {\n        this.isDefault = !!isDefault;\n    }\n\n    readonly isDefault: boolean;\n}\n\nexport enum TaskScope {\n    Global = 1,\n    Workspace = 2\n}\n\n@es5ClassCompat\nexport class Task {\n    private taskDefinition: theia.TaskDefinition;\n    private taskScope: theia.TaskScope.Global | theia.TaskScope.Workspace | theia.WorkspaceFolder | undefined;\n    private taskName: string;\n    private taskExecution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n    private taskProblemMatchers: string[];\n    private hasTaskProblemMatchers: boolean;\n    private isTaskBackground: boolean;\n    private taskSource: string;\n    private taskGroup: TaskGroup | undefined;\n    private taskPresentationOptions: theia.TaskPresentationOptions;\n    private taskRunOptions: theia.RunOptions;\n    constructor(\n        taskDefinition: theia.TaskDefinition,\n        scope: theia.WorkspaceFolder | theia.TaskScope.Global | theia.TaskScope.Workspace,\n        name: string,\n        source: string,\n        execution?: ProcessExecution | ShellExecution | CustomExecution,\n        problemMatchers?: string | string[]\n    );\n\n    // Deprecated constructor used by Jake vscode built-in\n    constructor(\n        taskDefinition: theia.TaskDefinition,\n        name: string,\n        source: string,\n        execution?: ProcessExecution | ShellExecution | CustomExecution,\n        problemMatchers?: string | string[],\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(...args: any[]) {\n        let taskDefinition: theia.TaskDefinition;\n        let scope: theia.WorkspaceFolder | theia.TaskScope.Global | theia.TaskScope.Workspace | undefined;\n        let name: string;\n        let source: string;\n        let execution: ProcessExecution | ShellExecution | CustomExecution | undefined;\n        let problemMatchers: string | string[] | undefined;\n\n        if (typeof args[1] === 'string') {\n            [\n                taskDefinition,\n                name,\n                source,\n                execution,\n                problemMatchers,\n            ] = args;\n        } else {\n            [\n                taskDefinition,\n                scope,\n                name,\n                source,\n                execution,\n                problemMatchers,\n            ] = args;\n        }\n\n        this.definition = taskDefinition;\n        this.scope = scope;\n        this.name = name;\n        this.source = source;\n        this.execution = execution;\n\n        if (typeof problemMatchers === 'string') {\n            this.taskProblemMatchers = [problemMatchers];\n            this.hasTaskProblemMatchers = true;\n        } else if (Array.isArray(problemMatchers)) {\n            this.taskProblemMatchers = problemMatchers;\n            this.hasTaskProblemMatchers = true;\n        } else {\n            this.taskProblemMatchers = [];\n            this.hasTaskProblemMatchers = false;\n        }\n        this.isTaskBackground = false;\n        this.presentationOptions = Object.create(null);\n        this.taskRunOptions = Object.create(null);\n    }\n\n    get definition(): theia.TaskDefinition {\n        return this.taskDefinition;\n    }\n\n    set definition(value: theia.TaskDefinition) {\n        if (value === undefined || value === null) {\n            throw illegalArgument('Kind can\\'t be undefined or null');\n        }\n        this.taskDefinition = value;\n    }\n\n    get scope(): theia.TaskScope.Global | theia.TaskScope.Workspace | theia.WorkspaceFolder | undefined {\n        return this.taskScope;\n    }\n\n    set scope(value: theia.TaskScope.Global | theia.TaskScope.Workspace | theia.WorkspaceFolder | undefined) {\n        if (value === null) {\n            value = undefined;\n        }\n        this.taskScope = value;\n    }\n\n    get name(): string {\n        return this.taskName;\n    }\n\n    set name(value: string) {\n        if (typeof value !== 'string') {\n            throw illegalArgument('name');\n        }\n        this.taskName = value;\n    }\n\n    get execution(): ProcessExecution | ShellExecution | CustomExecution | undefined {\n        return this.taskExecution;\n    }\n\n    set execution(value: ProcessExecution | ShellExecution | CustomExecution | undefined) {\n        if (value === null) {\n            value = undefined;\n        }\n        this.taskExecution = value;\n    }\n\n    get problemMatchers(): string[] {\n        return this.taskProblemMatchers;\n    }\n\n    set problemMatchers(value: string[]) {\n        if (!Array.isArray(value)) {\n            this.taskProblemMatchers = [];\n            this.hasTaskProblemMatchers = false;\n            return;\n        }\n        this.taskProblemMatchers = value;\n        this.hasTaskProblemMatchers = true;\n    }\n\n    get hasProblemMatchers(): boolean {\n        return this.hasTaskProblemMatchers;\n    }\n\n    get isBackground(): boolean {\n        return this.isTaskBackground;\n    }\n\n    set isBackground(value: boolean) {\n        if (value !== true && value !== false) {\n            value = false;\n        }\n        this.isTaskBackground = value;\n    }\n\n    get source(): string {\n        return this.taskSource;\n    }\n\n    set source(value: string) {\n        if (typeof value !== 'string' || value.length === 0) {\n            throw illegalArgument('source must be a string of length > 0');\n        }\n        this.taskSource = value;\n    }\n\n    get group(): TaskGroup | undefined {\n        return this.taskGroup;\n    }\n\n    set group(value: TaskGroup | undefined) {\n        if (value === undefined || value === null) {\n            this.taskGroup = undefined;\n            return;\n        }\n        this.taskGroup = value;\n    }\n\n    get presentationOptions(): theia.TaskPresentationOptions {\n        return this.taskPresentationOptions;\n    }\n\n    set presentationOptions(value: theia.TaskPresentationOptions) {\n        if (value === null || value === undefined) {\n            value = Object.create(null);\n        }\n        this.taskPresentationOptions = value;\n    }\n\n    get runOptions(): theia.RunOptions {\n        return this.taskRunOptions;\n    }\n\n    set runOptions(value: theia.RunOptions) {\n        if (value === null || value === undefined) {\n            value = Object.create(null);\n        }\n        this.taskRunOptions = value;\n    }\n}\n\n@es5ClassCompat\nexport class Task2 extends Task { }\n\n@es5ClassCompat\nexport class DebugAdapterExecutable {\n    /**\n     * The command or path of the debug adapter executable.\n     * A command must be either an absolute path of an executable or the name of an command to be looked up via the PATH environment variable.\n     * The special value 'node' will be mapped to VS Code's built-in Node.js runtime.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments passed to the debug adapter executable. Defaults to an empty array.\n     */\n    readonly args?: string[];\n\n    /**\n     * Optional options to be used when the debug adapter is started.\n     * Defaults to undefined.\n     */\n    readonly options?: theia.DebugAdapterExecutableOptions;\n\n    /**\n     * Creates a description for a debug adapter based on an executable program.\n     *\n     * @param command The command or executable path that implements the debug adapter.\n     * @param args Optional arguments to be passed to the command or executable.\n     * @param options Optional options to be used when starting the command or executable.\n     */\n    constructor(command: string, args?: string[], options?: theia.DebugAdapterExecutableOptions) {\n        this.command = command;\n        this.args = args;\n        this.options = options;\n    }\n}\n\nexport namespace DebugAdapterExecutable {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is theia.DebugAdapterExecutable {\n        return !!adapter && 'command' in adapter;\n    }\n}\n\n/**\n * Represents a debug adapter running as a socket based server.\n */\n@es5ClassCompat\nexport class DebugAdapterServer {\n\n    /**\n     * The port.\n     */\n    readonly port: number;\n\n    /**\n     * The host.\n     */\n    readonly host?: string;\n\n    /**\n     * Create a description for a debug adapter running as a socket based server.\n     */\n    constructor(port: number, host?: string) {\n        this.port = port;\n        this.host = host;\n    }\n}\n\nexport namespace DebugAdapterServer {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is DebugAdapterServer {\n        return !!adapter && 'port' in adapter;\n    }\n}\n\n/**\n * Represents a debug adapter running as a Named Pipe (on Windows)/UNIX Domain Socket (on non-Windows) based server.\n */\n@es5ClassCompat\nexport class DebugAdapterNamedPipeServer {\n    /**\n     * Create a description for a debug adapter running as a Named Pipe (on Windows)/UNIX Domain Socket (on non-Windows) based server.\n     */\n    constructor(readonly path: string) { }\n}\n\nexport namespace DebugAdapterNamedPipeServer {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is DebugAdapterNamedPipeServer {\n        return !!adapter && 'path' in adapter;\n    }\n}\n\n/**\n * A debug adapter descriptor for an inline implementation.\n */\n@es5ClassCompat\nexport class DebugAdapterInlineImplementation {\n    implementation: theia.DebugAdapter;\n\n    /**\n     * Create a descriptor for an inline implementation of a debug adapter.\n     */\n    constructor(impl: theia.DebugAdapter) {\n        this.implementation = impl;\n    }\n}\n\nexport namespace DebugAdapterInlineImplementation {\n    export function is(adapter: theia.DebugAdapterDescriptor | undefined): adapter is DebugAdapterInlineImplementation {\n        return !!adapter && 'implementation' in adapter;\n    }\n}\n\nexport type DebugAdapterDescriptor = DebugAdapterExecutable | DebugAdapterServer | DebugAdapterNamedPipeServer | DebugAdapterInlineImplementation;\n\nexport enum LogLevel {\n    Off = 0,\n    Trace = 1,\n    Debug = 2,\n    Info = 3,\n    Warning = 4,\n    Error = 5\n}\n\n/**\n * The base class of all breakpoint types.\n */\n@es5ClassCompat\nexport class Breakpoint {\n    /**\n     * Is breakpoint enabled.\n     */\n    enabled: boolean;\n    /**\n     * An optional expression for conditional breakpoints.\n     */\n    condition?: string;\n    /**\n     * An optional expression that controls how many hits of the breakpoint are ignored.\n     */\n    hitCondition?: string;\n    /**\n     * An optional message that gets logged when this breakpoint is hit. Embedded expressions within {} are interpolated by the debug adapter.\n     */\n    logMessage?: string;\n\n    protected constructor(enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string, id?: string) {\n        this.enabled = enabled || false;\n        this.condition = condition;\n        this.hitCondition = hitCondition;\n        this.logMessage = logMessage;\n        this._id = id;\n    }\n\n    private _id: string | undefined;\n    /**\n     * The unique ID of the breakpoint.\n     */\n    get id(): string {\n        if (!this._id) {\n            this._id = UUID.uuid4();\n        }\n        return this._id;\n    }\n\n}\n\n/**\n * A breakpoint specified by a source location.\n */\n@es5ClassCompat\nexport class SourceBreakpoint extends Breakpoint {\n    /**\n     * The source and line position of this breakpoint.\n     */\n    location: Location;\n\n    /**\n     * Create a new breakpoint for a source location.\n     */\n    constructor(location: Location, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string, id?: string) {\n        super(enabled, condition, hitCondition, logMessage, id);\n        this.location = location;\n    }\n}\n\n/**\n * A breakpoint specified by a function name.\n */\n@es5ClassCompat\nexport class FunctionBreakpoint extends Breakpoint {\n    /**\n     * The name of the function to which this breakpoint is attached.\n     */\n    functionName: string;\n\n    /**\n     * Create a new function breakpoint.\n     */\n    constructor(functionName: string, enabled?: boolean, condition?: string, hitCondition?: string, logMessage?: string, id?: string) {\n        super(enabled, condition, hitCondition, logMessage, id);\n        this.functionName = functionName;\n    }\n}\n\nexport class DebugThread implements theia.DebugThread {\n    constructor(readonly session: theia.DebugSession, readonly threadId: number) { }\n}\n\nexport class DebugStackFrame implements theia.DebugStackFrame {\n    constructor(readonly session: theia.DebugSession, readonly threadId: number, readonly frameId: number) { }\n}\n\n@es5ClassCompat\nexport class Color {\n    readonly red: number;\n    readonly green: number;\n    readonly blue: number;\n    readonly alpha: number;\n\n    constructor(red: number, green: number, blue: number, alpha: number) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n}\n\n@es5ClassCompat\nexport class ColorInformation {\n    range: Range;\n    color: Color;\n\n    constructor(range: Range, color: Color) {\n        if (color && !(color instanceof Color)) {\n            throw illegalArgument('color');\n        }\n        if (!Range.isRange(range)) {\n            throw illegalArgument('range');\n        }\n        this.range = range;\n        this.color = color;\n    }\n}\n\n@es5ClassCompat\nexport class ColorPresentation {\n    label: string;\n    textEdit?: TextEdit;\n    additionalTextEdits?: TextEdit[];\n\n    constructor(label: string) {\n        if (!label || typeof label !== 'string') {\n            throw illegalArgument('label');\n        }\n        this.label = label;\n    }\n}\n\nexport enum ColorFormat {\n    RGB = 0,\n    HEX = 1,\n    HSL = 2\n}\n\n@es5ClassCompat\nexport class InlayHintLabelPart implements theia.InlayHintLabelPart {\n    value: string;\n    tooltip?: string | theia.MarkdownString | undefined;\n    location?: Location | undefined;\n    command?: theia.Command | undefined;\n\n    constructor(value: string) {\n        this.value = value;\n    }\n}\n\n@es5ClassCompat\nexport class InlayHint implements theia.InlayHint {\n    position: theia.Position;\n    label: string | InlayHintLabelPart[];\n    tooltip?: string | theia.MarkdownString | undefined;\n    kind?: InlayHintKind;\n    textEdits?: TextEdit[];\n    paddingLeft?: boolean;\n    paddingRight?: boolean;\n\n    constructor(position: theia.Position, label: string | InlayHintLabelPart[], kind?: InlayHintKind) {\n        this.position = position;\n        this.label = label;\n        this.kind = kind;\n    }\n}\n\nexport enum InlayHintKind {\n    Type = 1,\n    Parameter = 2,\n}\n\n@es5ClassCompat\nexport class FoldingRange {\n    start: number;\n    end: number;\n    kind?: FoldingRangeKind;\n\n    constructor(start: number, end: number, kind?: FoldingRangeKind) {\n        this.start = start;\n        this.end = end;\n        this.kind = kind;\n    }\n}\n\nexport enum FoldingRangeKind {\n    Comment = 1,\n    Imports = 2,\n    Region = 3\n}\n\n@es5ClassCompat\nexport class SelectionRange {\n\n    range: Range;\n    parent?: SelectionRange;\n\n    constructor(range: Range, parent?: SelectionRange) {\n        this.range = range;\n        this.parent = parent;\n\n        if (parent && !parent.range.contains(this.range)) {\n            throw new Error('Invalid argument: parent must contain this range');\n        }\n    }\n}\n\n/**\n * Enumeration of the supported operating systems.\n */\nexport enum OperatingSystem {\n    Windows = 'Windows',\n    Linux = 'Linux',\n    OSX = 'OSX'\n}\n\n/** The areas of the application shell where webview panel can reside. */\nexport enum WebviewPanelTargetArea {\n    Main = 'main',\n    Left = 'left',\n    Right = 'right',\n    Bottom = 'bottom'\n}\n\n/**\n * Possible kinds of UI that can use extensions.\n */\nexport enum UIKind {\n\n    /**\n     * Extensions are accessed from a desktop application.\n     */\n    Desktop = 1,\n\n    /**\n     * Extensions are accessed from a web browser.\n     */\n    Web = 2\n}\n\n@es5ClassCompat\nexport class CallHierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    name: string;\n    detail?: string;\n    uri: URI;\n    range: Range;\n    selectionRange: Range;\n    tags?: readonly SymbolTag[];\n\n    constructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n        this.kind = kind;\n        this.name = name;\n        this.detail = detail;\n        this.uri = uri;\n        this.range = range;\n        this.selectionRange = selectionRange;\n    }\n\n    static isCallHierarchyItem(thing: {}): thing is CallHierarchyItem {\n        if (thing instanceof CallHierarchyItem) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<CallHierarchyItem>thing).kind === 'number' &&\n            typeof (<CallHierarchyItem>thing).name === 'string' &&\n            URI.isUri((<CallHierarchyItem>thing).uri) &&\n            Range.isRange((<CallHierarchyItem>thing).range) &&\n            Range.isRange((<CallHierarchyItem>thing).selectionRange);\n    }\n}\n\n@es5ClassCompat\nexport class CallHierarchyIncomingCall {\n\n    from: theia.CallHierarchyItem;\n    fromRanges: theia.Range[];\n\n    constructor(item: CallHierarchyItem, fromRanges: Range[]) {\n        this.fromRanges = fromRanges;\n        this.from = item;\n    }\n}\n\n@es5ClassCompat\nexport class CallHierarchyOutgoingCall {\n\n    to: theia.CallHierarchyItem;\n    fromRanges: theia.Range[];\n\n    constructor(item: CallHierarchyItem, fromRanges: Range[]) {\n        this.fromRanges = fromRanges;\n        this.to = item;\n    }\n}\n\n@es5ClassCompat\nexport class TypeHierarchyItem {\n    _sessionId?: string;\n    _itemId?: string;\n\n    kind: SymbolKind;\n    tags?: readonly SymbolTag[];\n    name: string;\n    detail?: string;\n    uri: URI;\n    range: Range;\n    selectionRange: Range;\n\n    constructor(kind: SymbolKind, name: string, detail: string, uri: URI, range: Range, selectionRange: Range) {\n        this.kind = kind;\n        this.name = name;\n        this.detail = detail;\n        this.uri = uri;\n        this.range = range;\n        this.selectionRange = selectionRange;\n    }\n\n    static isTypeHierarchyItem(thing: {}): thing is TypeHierarchyItem {\n        if (thing instanceof TypeHierarchyItem) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof (<TypeHierarchyItem>thing).kind === 'number' &&\n            typeof (<TypeHierarchyItem>thing).name === 'string' &&\n            URI.isUri((<TypeHierarchyItem>thing).uri) &&\n            Range.isRange((<TypeHierarchyItem>thing).range) &&\n            Range.isRange((<TypeHierarchyItem>thing).selectionRange);\n    }\n}\n\nexport enum LanguageStatusSeverity {\n    Information = 0,\n    Warning = 1,\n    Error = 2\n}\n\n@es5ClassCompat\nexport class LinkedEditingRanges {\n\n    ranges: theia.Range[];\n    wordPattern?: RegExp;\n\n    constructor(ranges: Range[], wordPattern?: RegExp) {\n        this.ranges = ranges;\n        this.wordPattern = wordPattern;\n    }\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTypes.ts\nexport enum TestResultState {\n    Queued = 1,\n    Running = 2,\n    Passed = 3,\n    Failed = 4,\n    Skipped = 5,\n    Errored = 6\n}\n\nexport enum TestRunProfileKind {\n    Run = 1,\n    Debug = 2,\n    Coverage = 3,\n}\n\n@es5ClassCompat\nexport class TestTag implements theia.TestTag {\n    constructor(public readonly id: string) { }\n}\n\nlet nextTestRunId = 0;\n@es5ClassCompat\nexport class TestRunRequest implements theia.TestRunRequest {\n    testRunId: number = nextTestRunId++;\n\n    constructor(\n        public readonly include: theia.TestItem[] | undefined = undefined,\n        public readonly exclude: theia.TestItem[] | undefined = undefined,\n        public readonly profile: theia.TestRunProfile | undefined = undefined,\n        public readonly continuous: boolean | undefined = undefined,\n        public readonly preserveFocus: boolean = true\n    ) { }\n}\n\n@es5ClassCompat\nexport class TestMessage implements theia.TestMessage {\n    public expectedOutput?: string;\n    public actualOutput?: string;\n    public location?: theia.Location;\n    public contextValue?: string;\n    public stackTrace?: theia.TestMessageStackFrame[] | undefined;\n\n    public static diff(message: string | theia.MarkdownString, expected: string, actual: string): theia.TestMessage {\n        const msg = new TestMessage(message);\n        msg.expectedOutput = expected;\n        msg.actualOutput = actual;\n        return msg;\n    }\n\n    constructor(public message: string | theia.MarkdownString) { }\n}\n\n@es5ClassCompat\nexport class TestCoverageCount {\n    constructor(public covered: number, public total: number) { }\n}\n\nexport class TestMessageStackFrame implements theia.TestMessageStackFrame {\n    constructor(\n        public label: string,\n        public uri?: theia.Uri,\n        public position?: Position\n    ) { }\n}\n\n@es5ClassCompat\nexport class FileCoverage {\n\n    detailedCoverage?: theia.FileCoverageDetail[];\n\n    static fromDetails(uri: theia.Uri, details: theia.FileCoverageDetail[]): FileCoverage {\n        const statements = new TestCoverageCount(0, 0);\n        const branches = new TestCoverageCount(0, 0);\n        const decl = new TestCoverageCount(0, 0);\n\n        for (const detail of details) {\n            if (detail instanceof StatementCoverage) {\n                statements.total += 1;\n                statements.covered += detail.executed ? 1 : 0;\n\n                for (const branch of detail.branches) {\n                    branches.total += 1;\n                    branches.covered += branch.executed ? 1 : 0;\n                }\n            } else {\n                decl.total += 1;\n                decl.covered += detail.executed ? 1 : 0;\n            }\n        }\n\n        const coverage = new FileCoverage(\n            uri,\n            statements,\n            branches.total > 0 ? branches : undefined,\n            decl.total > 0 ? decl : undefined,\n        );\n\n        coverage.detailedCoverage = details;\n\n        return coverage;\n    }\n\n    constructor(\n        public uri: theia.Uri,\n        public statementCoverage: TestCoverageCount,\n        public branchCoverage?: TestCoverageCount,\n        public declarationCoverage?: TestCoverageCount,\n        public includesTests?: theia.TestItem[],\n    ) { }\n}\n\n@es5ClassCompat\nexport class StatementCoverage implements theia.StatementCoverage {\n    constructor(public executed: number | boolean, public location: Position | Range, public branches: BranchCoverage[] = []) { }\n}\n\nexport class BranchCoverage implements theia.BranchCoverage {\n    constructor(public executed: number | boolean, public location?: Position | Range, public label?: string) { }\n}\n\n@es5ClassCompat\nexport class DeclarationCoverage implements theia.DeclarationCoverage {\n    constructor(public name: string, public executed: number | boolean, public location: Position | Range) { }\n}\n\nexport type FileCoverageDetail = StatementCoverage | DeclarationCoverage;\n\n@es5ClassCompat\nexport class TimelineItem {\n    timestamp: number;\n    label: string;\n    id?: string;\n    iconPath?: theia.Uri | { light: theia.Uri; dark: theia.Uri } | ThemeIcon;\n    description?: string;\n    detail?: string;\n    command?: theia.Command;\n    contextValue?: string;\n    constructor(label: string, timestamp: number) {\n        this.label = label;\n        this.timestamp = timestamp;\n    }\n}\n\n// #region Semantic Coloring\n\n@es5ClassCompat\nexport class SemanticTokensLegend {\n    public readonly tokenTypes: string[];\n    public readonly tokenModifiers: string[];\n\n    constructor(tokenTypes: string[], tokenModifiers: string[] = []) {\n        this.tokenTypes = tokenTypes;\n        this.tokenModifiers = tokenModifiers;\n    }\n}\n\nfunction isStrArrayOrUndefined(arg: unknown): arg is string[] | undefined {\n    return typeof arg === 'undefined' || isStringArray(arg);\n}\n\n@es5ClassCompat\nexport class SemanticTokensBuilder {\n\n    private _prevLine: number;\n    private _prevChar: number;\n    private _dataIsSortedAndDeltaEncoded: boolean;\n    private _data: number[];\n    private _dataLen: number;\n    private _tokenTypeStrToInt: Map<string, number>;\n    private _tokenModifierStrToInt: Map<string, number>;\n    private _hasLegend: boolean;\n\n    constructor(legend?: SemanticTokensLegend) {\n        this._prevLine = 0;\n        this._prevChar = 0;\n        this._dataIsSortedAndDeltaEncoded = true;\n        this._data = [];\n        this._dataLen = 0;\n        this._tokenTypeStrToInt = new Map<string, number>();\n        this._tokenModifierStrToInt = new Map<string, number>();\n        this._hasLegend = false;\n        if (legend) {\n            this._hasLegend = true;\n            for (let i = 0, len = legend.tokenTypes.length; i < len; i++) {\n                this._tokenTypeStrToInt.set(legend.tokenTypes[i], i);\n            }\n            for (let i = 0, len = legend.tokenModifiers.length; i < len; i++) {\n                this._tokenModifierStrToInt.set(legend.tokenModifiers[i], i);\n            }\n        }\n    }\n\n    public push(line: number, char: number, length: number, tokenType: number, tokenModifiers?: number): void;\n    public push(range: Range, tokenType: string, tokenModifiers?: string[]): void;\n    public push(arg0: number | Range, arg1: number | string, arg2?: number | string[], arg3?: number, arg4?: number): void {\n        if (typeof arg0 === 'number' && typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' &&\n            (typeof arg4 === 'number' || typeof arg4 === 'undefined')) {\n            if (typeof arg4 === 'undefined') {\n                arg4 = 0;\n            }\n            // 1st overload\n            return this._pushEncoded(arg0, arg1, arg2, arg3, arg4);\n        }\n        if (Range.isRange(arg0) && typeof arg1 === 'string' && isStrArrayOrUndefined(arg2)) {\n            // 2nd overload\n            return this._push(arg0, arg1, arg2);\n        }\n        throw illegalArgument();\n    }\n\n    private _push(range: theia.Range, tokenType: string, tokenModifiers?: string[]): void {\n        if (!this._hasLegend) {\n            throw new Error('Legend must be provided in constructor');\n        }\n        if (range.start.line !== range.end.line) {\n            throw new Error('`range` cannot span multiple lines');\n        }\n        if (!this._tokenTypeStrToInt.has(tokenType)) {\n            throw new Error('`tokenType` is not in the provided legend');\n        }\n        const line = range.start.line;\n        const char = range.start.character;\n        const length = range.end.character - range.start.character;\n        const nTokenType = this._tokenTypeStrToInt.get(tokenType)!;\n        let nTokenModifiers = 0;\n        if (tokenModifiers) {\n            for (const tokenModifier of tokenModifiers) {\n                if (!this._tokenModifierStrToInt.has(tokenModifier)) {\n                    throw new Error('`tokenModifier` is not in the provided legend');\n                }\n                const nTokenModifier = this._tokenModifierStrToInt.get(tokenModifier)!;\n                nTokenModifiers |= (1 << nTokenModifier) >>> 0;\n            }\n        }\n        this._pushEncoded(line, char, length, nTokenType, nTokenModifiers);\n    }\n\n    private _pushEncoded(line: number, char: number, length: number, tokenType: number, tokenModifiers: number): void {\n        if (this._dataIsSortedAndDeltaEncoded && (line < this._prevLine || (line === this._prevLine && char < this._prevChar))) {\n            // push calls were ordered and are no longer ordered\n            this._dataIsSortedAndDeltaEncoded = false;\n\n            // Remove delta encoding from data\n            const tokenCount = (this._data.length / 5) | 0;\n            let prevLine = 0;\n            let prevChar = 0;\n            for (let i = 0; i < tokenCount; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                let line = this._data[5 * i];\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                let char = this._data[5 * i + 1];\n\n                if (line === 0) {\n                    // on the same line as previous token\n                    line = prevLine;\n                    char += prevChar;\n                } else {\n                    // on a different line than previous token\n                    line += prevLine;\n                }\n\n                this._data[5 * i] = line;\n                this._data[5 * i + 1] = char;\n\n                prevLine = line;\n                prevChar = char;\n            }\n        }\n\n        let pushLine = line;\n        let pushChar = char;\n        if (this._dataIsSortedAndDeltaEncoded && this._dataLen > 0) {\n            pushLine -= this._prevLine;\n            if (pushLine === 0) {\n                pushChar -= this._prevChar;\n            }\n        }\n\n        this._data[this._dataLen++] = pushLine;\n        this._data[this._dataLen++] = pushChar;\n        this._data[this._dataLen++] = length;\n        this._data[this._dataLen++] = tokenType;\n        this._data[this._dataLen++] = tokenModifiers;\n\n        this._prevLine = line;\n        this._prevChar = char;\n    }\n\n    private static _sortAndDeltaEncode(data: number[]): Uint32Array {\n        const pos: number[] = [];\n        const tokenCount = (data.length / 5) | 0;\n        for (let i = 0; i < tokenCount; i++) {\n            pos[i] = i;\n        }\n        pos.sort((a, b) => {\n            const aLine = data[5 * a];\n            const bLine = data[5 * b];\n            if (aLine === bLine) {\n                const aChar = data[5 * a + 1];\n                const bChar = data[5 * b + 1];\n                return aChar - bChar;\n            }\n            return aLine - bLine;\n        });\n        const result = new Uint32Array(data.length);\n        let prevLine = 0;\n        let prevChar = 0;\n        for (let i = 0; i < tokenCount; i++) {\n            const srcOffset = 5 * pos[i];\n            const line = data[srcOffset + 0];\n            const char = data[srcOffset + 1];\n            const length = data[srcOffset + 2];\n            const tokenType = data[srcOffset + 3];\n            const tokenModifiers = data[srcOffset + 4];\n\n            const pushLine = line - prevLine;\n            const pushChar = (pushLine === 0 ? char - prevChar : char);\n\n            const dstOffset = 5 * i;\n            result[dstOffset + 0] = pushLine;\n            result[dstOffset + 1] = pushChar;\n            result[dstOffset + 2] = length;\n            result[dstOffset + 3] = tokenType;\n            result[dstOffset + 4] = tokenModifiers;\n\n            prevLine = line;\n            prevChar = char;\n        }\n\n        return result;\n    }\n\n    public build(resultId?: string): SemanticTokens {\n        if (!this._dataIsSortedAndDeltaEncoded) {\n            return new SemanticTokens(SemanticTokensBuilder._sortAndDeltaEncode(this._data), resultId);\n        }\n        return new SemanticTokens(new Uint32Array(this._data), resultId);\n    }\n}\n\n@es5ClassCompat\nexport class SemanticTokens {\n    readonly resultId: string | undefined;\n    readonly data: Uint32Array;\n\n    constructor(data: Uint32Array, resultId?: string) {\n        this.resultId = resultId;\n        this.data = data;\n    }\n}\n\n@es5ClassCompat\nexport class SemanticTokensEdit {\n    readonly start: number;\n    readonly deleteCount: number;\n    readonly data: Uint32Array | undefined;\n\n    constructor(start: number, deleteCount: number, data?: Uint32Array) {\n        this.start = start;\n        this.deleteCount = deleteCount;\n        this.data = data;\n    }\n}\n\n@es5ClassCompat\nexport class SemanticTokensEdits {\n    readonly resultId: string | undefined;\n    readonly edits: SemanticTokensEdit[];\n\n    constructor(edits: SemanticTokensEdit[], resultId?: string) {\n        this.resultId = resultId;\n        this.edits = edits;\n    }\n}\n\nexport enum InputBoxValidationSeverity {\n    Info = 1,\n    Warning = 2,\n    Error = 3\n}\n\n// #endregion\n\n// #region Tab Inputs\n\nexport class TextTabInput {\n    constructor(readonly uri: URI) { }\n}\n\nexport class TextDiffTabInput {\n    constructor(readonly original: URI, readonly modified: URI) { }\n}\n\nexport class TextMergeTabInput {\n    constructor(readonly base: URI, readonly input1: URI, readonly input2: URI, readonly result: URI) { }\n}\n\nexport class CustomEditorTabInput {\n    constructor(readonly uri: URI, readonly viewType: string) { }\n}\n\nexport class WebviewEditorTabInput {\n    constructor(readonly viewType: string) { }\n}\n\nexport class TelemetryTrustedValue<T> {\n    readonly value: T;\n\n    constructor(value: T) {\n        this.value = value;\n    }\n}\n\nexport class TelemetryLogger {\n    readonly onDidChangeEnableStates: theia.Event<TelemetryLogger>;\n    readonly isUsageEnabled: boolean;\n    readonly isErrorsEnabled: boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logUsage(eventName: string, data?: Record<string, any | TelemetryTrustedValue<any>>): void { }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    logError(eventNameOrError: string | Error, data?: Record<string, any | TelemetryTrustedValue<any>>): void { }\n    dispose(): void { }\n    constructor(readonly sender: TelemetrySender, readonly options?: TelemetryLoggerOptions) { }\n}\n\nexport interface TelemetrySender {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendEventData(eventName: string, data?: Record<string, any>): void;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    sendErrorData(error: Error, data?: Record<string, any>): void;\n    flush?(): void | Thenable<void>;\n}\n\nexport interface TelemetryLoggerOptions {\n    /**\n     * Whether or not you want to avoid having the built-in common properties such as os, extension name, etc injected into the data object.\n     * Defaults to `false` if not defined.\n     */\n    readonly ignoreBuiltInCommonProperties?: boolean;\n\n    /**\n     * Whether or not unhandled errors on the extension host caused by your extension should be logged to your sender.\n     * Defaults to `false` if not defined.\n     */\n    readonly ignoreUnhandledErrors?: boolean;\n\n    /**\n     * Any additional common properties which should be injected into the data object.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    readonly additionalCommonProperties?: Record<string, any>;\n}\n\nexport class NotebookEditorTabInput {\n    constructor(readonly uri: URI, readonly notebookType: string) { }\n}\n\nexport class NotebookDiffEditorTabInput {\n    constructor(readonly original: URI, readonly modified: URI, readonly notebookType: string) { }\n}\n\nexport class TerminalEditorTabInput {\n    constructor() { }\n}\nexport class InteractiveWindowInput {\n    constructor(readonly uri: URI, readonly inputBoxUri: URI) { }\n}\n\n// #endregion\n\n// #region DocumentPaste\nexport class DocumentPasteEditKind {\n    static Empty: DocumentPasteEditKind;\n    static Text: DocumentPasteEditKind;\n    static TextUpdateImports: DocumentPasteEditKind;\n\n    constructor(public readonly value: string) { }\n\n    /** @stubbed */\n    append(...parts: string[]): CodeActionKind {\n        return CodeActionKind.Empty;\n    };\n\n    /** @stubbed */\n    intersects(other: CodeActionKind): boolean {\n        return false;\n    }\n\n    /** @stubbed */\n    contains(other: CodeActionKind): boolean {\n        return false;\n    }\n}\nDocumentPasteEditKind.Empty = new DocumentPasteEditKind('');\nDocumentPasteEditKind.Text = new DocumentDropOrPasteEditKind('text');\nDocumentPasteEditKind.TextUpdateImports = DocumentDropOrPasteEditKind.Text.append('updateImports');\n\n@es5ClassCompat\nexport class DocumentPasteEdit {\n    constructor(insertText: string | SnippetString, title: string, kind: DocumentDropOrPasteEditKind) {\n        this.insertText = insertText;\n        this.title = title;\n        this.kind = kind;\n    }\n    title: string;\n    kind: DocumentDropOrPasteEditKind;\n    insertText: string | SnippetString;\n    additionalEdit?: WorkspaceEdit;\n    yieldTo?: ReadonlyArray<DocumentDropOrPasteEditKind>;\n}\n\n/**\n * The reason why paste edits were requested.\n */\nexport enum DocumentPasteTriggerKind {\n    /**\n     * Pasting was requested as part of a normal paste operation.\n     */\n    Automatic = 0,\n\n    /**\n     * Pasting was requested by the user with the `paste as` command.\n     */\n    PasteAs = 1,\n}\n\n// #endregion\n\n// #region DocumentPaste\nexport enum EditSessionIdentityMatch {\n    Complete = 100,\n    Partial = 50,\n    None = 0\n}\n// #endregion\n\n// #region terminalCompletionProvider\nexport class TerminalCompletionList<T extends theia.TerminalCompletionItem> {\n\n    resourceRequestConfig?: theia.TerminalResourceRequestConfig;\n\n    items: T[];\n\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param resourceRequestConfig Indicates which resources should be shown as completions for the cwd of the terminal.\n     * @stubbed\n     */\n    constructor(items?: T[], resourceRequestConfig?: theia.TerminalResourceRequestConfig) {\n    }\n}\n\nexport enum TerminalCompletionItemKind {\n    File = 0,\n    Folder = 1,\n    Flag = 2,\n    Method = 3,\n    Argument = 4\n}\n// #endregion\n\n// #region terminalQuickFixProvider\nexport class TerminalQuickFixTerminalCommand {\n    /**\n     * The terminal command to run\n     */\n    terminalCommand: string;\n    /**\n     * Whether the command should be executed or just inserted (default)\n     */\n    shouldExecute?: boolean;\n    /**\n     * @stubbed\n     */\n    constructor(terminalCommand: string, shouldExecute?: boolean) { }\n}\nexport class TerminalQuickFixOpener {\n    /**\n     * The uri to open\n     */\n    uri: theia.Uri;\n    /**\n     * @stubbed\n     */\n    constructor(uri: theia.Uri) { }\n}\n\n// #region Chat\n\n/**\n * @stubbed\n */\nexport class ChatRequestTurn {\n    readonly prompt: string;\n    readonly participant: string;\n    readonly command?: string;\n    readonly references: theia.ChatPromptReference[];\n    readonly toolReferences: readonly theia.ChatLanguageModelToolReference[];\n    private constructor(prompt: string, command: string | undefined, references: theia.ChatPromptReference[], participant: string,\n        toolReferences: theia.ChatLanguageModelToolReference[]) {\n        this.prompt = prompt;\n        this.command = command;\n        this.participant = participant;\n        this.references = references;\n        this.toolReferences = toolReferences;\n    };\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseTurn {\n    readonly command?: string;\n\n    private constructor(readonly response: ReadonlyArray<theia.ChatResponseMarkdownPart | theia.ChatResponseFileTreePart | theia.ChatResponseAnchorPart\n        | theia.ChatResponseCommandButtonPart>, readonly result: theia.ChatResult, readonly participant: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseAnchorPart {\n    value: URI | Location;\n    title?: string;\n\n    constructor(value: URI | Location, title?: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseProgressPart {\n    value: string;\n\n    constructor(value: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseReferencePart {\n    value: URI | Location;\n    iconPath?: URI | ThemeIcon | { light: URI; dark: URI; };\n\n    constructor(value: URI | theia.Location, iconPath?: URI | ThemeIcon | {\n        light: URI;\n        dark: URI;\n    }) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseCommandButtonPart {\n    value: theia.Command;\n\n    constructor(value: theia.Command) { }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseMarkdownPart {\n    value: theia.MarkdownString;\n\n    constructor(value: string | theia.MarkdownString) {\n    }\n}\n\n/**\n * @stubbed\n */\nexport class ChatResponseFileTreePart {\n    value: theia.ChatResponseFileTree[];\n    baseUri: URI;\n\n    constructor(value: theia.ChatResponseFileTree[], baseUri: URI) { }\n}\n\nexport type ChatResponsePart = ChatResponseMarkdownPart | ChatResponseFileTreePart | ChatResponseAnchorPart\n    | ChatResponseProgressPart | ChatResponseReferencePart | ChatResponseCommandButtonPart;\n\nexport enum ChatResultFeedbackKind {\n    Unhelpful = 0,\n    Helpful = 1,\n}\n\nexport enum LanguageModelChatMessageRole {\n    User = 1,\n    Assistant = 2\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelChatMessage {\n    static User(content: string | (LanguageModelTextPart | LanguageModelToolResultPart)[], name?: string): LanguageModelChatMessage {\n        return new LanguageModelChatMessage(LanguageModelChatMessageRole.User, content, name);\n    }\n\n    static Assistant(content: string | (LanguageModelTextPart | LanguageModelToolResultPart)[], name?: string): LanguageModelChatMessage {\n        return new LanguageModelChatMessage(LanguageModelChatMessageRole.Assistant, content, name);\n    }\n\n    constructor(public role: LanguageModelChatMessageRole, public content: string | (LanguageModelTextPart | LanguageModelToolResultPart | LanguageModelToolCallPart)[],\n        public name?: string) { }\n}\n\nexport class LanguageModelError extends Error {\n\n    static NoPermissions(message?: string): LanguageModelError {\n        return new LanguageModelError(message, LanguageModelError.NoPermissions.name);\n    }\n\n    static Blocked(message?: string): LanguageModelError {\n        return new LanguageModelError(message, LanguageModelError.Blocked.name);\n    }\n\n    static NotFound(message?: string): LanguageModelError {\n        return new LanguageModelError(message, LanguageModelError.NotFound.name);\n    }\n\n    readonly code: string;\n\n    constructor(message?: string, code?: string) {\n        super(message);\n        this.name = 'LanguageModelError';\n        this.code = code ?? '';\n    }\n}\n\nexport enum LanguageModelChatToolMode {\n    Auto = 1,\n    Required = 2\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelToolCallPart {\n    callId: string;\n    name: string;\n    input: object;\n\n    constructor(callId: string, name: string, input: object) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelToolResultPart {\n    callId: string;\n    content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart | unknown)[];\n\n    constructor(callId: string, content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart | unknown)[]) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelTextPart {\n    value: string;\n    constructor(value: string) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelToolResult {\n    content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart | unknown)[];\n\n    constructor(content: (theia.LanguageModelTextPart | theia.LanguageModelPromptTsxPart)[]) { }\n}\n\n/**\n * @stubbed\n */\nexport class LanguageModelPromptTsxPart {\n    value: unknown;\n\n    constructor(value: unknown) { }\n}\n// #endregion\n\n// #region Port Attributes\n\nexport enum PortAutoForwardAction {\n    Notify = 1,\n    OpenBrowser = 2,\n    OpenPreview = 3,\n    Silent = 4,\n    Ignore = 5\n}\n\nexport class PortAttributes {\n    constructor(public autoForwardAction: PortAutoForwardAction) {\n    }\n}\n\n// #endregion\n\n// #region Debug Visualization\n\nexport class DebugVisualization {\n    iconPath?: URI | { light: URI; dark: URI } | ThemeIcon;\n    visualization?: theia.Command | { treeId: string };\n\n    constructor(public name: string) {\n    }\n}\n\n// #endregion\n\n// #region Terminal Shell Integration\n\nexport enum TerminalShellExecutionCommandLineConfidence {\n    Low = 0,\n    Medium = 1,\n    High = 2\n}\n\n// #endregion\n\n/**\n * McpStdioServerDefinition represents an MCP server available by running\n * a local process and operating on its stdin and stdout streams. The process\n * will be spawned as a child process of the extension host and by default\n * will not run in a shell environment.\n */\nexport class McpStdioServerDefinition {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The working directory used to start the server.\n     */\n    cwd?: URI;\n\n    /**\n     * The command used to start the server. Node.js-based servers may use\n     * `process.execPath` to use the editor's version of Node.js to run the script.\n     */\n    command: string;\n\n    /**\n     * Additional command-line arguments passed to the server.\n     */\n    args?: string[];\n\n    /**\n     * Optional additional environment information for the server. Variables\n     * in this environment will overwrite or remove (if null) the default\n     * environment variables of the editor's extension host.\n     */\n    env?: Record<string, string | number | null>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n\n    /**\n     * @param label The human-readable name of the server.\n     * @param command The command used to start the server.\n     * @param args Additional command-line arguments passed to the server.\n     * @param env Optional additional environment information for the server.\n     * @param version Optional version identification for the server.\n     */\n    constructor(label: string, command: string, args?: string[], env?: Record<string, string | number | null>, version?: string) {\n        this.label = label;\n        this.command = command;\n        this.args = args;\n        this.env = env;\n        this.version = version;\n    }\n}\n\n/**\n * McpHttpServerDefinition represents an MCP server available using the\n * Streamable HTTP transport.\n */\nexport class McpHttpServerDefinition {\n    /**\n     * The human-readable name of the server.\n     */\n    readonly label: string;\n\n    /**\n     * The URI of the server. The editor will make a POST request to this URI\n     * to begin each session.\n     */\n    uri: URI;\n\n    /**\n     * Optional additional heads included with each request to the server.\n     */\n    headers?: Record<string, string>;\n\n    /**\n     * Optional version identification for the server. If this changes, the\n     * editor will indicate that tools have changed and prompt to refresh them.\n     */\n    version?: string;\n\n    /**\n     * @param label The human-readable name of the server.\n     * @param uri The URI of the server.\n     * @param headers Optional additional heads included with each request to the server.\n     */\n    constructor(label: string, uri: URI, headers?: Record<string, string>, version?: string) {\n        this.label = label;\n        this.uri = uri;\n        this.headers = headers;\n        this.version = version;\n    };\n}\n\n/**\n * Definitions that describe different types of Model Context Protocol servers,\n * which can be returned from the {@link McpServerDefinitionProvider}.\n */\nexport type McpServerDefinition = McpStdioServerDefinition | McpHttpServerDefinition;\n\n","// *****************************************************************************\n// Copyright (C) 2020 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { match as matchGlobPattern } from '@theia/core/lib/common/glob';\n\nexport interface RelativePattern {\n    base: string;\n    pattern: string;\n    pathToRelative(from: string, to: string): string;\n}\n\nexport interface LanguageFilter {\n    language?: string;\n    scheme?: string;\n    pattern?: string | RelativePattern;\n    hasAccessToAllModels?: boolean;\n}\nexport type LanguageSelector = string | LanguageFilter | (string | LanguageFilter)[];\n\nexport function score(selector: LanguageSelector | undefined, uriScheme: string, path: string, candidateLanguage: string, candidateIsSynchronized: boolean): number {\n\n    if (Array.isArray(selector)) {\n        let ret = 0;\n        for (const filter of selector) {\n            const value = score(filter, uriScheme, path, candidateLanguage, candidateIsSynchronized);\n            if (value === 10) {\n                return value;\n            }\n            if (value > ret) {\n                ret = value;\n            }\n        }\n        return ret;\n\n    } else if (typeof selector === 'string') {\n\n        if (!candidateIsSynchronized) {\n            return 0;\n        }\n\n        if (selector === '*') {\n            return 5;\n        } else if (selector === candidateLanguage) {\n            return 10;\n        } else {\n            return 0;\n        }\n\n    } else if (selector) {\n        const { language, pattern, scheme, hasAccessToAllModels } = selector;\n\n        if (!candidateIsSynchronized && !hasAccessToAllModels) {\n            return 0;\n        }\n\n        let result = 0;\n\n        if (scheme) {\n            if (scheme === uriScheme) {\n                result = 10;\n            } else if (scheme === '*') {\n                result = 5;\n            } else {\n                return 0;\n            }\n        }\n\n        if (language) {\n            if (language === candidateLanguage) {\n                result = 10;\n            } else if (language === '*') {\n                result = Math.max(result, 5);\n            } else {\n                return 0;\n            }\n        }\n\n        if (pattern) {\n            if (pattern === path || matchGlobPattern(pattern, path)) {\n                result = 10;\n            } else {\n                return 0;\n            }\n        }\n\n        return result;\n\n    } else {\n        return 0;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as theia from '@theia/plugin';\nimport * as rpc from '../../common';\nimport { EditorsAndDocumentsExtImpl } from '../editors-and-documents';\nimport * as notebookCommon from '@theia/notebook/lib/common';\nimport { Disposable, URI } from '@theia/core';\nimport * as typeConverters from '../type-converters';\nimport { ModelAddedData, NotebookCellDto, NotebookCellsChangedEventDto, NotebookModelAddedData, NotebookOutputDto } from '../../common';\nimport { NotebookRange } from '../types-impl';\nimport { DocumentsExtImpl } from '../documents';\nimport { UriComponents } from '../../common/uri-components';\n\nclass RawContentChangeEvent {\n\n    constructor(\n        readonly start: number,\n        readonly deletedCount: number,\n        readonly deletedItems: theia.NotebookCell[],\n        readonly items: Cell[]\n    ) { }\n\n    asApiEvent(): theia.NotebookDocumentContentChange {\n        return {\n            range: new NotebookRange(this.start, this.start + this.deletedCount),\n            addedCells: this.items.map(cell => cell.apiCell),\n            removedCells: this.deletedItems,\n        };\n    }\n}\n\nexport class Cell {\n\n    static asModelAddData(cell: NotebookCellDto): ModelAddedData {\n        return {\n            EOL: cell.eol,\n            lines: cell.source,\n            languageId: cell.language,\n            uri: cell.uri,\n            isDirty: false,\n            versionId: 1,\n            modeId: cell.language,\n            encoding: 'utf8' // see https://github.com/microsoft/vscode/blob/118f9ecd71a8f101b71ae19e3bf44802aa173209/src/vs/workbench/api/common/extHostNotebookDocument.ts#L44\n        };\n    }\n\n    private cell: theia.NotebookCell | undefined;\n\n    readonly handle: number;\n    readonly uri: URI;\n    readonly cellKind: notebookCommon.CellKind;\n\n    private outputs: theia.NotebookCellOutput[];\n    private metadata: Readonly<notebookCommon.NotebookCellMetadata>;\n    private previousResult: Readonly<theia.NotebookCellExecutionSummary | undefined>;\n\n    internalMetadata: notebookCommon.NotebookCellInternalMetadata;\n\n    get language(): string {\n        return this.apiCell.document.languageId;\n    }\n\n    constructor(\n        public readonly notebookDocument: NotebookDocument,\n        private readonly editorsAndDocuments: EditorsAndDocumentsExtImpl,\n        private readonly cellData: rpc.NotebookCellDto,\n    ) {\n        this.handle = cellData.handle;\n        this.uri = URI.fromComponents(cellData.uri);\n        this.cellKind = cellData.cellKind;\n        this.outputs = cellData.outputs.map(typeConverters.NotebookCellOutputConverter.to);\n        this.internalMetadata = cellData.internalMetadata ?? {};\n        this.metadata = Object.freeze(cellData.metadata ?? {});\n        this.previousResult = Object.freeze(typeConverters.NotebookCellExecutionSummary.to(cellData.internalMetadata ?? {}));\n    }\n\n    get apiCell(): theia.NotebookCell {\n        if (!this.cell) {\n            const that = this;\n            const data = this.editorsAndDocuments.getDocument(this.uri.toString());\n            if (!data) {\n                throw new Error(`MISSING extHostDocument for notebook cell: ${this.uri}`);\n            }\n            const apiCell: theia.NotebookCell = {\n                get index(): number { return that.notebookDocument.getCellIndex(that); },\n                notebook: that.notebookDocument.apiNotebook,\n                kind: typeConverters.NotebookCellKind.to(this.cellData.cellKind),\n                document: data.document,\n                get outputs(): theia.NotebookCellOutput[] { return that.outputs.slice(0); },\n                get metadata(): notebookCommon.NotebookCellMetadata { return that.metadata; },\n                get executionSummary(): theia.NotebookCellExecutionSummary | undefined { return that.previousResult; }\n            };\n            this.cell = Object.freeze(apiCell);\n        }\n        return this.cell;\n    }\n\n    setOutputs(newOutputs: NotebookOutputDto[]): void {\n        this.outputs = newOutputs.map(typeConverters.NotebookCellOutputConverter.to);\n    }\n\n    // setOutputItems(outputId: string, append: boolean, newOutputItems: NotebookOutputItemDto[]): void {\n    //     const newItems = newOutputItems.map(typeConverters.NotebookCellOutputItem.to);\n    //     const output = this.outputs.find(op => op.id === outputId);\n    //     if (output) {\n    //         if (!append) {\n    //             output.items.length = 0;\n    //         }\n    //         output.items.push(...newItems);\n\n    //         // if (output.items.length > 1 && output.items.every(item => notebookCommon.isTextStreamMime(item.mime))) {\n    //         //     // Look for the mimes in the items, and keep track of their order.\n    //         //     // Merge the streams into one output item, per mime type.\n    //         //     const mimeOutputs = new Map<string, Uint8Array[]>();\n    //         //     const mimeTypes: string[] = [];\n    //         //     output.items.forEach(item => {\n    //         //         let items: Uint8Array[];\n    //         //         if (mimeOutputs.has(item.mime)) {\n    //         //             items = mimeOutputs.get(item.mime)!;\n    //         //         } else {\n    //         //             items = [];\n    //         //             mimeOutputs.set(item.mime, items);\n    //         //             mimeTypes.push(item.mime);\n    //         //         }\n    //         //         items.push(item.data);\n    //         //     });\n    //         //     output.items.length = 0;\n    //         //     mimeTypes.forEach(mime => {\n    //         //         const compressed = notebookCommon.compressOutputItemStreams(mimeOutputs.get(mime)!);\n    //         //         output.items.push({\n    //         //             mime,\n    //         //             data: compressed.buffer\n    //         //         });\n    //         //     });\n    //         // }\n    //     }\n    // }\n\n    setMetadata(newMetadata: notebookCommon.NotebookCellMetadata): void {\n        this.metadata = Object.freeze(newMetadata);\n    }\n\n    setInternalMetadata(newInternalMetadata: notebookCommon.NotebookCellInternalMetadata): void {\n        this.internalMetadata = newInternalMetadata;\n        this.previousResult = Object.freeze(typeConverters.NotebookCellExecutionSummary.to(newInternalMetadata));\n    }\n\n}\n\nexport class NotebookDocument implements Disposable {\n\n    private readonly cells: Cell[];\n\n    private readonly notebookType: string;\n\n    private notebook?: theia.NotebookDocument;\n    private metadata: Record<string, unknown>;\n    private versionId: number = 0;\n    private isDirty: boolean = false;\n    private disposed: boolean = false;\n\n    constructor(\n        private readonly proxy: rpc.NotebookDocumentsMain,\n        private readonly editorsAndDocuments: EditorsAndDocumentsExtImpl,\n        private readonly textDocuments: DocumentsExtImpl,\n        public readonly uri: theia.Uri,\n        notebookData: NotebookModelAddedData\n    ) {\n        this.notebookType = notebookData.viewType;\n        this.metadata = notebookData.metadata ?? {};\n        this.versionId = notebookData.versionId;\n        this.cells = notebookData.cells.map(cell => new Cell(this, editorsAndDocuments, cell));\n    }\n\n    get apiNotebook(): theia.NotebookDocument {\n        if (!this.notebook) {\n            const that = this;\n            const apiObject: theia.NotebookDocument = {\n                get uri(): theia.Uri { return that.uri; },\n                get version(): number { return that.versionId; },\n                get notebookType(): string { return that.notebookType; },\n                get isDirty(): boolean { return that.isDirty; },\n                get isUntitled(): boolean { return that.uri.scheme === 'untitled'; },\n                get isClosed(): boolean { return that.disposed; },\n                get metadata(): Record<string, unknown> { return that.metadata; },\n                get cellCount(): number { return that.cells.length; },\n                cellAt(index): theia.NotebookCell {\n                    index = that.validateIndex(index);\n                    return that.cells[index].apiCell;\n                },\n                getCells(range): theia.NotebookCell[] {\n                    const cells = range ? that.getCells(range) : that.cells;\n                    return cells.map(cell => cell.apiCell);\n                },\n                save(): Promise<boolean> {\n                    return that.save();\n                }\n            };\n            this.notebook = Object.freeze(apiObject);\n        }\n        return this.notebook;\n    }\n\n    private validateIndex(index: number): number {\n        index = index | 0;\n        if (index < 0) {\n            return 0;\n        } else if (index >= this.cells.length) {\n            return this.cells.length - 1;\n        } else {\n            return index;\n        }\n    }\n\n    private validateRange(range: theia.NotebookRange): theia.NotebookRange {\n        let start = range.start | 0;\n        let end = range.end | 0;\n        if (start < 0) {\n            start = 0;\n        }\n        if (end > this.cells.length) {\n            end = this.cells.length;\n        }\n        return range.with({ start, end });\n    }\n\n    private getCells(range: theia.NotebookRange): Cell[] {\n        range = this.validateRange(range);\n        const result: Cell[] = [];\n        for (let i = range.start; i < range.end; i++) {\n            result.push(this.cells[i]);\n        }\n        return result;\n    }\n\n    private async save(): Promise<boolean> {\n        if (this.disposed) {\n            return Promise.reject(new Error('Notebook has been closed'));\n        }\n        return this.proxy.$trySaveNotebook(this.uri);\n    }\n\n    acceptDirty(isDirty: boolean): void {\n        this.isDirty = isDirty;\n    }\n\n    acceptModelChanged(event: NotebookCellsChangedEventDto, isDirty: boolean, newMetadata: notebookCommon.NotebookDocumentMetadata | undefined): theia.NotebookDocumentChangeEvent {\n        this.versionId = event.versionId;\n        this.isDirty = isDirty;\n        // this.acceptDocumentPropertiesChanged({ metadata: newMetadata });\n\n        const result = {\n            notebook: this.apiNotebook,\n            metadata: newMetadata,\n            cellChanges: <theia.NotebookDocumentCellChange[]>[],\n            contentChanges: <theia.NotebookDocumentContentChange[]>[],\n        };\n\n        type RelaxedCellChange = Partial<theia.NotebookDocumentCellChange> & { cell: theia.NotebookCell };\n        const relaxedCellChanges: RelaxedCellChange[] = [];\n\n        // -- apply change and populate content changes\n\n        for (const rawEvent of event.rawEvents) {\n            if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ModelChange) {\n                this.spliceNotebookCells(rawEvent.changes, false, result.contentChanges);\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.Move) {\n                this.moveCells(rawEvent.index, rawEvent.length, rawEvent.newIdx, result.contentChanges);\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.Output) {\n                this.setCellOutputs(rawEvent.index, rawEvent.outputs);\n                relaxedCellChanges.push({ cell: this.cells[rawEvent.index].apiCell, outputs: this.cells[rawEvent.index].apiCell.outputs });\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeDocumentMetadata) {\n                this.metadata = result.metadata ?? {};\n                // } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.OutputItem) {\n                //     this._setCellOutputItems(rawEvent.index, rawEvent.outputId, rawEvent.append, rawEvent.outputItems);\n                //     relaxedCellChanges.push({ cell: this.cells[rawEvent.index].apiCell, outputs: this.cells[rawEvent.index].apiCell.outputs });\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellLanguage) {\n                this.changeCellLanguage(rawEvent.index, rawEvent.language);\n                relaxedCellChanges.push({ cell: this.cells[rawEvent.index].apiCell, document: this.cells[rawEvent.index].apiCell.document });\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellContent) {\n                relaxedCellChanges.push({ cell: this.cells[rawEvent.index].apiCell, document: this.cells[rawEvent.index].apiCell.document });\n\n                // } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellMime) {\n                //     this._changeCellMime(rawEvent.index, rawEvent.mime);\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellMetadata) {\n                this.changeCellMetadata(rawEvent.index, rawEvent.metadata);\n                relaxedCellChanges.push({ cell: this.cells[rawEvent.index].apiCell, metadata: this.cells[rawEvent.index].apiCell.metadata });\n\n            } else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellInternalMetadata) {\n                this.changeCellInternalMetadata(rawEvent.index, rawEvent.internalMetadata);\n                relaxedCellChanges.push({ cell: this.cells[rawEvent.index].apiCell, executionSummary: this.cells[rawEvent.index].apiCell.executionSummary });\n            }\n        }\n\n        // -- compact cellChanges\n\n        const map = new Map<theia.NotebookCell, number>();\n        for (let i = 0; i < relaxedCellChanges.length; i++) {\n            const relaxedCellChange = relaxedCellChanges[i];\n            const existing = map.get(relaxedCellChange.cell);\n            if (existing === undefined) {\n                const newLen = result.cellChanges.push({\n                    document: undefined,\n                    executionSummary: undefined,\n                    metadata: undefined,\n                    outputs: undefined,\n                    ...relaxedCellChange,\n                });\n                map.set(relaxedCellChange.cell, newLen - 1);\n            } else {\n                result.cellChanges[existing] = {\n                    ...result.cellChanges[existing],\n                    ...relaxedCellChange\n                };\n            }\n        }\n\n        // Freeze event properties so handlers cannot accidentally modify them\n        Object.freeze(result);\n        Object.freeze(result.cellChanges);\n        Object.freeze(result.contentChanges);\n\n        return result;\n    }\n\n    private spliceNotebookCells(splices: notebookCommon.NotebookCellTextModelSplice<NotebookCellDto>[], initialization: boolean,\n        bucket: theia.NotebookDocumentContentChange[] | undefined): void {\n        if (this.disposed) {\n            return;\n        }\n\n        const addedDocuments: ModelAddedData[] = [];\n        const removedDocuments: UriComponents[] = [];\n\n        const contentChangeEvents: RawContentChangeEvent[] = [];\n\n        splices.reverse().forEach(splice => {\n            const cellDtos = splice.newItems;\n            const newCells = cellDtos.map((cell: NotebookCellDto) => {\n\n                const extCell = new Cell(this, this.editorsAndDocuments, cell);\n                if (!initialization) {\n                    addedDocuments.push(Cell.asModelAddData(cell));\n                }\n                return extCell;\n            });\n\n            const changeEvent = new RawContentChangeEvent(splice.start, splice.deleteCount, [], newCells);\n            const deletedItems = this.cells.splice(splice.start, splice.deleteCount, ...newCells);\n            for (const cell of deletedItems) {\n                changeEvent.deletedItems.push(cell.apiCell);\n                removedDocuments.push(cell.uri.toComponents());\n            }\n            contentChangeEvents.push(changeEvent);\n        });\n\n        if (addedDocuments.length > 0 || removedDocuments.length > 0) {\n            this.editorsAndDocuments.acceptEditorsAndDocumentsDelta({\n                addedDocuments,\n                removedDocuments\n            });\n        }\n\n        if (bucket) {\n            for (const changeEvent of contentChangeEvents) {\n                bucket.push(changeEvent.asApiEvent());\n            }\n        }\n    }\n\n    private moveCells(index: number, length: number, newIdx: number, bucket: theia.NotebookDocumentContentChange[]): void {\n        const cells = this.cells.splice(index, length);\n        this.cells.splice(newIdx, 0, ...cells);\n        const changes = [\n            new RawContentChangeEvent(index, length, cells.map(c => c.apiCell), []),\n            new RawContentChangeEvent(newIdx, 0, [], cells)\n        ];\n        for (const change of changes) {\n            bucket.push(change.asApiEvent());\n        }\n    }\n\n    private setCellOutputs(index: number, outputs: NotebookOutputDto[]): void {\n        const cell = this.cells[index];\n        cell.setOutputs(outputs);\n    }\n\n    // private _setCellOutputItems(index: number, outputId: string, append: boolean, outputItems: NotebookOutputItemDto[]): void {\n    //     const cell = this.cells[index];\n    //     cell.setOutputItems(outputId, append, outputItems);\n    // }\n\n    private changeCellLanguage(index: number, newLanguageId: string): void {\n        const cell = this.cells[index];\n        if (cell.apiCell.document.languageId !== newLanguageId) {\n            this.textDocuments.$acceptModelModeChanged(cell.uri.toComponents(), cell.language, newLanguageId);\n        }\n    }\n\n    private changeCellMetadata(index: number, newMetadata: notebookCommon.NotebookCellMetadata): void {\n        const cell = this.cells[index];\n        cell.setMetadata(newMetadata);\n    }\n\n    private changeCellInternalMetadata(index: number, newInternalMetadata: notebookCommon.NotebookCellInternalMetadata): void {\n        const cell = this.cells[index];\n        cell.setInternalMetadata(newInternalMetadata);\n    }\n\n    getCellFromApiCell(apiCell: theia.NotebookCell): Cell | undefined {\n        return this.cells.find(cell => cell.apiCell === apiCell);\n    }\n\n    getCell(cellHandle: number): Cell | undefined {\n        return this.cells.find(cell => cell.handle === cellHandle);\n    }\n\n    getCellFromIndex(index: number): Cell | undefined {\n        return this.cells[index];\n    }\n\n    getCellIndex(cell: Cell): number {\n        return this.cells.indexOf(cell);\n    }\n\n    dispose(): void {\n        this.disposed = true;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Emitter } from '@theia/core/shared/vscode-languageserver-protocol';\nimport * as theia from '@theia/plugin';\n\nimport { OutputChannelRegistryMain, PluginInfo } from '../../common/plugin-api-rpc';\nimport { OutputChannelImpl } from './output-channel-item';\nimport { LogLevel } from '../types-impl';\nimport { isArray, isObject } from '@theia/core';\n\nexport class LogOutputChannelImpl extends OutputChannelImpl implements theia.LogOutputChannel {\n\n    readonly onDidChangeLogLevelEmitter: Emitter<theia.LogLevel> = new Emitter<theia.LogLevel>();\n    readonly onDidChangeLogLevel: theia.Event<theia.LogLevel> = this.onDidChangeLogLevelEmitter.event;\n    public logLevel: theia.LogLevel;\n\n    constructor(name: string, proxy: OutputChannelRegistryMain, pluginInfo: PluginInfo) {\n        super(name, proxy, pluginInfo);\n        this.setLogLevel(LogLevel.Info);\n    }\n\n    setLogLevel(level: theia.LogLevel): void {\n        if (this.logLevel !== level) {\n            this.logLevel = level;\n            this.onDidChangeLogLevelEmitter.fire(this.logLevel);\n        }\n    }\n\n    getLogLevel(): theia.LogLevel {\n        return this.logLevel;\n    }\n\n    override append(value: string): void {\n        super.validate();\n        this.info(value);\n    }\n\n    override appendLine(value: string): void {\n        super.validate();\n        this.append(value + '\\n');\n    }\n\n    override dispose(): void {\n        super.dispose();\n        this.onDidChangeLogLevelEmitter.dispose();\n    }\n\n    protected log(level: theia.LogLevel, message: string): void {\n        super.validate();\n        if (this.checkLogLevel(level)) {\n            const now = new Date();\n            const eol = message.endsWith('\\n') ? '' : '\\n';\n            const logMessage = `${now.toISOString()} [${LogLevel[level]}] ${message}${eol}`;\n            this.proxy.$append(this.name, logMessage, this.pluginInfo);\n        }\n    }\n\n    private checkLogLevel(level: theia.LogLevel): boolean {\n        return this.logLevel <= level;\n    }\n\n    trace(message: string, ...args: any[]): void {\n        this.log(LogLevel.Trace, this.format(message, args));\n    }\n\n    debug(message: string, ...args: any[]): void {\n        this.log(LogLevel.Debug, this.format(message, args));\n    }\n\n    info(message: string, ...args: any[]): void {\n        this.log(LogLevel.Info, this.format(message, args));\n    }\n\n    warn(message: string, ...args: any[]): void {\n        this.log(LogLevel.Warning, this.format(message, args));\n    }\n\n    error(errorMsg: string | Error, ...args: any[]): void {\n        if (errorMsg instanceof Error) {\n            this.log(LogLevel.Error, this.format(errorMsg.stack || errorMsg.message, args));\n        } else {\n            this.log(LogLevel.Error, this.format(errorMsg, args));\n        }\n    }\n\n    private format(message: string, args: any[]): string {\n        if (args.length > 0) {\n            return `${message} ${args.map((arg: any) => isObject(arg) || isArray(arg) ? JSON.stringify(arg) : arg).join(' ')}`;\n        }\n        return message;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2022 STMicroelectronics and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * The URI scheme for debug URIs.\n */\nexport const DEBUG_SCHEME = 'debug';\n/**\n * The pattern for URI schemes.\n */\nexport const SCHEME_PATTERN = /^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/;\n","\n// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function ok(val?: any, message?: string): void {\n    if (!val || val === null) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion failed');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as types from '../types-impl';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { Definition, Location, LocationLink } from '../../common/plugin-api-rpc-model';\nimport { isDefinitionLinkArray, isLocationArray } from './util';\n\nexport class DeclarationAdapter {\n\n    constructor(\n        private readonly provider: theia.DeclarationProvider,\n        private readonly documents: DocumentsExtImpl) {\n    }\n\n    provideDeclaration(resource: URI, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideDeclaration(document, zeroBasedPosition, token)).then(definition => {\n            if (!definition) {\n                return undefined;\n            }\n\n            if (definition instanceof types.Location) {\n                return Converter.fromLocation(definition);\n            }\n\n            if (isLocationArray(definition)) {\n                const locations: Location[] = [];\n\n                for (const location of definition) {\n                    locations.push(Converter.fromLocation(location));\n                }\n\n                return locations;\n            }\n\n            if (isDefinitionLinkArray(definition)) {\n                const definitionLinks: LocationLink[] = [];\n\n                for (const definitionLink of definition) {\n                    definitionLinks.push(Converter.fromDefinitionLink(definitionLink));\n                }\n\n                return definitionLinks;\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport { CodeLensSymbol } from '../../common/plugin-api-rpc-model';\nimport * as Converter from '../type-converters';\nimport { ObjectIdentifier } from '../../common/object-identifier';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\n\n/** Adapts the calls from main to extension thread for providing/resolving the code lenses. */\nexport class CodeLensAdapter {\n\n    private static readonly BAD_CMD: theia.Command = { command: 'missing', title: '<<MISSING COMMAND>>' };\n\n    private cacheId = 0;\n    private readonly cache = new Map<number, theia.CodeLens>();\n    private readonly disposables = new Map<number, DisposableCollection>();\n\n    constructor(\n        private readonly provider: theia.CodeLensProvider,\n        private readonly documents: DocumentsExtImpl,\n        private readonly commands: CommandRegistryImpl\n    ) { }\n\n    provideCodeLenses(resource: URI, token: theia.CancellationToken): Promise<CodeLensSymbol[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const doc = document.document;\n\n        return Promise.resolve(this.provider.provideCodeLenses(doc, token)).then(lenses => {\n            if (Array.isArray(lenses)) {\n                return lenses.map(lens => {\n                    const cacheId = this.cacheId++;\n                    const toDispose = new DisposableCollection();\n                    const lensSymbol = ObjectIdentifier.mixin({\n                        range: Converter.fromRange(lens.range)!,\n                        command: this.commands.converter.toSafeCommand(lens.command, toDispose)\n                    }, cacheId);\n                    this.cache.set(cacheId, lens);\n                    this.disposables.set(cacheId, toDispose);\n                    return lensSymbol;\n                });\n            }\n            return undefined;\n        });\n    }\n\n    async resolveCodeLens(resource: URI, symbol: CodeLensSymbol, token: theia.CancellationToken): Promise<CodeLensSymbol | undefined> {\n        const cacheId = ObjectIdentifier.of(symbol);\n        const lens = this.cache.get(cacheId);\n        if (!lens) {\n            return undefined;\n        }\n\n        let newLens: theia.CodeLens | undefined | null;\n        if (typeof this.provider.resolveCodeLens === 'function' && !lens.isResolved) {\n            newLens = await this.provider.resolveCodeLens(lens, token);\n            if (token.isCancellationRequested) {\n                return undefined;\n            }\n        }\n        newLens = newLens || lens;\n\n        const disposables = this.disposables.get(cacheId);\n        if (!disposables) {\n            // already been disposed of\n            return undefined;\n        }\n        symbol.command = this.commands.converter.toSafeCommand(newLens.command ? newLens.command : CodeLensAdapter.BAD_CMD, disposables);\n        return symbol;\n    }\n\n    releaseCodeLenses(ids: number[]): void {\n        ids.forEach(id => {\n            this.cache.delete(id);\n            const toDispose = this.disposables.get(id);\n            if (toDispose) {\n                toDispose.dispose();\n                this.disposables.delete(id);\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from 'inversify';\nimport {\n    Progress,\n    ProgressUpdate,\n    ProgressMessage\n} from './message-service-protocol';\nimport { CancellationTokenSource } from './cancellation';\nimport { ProgressClient } from './progress-service-protocol';\nimport { MessageService } from './message-service';\n\n@injectable()\nexport class ProgressService {\n\n    @inject(ProgressClient) protected readonly client: ProgressClient;\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    async showProgress(message: ProgressMessage, onDidCancel?: () => void): Promise<Progress> {\n        if (this.shouldDelegate(message)) {\n            return this.messageService.showProgress(message, onDidCancel);\n        }\n        const id = this.newProgressId();\n        const cancellationSource = new CancellationTokenSource();\n        const report = (update: ProgressUpdate) => {\n            this.client.reportProgress(id, update, message, cancellationSource.token);\n        };\n        const actions = new Set<string>(message.actions);\n        if (ProgressMessage.isCancelable(message)) {\n            actions.delete(ProgressMessage.Cancel);\n            actions.add(ProgressMessage.Cancel);\n        }\n        const clientMessage = { ...message, actions: Array.from(actions) };\n        const result = this.client.showProgress(id, clientMessage, cancellationSource.token);\n        if (ProgressMessage.isCancelable(message) && typeof onDidCancel === 'function') {\n            result.then(value => {\n                if (value === ProgressMessage.Cancel) {\n                    onDidCancel();\n                }\n            });\n        }\n        return {\n            id,\n            cancel: () => cancellationSource.cancel(),\n            result,\n            report\n        };\n    }\n    protected shouldDelegate(message: ProgressMessage): boolean {\n        const location = message.options && message.options.location;\n        return location === 'notification';\n    }\n\n    private progressIdPrefix = Math.random().toString(36).substring(5);\n    private counter = 0;\n    protected newProgressId(): string {\n        return `${this.progressIdPrefix}-${++this.counter}`;\n    }\n\n    async withProgress<T>(text: string, locationId: string, task: () => Promise<T>, onDidCancel?: () => void): Promise<T> {\n        const progress = await this.showProgress({ text, options: { cancelable: true, location: locationId } }, onDidCancel);\n        try {\n            return await task();\n        } finally {\n            progress.cancel();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/workbench/api/common/extHostTesting.ts\n\n// /* eslint-disable */\n\n/* tslint:disable:typedef */\n\nimport * as theia from '@theia/plugin';\nimport { CancellationToken, CancellationTokenSource } from '@theia/core/lib/common/cancellation';\nimport { Disposable, DisposableCollection, Emitter, Event } from '@theia/core';\nimport { hash } from '@theia/core/lib/common/hash';\n\nimport { isDefined } from '@theia/core/lib/common/types';\nimport { TestingExt, PLUGIN_RPC_CONTEXT, TestingMain } from '../common/plugin-api-rpc';\nimport { CommandRegistryImpl } from './command-registry';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { generateUuid } from '@theia/core/lib/common/uuid';\nimport * as Convert from './type-converters';\nimport { TestItemImpl, TestItemCollection } from './test-item';\nimport { AccumulatingTreeDeltaEmitter, TreeDelta } from '@theia/test/lib/common/tree-delta';\nimport {\n    TestItemDTO, TestOutputDTO, TestExecutionState, TestRunProfileDTO,\n    TestRunProfileKind, TestRunRequestDTO, TestStateChangeDTO, TestItemReference, TestMessageArg, TestMessageDTO,\n    TestMessageStackFrameDTO\n} from '../common/test-types';\nimport * as protocol from '@theia/core/shared/vscode-languageserver-protocol';\nimport { ChangeBatcher, observableProperty } from '@theia/test/lib/common/collections';\nimport { Location, Position, Range, TestRunRequest, URI } from './types-impl';\nimport { MarkdownString } from '../common/plugin-api-rpc-model';\n\ntype RefreshHandler = (token: theia.CancellationToken) => void | theia.Thenable<void>;\ntype ResolveHandler = (item: theia.TestItem | undefined) => theia.Thenable<void> | void;\n\nexport class TestControllerImpl implements theia.TestController {\n    protected readonly _profiles = new Map<number, TestRunProfile>();\n    private activeRuns = new Map<theia.TestRunRequest, TestRun>();\n    private deltaBuilder: AccumulatingTreeDeltaEmitter<string, TestItemImpl>;\n    private _refreshHandler?: RefreshHandler;\n    private _resolveHandler?: ResolveHandler;\n\n    constructor(\n        private onDispose: () => void,\n        protected readonly proxy: TestingMain,\n        readonly id: string,\n        private _label: string) {\n\n        this.proxy.$registerTestController(id, _label);\n\n        this.deltaBuilder = new AccumulatingTreeDeltaEmitter<string, TestItemImpl>(200);\n        this.deltaBuilder.onDidFlush(delta => {\n            // console.debug('flushing delta'); // logging levels don't work in plugin host: https://github.com/eclipse-theia/theia/issues/12234\n            const mapped = this.mapDeltas(delta);\n            // console.debug(JSON.stringify(mapped, undefined, 3));\n            this.proxy.$notifyDelta(id, mapped);\n        });\n\n        this.items = new TestItemCollection(this, item => item.path, () => this.deltaBuilder);\n    }\n    mapDeltas(deltas: TreeDelta<string, TestItemImpl>[]): TreeDelta<string, TestItemDTO>[] {\n        return deltas.map(delta => this.mapDelta(delta));\n    }\n\n    mapDelta(delta: TreeDelta<string, TestItemImpl>): TreeDelta<string, TestItemDTO> {\n        return {\n            path: delta.path,\n            type: delta.type,\n            value: delta.value ? Convert.TestItem.fromPartial(delta.value) : undefined,\n            childDeltas: delta.childDeltas?.map(d => this.mapDelta(d))\n        };\n    }\n\n    readonly items: TestItemCollection;\n\n    get label(): string {\n        return this._label;\n    }\n    set label(value: string) {\n        this._label = value;\n        this.proxy.$updateController(this.id, { label: value });\n    }\n    get refreshHandler(): RefreshHandler | undefined {\n        return this._refreshHandler;\n    }\n    set refreshHandler(value: RefreshHandler | undefined) {\n        this._refreshHandler = value;\n        this.proxy.$updateController(this.id, { canRefresh: !!value });\n    }\n\n    get resolveHandler(): ResolveHandler | undefined {\n        return this._resolveHandler;\n    }\n\n    set resolveHandler(handler: ResolveHandler | undefined) {\n        this._resolveHandler = handler;\n        this.proxy.$updateController(this.id, { canResolve: !!handler });\n    }\n\n    getProfile(id: string) {\n        return this._profiles.get(Number.parseInt(id));\n    }\n\n    createRunProfile(label: string, kind: TestRunProfileKind, runHandler: (request: theia.TestRunRequest, token: CancellationToken) => Thenable<void> | void,\n        isDefault?: boolean, tag?: theia.TestTag, supportsContinuousRun?: boolean): theia.TestRunProfile {\n        // Derive the profile ID from a hash so that the same profile will tend\n        // to have the same hashes, allowing re-run requests to work across reloads.\n        let profileId = hash(label);\n        while (this._profiles.has(profileId)) {\n            profileId++;\n        }\n\n        const profile = new TestRunProfile(this.proxy, this.id, profileId.toString(), label, kind, runHandler, isDefault, tag);\n        this._profiles.set(profileId, profile);\n        return profile;\n    }\n    createTestItem(id: string, label: string, uri?: theia.Uri): theia.TestItem {\n        return new TestItemImpl(id, uri, label);\n    }\n\n    createTestRun(request: theia.TestRunRequest, name?: string, persist: boolean = true): theia.TestRun {\n        const run = new TestRun(this, this.proxy, name || '', persist, true, request.preserveFocus);\n        const endListener = run.onWillFlush(() => {\n            // make sure we notify the front end of test item changes before test run state is sent\n            this.deltaBuilder.flush();\n        });\n        run.onDidEnd(() => {\n            endListener.dispose();\n            this.activeRuns.delete(request);\n        });\n        this.activeRuns.set(request, run);\n        return run;\n    }\n\n    dispose() {\n        this.proxy.$unregisterTestController(this.id);\n        this.onDispose();\n    }\n\n    runTestsForUI(profileId: string, name: string, includedTests: string[][], excludedTests: string[][], preserveFocus: boolean): void {\n        const profile = this.getProfile(profileId);\n        if (!profile) {\n            console.error(`No test run profile found for controller ${this.id} with id ${profileId} `);\n            return;\n        }\n\n        const includeTests = includedTests\n            .map(testId => this.items.find(testId))\n            .filter(isDefined);\n\n        if (includeTests.length === 0) {\n            return;\n        }\n        function isPrefix(left: string[], right: string[]) {\n            if (left.length > right.length) {\n                return false;\n            }\n\n            for (let i = 0; i < left.length; i++) {\n                if (left[i] !== right[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        const excludeTests = excludedTests\n            .filter(path => includedTests.some(\n                includedPath => isPrefix(path, includedPath)\n            ))\n            .map(path => this.items.find(path))\n            .filter(isDefined);\n\n        const request = new TestRunRequest(\n            includeTests, excludeTests, profile, false /* don't support continuous run yet */, preserveFocus\n        );\n\n        // we do not cancel test runs via a cancellation token, but instead invoke \"cancel\" on the test runs\n        profile.runHandler(request, CancellationToken.None);\n    }\n\n    cancelRun(runId?: string): void {\n        if (runId === undefined) {\n            this.activeRuns.forEach(run => run.cancel());\n        } else {\n            const run = [...this.activeRuns.values()].find(r => r.id === runId);\n            if (!run) {\n                throw new Error(`TestController ${this.id} cannot cancel non - existing run ${runId} `);\n            }\n            run.cancel();\n        }\n    }\n\n    invalidateTestResults(items?: theia.TestItem | readonly theia.TestItem[] | undefined): void {\n        // do nothing for the moment, since we don't have a UI to \"mark as outdated and deprioritized in the editor's UI.\"\n    }\n}\n\nfunction checkTestInstance(item: theia.TestItem): TestItemImpl;\nfunction checkTestInstance(item?: theia.TestItem): TestItemImpl | undefined;\nfunction checkTestInstance(item?: theia.TestItem): TestItemImpl | undefined {\n    if (item instanceof TestItemImpl) {\n        if (!item.path) {\n            throw new Error('Test item not added to a collection');\n        }\n        return <TestItemImpl>item;\n    } else if (item) {\n        throw new Error('Not a TestItem instance');\n    }\n    return undefined;\n}\n\nexport function checkTestRunInstance(item: theia.TestRun): TestRun;\nexport function checkTestRunInstance(item?: theia.TestRun): TestRun | undefined;\nexport function checkTestRunInstance(item?: theia.TestRun): TestRun | undefined {\n    if (item instanceof TestRun) {\n        return <TestRun>item;\n    } else if (item) {\n        throw new Error('Not a TestRun instance');\n    }\n    return undefined;\n}\n\nexport class TestRun implements theia.TestRun {\n    private onDidEndEmitter = new Emitter<void>();\n    onDidEnd: Event<void> = this.onDidEndEmitter.event;\n    private onWillFlushEmitter = new Emitter<void>();\n    onWillFlush: Event<void> = this.onWillFlushEmitter.event;\n    private onDidDisposeEmitter = new Emitter<void>();\n    onDidDispose: Event<void> = this.onDidDisposeEmitter.event;\n\n    readonly id: string;\n    private testStateDeltas = new Map<theia.TestItem, TestStateChangeDTO>();\n    private testOutputDeltas: TestOutputDTO[] = [];\n    private changeBatcher = new ChangeBatcher(() => {\n        this.emitChange();\n    }, 200);\n    private ended: boolean;\n    private tokenSource: CancellationTokenSource;\n\n    constructor(\n        readonly controller: TestControllerImpl,\n        private readonly proxy: TestingMain,\n        readonly name: string,\n        readonly isPersisted: boolean,\n        isRunning: boolean,\n        preserveFocus: boolean) {\n        this.id = generateUuid();\n\n        this.tokenSource = new CancellationTokenSource();\n\n        this.proxy.$notifyTestRunCreated(this.controller.id, { id: this.id, name: this.name, isRunning }, preserveFocus);\n    }\n\n    get token(): CancellationToken {\n        return this.tokenSource.token;\n    }\n\n    enqueued(test: theia.TestItem): void {\n        this.updateTestState(test, { itemPath: checkTestInstance(test).path, state: TestExecutionState.Queued });\n    }\n\n    started(test: theia.TestItem): void {\n        this.updateTestState(test, { itemPath: checkTestInstance(test).path, state: TestExecutionState.Running });\n    }\n    skipped(test: theia.TestItem): void {\n        this.updateTestState(test, { itemPath: checkTestInstance(test).path, state: TestExecutionState.Skipped });\n    }\n    failed(test: theia.TestItem, message: theia.TestMessage | readonly theia.TestMessage[], duration?: number | undefined): void {\n        this.updateTestState(test, { itemPath: checkTestInstance(test).path, state: TestExecutionState.Failed, messages: Convert.TestMessage.from(message), duration });\n    }\n    errored(test: theia.TestItem, message: theia.TestMessage | readonly theia.TestMessage[], duration?: number | undefined): void {\n        this.updateTestState(test, { itemPath: checkTestInstance(test).path, state: TestExecutionState.Errored, messages: Convert.TestMessage.from(message), duration });\n    }\n    passed(test: theia.TestItem, duration?: number | undefined): void {\n        this.updateTestState(test, { itemPath: checkTestInstance(test).path, state: TestExecutionState.Passed, duration });\n    }\n    appendOutput(output: string, location?: theia.Location | undefined, test?: theia.TestItem | undefined): void {\n        this.testOutputDeltas.push({ output, location: Convert.fromLocation(location), itemPath: checkTestInstance(test)?.path });\n        this.changeBatcher.changeOccurred();\n    }\n\n    end(): void {\n        this.ended = true;\n        this.proxy.$notifyTestRunEnded(this.controller.id, this.id);\n    }\n\n    /** @stubbed */\n    addCoverage(fileCoverage: theia.FileCoverage): void { }\n\n    private checkNotEnded(test: theia.TestItem): boolean {\n        if (this.ended) {\n            console.warn(`Setting the state of test \"${test.id}\" is a no - op after the run ends.`);\n            return false;\n        }\n        return true;\n    }\n\n    private updateTestState<T extends TestStateChangeDTO>(item: theia.TestItem, state: T) {\n        if (this.checkNotEnded(item)) {\n            this.testStateDeltas.set(item, state);\n            this.changeBatcher.changeOccurred();\n        }\n    }\n\n    emitChange() {\n        this.onWillFlushEmitter.fire();\n        this.proxy.$notifyTestStateChanged(this.controller.id, this.id, [...this.testStateDeltas.values()], this.testOutputDeltas);\n        this.testOutputDeltas = [];\n        this.testStateDeltas = new Map();\n    }\n\n    cancel() {\n        this.tokenSource.cancel();\n    }\n}\n\nexport class TestingExtImpl implements TestingExt {\n    private readonly controllersById = new Map<string, TestControllerImpl>();\n    private readonly proxy: TestingMain;\n\n    constructor(\n        rpc: RPCProtocol,\n        commands: CommandRegistryImpl\n    ) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TESTING_MAIN);\n\n        commands.registerArgumentProcessor({\n            processArgument: arg => {\n                if (TestItemReference.is(arg)) {\n                    return this.toTestItem(arg);\n                } else if (Array.isArray(arg)) {\n                    return arg.map(param => TestItemReference.is(param) ? this.toTestItem(param) : param);\n                } else if (TestMessageArg.is(arg)) {\n                    return this.fromTestMessageArg(arg);\n                } else {\n                    return arg;\n                }\n            }\n        });\n\n    }\n\n    fromTestMessageArg(arg: TestMessageArg): { test?: theia.TestItem, message: theia.TestMessage } {\n        const testItem = arg.testItemReference ? this.toTestItem(arg.testItemReference) : undefined;\n        const message = this.toTestMessage(arg.testMessage);\n        return {\n            test: testItem,\n            message: message\n        };\n    }\n\n    toTestMessage(testMessage: TestMessageDTO): theia.TestMessage {\n        const message = MarkdownString.is(testMessage.message) ? Convert.toMarkdown(testMessage.message) : testMessage.message;\n\n        return {\n            message: message,\n            actualOutput: testMessage.actual,\n            expectedOutput: testMessage.expected,\n            contextValue: testMessage.contextValue,\n            location: this.toLocation(testMessage.location),\n            stackTrace: testMessage.stackTrace ? testMessage.stackTrace.map(frame => this.toStackFrame(frame)) : undefined\n        };\n    }\n\n    toLocation(location: protocol.Location | undefined): Location | undefined {\n        if (!location) {\n            return undefined;\n        }\n        return new Location(URI.parse(location.uri), this.toRange(location.range));\n    }\n\n    toRange(range: protocol.Range): Range {\n        return new Range(this.toPosition(range.start), this.toPosition(range.end));\n    }\n\n    toPosition(position: protocol.Position): Position;\n    toPosition(position: protocol.Position | undefined): Position | undefined;\n    toPosition(position: protocol.Position | undefined): Position | undefined {\n        if (!position) {\n            return undefined;\n        }\n        return new Position(position.line, position.character);\n    }\n\n    toStackFrame(stackFrame: TestMessageStackFrameDTO): theia.TestMessageStackFrame {\n        return {\n            label: stackFrame.label,\n            position: this.toPosition(stackFrame.position),\n            uri: stackFrame.uri ? URI.parse(stackFrame.uri) : undefined\n        };\n    }\n\n    toTestItem(ref: TestItemReference): theia.TestItem {\n        const result = this.withController(ref.controllerId).items.find(ref.testPath);\n        if (!result) {\n            throw new Error(`Test item for controller ${ref.controllerId} not found: ${ref.testPath}`);\n        }\n        return result;\n    }\n\n    protected withController(controllerId: string): TestControllerImpl {\n        const controller = this.controllersById.get(controllerId);\n        if (!controller) {\n            throw new Error(`No test controller found with id \"${controllerId}\"`);\n        }\n        return controller;\n    }\n\n    $onResolveChildren(controllerId: string, path: string[]): void {\n        const controller = this.withController(controllerId);\n        if (controller.resolveHandler) {\n            const item = controller.items.find(path);\n            if (item?.canResolveChildren) { // the item and resolve handler might have been been changed, but not sent to the front end\n                controller.resolveHandler?.(item);\n            }\n        }\n    }\n\n    /**\n     * Implements theia.test.registerTestProvider\n     */\n    createTestController(controllerId: string, label: string): theia.TestController {\n        if (this.controllersById.has(controllerId)) {\n            throw new Error(`Attempt to insert a duplicate controller with ID \"${controllerId}\"`);\n        }\n\n        const disposable = new DisposableCollection();\n\n        const controller = new TestControllerImpl(() => disposable.dispose(), this.proxy, controllerId, label);\n\n        this.controllersById.set(controllerId, controller);\n        disposable.push(Disposable.create(() => this.controllersById.delete(controllerId)));\n\n        return controller;\n    }\n\n    /** @inheritdoc */\n    $onConfigureRunProfile(controllerId: string, profileId: string): void {\n        this.controllersById.get(controllerId)?.getProfile(profileId)?.configureHandler?.();\n    }\n\n    /** @inheritdoc */\n    $onDidChangeDefault(controllerId: string, profileId: string, isDefault: boolean): void {\n        const profile = this.controllersById.get(controllerId)?.getProfile(profileId);\n        if (profile) {\n            profile.doSetDefault(isDefault);\n        }\n    }\n\n    /** @inheritdoc */\n    async $refreshTests(controllerId: string, token: CancellationToken): Promise<void> {\n        await this.withController(controllerId).refreshHandler?.(token);\n    }\n\n    /**\n     * Runs tests with the given set of IDs. Allows for test from multiple\n     * providers to be run.\n     * @override\n     */\n    $onRunControllerTests(reqs: TestRunRequestDTO[]): void {\n        reqs.map(req => this.runTestsForUI(req));\n    }\n\n    runTestsForUI(req: TestRunRequestDTO): void {\n        this.withController(req.controllerId).runTestsForUI(req.profileId, req.name, req.includedTests, req.excludedTests, req.preserveFocus);\n    }\n\n    /**\n     * Cancels an ongoing test run.\n     */\n    $onCancelTestRun(controllerId: string, runId: string): void {\n        this.withController(controllerId).cancelRun(runId);\n    }\n}\n\nexport class TestRunProfile implements theia.TestRunProfile {\n    private readonly proxy: TestingMain;\n    supportsContinuousRun: boolean = false;\n\n    constructor(\n        proxy: TestingMain,\n        readonly controllerId: string,\n        readonly profileId: string,\n        label: string,\n        readonly kind: theia.TestRunProfileKind,\n        public runHandler: (request: theia.TestRunRequest, token: theia.CancellationToken) => Thenable<void> | void,\n        isDefault = false,\n        tag: theia.TestTag | undefined = undefined,\n    ) {\n        proxy.$notifyTestRunProfileCreated(controllerId, {\n            id: profileId,\n            kind: kind,\n            tag: tag ? tag.toString() : '',\n            label: label,\n            isDefault: isDefault,\n            canConfigure: false,\n        });\n        this.proxy = proxy;\n        this.label = label;\n        this.tag = tag;\n        this.label = label;\n        this.isDefault = isDefault;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected notifyPropertyChange(property: keyof TestRunProfileDTO, value: any): void {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const val: any = {};\n        val[property] = value;\n        this.proxy.$updateTestRunProfile(this.controllerId, this.profileId, val);\n    }\n\n    @observableProperty('notifyPropertyChange')\n    label: string;\n\n    _isDefault: boolean;\n\n    get isDefault(): boolean {\n        return this._isDefault;\n    }\n\n    set isDefault(isDefault: boolean) {\n        if (this.doSetDefault(isDefault)) {\n            this.proxy.$updateTestRunProfile(this.controllerId, this.profileId, { isDefault: isDefault });\n        }\n    }\n\n    doSetDefault(isDefault: boolean): boolean {\n        if (this._isDefault !== isDefault) {\n            this._isDefault = isDefault;\n            this.onDidChangeDefaultEmitter.fire(isDefault);\n            return true;\n        }\n        return false;\n    }\n\n    private onDidChangeDefaultEmitter = new Emitter<boolean>();\n    onDidChangeDefault = this.onDidChangeDefaultEmitter.event;\n\n    @observableProperty('notifyTagChange')\n    tag: theia.TestTag | undefined;\n\n    protected notifyTagChange(_property: keyof TestRunProfileDTO, value?: theia.TestTag): void {\n        this.proxy.$updateTestRunProfile(this.controllerId, this.profileId, { tag: value ? value.toString() : '' });\n    }\n\n    @observableProperty('notifyConfigureHandlerChange')\n    configureHandler: () => void | undefined;\n\n    protected notifyConfigureHandlerChange(_property: keyof TestRunProfileDTO, value?: () => void): void {\n        this.proxy.$updateTestRunProfile(this.controllerId, this.profileId, { canConfigure: !!value });\n    }\n\n    dispose(): void {\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2023 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/**\n * A convenience class for managing a \"map of maps\" of arbitrary depth\n */\nexport class MultiKeyMap<K, V> {\n    private rootMap = new Map();\n\n    constructor(private readonly keyLength: number) {\n    }\n\n    static create<S, T>(keyLength: number, data: [S[], T][]): MultiKeyMap<S, T> {\n        const result = new MultiKeyMap<S, T>(keyLength);\n        for (const entry of data) {\n            result.set(entry[0], entry[1]);\n        }\n        return result;\n    }\n\n    set(key: readonly K[], value: V): V | undefined {\n        if (this.keyLength !== key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should be ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < this.keyLength - 1; i++) {\n            let existing = map.get(key[i]);\n            if (!existing) {\n                existing = new Map();\n                map.set(key[i], existing);\n            }\n            map = existing;\n        }\n        const oldValue = map.get(key[this.keyLength - 1]);\n        map.set(key[this.keyLength - 1], value);\n        return oldValue;\n    }\n\n    get(key: readonly K[]): V | undefined {\n        if (this.keyLength !== key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should be ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < this.keyLength - 1; i++) {\n            map = map.get(key[i]);\n            if (!map) {\n                return undefined;\n            }\n        }\n        return map.get(key[this.keyLength - 1]);\n    }\n\n    /**\n     * Checks whether the given key is present in the map\n     * @param key the key to test. It can have a length < the key length\n     * @returns whether the key exists\n     */\n    has(key: readonly K[]): boolean {\n        if (this.keyLength < key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should <= ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < key.length - 1; i++) {\n            map = map.get(key[i]);\n            if (!map) {\n                return false;\n            }\n        }\n        return map.has(key[key.length - 1]);\n    }\n\n    /**\n     * Deletes the value with the given key from the map\n     * @param key the key to remove.  It can have a length < the key length\n     * @returns whether the key was present in the map\n     */\n    delete(key: readonly K[]): boolean {\n        if (this.keyLength < key.length) {\n            throw new Error(`inappropriate key length: ${key.length}, should <= ${this.keyLength}`);\n        }\n        let map = this.rootMap;\n        for (let i = 0; i < this.keyLength - 1; i++) {\n            map = map.get(key[i]);\n            if (!map) {\n                return false;\n            }\n        }\n        return map.delete(key[key.length - 1]);\n    }\n\n    /**\n     * Iterates over all entries in the map. The ordering semantics are like iterating over a map of maps.\n     * @param handler Handler for each entry\n     */\n    forEach(handler: (value: V, key: K[]) => void): void {\n        this.doForeach(handler, this.rootMap, []);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private doForeach(handler: (value: V, key: K[]) => void, currentMap: Map<any, any>, keys: K[]): void {\n        if (keys.length === this.keyLength - 1) {\n            currentMap.forEach((v, k) => {\n                handler(v, [...keys, k]);\n            });\n        } else {\n            currentMap.forEach((v, k) => {\n                this.doForeach(handler, v, [...keys, k]);\n            });\n\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport {\n    LanguagesExt,\n    PLUGIN_RPC_CONTEXT,\n    LanguagesMain,\n    SerializedLanguageConfiguration,\n    Position,\n    Selection,\n    RawColorInfo,\n    WorkspaceEditDto,\n    PluginInfo,\n    Plugin,\n    InlayHintsDto,\n    InlayHintDto,\n    IdentifiableInlineCompletions,\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from './documents';\nimport { PluginModel } from '../common/plugin-protocol';\nimport { Disposable, URI, LanguageStatusSeverity } from './types-impl';\nimport { UriComponents } from '../common/uri-components';\nimport {\n    CodeActionProviderDocumentation,\n    CompletionContext,\n    CompletionResultDto,\n    Completion,\n    SerializedDocumentFilter,\n    SignatureHelp,\n    Hover,\n    DocumentHighlight,\n    Range,\n    TextEdit,\n    FormattingOptions,\n    Definition,\n    DocumentLink,\n    CodeLensSymbol,\n    DocumentSymbol,\n    ReferenceContext,\n    Location,\n    ColorPresentation,\n    RenameLocation,\n    SignatureHelpContext,\n    CodeActionContext,\n    CodeAction,\n    FoldingRange,\n    SelectionRange,\n    ChainedCacheId,\n    CallHierarchyItem,\n    CallHierarchyIncomingCall,\n    CallHierarchyOutgoingCall,\n    LinkedEditingRanges,\n    EvaluatableExpression,\n    InlineValue,\n    InlineValueContext,\n    TypeHierarchyItem,\n    InlineCompletionContext,\n    DocumentDropEdit,\n    DataTransferDTO\n} from '../common/plugin-api-rpc-model';\nimport { CompletionAdapter } from './languages/completion';\nimport { Diagnostics } from './languages/diagnostics';\nimport { SignatureHelpAdapter } from './languages/signature';\nimport { HoverAdapter } from './languages/hover';\nimport { EvaluatableExpressionAdapter } from './languages/evaluatable-expression';\nimport { InlineValuesAdapter } from './languages/inline-values';\nimport { DocumentHighlightAdapter } from './languages/document-highlight';\nimport { DocumentFormattingAdapter } from './languages/document-formatting';\nimport { RangeFormattingAdapter } from './languages/range-formatting';\nimport { OnTypeFormattingAdapter } from './languages/on-type-formatting';\nimport { DefinitionAdapter } from './languages/definition';\nimport { ImplementationAdapter } from './languages/implementation';\nimport { TypeDefinitionAdapter } from './languages/type-definition';\nimport { CodeActionAdapter } from './languages/code-action';\nimport { LinkProviderAdapter } from './languages/link-provider';\nimport { CodeLensAdapter } from './languages/lens';\nimport { OutlineAdapter } from './languages/outline';\nimport { ReferenceAdapter } from './languages/reference';\nimport { WorkspaceSymbolAdapter } from './languages/workspace-symbol';\nimport { SymbolInformation } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { FoldingProviderAdapter } from './languages/folding';\nimport { SelectionRangeProviderAdapter } from './languages/selection-range';\nimport { ColorProviderAdapter } from './languages/color';\nimport { RenameAdapter } from './languages/rename';\nimport { Event } from '@theia/core/lib/common/event';\nimport { CommandRegistryImpl } from './command-registry';\nimport { DeclarationAdapter } from './languages/declaration';\nimport { CallHierarchyAdapter } from './languages/call-hierarchy';\nimport { TypeHierarchyAdapter } from './languages/type-hierarchy';\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport { DocumentSemanticTokensAdapter, DocumentRangeSemanticTokensAdapter } from './languages/semantic-highlighting';\nimport { isReadonlyArray } from '../common/arrays';\nimport { DisposableCollection, disposableTimeout, Disposable as TheiaDisposable } from '@theia/core/lib/common/disposable';\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { LinkedEditingRangeAdapter } from './languages/linked-editing-range';\nimport { serializeAutoClosingPairs, serializeEnterRules, serializeIndentation, serializeRegExp } from './languages-utils';\nimport { InlayHintsAdapter } from './languages/inlay-hints';\nimport { InlineCompletionAdapter, InlineCompletionAdapterBase } from './languages/inline-completion';\nimport { DocumentDropEditAdapter } from './languages/document-drop-edit';\nimport { IDisposable } from '@theia/monaco-editor-core';\nimport { FileSystemExtImpl, FsLinkProvider } from './file-system-ext-impl';\n\ntype Adapter = CompletionAdapter |\n    SignatureHelpAdapter |\n    HoverAdapter |\n    EvaluatableExpressionAdapter |\n    InlineValuesAdapter |\n    DocumentHighlightAdapter |\n    DocumentFormattingAdapter |\n    RangeFormattingAdapter |\n    OnTypeFormattingAdapter |\n    DefinitionAdapter |\n    DeclarationAdapter |\n    ImplementationAdapter |\n    TypeDefinitionAdapter |\n    LinkProviderAdapter |\n    CodeLensAdapter |\n    CodeActionAdapter |\n    OutlineAdapter |\n    ReferenceAdapter |\n    WorkspaceSymbolAdapter |\n    FoldingProviderAdapter |\n    SelectionRangeProviderAdapter |\n    ColorProviderAdapter |\n    InlayHintsAdapter |\n    RenameAdapter |\n    CallHierarchyAdapter |\n    DocumentRangeSemanticTokensAdapter |\n    DocumentSemanticTokensAdapter |\n    LinkedEditingRangeAdapter |\n    TypeHierarchyAdapter |\n    InlineCompletionAdapter |\n    DocumentDropEditAdapter;\n\nexport class LanguagesExtImpl implements LanguagesExt {\n\n    private proxy: LanguagesMain;\n\n    private readonly diagnostics: Diagnostics;\n\n    private linkProviderRegistration?: IDisposable;\n\n    private callId = 0;\n    private adaptersMap = new Map<number, Adapter>();\n\n    constructor(\n        rpc: RPCProtocol,\n        private readonly documents: DocumentsExtImpl,\n        private readonly commands: CommandRegistryImpl,\n        private readonly filesSystem: FileSystemExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.LANGUAGES_MAIN);\n        this.diagnostics = new Diagnostics(rpc);\n        filesSystem.onWillRegisterFileSystemProvider(linkProvider => this.registerLinkProviderIfNotYetRegistered(linkProvider));\n    }\n\n    dispose(): void {\n        if (this.linkProviderRegistration) {\n            this.linkProviderRegistration.dispose();\n        }\n    }\n\n    get onDidChangeDiagnostics(): Event<theia.DiagnosticChangeEvent> {\n        return this.diagnostics.onDidChangeDiagnostics;\n    }\n\n    getLanguages(): Promise<string[]> {\n        return this.proxy.$getLanguages();\n    }\n\n    changeLanguage(uri: URI, languageId: string): Promise<theia.TextDocument> {\n        return this.proxy.$changeLanguage(uri, languageId).then(() => {\n            const doc = this.documents.getDocumentData(uri);\n            if (!doc) {\n                throw new Error('No document found by URI ' + uri.toString());\n            }\n            return doc.document;\n        });\n    }\n\n    setLanguageConfiguration(language: string, configuration: theia.LanguageConfiguration): theia.Disposable {\n        const { wordPattern } = configuration;\n\n        if (wordPattern) {\n            this.documents.setWordDefinitionFor(language, wordPattern);\n        } else {\n            this.documents.setWordDefinitionFor(language, null);\n        }\n\n        const callId = this.nextCallId();\n\n        const config: SerializedLanguageConfiguration = {\n            brackets: configuration.brackets,\n            comments: configuration.comments,\n            onEnterRules: serializeEnterRules(configuration.onEnterRules),\n            wordPattern: serializeRegExp(configuration.wordPattern),\n            indentationRules: serializeIndentation(configuration.indentationRules),\n            autoClosingPairs: serializeAutoClosingPairs(configuration.autoClosingPairs)\n        };\n\n        this.proxy.$setLanguageConfiguration(callId, language, config);\n        return this.createDisposable(callId);\n    }\n\n    private nextCallId(): number {\n        return this.callId++;\n    }\n\n    private createDisposable(callId: number, onDispose?: () => void): theia.Disposable {\n        return new Disposable(() => {\n            this.adaptersMap.delete(callId);\n            this.proxy.$unregister(callId);\n            onDispose?.();\n        });\n    }\n\n    private addNewAdapter(adapter: Adapter): number {\n        const callId = this.nextCallId();\n        this.adaptersMap.set(callId, adapter);\n        return callId;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private async withAdapter<A, R>(handle: number, ctor: { new(...args: any[]): A }, callback: (adapter: A) => Promise<R>, fallbackValue: R): Promise<R> {\n        const adapter = this.adaptersMap.get(handle);\n        if (!adapter) {\n            return fallbackValue;\n        }\n        if (adapter instanceof ctor) {\n            return callback(adapter);\n        }\n        throw new Error('no adapter found');\n    }\n\n    private transformDocumentSelector(selector: theia.DocumentSelector): SerializedDocumentFilter[] {\n        if (isReadonlyArray(selector)) {\n            return selector.map(sel => this.doTransformDocumentSelector(sel)!);\n        }\n\n        return [this.doTransformDocumentSelector(selector)!];\n    }\n\n    private doTransformDocumentSelector(selector: string | theia.DocumentFilter): SerializedDocumentFilter | undefined {\n        if (typeof selector === 'string') {\n            return {\n                $serialized: true,\n                language: selector\n            };\n        }\n\n        if (selector) {\n            return {\n                $serialized: true,\n                language: selector.language,\n                scheme: selector.scheme,\n                pattern: selector.pattern,\n                notebookType: selector.notebookType\n            };\n        }\n\n        return undefined;\n    }\n\n    private registerLinkProviderIfNotYetRegistered(linkProvider: FsLinkProvider): void {\n        if (!this.linkProviderRegistration) {\n            this.linkProviderRegistration = this.registerDocumentLinkProvider('*', linkProvider, {\n                id: 'theia.fs-ext-impl',\n                name: 'fs-ext-impl'\n            });\n        }\n    }\n\n    // ### Completion begin\n    $provideCompletionItems(handle: number, resource: UriComponents, position: Position,\n        context: CompletionContext, token: theia.CancellationToken): Promise<CompletionResultDto | undefined> {\n        return this.withAdapter(handle, CompletionAdapter, adapter => adapter.provideCompletionItems(URI.revive(resource), position, context, token), undefined);\n    }\n\n    $resolveCompletionItem(handle: number, chainedId: ChainedCacheId, token: theia.CancellationToken): Promise<Completion | undefined> {\n        return this.withAdapter(handle, CompletionAdapter, adapter => adapter.resolveCompletionItem(chainedId, token), undefined);\n    }\n\n    $releaseCompletionItems(handle: number, id: number): void {\n        this.withAdapter(handle, CompletionAdapter, async adapter => adapter.releaseCompletionItems(id), undefined);\n    }\n\n    registerCompletionItemProvider(selector: theia.DocumentSelector, provider: theia.CompletionItemProvider, triggerCharacters: string[],\n        pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new CompletionAdapter(provider, this.documents, this.commands));\n        this.proxy.$registerCompletionSupport(callId, pluginInfo, this.transformDocumentSelector(selector), triggerCharacters, CompletionAdapter.hasResolveSupport(provider));\n        return this.createDisposable(callId);\n    }\n    // ### Completion end\n\n    // ### Inline completion provider begin\n    registerInlineCompletionsProvider(selector: theia.DocumentSelector, provider: theia.InlineCompletionItemProvider): theia.Disposable {\n        const callId = this.addNewAdapter(new InlineCompletionAdapter(this.documents, provider, this.commands));\n        this.proxy.$registerInlineCompletionsSupport(callId, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideInlineCompletions(\n        handle: number,\n        resource: UriComponents,\n        position: Position,\n        context: InlineCompletionContext,\n        token: theia.CancellationToken\n    ): Promise<IdentifiableInlineCompletions | undefined> {\n        return this.withAdapter(handle, InlineCompletionAdapterBase, adapter => adapter.provideInlineCompletions(URI.revive(resource), position, context, token), undefined);\n    }\n\n    $freeInlineCompletionsList(handle: number, pid: number): void {\n        this.withAdapter(handle, InlineCompletionAdapterBase, async adapter => { adapter.disposeCompletions(pid); }, undefined);\n    }\n    // ### Inline completion provider end\n\n    // ### Definition provider begin\n    $provideDefinition(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        return this.withAdapter(handle, DefinitionAdapter, adapter => adapter.provideDefinition(URI.revive(resource), position, token), undefined);\n    }\n\n    registerDefinitionProvider(selector: theia.DocumentSelector, provider: theia.DefinitionProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new DefinitionAdapter(provider, this.documents));\n        this.proxy.$registerDefinitionProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n    // ### Definition provider end\n\n    // ### Declaration provider begin\n    $provideDeclaration(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        return this.withAdapter(handle, DeclarationAdapter, adapter => adapter.provideDeclaration(URI.revive(resource), position, token), undefined);\n    }\n\n    registerDeclarationProvider(selector: theia.DocumentSelector, provider: theia.DeclarationProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new DeclarationAdapter(provider, this.documents));\n        this.proxy.$registerDeclarationProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n    // ### Declaration provider end\n\n    // ### Signature help begin\n    $provideSignatureHelp(\n        handle: number, resource: UriComponents, position: Position, context: SignatureHelpContext, token: theia.CancellationToken\n    ): Promise<SignatureHelp | undefined> {\n        return this.withAdapter(handle, SignatureHelpAdapter, adapter => adapter.provideSignatureHelp(URI.revive(resource), position, token, context), undefined);\n    }\n\n    $releaseSignatureHelp(handle: number, id: number): void {\n        this.withAdapter(handle, SignatureHelpAdapter, async adapter => adapter.releaseSignatureHelp(id), undefined);\n    }\n\n    registerSignatureHelpProvider(selector: theia.DocumentSelector, provider: theia.SignatureHelpProvider, metadata: theia.SignatureHelpProviderMetadata,\n        pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new SignatureHelpAdapter(provider, this.documents));\n        this.proxy.$registerSignatureHelpProvider(callId, pluginInfo, this.transformDocumentSelector(selector), metadata);\n        return this.createDisposable(callId);\n    }\n    // ### Signature help end\n\n    // ### Diagnostics begin\n    getDiagnostics(resource?: URI): theia.Diagnostic[] | [URI, theia.Diagnostic[]][] {\n        return this.diagnostics.getDiagnostics(resource!);\n    }\n\n    createDiagnosticCollection(name?: string): theia.DiagnosticCollection {\n        return this.diagnostics.createDiagnosticCollection(name);\n    }\n    // ### Diagnostics end\n\n    // ### Implementation provider begin\n    $provideImplementation(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        return this.withAdapter(handle, ImplementationAdapter, adapter => adapter.provideImplementation(URI.revive(resource), position, token), undefined);\n    }\n\n    registerImplementationProvider(selector: theia.DocumentSelector, provider: theia.ImplementationProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new ImplementationAdapter(provider, this.documents));\n        this.proxy.$registerImplementationProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n    // ### Implementation provider end\n\n    // ### Type Definition provider begin\n    $provideTypeDefinition(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<Definition | undefined> {\n        return this.withAdapter(handle, TypeDefinitionAdapter, adapter => adapter.provideTypeDefinition(URI.revive(resource), position, token), undefined);\n    }\n\n    registerTypeDefinitionProvider(selector: theia.DocumentSelector, provider: theia.TypeDefinitionProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new TypeDefinitionAdapter(provider, this.documents));\n        this.proxy.$registerTypeDefinitionProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n    // ### Type Definition provider end\n\n    // ### Hover Provider begin\n    registerHoverProvider(selector: theia.DocumentSelector, provider: theia.HoverProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new HoverAdapter(provider, this.documents));\n        this.proxy.$registerHoverProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideHover(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<Hover | undefined> {\n        return this.withAdapter(handle, HoverAdapter, adapter => adapter.provideHover(URI.revive(resource), position, token), undefined);\n    }\n    // ### Hover Provider end\n\n    // ### EvaluatableExpression Provider begin\n    registerEvaluatableExpressionProvider(selector: theia.DocumentSelector, provider: theia.EvaluatableExpressionProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new EvaluatableExpressionAdapter(provider, this.documents));\n        this.proxy.$registerEvaluatableExpressionProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideEvaluatableExpression(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<EvaluatableExpression | undefined> {\n        return this.withAdapter(handle, EvaluatableExpressionAdapter, adapter => adapter.provideEvaluatableExpression(URI.revive(resource), position, token), undefined);\n    }\n    // ### EvaluatableExpression Provider end\n\n    // ### InlineValues Provider begin\n    registerInlineValuesProvider(selector: theia.DocumentSelector, provider: theia.InlineValuesProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const eventHandle = typeof provider.onDidChangeInlineValues === 'function' ? this.nextCallId() : undefined;\n        const callId = this.addNewAdapter(new InlineValuesAdapter(provider, this.documents));\n        this.proxy.$registerInlineValuesProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        let result = this.createDisposable(callId);\n\n        if (eventHandle !== undefined) {\n            const subscription = provider.onDidChangeInlineValues!(_ => this.proxy.$emitInlineValuesEvent(eventHandle));\n            result = Disposable.from(result, subscription);\n        }\n        return result;\n    }\n\n    $provideInlineValues(handle: number, resource: UriComponents, range: Range, context: InlineValueContext, token: theia.CancellationToken): Promise<InlineValue[] | undefined> {\n        return this.withAdapter(handle, InlineValuesAdapter, adapter => adapter.provideInlineValues(URI.revive(resource), range, context, token), undefined);\n    }\n    // ### InlineValue Provider end\n\n    // ### Document Highlight Provider begin\n    registerDocumentHighlightProvider(selector: theia.DocumentSelector, provider: theia.DocumentHighlightProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new DocumentHighlightAdapter(provider, this.documents));\n        this.proxy.$registerDocumentHighlightProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideDocumentHighlights(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<DocumentHighlight[] | undefined> {\n        return this.withAdapter(handle, DocumentHighlightAdapter, adapter => adapter.provideDocumentHighlights(URI.revive(resource), position, token), undefined);\n    }\n    // ### Document Highlight Provider end\n\n    // ### WorkspaceSymbol Provider begin\n    registerWorkspaceSymbolProvider(provider: theia.WorkspaceSymbolProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new WorkspaceSymbolAdapter(provider));\n        this.proxy.$registerWorkspaceSymbolProvider(callId, pluginInfo);\n        return this.createDisposable(callId);\n    }\n\n    $provideWorkspaceSymbols(handle: number, query: string, token: theia.CancellationToken): PromiseLike<SymbolInformation[]> {\n        return this.withAdapter(handle, WorkspaceSymbolAdapter, adapter => adapter.provideWorkspaceSymbols(query, token), []);\n    }\n\n    $resolveWorkspaceSymbol(handle: number, symbol: SymbolInformation, token: theia.CancellationToken): PromiseLike<SymbolInformation | undefined> {\n        return this.withAdapter(handle, WorkspaceSymbolAdapter, adapter => adapter.resolveWorkspaceSymbol(symbol, token), undefined);\n    }\n    // ### WorkspaceSymbol Provider end\n\n    // ### Document Formatting Edit begin\n    registerDocumentFormattingEditProvider(selector: theia.DocumentSelector, provider: theia.DocumentFormattingEditProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new DocumentFormattingAdapter(provider, this.documents));\n        this.proxy.$registerDocumentFormattingSupport(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideDocumentFormattingEdits(handle: number, resource: UriComponents,\n        options: FormattingOptions, token: theia.CancellationToken): Promise<TextEdit[] | undefined> {\n        return this.withAdapter(handle, DocumentFormattingAdapter, adapter => adapter.provideDocumentFormattingEdits(URI.revive(resource), options, token), undefined);\n    }\n    // ### Document Formatting Edit end\n\n    // ### Drop Edit Provider start\n    $provideDocumentDropEdits(handle: number, resource: UriComponents, position: Position,\n        dataTransfer: DataTransferDTO, token: theia.CancellationToken): Promise<DocumentDropEdit | undefined> {\n        return this.withAdapter(handle, DocumentDropEditAdapter, adapter => adapter.provideDocumentDropEdits(URI.revive(resource), position, dataTransfer, token), undefined);\n    }\n\n    registerDocumentDropEditProvider(\n        selector: theia.DocumentSelector,\n        provider: theia.DocumentDropEditProvider,\n        metadata?: theia.DocumentDropEditProviderMetadata\n    ): theia.Disposable {\n        const callId = this.addNewAdapter(new DocumentDropEditAdapter(provider, this.documents, this.filesSystem));\n        this.proxy.$registerDocumentDropEditProvider(callId, this.transformDocumentSelector(selector), metadata);\n        return this.createDisposable(callId);\n    }\n    // ### Drop Edit Provider end\n\n    // ### Document Range Formatting Edit begin\n    registerDocumentRangeFormattingEditProvider(selector: theia.DocumentSelector, provider: theia.DocumentRangeFormattingEditProvider,\n        pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new RangeFormattingAdapter(provider, this.documents));\n        this.proxy.$registerRangeFormattingSupport(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideDocumentRangeFormattingEdits(handle: number, resource: UriComponents, range: Range,\n        options: FormattingOptions, token: theia.CancellationToken): Promise<TextEdit[] | undefined> {\n        return this.withAdapter(handle, RangeFormattingAdapter, adapter => adapter.provideDocumentRangeFormattingEdits(URI.revive(resource), range, options, token), undefined);\n    }\n    // ### Document Range Formatting Edit end\n\n    // ### On Type Formatting Edit begin\n    registerOnTypeFormattingEditProvider(\n        selector: theia.DocumentSelector,\n        provider: theia.OnTypeFormattingEditProvider,\n        triggerCharacters: string[],\n        pluginInfo: PluginInfo\n    ): theia.Disposable {\n        const callId = this.addNewAdapter(new OnTypeFormattingAdapter(provider, this.documents));\n        this.proxy.$registerOnTypeFormattingProvider(callId, pluginInfo, this.transformDocumentSelector(selector), triggerCharacters);\n        return this.createDisposable(callId);\n    }\n\n    $provideOnTypeFormattingEdits(handle: number, resource: UriComponents, position: Position, ch: string,\n        options: FormattingOptions, token: theia.CancellationToken): Promise<TextEdit[] | undefined> {\n        return this.withAdapter(handle, OnTypeFormattingAdapter, adapter => adapter.provideOnTypeFormattingEdits(URI.revive(resource), position, ch, options, token), undefined);\n    }\n    // ### On Type Formatting Edit end\n\n    // ### Document Link Provider begin\n    $provideDocumentLinks(handle: number, resource: UriComponents, token: theia.CancellationToken): Promise<DocumentLink[] | undefined> {\n        return this.withAdapter(handle, LinkProviderAdapter, adapter => adapter.provideLinks(URI.revive(resource), token), undefined);\n    }\n\n    $resolveDocumentLink(handle: number, link: DocumentLink, token: theia.CancellationToken): Promise<DocumentLink | undefined> {\n        return this.withAdapter(handle, LinkProviderAdapter, adapter => adapter.resolveLink(link, token), undefined);\n    }\n\n    registerDocumentLinkProvider(selector: theia.DocumentSelector, provider: theia.DocumentLinkProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new LinkProviderAdapter(provider, this.documents));\n        this.proxy.$registerDocumentLinkProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $releaseDocumentLinks(handle: number, ids: number[]): void {\n        this.withAdapter(handle, LinkProviderAdapter, async adapter => adapter.releaseDocumentLinks(ids), undefined);\n    }\n\n    // ### Document Link Provider end\n\n    // ### Code Actions Provider begin\n    registerCodeActionsProvider(\n        selector: theia.DocumentSelector,\n        provider: theia.CodeActionProvider,\n        pluginModel: PluginModel,\n        pluginInfo: PluginInfo,\n        metadata?: theia.CodeActionProviderMetadata\n    ): theia.Disposable {\n        const callId = this.addNewAdapter(new CodeActionAdapter(provider, this.documents, this.diagnostics, pluginModel ? pluginModel.id : '', this.commands));\n\n        let documentation: CodeActionProviderDocumentation | undefined;\n        let disposables: DisposableCollection | undefined;\n        if (metadata && metadata.documentation) {\n            disposables = new DisposableCollection();\n            documentation = metadata.documentation.map(doc => ({\n                kind: doc.kind.value,\n                command: this.commands.converter.toSafeCommand(doc.command, disposables!)\n            }));\n        }\n\n        this.proxy.$registerQuickFixProvider(\n            callId,\n            pluginInfo,\n            this.transformDocumentSelector(selector),\n            metadata && metadata.providedCodeActionKinds ? metadata.providedCodeActionKinds.map(kind => kind.value) : undefined,\n            documentation\n        );\n\n        return this.createDisposable(callId, disposables?.dispose);\n    }\n\n    $provideCodeActions(\n        handle: number,\n        resource: UriComponents,\n        rangeOrSelection: Range | Selection,\n        context: CodeActionContext,\n        token: theia.CancellationToken\n    ): Promise<CodeAction[] | undefined> {\n        return this.withAdapter(handle, CodeActionAdapter, adapter => adapter.provideCodeAction(URI.revive(resource), rangeOrSelection, context, token), undefined);\n    }\n\n    $releaseCodeActions(handle: number, cacheIds: number[]): void {\n        this.withAdapter(handle, CodeActionAdapter, adapter => adapter.releaseCodeActions(cacheIds), undefined);\n    }\n\n    $resolveCodeAction(handle: number, cacheId: number, token: theia.CancellationToken): Promise<WorkspaceEditDto | undefined> {\n        return this.withAdapter(handle, CodeActionAdapter, adapter => adapter.resolveCodeAction(cacheId, token), undefined);\n    };\n\n    // ### Code Actions Provider end\n\n    // ### Code Lens Provider begin\n    registerCodeLensProvider(selector: theia.DocumentSelector, provider: theia.CodeLensProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new CodeLensAdapter(provider, this.documents, this.commands));\n        const eventHandle = typeof provider.onDidChangeCodeLenses === 'function' ? this.nextCallId() : undefined;\n        this.proxy.$registerCodeLensSupport(callId, pluginInfo, this.transformDocumentSelector(selector), eventHandle);\n        let result = this.createDisposable(callId);\n\n        if (eventHandle !== undefined && provider.onDidChangeCodeLenses) {\n            const subscription = provider.onDidChangeCodeLenses(e => this.proxy.$emitCodeLensEvent(eventHandle));\n            result = Disposable.from(result, subscription);\n        }\n\n        return result;\n    }\n\n    $provideCodeLenses(handle: number, resource: UriComponents, token: theia.CancellationToken): Promise<CodeLensSymbol[] | undefined> {\n        return this.withAdapter(handle, CodeLensAdapter, adapter => adapter.provideCodeLenses(URI.revive(resource), token), undefined);\n    }\n\n    $resolveCodeLens(handle: number, resource: UriComponents, symbol: CodeLensSymbol, token: theia.CancellationToken): Promise<CodeLensSymbol | undefined> {\n        return this.withAdapter(handle, CodeLensAdapter, adapter => adapter.resolveCodeLens(URI.revive(resource), symbol, token), undefined);\n    }\n\n    $releaseCodeLenses(handle: number, ids: number[]): void {\n        this.withAdapter(handle, CodeLensAdapter, async adapter => adapter.releaseCodeLenses(ids), undefined);\n    }\n    // ### Code Lens Provider end\n\n    // ### Code Reference Provider begin\n    $provideReferences(handle: number, resource: UriComponents, position: Position, context: ReferenceContext, token: theia.CancellationToken): Promise<Location[] | undefined> {\n        return this.withAdapter(handle, ReferenceAdapter, adapter => adapter.provideReferences(URI.revive(resource), position, context, token), undefined);\n    }\n\n    registerReferenceProvider(selector: theia.DocumentSelector, provider: theia.ReferenceProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new ReferenceAdapter(provider, this.documents));\n        this.proxy.$registerReferenceProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n    // ### Code Reference Provider end\n\n    // ### Document Symbol Provider begin\n    registerDocumentSymbolProvider(selector: theia.DocumentSelector, provider: theia.DocumentSymbolProvider, pluginInfo: PluginInfo,\n        metadata?: theia.DocumentSymbolProviderMetadata): theia.Disposable {\n        const callId = this.addNewAdapter(new OutlineAdapter(this.documents, provider));\n        const displayName = (metadata && metadata.label) || getPluginLabel(pluginInfo);\n        this.proxy.$registerOutlineSupport(callId, pluginInfo, this.transformDocumentSelector(selector), displayName);\n        return this.createDisposable(callId);\n    }\n\n    $provideDocumentSymbols(handle: number, resource: UriComponents, token: theia.CancellationToken): Promise<DocumentSymbol[] | undefined> {\n        return this.withAdapter(handle, OutlineAdapter, adapter => adapter.provideDocumentSymbols(URI.revive(resource), token), undefined);\n    }\n    // ### Document Symbol Provider end\n\n    // ### Color Provider begin\n    registerColorProvider(selector: theia.DocumentSelector, provider: theia.DocumentColorProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new ColorProviderAdapter(this.documents, provider));\n        this.proxy.$registerDocumentColorProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideDocumentColors(handle: number, resource: UriComponents, token: theia.CancellationToken): Promise<RawColorInfo[]> {\n        return this.withAdapter(handle, ColorProviderAdapter, adapter => adapter.provideColors(URI.revive(resource), token), []);\n    }\n\n    $provideColorPresentations(handle: number, resource: UriComponents, colorInfo: RawColorInfo, token: theia.CancellationToken): Promise<ColorPresentation[]> {\n        return this.withAdapter(handle, ColorProviderAdapter, adapter => adapter.provideColorPresentations(URI.revive(resource), colorInfo, token), []);\n    }\n    // ### Color Provider end\n\n    // ### InlayHints Provider begin\n    registerInlayHintsProvider(selector: theia.DocumentSelector, provider: theia.InlayHintsProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const eventHandle = typeof provider.onDidChangeInlayHints === 'function' ? this.nextCallId() : undefined;\n        const callId = this.addNewAdapter(new InlayHintsAdapter(provider, this.documents, this.commands));\n        this.proxy.$registerInlayHintsProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n\n        let result = this.createDisposable(callId);\n\n        if (eventHandle !== undefined) {\n            const subscription = provider.onDidChangeInlayHints!(() => this.proxy.$emitInlayHintsEvent(eventHandle));\n            result = Disposable.from(result, subscription);\n        }\n\n        return result;\n    }\n\n    $provideInlayHints(handle: number, resource: UriComponents, range: Range, token: theia.CancellationToken): Promise<InlayHintsDto | undefined> {\n        return this.withAdapter(handle, InlayHintsAdapter, adapter => adapter.provideInlayHints(URI.revive(resource), range, token), undefined);\n    }\n\n    $resolveInlayHint(handle: number, id: ChainedCacheId, token: theia.CancellationToken): Promise<InlayHintDto | undefined> {\n        return this.withAdapter(handle, InlayHintsAdapter, adapter => adapter.resolveInlayHint(id, token), undefined);\n    }\n\n    $releaseInlayHints(handle: number, id: number): void {\n        this.withAdapter(handle, InlayHintsAdapter, async adapter => adapter.releaseHints(id), undefined);\n    }\n    // ### InlayHints Provider end\n\n    // ### Folding Range Provider begin\n    registerFoldingRangeProvider(selector: theia.DocumentSelector, provider: theia.FoldingRangeProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new FoldingProviderAdapter(provider, this.documents));\n        const eventHandle = typeof provider.onDidChangeFoldingRanges === 'function' ? this.nextCallId() : undefined;\n\n        this.proxy.$registerFoldingRangeProvider(callId, pluginInfo, this.transformDocumentSelector(selector), eventHandle);\n        let result = this.createDisposable(callId);\n\n        if (eventHandle !== undefined) {\n            const subscription = provider.onDidChangeFoldingRanges!(() => this.proxy.$emitFoldingRangeEvent(eventHandle));\n            result = Disposable.from(result, subscription);\n        }\n        return result;\n    }\n\n    $provideFoldingRange(\n        callId: number,\n        resource: UriComponents,\n        context: theia.FoldingContext,\n        token: theia.CancellationToken\n    ): Promise<FoldingRange[] | undefined> {\n        return this.withAdapter(callId, FoldingProviderAdapter, adapter => adapter.provideFoldingRanges(URI.revive(resource), context, token), undefined);\n    }\n    // ### Folding Range Provider end\n\n    registerSelectionRangeProvider(selector: theia.DocumentSelector, provider: theia.SelectionRangeProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new SelectionRangeProviderAdapter(provider, this.documents));\n        this.proxy.$registerSelectionRangeProvider(callId, pluginInfo, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideSelectionRanges(handle: number, resource: UriComponents, positions: Position[], token: theia.CancellationToken): Promise<SelectionRange[][]> {\n        return this.withAdapter(handle, SelectionRangeProviderAdapter, adapter => adapter.provideSelectionRanges(URI.revive(resource), positions, token), []);\n    }\n\n    // ### Rename Provider begin\n    registerRenameProvider(selector: theia.DocumentSelector, provider: theia.RenameProvider, pluginInfo: PluginInfo): theia.Disposable {\n        const callId = this.addNewAdapter(new RenameAdapter(provider, this.documents));\n        this.proxy.$registerRenameProvider(callId, pluginInfo, this.transformDocumentSelector(selector), RenameAdapter.supportsResolving(provider));\n        return this.createDisposable(callId);\n    }\n\n    $provideRenameEdits(handle: number, resource: UriComponents, position: Position, newName: string, token: theia.CancellationToken): Promise<WorkspaceEditDto | undefined> {\n        return this.withAdapter(handle, RenameAdapter, adapter => adapter.provideRenameEdits(URI.revive(resource), position, newName, token), undefined);\n    }\n\n    $resolveRenameLocation(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<RenameLocation | undefined> {\n        return this.withAdapter(handle, RenameAdapter, adapter => adapter.resolveRenameLocation(URI.revive(resource), position, token), undefined);\n    }\n    // ### Rename Provider end\n\n    // ### Call Hierarchy Provider begin\n    registerCallHierarchyProvider(selector: theia.DocumentSelector, provider: theia.CallHierarchyProvider): theia.Disposable {\n        const callId = this.addNewAdapter(new CallHierarchyAdapter(provider, this.documents));\n        this.proxy.$registerCallHierarchyProvider(callId, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $provideRootDefinition(\n        handle: number, resource: UriComponents, location: Position, token: theia.CancellationToken\n    ): Promise<CallHierarchyItem[] | undefined> {\n        return this.withAdapter(handle, CallHierarchyAdapter, adapter => adapter.provideRootDefinition(URI.revive(resource), location, token), undefined);\n    }\n\n    $provideCallers(handle: number, definition: CallHierarchyItem, token: theia.CancellationToken): Promise<CallHierarchyIncomingCall[] | undefined> {\n        return this.withAdapter(handle, CallHierarchyAdapter, adapter => adapter.provideCallers(definition, token), undefined);\n    }\n\n    $provideCallees(handle: number, definition: CallHierarchyItem, token: theia.CancellationToken): Promise<CallHierarchyOutgoingCall[] | undefined> {\n        return this.withAdapter(handle, CallHierarchyAdapter, adapter => adapter.provideCallees(definition, token), undefined);\n    }\n\n    $releaseCallHierarchy(handle: number, session?: string): Promise<boolean> {\n        return this.withAdapter(handle, CallHierarchyAdapter, adapter => adapter.releaseSession(session), false);\n    }\n    // ### Call Hierarchy Provider end\n\n    // ### Type hierarchy Provider begin\n    registerTypeHierarchyProvider(selector: theia.DocumentSelector, provider: theia.TypeHierarchyProvider): theia.Disposable {\n        const callId = this.addNewAdapter(new TypeHierarchyAdapter(provider, this.documents));\n        this.proxy.$registerTypeHierarchyProvider(callId, this.transformDocumentSelector(selector));\n        return this.createDisposable(callId);\n    }\n\n    $prepareTypeHierarchy(handle: number, resource: UriComponents, location: Position, token: theia.CancellationToken\n    ): Promise<TypeHierarchyItem[] | undefined> {\n        return this.withAdapter(\n            handle,\n            TypeHierarchyAdapter,\n            adapter => adapter.prepareSession(URI.revive(resource), location, token),\n            undefined\n        );\n    }\n\n    $provideSuperTypes(handle: number, sessionId: string, itemId: string, token: theia.CancellationToken):\n        Promise<TypeHierarchyItem[] | undefined> {\n        return this.withAdapter(\n            handle,\n            TypeHierarchyAdapter,\n            adapter => adapter.provideSupertypes(sessionId, itemId, token),\n            undefined\n        );\n    }\n\n    $provideSubTypes(handle: number, sessionId: string, itemId: string, token: theia.CancellationToken):\n        Promise<TypeHierarchyItem[] | undefined> {\n        return this.withAdapter(\n            handle,\n            TypeHierarchyAdapter,\n            adapter => adapter.provideSubtypes(sessionId, itemId, token),\n            undefined\n        );\n    }\n\n    $releaseTypeHierarchy(handle: number, session?: string): Promise<boolean> {\n        return this.withAdapter(\n            handle,\n            TypeHierarchyAdapter,\n            adapter => adapter.releaseSession(session),\n            false);\n    }\n\n    // ### Type hierarchy Provider end\n\n    // ### Linked Editing Range Provider begin\n    registerLinkedEditingRangeProvider(selector: theia.DocumentSelector, provider: theia.LinkedEditingRangeProvider): theia.Disposable {\n        const handle = this.addNewAdapter(new LinkedEditingRangeAdapter(this.documents, provider));\n        this.proxy.$registerLinkedEditingRangeProvider(handle, this.transformDocumentSelector(selector));\n        return this.createDisposable(handle);\n    }\n\n    $provideLinkedEditingRanges(handle: number, resource: UriComponents, position: Position, token: theia.CancellationToken): Promise<LinkedEditingRanges | undefined> {\n        return this.withAdapter(handle, LinkedEditingRangeAdapter, async adapter => adapter.provideRanges(URI.revive(resource), position, token), undefined);\n    }\n\n    // ### Linked Editing Range Provider end\n\n    // #region semantic coloring\n\n    registerDocumentSemanticTokensProvider(selector: theia.DocumentSelector, provider: theia.DocumentSemanticTokensProvider, legend: theia.SemanticTokensLegend,\n        pluginInfo: PluginInfo): theia.Disposable {\n        const eventHandle = (typeof provider.onDidChangeSemanticTokens === 'function' ? this.nextCallId() : undefined);\n\n        const handle = this.addNewAdapter(new DocumentSemanticTokensAdapter(this.documents, provider));\n        this.proxy.$registerDocumentSemanticTokensProvider(handle, pluginInfo, this.transformDocumentSelector(selector), legend, eventHandle);\n        let result = this.createDisposable(handle);\n\n        if (eventHandle) {\n            // eslint-disable-next-line no-unsanitized/method\n            const subscription = provider.onDidChangeSemanticTokens!(_ => this.proxy.$emitDocumentSemanticTokensEvent(eventHandle));\n            result = Disposable.from(result, subscription);\n        }\n\n        return result;\n    }\n\n    $provideDocumentSemanticTokens(handle: number, resource: UriComponents, previousResultId: number, token: theia.CancellationToken): Promise<BinaryBuffer | null> {\n        return this.withAdapter(handle, DocumentSemanticTokensAdapter, adapter => adapter.provideDocumentSemanticTokens(URI.revive(resource), previousResultId, token), null);\n    }\n\n    $releaseDocumentSemanticTokens(handle: number, semanticColoringResultId: number): void {\n        this.withAdapter(handle, DocumentSemanticTokensAdapter, adapter => adapter.releaseDocumentSemanticColoring(semanticColoringResultId), undefined);\n    }\n\n    registerDocumentRangeSemanticTokensProvider(selector: theia.DocumentSelector, provider: theia.DocumentRangeSemanticTokensProvider,\n        legend: theia.SemanticTokensLegend, pluginInfo: PluginInfo): theia.Disposable {\n        const handle = this.addNewAdapter(new DocumentRangeSemanticTokensAdapter(this.documents, provider));\n        this.proxy.$registerDocumentRangeSemanticTokensProvider(handle, pluginInfo, this.transformDocumentSelector(selector), legend);\n        return this.createDisposable(handle);\n    }\n\n    $provideDocumentRangeSemanticTokens(handle: number, resource: UriComponents, range: Range, token: theia.CancellationToken): Promise<BinaryBuffer | null> {\n        return this.withAdapter(handle, DocumentRangeSemanticTokensAdapter, adapter => adapter.provideDocumentRangeSemanticTokens(URI.revive(resource), range, token), null);\n    }\n\n    // Copied from https://github.com/microsoft/vscode/blob/7d9b1c37f8e5ae3772782ba3b09d827eb3fdd833/src/vs/workbench/api/common/extHostLanguages.ts\n    protected statusItemHandlePool = 0;\n    protected readonly statusItemIds = new Set<string>();\n    createLanguageStatusItem(extension: Plugin, id: string, selector: theia.DocumentSelector): theia.LanguageStatusItem {\n\n        const handle = this.statusItemHandlePool++;\n        const proxy = this.proxy;\n        const ids = this.statusItemIds;\n\n        // enforce extension unique identifier\n        const fullyQualifiedId = `${extension.model.id}/${id}`;\n        if (ids.has(fullyQualifiedId)) {\n            throw new Error(`LanguageStatusItem with id '${id}' ALREADY exists`);\n        }\n        ids.add(fullyQualifiedId);\n\n        const data: Omit<theia.LanguageStatusItem, 'dispose'> = {\n            selector,\n            id,\n            name: extension.model.displayName ?? extension.model.name,\n            severity: LanguageStatusSeverity.Information,\n            command: undefined,\n            text: '',\n            detail: '',\n            busy: false\n        };\n\n        let soonHandle: TheiaDisposable | undefined;\n        const commandDisposables = new DisposableCollection();\n        const updateAsync = () => {\n            soonHandle?.dispose();\n            soonHandle = disposableTimeout(() => {\n                commandDisposables.dispose();\n                commandDisposables.push({ dispose: () => { } }); // Mark disposable as undisposed.\n                this.proxy.$setLanguageStatus(handle, {\n                    id: fullyQualifiedId,\n                    name: data.name ?? extension.model.displayName ?? extension.model.name,\n                    source: extension.model.displayName ?? extension.model.name,\n                    selector: this.transformDocumentSelector(data.selector),\n                    label: data.text,\n                    detail: data.detail ?? '',\n                    severity: data.severity === LanguageStatusSeverity.Error ? Severity.Error : data.severity === LanguageStatusSeverity.Warning ? Severity.Warning : Severity.Info,\n                    command: data.command && this.commands.converter.toSafeCommand(data.command, commandDisposables),\n                    accessibilityInfo: data.accessibilityInformation,\n                    busy: data.busy\n                });\n            }, 0);\n        };\n\n        const result: theia.LanguageStatusItem = {\n            dispose(): void {\n                commandDisposables.dispose();\n                soonHandle?.dispose();\n                proxy.$removeLanguageStatus(handle);\n                ids.delete(fullyQualifiedId);\n            },\n            get id(): string {\n                return data.id;\n            },\n            get name(): string | undefined {\n                return data.name;\n            },\n            set name(value) {\n                data.name = value;\n                updateAsync();\n            },\n            get selector(): theia.DocumentSelector {\n                return data.selector;\n            },\n            set selector(value) {\n                data.selector = value;\n                updateAsync();\n            },\n            get text(): string {\n                return data.text;\n            },\n            set text(value) {\n                data.text = value;\n                updateAsync();\n            },\n            get detail(): string | undefined {\n                return data.detail;\n            },\n            set detail(value) {\n                data.detail = value;\n                updateAsync();\n            },\n            get severity(): theia.LanguageStatusSeverity {\n                return data.severity;\n            },\n            set severity(value) {\n                data.severity = value;\n                updateAsync();\n            },\n            get accessibilityInformation(): theia.AccessibilityInformation | undefined {\n                return data.accessibilityInformation;\n            },\n            set accessibilityInformation(value) {\n                data.accessibilityInformation = value;\n                updateAsync();\n            },\n            get command(): theia.Command | undefined {\n                return data.command;\n            },\n            set command(value) {\n                data.command = value;\n                updateAsync();\n            },\n            get busy(): boolean {\n                return data.busy;\n            },\n            set busy(value: boolean) {\n                data.busy = value;\n                updateAsync();\n            }\n        };\n        updateAsync();\n        return result;\n    }\n    // #endregion\n\n    // region DocumentPaste\n\n    /** @stubbed */\n    registerDocumentPasteEditProvider(\n        extension: Plugin, selector: theia.DocumentSelector, provider: theia.DocumentPasteEditProvider, metadata: theia.DocumentPasteProviderMetadata\n    ): theia.Disposable {\n        return Disposable.NULL;\n    }\n    // #endregion\n}\n\nfunction getPluginLabel(pluginInfo: PluginInfo): string {\n    return pluginInfo.displayName || pluginInfo.name;\n}\n\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/editor/common/modes/linkComputer.ts\n\n/* eslint-disable max-len */\n\nimport { CharacterClassifier } from './character-classifier';\nimport { CharCode } from '@theia/core/lib/common/char-code';\nimport { DocumentLink as ILink } from './plugin-api-rpc-model';\n\nexport interface ILinkComputerTarget {\n    getLineCount(): number;\n    getLineContent(lineNumber: number): string;\n}\n\nexport const enum State {\n    Invalid = 0,\n    Start = 1,\n    H = 2,\n    HT = 3,\n    HTT = 4,\n    HTTP = 5,\n    F = 6,\n    FI = 7,\n    FIL = 8,\n    BeforeColon = 9,\n    AfterColon = 10,\n    AlmostThere = 11,\n    End = 12,\n    Accept = 13,\n    LastKnownState = 14 // marker, custom states may follow\n}\n\nexport type Edge = [State, number, State];\n\nexport class Uint8Matrix {\n\n    private readonly _data: Uint8Array;\n    public readonly rows: number;\n    public readonly cols: number;\n\n    constructor(rows: number, cols: number, defaultValue: number) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n\n    public get(row: number, col: number): number {\n        return this._data[row * this.cols + col];\n    }\n\n    public set(row: number, col: number, value: number): void {\n        this._data[row * this.cols + col] = value;\n    }\n}\n\nexport class StateMachine {\n\n    private readonly _states: Uint8Matrix;\n    private readonly _maxCharCode: number;\n\n    constructor(edges: Edge[]) {\n        let maxCharCode = 0;\n        let maxState = State.Invalid;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n\n        maxCharCode++;\n        maxState++;\n\n        const states = new Uint8Matrix(maxState, maxCharCode, State.Invalid);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n\n    public nextState(currentState: State, chCode: number): State {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return State.Invalid;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n\n// State machine for http:// or https:// or file://\nlet _stateMachine: StateMachine | null = null;\nfunction getStateMachine(): StateMachine {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [State.Start, CharCode.h, State.H],\n            [State.Start, CharCode.H, State.H],\n            [State.Start, CharCode.f, State.F],\n            [State.Start, CharCode.F, State.F],\n\n            [State.H, CharCode.t, State.HT],\n            [State.H, CharCode.T, State.HT],\n\n            [State.HT, CharCode.t, State.HTT],\n            [State.HT, CharCode.T, State.HTT],\n\n            [State.HTT, CharCode.p, State.HTTP],\n            [State.HTT, CharCode.P, State.HTTP],\n\n            [State.HTTP, CharCode.s, State.BeforeColon],\n            [State.HTTP, CharCode.S, State.BeforeColon],\n            [State.HTTP, CharCode.Colon, State.AfterColon],\n\n            [State.F, CharCode.i, State.FI],\n            [State.F, CharCode.I, State.FI],\n\n            [State.FI, CharCode.l, State.FIL],\n            [State.FI, CharCode.L, State.FIL],\n\n            [State.FIL, CharCode.e, State.BeforeColon],\n            [State.FIL, CharCode.E, State.BeforeColon],\n\n            [State.BeforeColon, CharCode.Colon, State.AfterColon],\n\n            [State.AfterColon, CharCode.Slash, State.AlmostThere],\n\n            [State.AlmostThere, CharCode.Slash, State.End],\n        ]);\n    }\n    return _stateMachine;\n}\n\nconst enum CharacterClass {\n    None = 0,\n    ForceTermination = 1,\n    CannotEndIn = 2\n}\n\nlet _classifier: CharacterClassifier<CharacterClass> | null = null;\nfunction getClassifier(): CharacterClassifier<CharacterClass> {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier<CharacterClass>(CharacterClass.None);\n\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n        }\n\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n        }\n    }\n    return _classifier;\n}\n\nexport class LinkComputer {\n\n    private static _createLink(classifier: CharacterClassifier<CharacterClass>, line: string, lineNumber: number, linkBeginIndex: number, linkEndIndex: number): ILink {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== CharacterClass.CannotEndIn) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n\n        // Handle links enclosed in parens, square and curly brackets.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n            if (\n                (charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n                || (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n                || (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)\n            ) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n\n    public static computeLinks(model: ILinkComputerTarget, stateMachine: StateMachine = getStateMachine()): ILink[] {\n        const classifier = getClassifier();\n\n        const result: ILink[] = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = State.Start;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n\n            while (j < len) {\n\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n\n                if (state === State.Accept) {\n                    let chClass: CharacterClass;\n                    switch (chCode) {\n                        case CharCode.OpenParen:\n                            hasOpenParens = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseParen:\n                            chClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.OpenSquareBracket:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseSquareBracket:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.OpenCurlyBrace:\n                            hasOpenCurlyBracket = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseCurlyBrace:\n                            chClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case CharCode.SingleQuote:\n                            chClass = (linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n                            break;\n                        case CharCode.DoubleQuote:\n                            chClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.BackTick) ? CharacterClass.None : CharacterClass.ForceTermination;\n                            break;\n                        case CharCode.BackTick:\n                            chClass = (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote) ? CharacterClass.None : CharacterClass.ForceTermination;\n                            break;\n                        case CharCode.Asterisk:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n                            break;\n                        case CharCode.Pipe:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\n                            break;\n                        case CharCode.Space:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n\n                    // Check if character terminates link\n                    if (chClass === CharacterClass.ForceTermination) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                } else if (state === State.End) {\n\n                    let chClass: CharacterClass;\n                    if (chCode === CharCode.OpenSquareBracket) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = CharacterClass.None;\n                    } else {\n                        chClass = classifier.get(chCode);\n                    }\n\n                    // Check if character terminates link\n                    if (chClass === CharacterClass.ForceTermination) {\n                        resetStateMachine = true;\n                    } else {\n                        state = State.Accept;\n                    }\n                } else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === State.Invalid) {\n                        resetStateMachine = true;\n                    }\n                }\n\n                if (resetStateMachine) {\n                    state = State.Start;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n\n                j++;\n            }\n\n            if (state === State.Accept) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n\n        }\n\n        return result;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport namespace PluginIdentifiers {\n    export interface Components {\n        publisher?: string;\n        name: string;\n        version: string;\n    }\n\n    export interface IdAndVersion {\n        id: UnversionedId;\n        version: string;\n    }\n\n    export type VersionedId = `${string}.${string}@${string}`;\n    export type UnversionedId = `${string}.${string}`;\n    /** Unpublished plugins (not from Open VSX or VSCode plugin store) may not have a `publisher` field. */\n    export const UNPUBLISHED = '<unpublished>';\n\n    /**\n     * @returns a string in the format `<publisher>.<name>`\n     */\n    export function componentsToUnversionedId({ publisher = UNPUBLISHED, name }: Components): UnversionedId {\n        return `${publisher.toLowerCase()}.${name.toLowerCase()}`;\n    }\n    /**\n     * @returns a string in the format `<publisher>.<name>@<version>`.\n     */\n    export function componentsToVersionedId({ publisher = UNPUBLISHED, name, version }: Components): VersionedId {\n        return `${publisher.toLowerCase()}.${name.toLowerCase()}@${version}`;\n    }\n    export function componentsToVersionWithId(components: Components): IdAndVersion {\n        return { id: componentsToUnversionedId(components), version: components.version };\n    }\n    /**\n     * @returns a string in the format `<id>@<version>`.\n     */\n    export function idAndVersionToVersionedId({ id, version }: IdAndVersion): VersionedId {\n        return `${id}@${version}`;\n    }\n    /**\n     * @returns a string in the format `<publisher>.<name>`.\n     */\n    export function unversionedFromVersioned(id: VersionedId): UnversionedId {\n        const endOfId = id.indexOf('@');\n        return id.slice(0, endOfId) as UnversionedId;\n    }\n    /**\n     * @returns `undefined` if it looks like the string passed in does not have the format of {@link PluginIdentifiers.VersionedId}.\n     */\n    export function identifiersFromVersionedId(probablyId: string): Components | undefined {\n        const endOfPublisher = probablyId.indexOf('.');\n        const endOfName = probablyId.indexOf('@', endOfPublisher);\n        if (endOfPublisher === -1 || endOfName === -1) {\n            return undefined;\n        }\n        return { publisher: probablyId.slice(0, endOfPublisher), name: probablyId.slice(endOfPublisher + 1, endOfName), version: probablyId.slice(endOfName + 1) };\n    }\n    /**\n     * @returns `undefined` if it looks like the string passed in does not have the format of {@link PluginIdentifiers.VersionedId}.\n     */\n    export function idAndVersionFromVersionedId(probablyId: string): IdAndVersion | undefined {\n        const endOfPublisher = probablyId.indexOf('.');\n        const endOfName = probablyId.indexOf('@', endOfPublisher);\n        if (endOfPublisher === -1 || endOfName === -1) {\n            return undefined;\n        }\n        return { id: probablyId.slice(0, endOfName) as UnversionedId, version: probablyId.slice(endOfName + 1) };\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { EditorsAndDocumentsExt, EditorsAndDocumentsDelta, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { TextEditorExt } from './text-editor';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { DocumentDataExt } from './document-data';\nimport { ok } from '../common/assert';\nimport * as Converter from './type-converters';\nimport { dispose } from '../common/disposable-util';\nimport { URI } from './types-impl';\n\n@injectable()\nexport class EditorsAndDocumentsExtImpl implements EditorsAndDocumentsExt {\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    private activeEditorId: string | null = null;\n\n    private readonly _onDidAddDocuments = new Emitter<DocumentDataExt[]>();\n    private readonly _onDidRemoveDocuments = new Emitter<DocumentDataExt[]>();\n    private readonly _onDidChangeVisibleTextEditors = new Emitter<TextEditorExt[]>();\n    private readonly _onDidChangeActiveTextEditor = new Emitter<TextEditorExt | undefined>();\n\n    readonly onDidAddDocuments: Event<DocumentDataExt[]> = this._onDidAddDocuments.event;\n    readonly onDidRemoveDocuments: Event<DocumentDataExt[]> = this._onDidRemoveDocuments.event;\n    readonly onDidChangeVisibleTextEditors: Event<TextEditorExt[]> = this._onDidChangeVisibleTextEditors.event;\n    readonly onDidChangeActiveTextEditor: Event<TextEditorExt | undefined> = this._onDidChangeActiveTextEditor.event;\n\n    private readonly documents = new Map<string, DocumentDataExt>();\n    private readonly editors = new Map<string, TextEditorExt>();\n\n    async $acceptEditorsAndDocumentsDelta(delta: EditorsAndDocumentsDelta): Promise<void> {\n        this.acceptEditorsAndDocumentsDelta(delta);\n    }\n\n    acceptEditorsAndDocumentsDelta(delta: EditorsAndDocumentsDelta): void {\n        const removedDocuments = new Array<DocumentDataExt>();\n        const addedDocuments = new Array<DocumentDataExt>();\n        const removedEditors = new Array<TextEditorExt>();\n\n        if (delta.removedDocuments) {\n            for (const uriComponent of delta.removedDocuments) {\n                const uri = URI.revive(uriComponent);\n                const id = uri.toString();\n                const data = this.documents.get(id);\n                this.documents.delete(id);\n                if (data) {\n                    removedDocuments.push(data);\n                }\n            }\n        }\n\n        if (delta.addedDocuments) {\n            for (const data of delta.addedDocuments) {\n                const resource = URI.revive(data.uri);\n                ok(!this.documents.has(resource.toString()), `document '${resource}' already exists!`);\n                const documentData = new DocumentDataExt(\n                    this.rpc.getProxy(PLUGIN_RPC_CONTEXT.DOCUMENTS_MAIN),\n                    resource,\n                    data.lines,\n                    data.EOL,\n                    data.modeId,\n                    data.versionId,\n                    data.isDirty,\n                    data.encoding\n                );\n                this.documents.set(resource.toString(), documentData);\n                addedDocuments.push(documentData);\n            }\n        }\n\n        if (delta.removedEditors) {\n            for (const id of delta.removedEditors) {\n                const editor = this.editors.get(id);\n                this.editors.delete(id);\n                if (editor) {\n                    removedEditors.push(editor);\n                }\n            }\n        }\n\n        if (delta.addedEditors) {\n            for (const data of delta.addedEditors) {\n                const resource = URI.revive(data.documentUri);\n                ok(this.documents.has(resource.toString()), `document '${resource}' doesn't exist`);\n                ok(!this.editors.has(data.id), `editor '${data.id}' already exists!`);\n\n                const documentData = this.documents.get(resource.toString());\n                const editor = new TextEditorExt(\n                    this.rpc.getProxy(PLUGIN_RPC_CONTEXT.TEXT_EDITORS_MAIN),\n                    data.id,\n                    documentData!,\n                    data.selections.map(Converter.toSelection),\n                    data.options,\n                    data.visibleRanges.map(Converter.toRange),\n                    Converter.toViewColumn(data.editorPosition)\n                );\n                this.editors.set(data.id, editor);\n            }\n        }\n\n        // TODO investigate how to get rid of it to align with VS Code extension host code\n        if (this.activeEditorId && delta.removedEditors && delta.removedEditors.indexOf(this.activeEditorId) !== -1 && this.editors.size !== 0) {\n            // to be compatible with VSCode, when active editor is closed onDidChangeActiveTextEditor\n            // should be triggered with undefined before next editor, if any, become active.\n            this.activeEditorId = null;\n            this._onDidChangeActiveTextEditor.fire(undefined);\n        }\n\n        if (delta.newActiveEditor !== undefined) {\n            ok(delta.newActiveEditor === null || this.editors.has(delta.newActiveEditor), `active editor '${delta.newActiveEditor}' does not exist`);\n            this.activeEditorId = delta.newActiveEditor;\n        }\n\n        dispose(removedDocuments);\n        dispose(removedEditors);\n\n        // now that the internal state is complete, fire events\n        if (delta.removedDocuments) {\n            this._onDidRemoveDocuments.fire(removedDocuments);\n        }\n        if (delta.addedDocuments) {\n            this._onDidAddDocuments.fire(addedDocuments);\n        }\n\n        if (delta.removedEditors || delta.addedEditors) {\n            this._onDidChangeVisibleTextEditors.fire(this.allEditors());\n        }\n        if (delta.newActiveEditor !== undefined) {\n            this._onDidChangeActiveTextEditor.fire(this.activeEditor());\n        }\n    }\n\n    allEditors(): TextEditorExt[] {\n        const result = new Array<TextEditorExt>();\n        this.editors.forEach(editor => result.push(editor));\n        return result;\n    }\n\n    activeEditor(): TextEditorExt | undefined {\n        if (!this.activeEditorId) {\n            return undefined;\n        } else {\n            return this.editors.get(this.activeEditorId);\n        }\n    }\n\n    allDocuments(): DocumentDataExt[] {\n        const result = new Array<DocumentDataExt>();\n        this.documents.forEach(data => result.push(data));\n        return result;\n    }\n\n    getDocument(uri: string): DocumentDataExt | undefined {\n        return this.documents.get(uri);\n    }\n\n    getEditor(id: string): TextEditorExt | undefined {\n        return this.editors.get(id);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type { MaybeArray, MaybePromise } from './types';\n\nexport interface Prioritizeable<T> {\n    readonly priority: number;\n    readonly value: T;\n}\nexport namespace Prioritizeable {\n    export type GetPriority<T> = (value: T) => MaybePromise<number>;\n    export type GetPrioritySync<T> = (value: T) => number;\n    export async function toPrioritizeable<T>(rawValue: MaybePromise<T>, getPriority: GetPriority<T>): Promise<Prioritizeable<T>>;\n    export async function toPrioritizeable<T>(rawValue: MaybePromise<T>[], getPriority: GetPriority<T>): Promise<Prioritizeable<T>[]>;\n    export async function toPrioritizeable<T>(rawValue: MaybeArray<MaybePromise<T>>, getPriority: GetPriority<T>): Promise<MaybeArray<Prioritizeable<T>>> {\n        if (rawValue instanceof Array) {\n            return Promise.all(\n                rawValue.map(v => toPrioritizeable(v, getPriority))\n            );\n        }\n        const value = await rawValue;\n        const priority = await getPriority(value);\n        return { priority, value };\n    }\n    export function toPrioritizeableSync<T>(rawValue: T[], getPriority: GetPrioritySync<T>): Prioritizeable<T>[] {\n        return rawValue.map(v => ({\n            value: v,\n            priority: getPriority(v)\n        }));\n    }\n    export function prioritizeAllSync<T>(values: T[], getPriority: GetPrioritySync<T>): Prioritizeable<T>[] {\n        const prioritizeable = toPrioritizeableSync(values, getPriority);\n        return prioritizeable.filter(isValid).sort(compare);\n    }\n    export async function prioritizeAll<T>(values: MaybePromise<T>[], getPriority: GetPriority<T>): Promise<Prioritizeable<T>[]> {\n        const prioritizeable = await toPrioritizeable(values, getPriority);\n        return prioritizeable.filter(isValid).sort(compare);\n    }\n    export function isValid<T>(p: Prioritizeable<T>): boolean {\n        return p.priority > 0;\n    }\n    export function compare<T>(p: Prioritizeable<T>, p2: Prioritizeable<T>): number {\n        return p2.priority - p.priority;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces, Container } from 'inversify';\n\n/**\n * This utility creates a factory function that accepts runtime arguments which are bound as constant\n * values in a child container, allowing for dependency injection of both static dependencies\n * (resolved as usual from the factory's container) and dynamic parameters (provided at factory invocation time).\n *\n * @example\n * ```typescript\n * // Factory interface\n * interface UserPreferenceProviderFactory {\n *     (uri: URI, section: string): UserPreferenceProvider;\n * }\n * // Factory symbol\n * const UserPreferenceProviderFactory = Symbol('UserPreferenceProviderFactory');\n *\n * // Bind the factory\n * bindFactory(\n *     bind,\n *     UserPreferenceProviderFactory,   // Service identifier of the factory\n *     UserPreferenceProvider,          // Service identifier of the entity to be constructed\n *     SectionPreferenceProviderUri,    // The first factory argument will be bound to this identifier (uri)\n *     SectionPreferenceProviderSection // The second factory argument will be bound to this identifier  (section)\n * );\n *\n * // Usage: factory(uri, section) creates UserPreferenceProvider with injected dependencies\n * const factory = container.get(UserPreferenceProviderFactory);\n * const provider = factory(myUri, 'settings');\n * ```\n */\n\nexport function bindFactory<F, C>(bind: interfaces.Bind,\n    factoryId: interfaces.ServiceIdentifier<F>,\n    constructor: interfaces.Newable<C>,\n    ...parameterBindings: interfaces.ServiceIdentifier<unknown>[]): void {\n    bind(factoryId).toFactory(ctx =>\n        (...args: unknown[]) => {\n            const child = new Container({ defaultScope: 'Singleton' });\n            child.parent = ctx.container;\n            for (let i = 0; i < parameterBindings.length; i++) {\n                child.bind(parameterBindings[i]).toConstantValue(args[i]);\n            }\n            child.bind(constructor).to(constructor);\n            return child.get(constructor);\n        }\n    );\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '@theia/core';\nimport { NotebookEditorPropertiesChangeData, NotebookEditorsExt, NotebookEditorViewColumnInfo } from '../../common';\nimport * as typeConverters from '../type-converters';\nimport * as theia from '@theia/plugin';\nimport { NotebooksExtImpl } from './notebooks';\n\nexport class NotebookEditorsExtImpl implements NotebookEditorsExt {\n\n    private readonly DidChangeNotebookEditorSelectionEmitter = new Emitter<theia.NotebookEditorSelectionChangeEvent>();\n    private readonly DidChangeNotebookEditorVisibleRangesEmitter = new Emitter<theia.NotebookEditorVisibleRangesChangeEvent>();\n\n    readonly onDidChangeNotebookEditorSelection = this.DidChangeNotebookEditorSelectionEmitter.event;\n    readonly onDidChangeNotebookEditorVisibleRanges = this.DidChangeNotebookEditorVisibleRangesEmitter.event;\n\n    constructor(\n        private readonly notebooksAndEditors: NotebooksExtImpl,\n    ) { }\n\n    $acceptEditorPropertiesChanged(id: string, data: NotebookEditorPropertiesChangeData): void {\n        const editor = this.notebooksAndEditors.getEditorById(id);\n        // ONE: make all state updates\n        if (data.visibleRanges) {\n            editor.acceptVisibleRanges(data.visibleRanges.ranges.map(typeConverters.NotebookRange.to));\n        }\n        if (data.selections) {\n            editor.acceptSelections(data.selections.selections.map(typeConverters.NotebookRange.to));\n        }\n\n        // TWO: send all events after states have been updated\n        if (data.visibleRanges) {\n            this.DidChangeNotebookEditorVisibleRangesEmitter.fire({\n                notebookEditor: editor.apiEditor,\n                visibleRanges: editor.apiEditor.visibleRanges\n            });\n        }\n        if (data.selections) {\n            this.DidChangeNotebookEditorSelectionEmitter.fire(Object.freeze({\n                notebookEditor: editor.apiEditor,\n                selections: editor.apiEditor.selections\n            }));\n        }\n    }\n\n    $acceptEditorViewColumns(data: NotebookEditorViewColumnInfo): void {\n        // eslint-disable-next-line guard-for-in\n        for (const id in data) {\n            const editor = this.notebooksAndEditors.getEditorById(id);\n            editor.acceptViewColumn(typeConverters.ViewColumn.to(data[id]));\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { nls } from '@theia/core';\nimport { Localization } from '@theia/core/lib/common/i18n/localization';\nimport { LocalizationExt, LocalizationMain, Plugin, PLUGIN_RPC_CONTEXT, StringDetails } from '../common';\nimport { LanguagePackBundle } from '../common/language-pack-service';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { URI } from './types-impl';\nimport { PluginLogger } from './logger';\n\n@injectable()\nexport class LocalizationExtImpl implements LocalizationExt {\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    private _proxy: LocalizationMain;\n    private logger: PluginLogger;\n    private currentLanguage?: string;\n    private isDefaultLanguage = true;\n    private readonly bundleCache = new Map<string, LanguagePackBundle | undefined>();\n\n    @postConstruct()\n    initialize(): void {\n        this._proxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.LOCALIZATION_MAIN);\n        this.logger = new PluginLogger(this.rpc, 'nls');\n    }\n\n    translateMessage(pluginId: string, details: StringDetails): string {\n        const { message, args, comment } = details;\n        if (this.isDefaultLanguage) {\n            return Localization.format(message, (args ?? {}));\n        }\n\n        let key = message;\n        if (comment && comment.length > 0) {\n            key += `/${Array.isArray(comment) ? comment.join() : comment}`;\n        }\n        const str = this.bundleCache.get(pluginId)?.contents[key];\n        return Localization.format(str ?? message, (args ?? {}));\n    }\n\n    getBundle(pluginId: string): { [key: string]: string } | undefined {\n        return this.bundleCache.get(pluginId)?.contents;\n    }\n\n    getBundleUri(pluginId: string): URI | undefined {\n        const uri = this.bundleCache.get(pluginId)?.uri;\n        return uri ? URI.parse(uri) : undefined;\n    }\n\n    async initializeLocalizedMessages(plugin: Plugin, currentLanguage: string): Promise<void> {\n        this.currentLanguage ??= currentLanguage;\n        this.isDefaultLanguage = this.currentLanguage === nls.defaultLocale;\n\n        if (this.isDefaultLanguage) {\n            return;\n        }\n\n        if (this.bundleCache.has(plugin.model.id)) {\n            return;\n        }\n\n        let bundle: LanguagePackBundle | undefined;\n\n        try {\n            bundle = await this._proxy.$fetchBundle(plugin.model.id);\n        } catch (e) {\n            this.logger.error(`Failed to load translations for ${plugin.model.id}: ${e.message}`);\n            return;\n        }\n\n        this.bundleCache.set(plugin.model.id, bundle);\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from '../../browser/menu/action-menu-node';\nexport * from '../../browser/menu/composite-menu-node';\nexport * from './menu-model-registry';\nexport * from './menu-types';\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as theia from '@theia/plugin';\n\nexport class PluginDebugAdapterTracker implements theia.DebugAdapterTracker {\n    constructor(protected readonly trackers: theia.DebugAdapterTracker[]) { }\n\n    static async create(session: theia.DebugSession, trackerFactories: [string, theia.DebugAdapterTrackerFactory][]): Promise<PluginDebugAdapterTracker> {\n        const trackers: theia.DebugAdapterTracker[] = [];\n\n        const factories = trackerFactories.filter(tuple => tuple[0] === '*' || tuple[0] === session.type).map(tuple => tuple[1]);\n        for (const factory of factories) {\n            const tracker = await factory.createDebugAdapterTracker(session);\n            if (tracker) {\n                trackers.push(tracker);\n            }\n        }\n\n        return new PluginDebugAdapterTracker(trackers);\n    }\n\n    onWillStartSession(): void {\n        this.trackers.forEach(tracker => {\n            if (tracker.onWillStartSession) {\n                tracker.onWillStartSession();\n            }\n        });\n    }\n\n    onWillReceiveMessage(message: any): void {\n        this.trackers.forEach(tracker => {\n            if (tracker.onWillReceiveMessage) {\n                tracker.onWillReceiveMessage(message);\n            }\n        });\n    }\n\n    onDidSendMessage(message: any): void {\n        this.trackers.forEach(tracker => {\n            if (tracker.onDidSendMessage) {\n                tracker.onDidSendMessage(message);\n            }\n        });\n    }\n\n    onWillStopSession(): void {\n        this.trackers.forEach(tracker => {\n            if (tracker.onWillStopSession) {\n                tracker.onWillStopSession();\n            }\n        });\n    }\n\n    onError(error: Error): void {\n        this.trackers.forEach(tracker => {\n            if (tracker.onError) {\n                tracker.onError(error);\n            }\n        });\n    }\n\n    onExit(code: number | undefined, signal: string | undefined): void {\n        this.trackers.forEach(tracker => {\n            if (tracker.onExit) {\n                tracker.onExit(code, signal);\n            }\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { ChildProcess } from 'child_process';\nimport * as stream from 'stream';\nimport * as net from 'net';\nimport { DebugAdapter } from '../common/debug-model';\n\nabstract class StreamDebugAdapter extends DisposableCollection {\n    private messageReceivedEmitter = new Emitter<string>();\n    onMessageReceived: Event<string> = this.messageReceivedEmitter.event;\n    private errorEmitter = new Emitter<Error>();\n    onError: Event<Error> = this.errorEmitter.event;\n    private closeEmitter = new Emitter<void>();\n    onClose: Event<void> = this.closeEmitter.event;\n\n    // these constants are for the message header, see: https://microsoft.github.io/debug-adapter-protocol/overview#header-part\n    private static TWO_CRLF = '\\r\\n\\r\\n';\n    private static CONTENT_LENGTH = 'Content-Length';\n    private contentLength: number = -1;\n    private buffer: Buffer = Buffer.alloc(0);\n\n    constructor(private fromAdapter: stream.Readable, private toAdapter: stream.Writable) {\n        super();\n\n        this.fromAdapter.on('data', (data: Buffer) => this.handleData(data));\n        this.fromAdapter.on('close', () => this.handleClosed()); // FIXME pass a proper exit code\n        this.fromAdapter.on('error', error => this.errorEmitter.fire(error));\n        this.toAdapter.on('error', error => this.errorEmitter.fire(error));\n    }\n\n    handleClosed(): void {\n        this.closeEmitter.fire();\n    }\n\n    send(message: string): void {\n        const msg = `${StreamDebugAdapter.CONTENT_LENGTH}: ${Buffer.byteLength(message, 'utf8')}${StreamDebugAdapter.TWO_CRLF}${message}`;\n\n        this.toAdapter.write(msg, 'utf8');\n    }\n\n    protected handleData(data: Buffer): void {\n        this.buffer = Buffer.concat([this.buffer, data]);\n\n        while (true) {\n            if (this.contentLength >= 0) {\n                if (this.buffer.length >= this.contentLength) {\n                    const message = this.buffer.toString('utf8', 0, this.contentLength);\n                    this.buffer = this.buffer.slice(this.contentLength);\n                    this.contentLength = -1;\n\n                    if (message.length > 0) {\n                        this.messageReceivedEmitter.fire(message);\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            } else {\n                let idx = this.buffer.indexOf(StreamDebugAdapter.CONTENT_LENGTH);\n                if (idx > 0) {\n                    // log unrecognized output\n                    const output = this.buffer.slice(0, idx);\n                    console.log(output.toString('utf-8'));\n\n                    this.buffer = this.buffer.slice(idx);\n                }\n\n                idx = this.buffer.indexOf(StreamDebugAdapter.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this.buffer.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] === StreamDebugAdapter.CONTENT_LENGTH) {\n                            this.contentLength = +pair[1];\n                        }\n                    }\n                    this.buffer = this.buffer.slice(idx + StreamDebugAdapter.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\n\nexport class ProcessDebugAdapter extends StreamDebugAdapter implements DebugAdapter {\n    protected readonly process: ChildProcess;\n    constructor(process: ChildProcess) {\n        super(process.stdout!, process.stdin!);\n        this.process = process;\n    }\n\n    async stop(): Promise<void> {\n        this.process.kill();\n        this.process.stdin?.end();\n    }\n}\n\nexport class SocketDebugAdapter extends StreamDebugAdapter implements DebugAdapter {\n    private readonly socket: net.Socket;\n    constructor(socket: net.Socket) {\n        super(socket, socket);\n        this.socket = socket;\n    }\n\n    stop(): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.socket.end(() => resolve());\n        });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as Converter from '../type-converters';\nimport { DocumentSymbol, Range } from '../../common/plugin-api-rpc-model';\nimport * as types from '../types-impl';\n\n/** Adapts the calls from main to extension thread for providing the document symbols. */\nexport class OutlineAdapter {\n\n    constructor(\n        private readonly documents: DocumentsExtImpl,\n        private readonly provider: theia.DocumentSymbolProvider\n    ) { }\n\n    provideDocumentSymbols(resource: URI, token: theia.CancellationToken): Promise<DocumentSymbol[] | undefined> {\n        const document = this.documents.getDocumentData(resource);\n        if (!document) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const doc = document.document;\n\n        return Promise.resolve(this.provider.provideDocumentSymbols(doc, token)).then(value => {\n            if (!value || value.length === 0) {\n                return undefined;\n            }\n            if (value[0] instanceof types.DocumentSymbol) {\n                return (<types.DocumentSymbol[]>value).map(Converter.fromDocumentSymbol);\n            } else {\n                return OutlineAdapter.asDocumentSymbolTree(resource, <types.SymbolInformation[]>value);\n            }\n        });\n    }\n\n    private static asDocumentSymbolTree(resource: URI, infos: types.SymbolInformation[]): DocumentSymbol[] {\n        // first sort by start (and end) and then loop over all elements\n        // and build a tree based on containment.\n        infos = infos.slice(0).sort((a, b) => {\n            let r = a.location.range.start.compareTo(b.location.range.start);\n            if (r === 0) {\n                r = b.location.range.end.compareTo(a.location.range.end);\n            }\n            return r;\n        });\n        const res: DocumentSymbol[] = [];\n        const parentStack: DocumentSymbol[] = [];\n        for (const info of infos) {\n            const element = <DocumentSymbol>{\n                name: info.name,\n                detail: '',\n                kind: Converter.SymbolKind.fromSymbolKind(info.kind),\n                containerName: info.containerName,\n                range: Converter.fromRange(info.location.range),\n                selectionRange: Converter.fromRange(info.location.range),\n                children: [],\n                tags: info.tags && info.tags.length > 0 ? info.tags.map(Converter.fromSymbolTag) : [],\n            };\n\n            while (true) {\n                if (parentStack.length === 0) {\n                    parentStack.push(element);\n                    res.push(element);\n                    break;\n                }\n                const parent = parentStack[parentStack.length - 1];\n                if (OutlineAdapter.containsRange(parent.range, element.range) && !OutlineAdapter.equalsRange(parent.range, element.range)) {\n                    parent.children!.push(element);\n                    parentStack.push(element);\n                    break;\n                }\n                parentStack.pop();\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    private static containsRange(range: Range, otherRange: Range): boolean {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Test if range `a` equals `b`.\n     */\n    private static equalsRange(a: Range, b: Range): boolean {\n        return (\n            !!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn\n        );\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport * as types from '../types-impl';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { DocumentHighlight } from '../../common/plugin-api-rpc-model';\n\nexport class DocumentHighlightAdapter {\n\n    constructor(\n        private readonly provider: theia.DocumentHighlightProvider,\n        private readonly documents: DocumentsExtImpl) {\n    }\n\n    provideDocumentHighlights(resource: URI, position: Position, token: theia.CancellationToken): Promise<DocumentHighlight[] | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideDocumentHighlights(document, zeroBasedPosition, token)).then(documentHighlights => {\n            if (!documentHighlights) {\n                return undefined;\n            }\n\n            if (this.isDocumentHighlightArray(documentHighlights)) {\n                const highlights: DocumentHighlight[] = [];\n\n                for (const highlight of documentHighlights) {\n                    highlights.push(Converter.fromDocumentHighlight(highlight));\n                }\n\n                return highlights;\n            }\n        });\n    }\n\n    private isDocumentHighlightArray(array: unknown): array is types.DocumentHighlight[] {\n        return Array.isArray(array) && array.length > 0 && array[0] instanceof types.DocumentHighlight;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as theia from '@theia/plugin';\nimport { Emitter } from '@theia/core';\nimport { UriComponents } from '../../common/uri-components';\nimport { NotebookCellsChangedEventDto, NotebookDocumentsExt } from '../../common';\nimport { NotebooksExtImpl } from './notebooks';\nimport { URI } from '../types-impl';\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport class NotebookDocumentsExtImpl implements NotebookDocumentsExt {\n\n    private readonly didSaveNotebookDocumentEmitter = new Emitter<theia.NotebookDocument>();\n    readonly onDidSaveNotebookDocument = this.didSaveNotebookDocumentEmitter.event;\n\n    private readonly didChangeNotebookDocumentEmitter = new Emitter<theia.NotebookDocumentChangeEvent>();\n    readonly onDidChangeNotebookDocument = this.didChangeNotebookDocumentEmitter.event;\n\n    constructor(\n        private readonly notebooksAndEditors: NotebooksExtImpl,\n    ) { }\n\n    $acceptModelChanged(uri: UriComponents, event: NotebookCellsChangedEventDto,\n        isDirty: boolean, newMetadata?: NotebookDocumentMetadata): void {\n        const document = this.notebooksAndEditors.getNotebookDocument(URI.from(uri));\n        const e = document.acceptModelChanged(event, isDirty, newMetadata);\n        this.didChangeNotebookDocumentEmitter.fire(e);\n    }\n\n    $acceptDirtyStateChanged(uri: UriComponents, isDirty: boolean): void {\n        const document = this.notebooksAndEditors.getNotebookDocument(URI.from(uri));\n        document.acceptDirty(isDirty);\n    }\n\n    $acceptModelSaved(uri: UriComponents): void {\n        const document = this.notebooksAndEditors.getNotebookDocument(URI.from(uri));\n        this.didSaveNotebookDocumentEmitter.fire(document.apiNotebook);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { UriComponents } from '@theia/core/lib/common/uri';\n\nexport { UriComponents };\n\n// some well known URI schemas\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/network.ts#L9-L79\n// TODO move to network.ts file\nexport namespace Schemes {\n\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    export const inMemory = 'inmemory';\n\n    /**\n     * A schema that is used for setting files\n     */\n    export const vscode = 'vscode';\n\n    /**\n     * A schema that is used for internal private files\n     */\n    export const internal = 'private';\n\n    /**\n     * A walk-through document.\n     */\n    export const walkThrough = 'walkThrough';\n\n    /**\n     * An embedded code snippet.\n     */\n    export const walkThroughSnippet = 'walkThroughSnippet';\n\n    export const http = 'http';\n\n    export const https = 'https';\n\n    export const file = 'file';\n\n    export const mailto = 'mailto';\n\n    export const untitled = 'untitled';\n\n    export const data = 'data';\n\n    export const command = 'command';\n\n    export const vscodeRemote = 'vscode-remote';\n\n    export const vscodeRemoteResource = 'vscode-remote-resource';\n\n    export const userData = 'vscode-userdata';\n\n    export const vscodeCustomEditor = 'vscode-custom-editor';\n\n    export const vscodeSettings = 'vscode-settings';\n\n    export const webviewPanel = 'webview-panel';\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n    TreeDataProvider, TreeView, TreeViewExpansionEvent, TreeItem, TreeItemLabel,\n    TreeViewSelectionChangeEvent, TreeViewVisibilityChangeEvent, CancellationToken, DataTransferFile, TreeViewOptions, ViewBadge, TreeCheckboxChangeEvent\n} from '@theia/plugin';\n// TODO: extract `@theia/util` for event, disposable, cancellation and common types\n// don't use @theia/core directly from plugin host\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { basename } from '@theia/core/lib/common/paths';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { DataTransfer, DataTransferItem, Disposable as PluginDisposable, ThemeIcon, TreeItemCheckboxState } from '../types-impl';\nimport { Plugin, PLUGIN_RPC_CONTEXT, TreeViewsExt, TreeViewsMain, TreeViewItem, TreeViewRevealOptions, DataTransferFileDTO } from '../../common/plugin-api-rpc';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { CommandRegistryImpl, CommandsConverter } from '../command-registry';\nimport { TreeViewItemReference } from '../../common';\nimport { PluginIconPath } from '../plugin-icon-path';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { UriComponents } from '@theia/core/lib/common/uri';\nimport { isObject } from '@theia/core';\nimport { coalesce } from '../../common/arrays';\n\nexport class TreeViewsExtImpl implements TreeViewsExt {\n    private proxy: TreeViewsMain;\n\n    private readonly treeViews = new Map<string, TreeViewExtImpl<any>>();\n\n    constructor(rpc: RPCProtocol, readonly commandRegistry: CommandRegistryImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.TREE_VIEWS_MAIN);\n\n        commandRegistry.registerArgumentProcessor({\n            processArgument: arg => {\n                if (TreeViewItemReference.is(arg)) {\n                    return this.toTreeElement(arg);\n                } else if (Array.isArray(arg)) {\n                    return arg.map(param => TreeViewItemReference.is(param) ? this.toTreeElement(param) : param);\n                } else {\n                    return arg;\n                }\n            }\n        });\n    }\n    $checkStateChanged(treeViewId: string, itemIds: { id: string; checked: boolean; }[]): Promise<void> {\n        return this.getTreeView(treeViewId).checkStateChanged(itemIds);\n    }\n    $dragStarted(treeViewId: string, treeItemIds: string[], token: CancellationToken): Promise<UriComponents[] | undefined> {\n        return this.getTreeView(treeViewId).onDragStarted(treeItemIds, token);\n    }\n\n    $dragEnd(treeViewId: string): Promise<void> {\n        return this.getTreeView(treeViewId).dragEnd();\n    }\n\n    $drop(treeViewId: string, treeItemId: string | undefined, dataTransferItems: [string, string | DataTransferFileDTO][], token: CancellationToken): Promise<void> {\n        return this.getTreeView(treeViewId).handleDrop!(treeItemId, dataTransferItems, token);\n    }\n\n    protected toTreeElement(treeViewItemRef: TreeViewItemReference): any {\n        return this.treeViews.get(treeViewItemRef.viewId)?.getElement(treeViewItemRef.itemId);\n    }\n\n    registerTreeDataProvider<T>(plugin: Plugin, treeViewId: string, treeDataProvider: TreeDataProvider<T>): PluginDisposable {\n        const treeView = this.createTreeView(plugin, treeViewId, { treeDataProvider });\n\n        return PluginDisposable.create(() => {\n            this.treeViews.delete(treeViewId);\n            treeView.dispose();\n        });\n    }\n\n    createTreeView<T>(plugin: Plugin, treeViewId: string, options: TreeViewOptions<T>): TreeView<T> {\n        if (!options || !options.treeDataProvider) {\n            throw new Error('Options with treeDataProvider is mandatory');\n        }\n\n        const treeView = new TreeViewExtImpl<T>(plugin, treeViewId, options, this.proxy, this.commandRegistry.converter);\n        this.treeViews.set(treeViewId, treeView);\n\n        return {\n            // tslint:disable:typedef\n            get onDidExpandElement() {\n                return treeView.onDidExpandElement;\n            },\n            get onDidCollapseElement() {\n                return treeView.onDidCollapseElement;\n            },\n            get selection() {\n                return treeView.selectedElements;\n            },\n            get onDidChangeSelection() {\n                return treeView.onDidChangeSelection;\n            },\n            get visible() {\n                return treeView.visible;\n            },\n            get onDidChangeVisibility() {\n                return treeView.onDidChangeVisibility;\n            },\n            get onDidChangeCheckboxState() {\n                return treeView.onDidChangeCheckboxState;\n            },\n            get message(): string {\n                return treeView.message;\n            },\n            set message(message: string) {\n                treeView.message = message;\n            },\n            get title(): string {\n                return treeView.title;\n            },\n            set title(title: string) {\n                treeView.title = title;\n            },\n            get description(): string {\n                return treeView.description;\n            },\n            set description(description: string) {\n                treeView.description = description;\n            },\n            get badge(): ViewBadge | undefined {\n                return treeView.badge;\n            },\n            set badge(badge: ViewBadge | undefined) {\n                treeView.badge = badge;\n            },\n            reveal: (element: T, revealOptions?: Partial<TreeViewRevealOptions>): Thenable<void> =>\n                treeView.reveal(element, revealOptions),\n\n            dispose: () => {\n                this.treeViews.delete(treeViewId);\n                treeView.dispose();\n            }\n        };\n    }\n\n    async $getChildren(treeViewId: string, treeItemId: string): Promise<TreeViewItem[] | undefined> {\n        const treeView = this.getTreeView(treeViewId);\n\n        return treeView.getChildren(treeItemId);\n    }\n\n    async $resolveTreeItem(treeViewId: string, treeItemId: string, token: CancellationToken): Promise<TreeViewItem | undefined> {\n        return this.getTreeView(treeViewId).resolveTreeItem(treeItemId, token);\n    }\n\n    async $hasResolveTreeItem(treeViewId: string): Promise<boolean> {\n        return this.getTreeView(treeViewId).hasResolveTreeItem();\n    }\n\n    async $setExpanded(treeViewId: string, treeItemId: string, expanded: boolean): Promise<any> {\n        const treeView = this.getTreeView(treeViewId);\n\n        if (expanded) {\n            return treeView.onExpanded(treeItemId);\n        } else {\n            return treeView.onCollapsed(treeItemId);\n        }\n    }\n\n    async $setSelection(treeViewId: string, treeItemIds: string[]): Promise<void> {\n        this.getTreeView(treeViewId).setSelection(treeItemIds);\n    }\n\n    async $setVisible(treeViewId: string, isVisible: boolean): Promise<void> {\n        this.getTreeView(treeViewId).setVisible(isVisible);\n    }\n\n    protected getTreeView(treeViewId: string): TreeViewExtImpl<any> {\n        const treeView = this.treeViews.get(treeViewId);\n        if (!treeView) {\n            throw new Error(`No tree view with id '${treeViewId}' registered.`);\n        }\n        return treeView;\n    }\n\n}\n\ninterface TreeExtNode<T> extends Disposable {\n    id: string\n    /** Collection of disposables. Must be disposed by an instance's `dispose` implementation. */\n    disposables: DisposableCollection;\n    /** The original `TreeItem` provided by the plugin's tree data provider. */\n    pluginTreeItem?: TreeItem;\n    /** The `TreeViewItem` used on the main side to render the tree node. */\n    treeViewItem?: TreeViewItem;\n    value?: T\n    children?: TreeExtNode<T>[]\n}\n\nclass TreeViewExtImpl<T> implements Disposable {\n    private static readonly ID_COMPUTED = 'c';\n    private static readonly ID_ITEM = 'i';\n\n    private readonly onDidExpandElementEmitter = new Emitter<TreeViewExpansionEvent<T>>();\n    readonly onDidExpandElement = this.onDidExpandElementEmitter.event;\n\n    private readonly onDidCollapseElementEmitter = new Emitter<TreeViewExpansionEvent<T>>();\n    readonly onDidCollapseElement = this.onDidCollapseElementEmitter.event;\n\n    private readonly onDidChangeSelectionEmitter = new Emitter<TreeViewSelectionChangeEvent<T>>();\n    readonly onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n\n    private readonly onDidChangeVisibilityEmitter = new Emitter<TreeViewVisibilityChangeEvent>();\n    readonly onDidChangeVisibility = this.onDidChangeVisibilityEmitter.event;\n\n    private readonly onDidChangeCheckboxStateEmitter = new Emitter<TreeCheckboxChangeEvent<T>>();\n    readonly onDidChangeCheckboxState = this.onDidChangeCheckboxStateEmitter.event;\n\n    private readonly nodes = new Map<string, TreeExtNode<T>>();\n    private pendingRefresh = Promise.resolve();\n\n    private localDataTransfer = new DataTransfer();\n\n    private readonly toDispose = new DisposableCollection(\n        Disposable.create(() => this.clearAll()),\n        this.onDidExpandElementEmitter,\n        this.onDidCollapseElementEmitter,\n        this.onDidChangeSelectionEmitter,\n        this.onDidChangeVisibilityEmitter\n    );\n\n    constructor(\n        private plugin: Plugin,\n        private treeViewId: string,\n        private options: TreeViewOptions<T>,\n        private proxy: TreeViewsMain,\n        readonly commandsConverter: CommandsConverter\n    ) {\n        // make copies of optionally provided MIME types:\n        const dragMimeTypes = options.dragAndDropController?.dragMimeTypes?.slice();\n        const dropMimeTypes = options.dragAndDropController?.dropMimeTypes?.slice();\n        proxy.$registerTreeDataProvider(treeViewId, {\n            manageCheckboxStateManually: options.manageCheckboxStateManually,\n            showCollapseAll: options.showCollapseAll,\n            canSelectMany: options.canSelectMany,\n            dragMimeTypes, dropMimeTypes\n        });\n        this.toDispose.push(Disposable.create(() => this.proxy.$unregisterTreeDataProvider(treeViewId)));\n        options.treeDataProvider.onDidChangeTreeData?.(elements => {\n            if (!elements) {\n                this.pendingRefresh = proxy.$refresh(treeViewId);\n            } else {\n                const ids = [];\n                elements = elements || [];\n                if (!Array.isArray(elements)) {\n                    elements = [elements];\n                }\n                const set = new Set<T>();\n                for (const element of elements) {\n                    set.add(element);\n                }\n                for (const node of this.nodes.values()) {\n                    if (node.value && set.has(node.value)) {\n                        ids.push(node.id);\n                    }\n                }\n                this.pendingRefresh = proxy.$refresh(treeViewId, ids);\n            }\n        });\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    async reveal(element: T, options?: Partial<TreeViewRevealOptions>): Promise<void> {\n        await this.pendingRefresh;\n        const select = options?.select !== false; // default to true\n        const focus = !!options?.focus;\n        const expand = typeof options?.expand === 'undefined' ? false : options!.expand;\n\n        const elementParentChain = await this.calculateRevealParentChain(element);\n        if (elementParentChain) {\n            return this.proxy.$reveal(this.treeViewId, elementParentChain, {\n                select, focus, expand, ...options\n            });\n        }\n    }\n\n    private _message: string = '';\n    get message(): string {\n        return this._message;\n    }\n\n    set message(message: string) {\n        this._message = message;\n        this.proxy.$setMessage(this.treeViewId, this._message);\n    }\n\n    private _title: string = '';\n    get title(): string {\n        return this._title;\n    }\n\n    set title(title: string) {\n        this._title = title;\n        this.proxy.$setTitle(this.treeViewId, title);\n    }\n\n    private _description: string = '';\n    get description(): string {\n        return this._description;\n    }\n\n    set description(description: string) {\n        this._description = description;\n        this.proxy.$setDescription(this.treeViewId, this._description);\n    }\n\n    private _badge?: ViewBadge = undefined;\n    get badge(): ViewBadge | undefined {\n        return this._badge;\n    }\n    set badge(badge: ViewBadge | undefined) {\n        this._badge = badge;\n        this.proxy.$setBadge(this.treeViewId, badge ? { value: badge.value, tooltip: badge.tooltip } : undefined);\n    }\n\n    getElement(treeItemId: string): T | undefined {\n        return this.nodes.get(treeItemId)?.value;\n    }\n\n    /**\n     * calculate the chain of node ids from root to element so that the frontend can expand all of them and reveal element.\n     * this is needed as the frontend may not have the full tree nodes.\n     * throughout the parent chain this.getChildren is called in order to fill this.nodes cache.\n     *\n     * returns undefined if wasn't able to calculate the path due to inconsistencies.\n     *\n     * @param element element to reveal\n     */\n    private async calculateRevealParentChain(element: T | undefined): Promise<string[]> {\n        if (!element) {\n            // root\n            return [];\n        }\n        const parent = await this.options.treeDataProvider.getParent?.(element) ?? undefined;\n        const chain = await this.calculateRevealParentChain(parent);\n        const parentId = chain.length ? chain[chain.length - 1] : '';\n        const treeItem = await this.options.treeDataProvider.getTreeItem(element);\n        return chain.concat(this.buildTreeItemId(parentId, treeItem, false));\n    }\n\n    private getTreeItemLabel(treeItem: TreeItem): string | undefined {\n        const treeItemLabel: string | TreeItemLabel | undefined = treeItem.label;\n        return typeof treeItemLabel === 'object' ? treeItemLabel.label : treeItemLabel;\n    }\n\n    private getTreeItemLabelHighlights(treeItem: TreeItem): [number, number][] | undefined {\n        const treeItemLabel: string | TreeItemLabel | undefined = treeItem.label;\n        return typeof treeItemLabel === 'object' ? treeItemLabel.highlights : undefined;\n    }\n\n    private getItemLabel(treeItem: TreeItem): string | undefined {\n        let idLabel = this.getTreeItemLabel(treeItem);\n        // Use resource URI if label is not set\n        if (idLabel === undefined && treeItem.resourceUri) {\n            idLabel = treeItem.resourceUri.path.toString();\n            idLabel = decodeURIComponent(idLabel);\n            if (idLabel.indexOf('/') >= 0) {\n                idLabel = idLabel.substring(idLabel.lastIndexOf('/') + 1);\n            }\n        }\n        return idLabel;\n    }\n\n    // Modeled on https://github.com/microsoft/vscode/blob/main/src/vs/workbench/api/common/extHostTreeViews.ts#L822\n    private buildTreeItemId(parentId: string, item: TreeItem, mustReturnNew: boolean): string {\n        if (item.id) {\n            return `${TreeViewExtImpl.ID_ITEM}-@-${parentId}-@-${item.id}`;\n        }\n\n        const treeItemLabel = this.getItemLabel(item);\n        const prefix: string = `${TreeViewExtImpl.ID_COMPUTED}-@-${parentId || ''}-@-`;\n        let elementId = treeItemLabel ? treeItemLabel : item.resourceUri ? basename(item.resourceUri.fsPath) : '';\n        elementId = elementId.indexOf('/') !== -1 ? elementId.replace('/', '//') : elementId;\n        const childrenNodes = (this.nodes.get(parentId)?.children || []);\n\n        let id: string;\n        let counter = 0;\n        do {\n            id = `${prefix}/${counter}:${elementId}`;\n            if (!mustReturnNew || !this.nodes.has(id) || this.nodes.get(id)?.pluginTreeItem === item) {\n                // Return first if asked for or\n                // Return if handle does not exist or\n                // Return if handle is being reused\n                break;\n            }\n            counter++;\n        } while (counter <= childrenNodes.length);\n\n        return id;\n    }\n\n    async getChildren(parentId: string): Promise<TreeViewItem[] | undefined> {\n        let parentNode = this.nodes.get(parentId);\n        const parent = parentNode?.value;\n        if (parentId && !parent) {\n            console.error(`No tree item with id '${parentId}' found.`);\n            return [];\n        }\n        this.clearChildren(parentNode);\n\n        // place root in the cache\n        if (parentId === '' && !parentNode) {\n            const rootNodeDisposables = new DisposableCollection();\n            parentNode = { id: '', disposables: rootNodeDisposables, dispose: () => { rootNodeDisposables.dispose(); } };\n            this.nodes.set(parentId, parentNode);\n        }\n        // ask data provider for children for cached element\n        const result = await this.options.treeDataProvider.getChildren(parent);\n        if (result) {\n            const treeItemPromises = coalesce(result).map(async value => {\n\n                // Ask data provider for a tree item for the value\n                // Data provider must return theia.TreeItem\n                const treeItem = await this.options.treeDataProvider.getTreeItem(value);\n                // Convert theia.TreeItem to the TreeViewItem\n\n                const label = this.getItemLabel(treeItem) || '';\n                const highlights = this.getTreeItemLabelHighlights(treeItem);\n\n                // Generate the ID\n                // ID is used for caching the element\n                const id = this.buildTreeItemId(parentId, treeItem, true);\n\n                const toDisposeElement = new DisposableCollection();\n                const node: TreeExtNode<T> = {\n                    id,\n                    pluginTreeItem: treeItem,\n                    value,\n                    disposables: toDisposeElement,\n                    dispose: () => toDisposeElement.dispose()\n                };\n                if (parentNode) {\n                    const children = parentNode.children || [];\n                    children.push(node);\n                    parentNode.children = children;\n                }\n                this.nodes.set(id, node);\n\n                let icon;\n                let iconUrl;\n                let themeIcon;\n                const { iconPath } = treeItem;\n                if (typeof iconPath === 'string' && iconPath.indexOf('fa-') !== -1) {\n                    icon = iconPath;\n                } else if (ThemeIcon.is(iconPath)) {\n                    themeIcon = iconPath;\n                } else {\n                    iconUrl = PluginIconPath.toUrl(iconPath, this.plugin);\n                }\n\n                let checkboxInfo;\n                if (treeItem.checkboxState === undefined) {\n                    checkboxInfo = undefined;\n                } else if (isObject(treeItem.checkboxState)) {\n                    checkboxInfo = {\n                        checked: treeItem.checkboxState.state === TreeItemCheckboxState.Checked,\n                        tooltip: treeItem.checkboxState.tooltip,\n                        accessibilityInformation: treeItem.accessibilityInformation\n                    };\n                } else {\n                    checkboxInfo = {\n                        checked: treeItem.checkboxState === TreeItemCheckboxState.Checked\n                    };\n                }\n\n                const treeViewItem: TreeViewItem = {\n                    id,\n                    label,\n                    highlights,\n                    icon,\n                    iconUrl,\n                    themeIcon,\n                    description: treeItem.description,\n                    resourceUri: treeItem.resourceUri,\n                    tooltip: treeItem.tooltip,\n                    collapsibleState: treeItem.collapsibleState?.valueOf(),\n                    checkboxInfo: checkboxInfo,\n                    contextValue: treeItem.contextValue,\n                    command: this.commandsConverter.toSafeCommand(treeItem.command, toDisposeElement),\n                    accessibilityInformation: treeItem.accessibilityInformation\n                };\n                node.treeViewItem = treeViewItem;\n\n                return treeViewItem;\n            });\n\n            return Promise.all(treeItemPromises);\n        } else {\n            return undefined;\n        }\n    }\n\n    private clearChildren(parentNode?: TreeExtNode<T>): void {\n        if (parentNode) {\n            if (parentNode.children) {\n                for (const child of parentNode.children) {\n                    this.clear(child);\n                }\n            }\n            delete parentNode['children'];\n        } else {\n            this.clearAll();\n        }\n    }\n\n    private clear(node: TreeExtNode<T>): void {\n        if (node.children) {\n            for (const child of node.children) {\n                this.clear(child);\n            }\n        }\n        this.nodes.delete(node.id);\n        node.dispose();\n    }\n\n    private clearAll(): void {\n        this.nodes.forEach(node => node.dispose());\n        this.nodes.clear();\n    }\n\n    async onExpanded(treeItemId: string): Promise<any> {\n        // get element from a cache\n        const cachedElement = this.getElement(treeItemId);\n\n        // fire an event\n        if (cachedElement) {\n            this.onDidExpandElementEmitter.fire({\n                element: cachedElement\n            });\n        }\n    }\n\n    async onCollapsed(treeItemId: string): Promise<any> {\n        // get element from a cache\n        const cachedElement = this.getElement(treeItemId);\n\n        // fire an event\n        if (cachedElement) {\n            this.onDidCollapseElementEmitter.fire({\n                element: cachedElement\n            });\n        }\n    }\n\n    async checkStateChanged(items: readonly { id: string; checked: boolean; }[]): Promise<void> {\n        const transformed: [T, TreeItemCheckboxState][] = [];\n        items.forEach(item => {\n            const node = this.nodes.get(item.id);\n            if (node) {\n                if (node.value) {\n                    transformed.push([node.value, item.checked ? TreeItemCheckboxState.Checked : TreeItemCheckboxState.Unchecked]);\n                }\n                if (node.treeViewItem) {\n                    node.treeViewItem.checkboxInfo!.checked = item.checked;\n                }\n            }\n        });\n\n        this.onDidChangeCheckboxStateEmitter.fire({\n            items: transformed\n        });\n    }\n\n    async resolveTreeItem(treeItemId: string, token: CancellationToken): Promise<TreeViewItem | undefined> {\n        if (!this.options.treeDataProvider.resolveTreeItem) {\n            return undefined;\n        }\n\n        const node = this.nodes.get(treeItemId);\n        if (node && node.treeViewItem && node.pluginTreeItem && node.value) {\n            const resolved = await this.options.treeDataProvider.resolveTreeItem(node.pluginTreeItem, node.value, token) ?? node.pluginTreeItem;\n            node.treeViewItem.command = this.commandsConverter.toSafeCommand(resolved.command, node.disposables);\n            node.treeViewItem.tooltip = resolved.tooltip;\n            return node.treeViewItem;\n        }\n\n        return undefined;\n    }\n\n    hasResolveTreeItem(): boolean {\n        return !!this.options.treeDataProvider.resolveTreeItem;\n    }\n\n    private selectedItemIds = new Set<string>();\n    get selectedElements(): T[] {\n        const items: T[] = [];\n        for (const id of this.selectedItemIds) {\n            const item = this.getElement(id);\n            if (item) {\n                items.push(item);\n            }\n        }\n        return items;\n    }\n\n    setSelection(selectedItemIds: string[]): void {\n        const toDelete = new Set<string>(this.selectedItemIds);\n        for (const id of selectedItemIds) {\n            toDelete.delete(id);\n            if (!this.selectedItemIds.has(id)) {\n                this.doSetSelection(selectedItemIds);\n                return;\n            }\n        }\n        if (toDelete.size) {\n            this.doSetSelection(selectedItemIds);\n        }\n    }\n    protected doSetSelection(selectedItemIts: string[]): void {\n        this.selectedItemIds = new Set(selectedItemIts);\n        this.onDidChangeSelectionEmitter.fire(Object.freeze({ selection: this.selectedElements }));\n    }\n\n    private _visible = false;\n    get visible(): boolean {\n        return this._visible;\n    }\n\n    setVisible(visible: boolean): void {\n        if (visible !== this._visible) {\n            this._visible = visible;\n            this.onDidChangeVisibilityEmitter.fire(Object.freeze({ visible: this._visible }));\n        }\n    }\n\n    async onDragStarted(treeItemIds: string[], token: CancellationToken): Promise<UriComponents[] | undefined> {\n        const treeItems: T[] = [];\n        for (const id of treeItemIds) {\n            const item = this.getElement(id);\n            if (item) {\n                treeItems.push(item);\n            }\n        }\n        if (this.options.dragAndDropController?.handleDrag) {\n            this.localDataTransfer.clear();\n            await this.options.dragAndDropController.handleDrag(treeItems, this.localDataTransfer, token);\n            const uriList = await this.localDataTransfer.get('text/uri-list')?.asString();\n            if (uriList) {\n                return uriList.split('\\n').map(str => URI.parse(str));\n            }\n        }\n        return undefined;\n    }\n\n    async dragEnd(): Promise<void> {\n        this.localDataTransfer.clear();\n    }\n\n    async handleDrop(treeItemId: string | undefined, dataTransferItems: [string, string | DataTransferFileDTO][], token: CancellationToken): Promise<void> {\n        const treeItem = treeItemId ? this.getElement(treeItemId) : undefined;\n        const dropTransfer = new DataTransfer();\n        if (this.options.dragAndDropController?.handleDrop) {\n            this.localDataTransfer.forEach((item, type) => {\n                dropTransfer.set(type, item);\n            });\n            for (const [type, item] of dataTransferItems) {\n                // prefer the item the plugin has set in `onDragStarted`;\n                if (!dropTransfer.has(type)) {\n                    if (typeof item === 'string') {\n                        dropTransfer.set(type, new DataTransferItem(item));\n                    } else {\n                        const file: DataTransferFile = {\n                            name: item.name,\n                            data: () => this.proxy.$readDroppedFile(item.contentId).then(buffer => buffer.buffer),\n                            uri: item.uri ? URI.revive(item.uri) : undefined\n                        };\n\n                        const fileItem = new class extends DataTransferItem {\n                            override asFile(): DataTransferFile | undefined {\n                                return file;\n                            }\n                        }(file);\n\n                        dropTransfer.set(type, fileItem);\n                    }\n                }\n            }\n            return this.options.dragAndDropController.handleDrop(treeItem, dropTransfer, token);\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// based on https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/hash.ts\n\n/**\n * Return a hash value for an object.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hash(obj: any): number {\n    return doHash(obj, 0);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function doHash(obj: any, hashVal: number): number {\n    switch (typeof obj) {\n        case 'object':\n            // eslint-disable-next-line no-null/no-null\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            } else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number): number {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction objectHash(obj: any, initialHashVal: number): number {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/uint.ts\n\nexport const enum Constants {\n    /**\n     * Max unsigned integer that fits on 8 bits.\n     */\n    MAX_UINT_8 = 255, // 2^8 - 1\n}\n\nexport function toUint8(v: number): number {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > Constants.MAX_UINT_8) {\n        return Constants.MAX_UINT_8;\n    }\n    return v | 0;\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event } from '../event';\nimport { isObject } from '../types';\n\nexport const MAIN_MENU_BAR: MenuPath = ['menubar'];\nexport type MenuPath = string[];\nexport const MANAGE_MENU: MenuPath = ['manage_menu'];\nexport const ACCOUNTS_MENU: MenuPath = ['accounts_menu'];\nexport const ACCOUNTS_SUBMENU = [...ACCOUNTS_MENU, '1_accounts_submenu'];\n\nexport interface ContextExpressionMatcher<T> {\n    match(whenExpression: string, context: T | undefined): boolean;\n}\n\n/**\n * @internal For most use cases, refer to {@link MenuAction} or {@link MenuNode}\n */\nexport interface MenuNode {\n    /**\n     * technical identifier.\n     */\n    readonly id: string;\n    /**\n     * Menu nodes are sorted in ascending order based on their `sortString`.\n     */\n    readonly sortString: string;\n    isVisible<T>(effectiveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean;\n    onDidChange?: Event<void>;\n}\n\nexport interface Action {\n    isEnabled(effectiveMenuPath: MenuPath, ...args: unknown[]): boolean;\n    isToggled(effectiveMenuPath: MenuPath, ...args: unknown[]): boolean;\n    run(effectiveMenuPath: MenuPath, ...args: unknown[]): Promise<void>;\n}\n\nexport namespace Action {\n    export function is(node: object): node is Action {\n        return isObject<Action>(node) && typeof node.run === 'function' && typeof node.isEnabled === 'function';\n    }\n}\n\nexport interface MenuAction {\n    /**\n     * The command to execute.\n     */\n    readonly commandId: string;\n    /**\n     * Menu entries are sorted in ascending order based on their `order` strings. If omitted the determined\n     * label will be used instead.\n     */\n    readonly order?: string;\n\n    readonly label?: string;\n    /**\n     * Icon classes for the menu node. If present, these will produce an icon to the left of the label in browser-style menus.\n     */\n    readonly icon?: string;\n\n    readonly when?: string;\n}\n\nexport namespace MenuAction {\n    export function is(obj: unknown): obj is MenuAction {\n        return isObject<MenuAction>(obj) && typeof obj.commandId === 'string';\n    }\n}\n\n/**\n * Metadata for the visual presentation of a node.\n * @internal For most uses cases, refer to {@link MenuNode}, {@link CommandMenuNode}, or {@link CompoundMenuNode}\n */\nexport interface RenderedMenuNode extends MenuNode {\n    /**\n     * Optional label. Will be rendered as text of the menu item.\n     */\n    readonly label: string;\n    /**\n     * Icon classes for the menu node. If present, these will produce an icon to the left of the label in browser-style menus.\n     */\n    readonly icon?: string;\n}\n\nexport namespace RenderedMenuNode {\n    export function is(node: unknown): node is RenderedMenuNode {\n        return isObject<RenderedMenuNode>(node) && typeof node.label === 'string';\n    }\n}\n\nexport type CommandMenu = MenuNode & RenderedMenuNode & Action;\n\nexport namespace CommandMenu {\n    export function is(node: MenuNode | undefined): node is CommandMenu {\n        return RenderedMenuNode.is(node) && Action.is(node);\n    }\n}\n\nexport type Group = CompoundMenuNode;\nexport namespace Group {\n    export function is(obj: unknown): obj is Group {\n        return CompoundMenuNode.is(obj) && !RenderedMenuNode.is(obj);\n    }\n}\n\nexport type Submenu = CompoundMenuNode & RenderedMenuNode;\n\nexport interface CompoundMenuNode extends MenuNode {\n    children: MenuNode[];\n    contextKeyOverlays?: Record<string, string>;\n    /**\n     * Whether the group or submenu contains any visible children\n     *\n     * @param effectiveMenuPath The menu path where visibility is checked\n     * @param contextMatcher The context matcher to use\n     * @param context the context to use\n     * @param args the command arguments, if applicable\n     */\n    isEmpty<T>(effectiveMenuPath: MenuPath, contextMatcher: ContextExpressionMatcher<T>, context: T | undefined, ...args: unknown[]): boolean;\n};\n\nexport namespace CompoundMenuNode {\n    export function is(node?: unknown): node is CompoundMenuNode { return isObject<CompoundMenuNode>(node) && Array.isArray(node.children); }\n\n    export function sortChildren(m1: MenuNode, m2: MenuNode): number {\n        // The navigation group is special as it will always be sorted to the top/beginning of a menu.\n        if (isNavigationGroup(m1)) {\n            return -1;\n        }\n        if (isNavigationGroup(m2)) {\n            return 1;\n        }\n        return m1.sortString.localeCompare(m2.sortString);\n    }\n\n    /**\n     * Indicates whether the given node is the special `navigation` menu.\n     *\n     * @param node the menu node to check.\n     * @returns `true` when the given node is a {@link CompoundMenuNode} with id `navigation`,\n     * `false` otherwise.\n     */\n    export function isNavigationGroup(node: MenuNode): node is CompoundMenuNode {\n        return is(node) && node.id === 'navigation';\n    }\n}\n\nexport interface MutableCompoundMenuNode {\n    addNode(...node: MenuNode[]): void;\n    removeNode(node: MenuNode): void;\n    getOrCreate(menuPath: MenuPath, pathIndex: number, endIndex: number): CompoundMenuNode & MutableCompoundMenuNode;\n};\n\nexport namespace MutableCompoundMenuNode {\n    export function is(node: unknown): node is MutableCompoundMenuNode {\n        return isObject<MutableCompoundMenuNode>(node)\n            && typeof node.addNode === 'function'\n            && typeof node.removeNode === 'function'\n            && typeof node.getOrCreate === 'function';\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { LoggerMain, LogLevel, PLUGIN_RPC_CONTEXT } from '../common';\nimport { RPCProtocol } from '../common/rpc-protocol';\n\nexport class PluginLogger {\n\n    private readonly logger: LoggerMain;\n    private readonly name?: string;\n\n    constructor(rpc: RPCProtocol, name?: string) {\n        this.name = name;\n        this.logger = rpc.getProxy(PLUGIN_RPC_CONTEXT.LOGGER_MAIN);\n    }\n\n    trace(message: string, ...params: any[]): void {\n        this.sendLog(LogLevel.Trace, message, params);\n    }\n\n    debug(message: string, ...params: any[]): void {\n        this.sendLog(LogLevel.Debug, message, params);\n    }\n\n    log(logLevel: LogLevel, message: string, ...params: any[]): void {\n        this.sendLog(logLevel, message, params);\n    }\n\n    info(message: string, ...params: any[]): void {\n        this.sendLog(LogLevel.Info, message, params);\n    }\n\n    warn(message: string, ...params: any[]): void {\n        this.sendLog(LogLevel.Warn, message, params);\n    }\n\n    error(message: string, ...params: any[]): void {\n        this.sendLog(LogLevel.Error, message, params);\n    }\n\n    private sendLog(level: LogLevel, message: string, params: any[]): void {\n        this.logger.$log(level, this.name, this.toLog(message), params.map(e => this.toLog(e)));\n    }\n\n    private toLog(value: any): any {\n        if (value instanceof Error) {\n            return value.stack ?? value.message ?? value.toString();\n        }\n        return value;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { FormatType, Localization } from './i18n/localization';\n\nexport namespace nls {\n\n    export let localization: Localization | undefined;\n\n    export const defaultLocale = 'en';\n\n    export const localeId = 'localeId';\n\n    export const locale = typeof window === 'object' && window && window.localStorage.getItem(localeId) || undefined;\n\n    let keyProvider: LocalizationKeyProvider | undefined;\n\n    /**\n     * Automatically localizes a text if that text also exists in the vscode repository.\n     */\n    export function localizeByDefault(defaultValue: string, ...args: FormatType[]): string {\n        if (localization) {\n            const key = getDefaultKey(defaultValue);\n            if (key) {\n                return localize(key, defaultValue, ...args);\n            } else {\n                console.warn(`Could not find translation key for default value: \"${defaultValue}\"`);\n            }\n        }\n        return Localization.format(defaultValue, args);\n    }\n\n    export function getDefaultKey(defaultValue: string): string {\n        if (!keyProvider) {\n            keyProvider = new LocalizationKeyProvider();\n        }\n        const key = keyProvider.get(defaultValue);\n        if (key) {\n            return key;\n        }\n        return '';\n    }\n\n    export function localize(key: string, defaultValue: string, ...args: FormatType[]): string {\n        return Localization.localize(localization, key, defaultValue, ...args);\n    }\n\n    export function isSelectedLocale(id: string): boolean {\n        if (locale === undefined && id === defaultLocale) {\n            return true;\n        }\n        return locale === id;\n    }\n\n    export function setLocale(id: string): void {\n        window.localStorage.setItem(localeId, id);\n    }\n}\n\ninterface NlsKeys {\n    [key: string]: (string | NlsInfo)[]\n}\n\ninterface NlsInfo {\n    key: string\n    comment: string[]\n}\n\nclass LocalizationKeyProvider {\n\n    private preferredKeys = new Set([\n        // We only want the `File` translation used in the menu\n        'vscode/fileActions.contribution/filesCategory',\n        // Needed for `Close Editor` translation\n        'vscode/editor.contribution/closeEditor'\n    ]);\n    private data = this.buildData();\n\n    get(defaultValue: string): string | undefined {\n        const normalized = Localization.normalize(defaultValue);\n        return this.data.get(normalized) || this.data.get(normalized.toUpperCase());\n    }\n\n    /**\n     * Transforms the data coming from the `nls.metadata.json` file into a map.\n     * The original data contains arrays of keys and messages.\n     * The result is a map that matches each message to the key that belongs to it.\n     *\n     * This allows us to skip the key in the localization process and map the original english default values to their translations in different languages.\n     */\n    private buildData(): Map<string, string> {\n        const bundles = require('../../src/common/i18n/nls.metadata.json');\n        const keys: NlsKeys = bundles.keys;\n        const messages: Record<string, string[]> = bundles.messages;\n        const data = new Map<string, string>();\n        const foundPreferredKeys = new Set<string>();\n        const keysAndMessages = this.buildKeyMessageTuples(keys, messages);\n        for (const { key, message } of keysAndMessages) {\n            if (!foundPreferredKeys.has(message)) {\n                data.set(message, key);\n                if (this.preferredKeys.has(key)) {\n                    // Prevent messages with preferred keys to be overridden\n                    foundPreferredKeys.add(message);\n                }\n            }\n        }\n        // Second pass adds each message again in upper case, if the message doesn't already exist in upper case\n        // The second pass is needed to not accidentally override any translations which actually use the upper case message\n        for (const { key, message } of keysAndMessages) {\n            const upperMessage = message.toUpperCase();\n            if (!data.has(upperMessage)) {\n                data.set(upperMessage, key);\n            }\n        }\n        return data;\n    }\n\n    private buildKeyMessageTuples(keys: NlsKeys, messages: Record<string, string[]>): { key: string, message: string }[] {\n        const list: { key: string, message: string }[] = [];\n        for (const [fileKey, messageBundle] of Object.entries(messages)) {\n            const keyBundle = keys[fileKey];\n            for (let i = 0; i < messageBundle.length; i++) {\n                const message = Localization.normalize(messageBundle[i]);\n                const key = keyBundle[i];\n                const localizationKey = this.buildKey(typeof key === 'string' ? key : key.key, fileKey);\n                list.push({\n                    key: localizationKey,\n                    message\n                });\n            }\n        }\n        return list;\n    }\n\n    private buildKey(key: string, filepath: string): string {\n        return `vscode/${Localization.transformKey(filepath)}/${key}`;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// based on https://github.com/microsoft/vscode/blob/04c36be045a94fee58e5f8992d3e3fd980294a84/src/vs/base/common/strings.ts\n\nimport { CharCode } from './char-code';\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n    const diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    } else if (diff === 0) {\n        return haystack === needle;\n    } else {\n        return false;\n    }\n}\nexport function isLowerAsciiLetter(code: number): boolean {\n    return code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n    return code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n    const len1 = a ? a.length : 0;\n    const len2 = b ? b.length : 0;\n\n    if (len1 !== len2) {\n        return false;\n    }\n\n    return doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n\n    for (let i = 0; i < stopAt; i++) {\n        const codeA = a.charCodeAt(i);\n        const codeB = b.charCodeAt(i);\n\n        if (codeA === codeB) {\n            continue;\n        }\n\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            const diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n\n        // Any other charcode\n        // tslint:disable-next-line:one-line\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n    let i: number;\n    const len = Math.min(a.length, b.length);\n\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n\n    return len;\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\nexport function* split(s: string, splitter: string): IterableIterator<string> {\n    let start = 0;\n    while (start < s.length) {\n        let end = s.indexOf(splitter, start);\n        if (end === -1) {\n            end = s.length;\n        }\n\n        yield s.substring(start, end);\n        start = end + splitter.length;\n    }\n}\n\nexport function escapeInvisibleChars(value: string): string {\n    return value.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r');\n}\n\nexport function unescapeInvisibleChars(value: string): string {\n    return value.replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r');\n}\n\nexport function compare(a: string, b: string): number {\n    if (a < b) {\n        return -1;\n    } else if (a > b) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        } else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    } else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n\n        const diff = codeA - codeB;\n        if (diff === 32 && isUpperAsciiLetter(codeB)) { // codeB =[65-90] && codeA =[97-122]\n            continue;\n\n        } else if (diff === -32 && isUpperAsciiLetter(codeA)) {  // codeB =[97-122] && codeA =[65-90]\n            continue;\n        }\n\n        if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n            //\n            return diff;\n\n        } else {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n    }\n\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n\n    if (aLen < bLen) {\n        return -1;\n    } else if (aLen > bLen) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/strings.ts\n\nexport function regExpFlags(regexp: RegExp): string {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        + ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n","// *****************************************************************************\n// Copyright (C) 2021 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport const localizationPath = '/services/i18n';\n\nexport const AsyncLocalizationProvider = Symbol('AsyncLocalizationProvider');\nexport interface AsyncLocalizationProvider {\n    getCurrentLanguage(): Promise<string>\n    setCurrentLanguage(languageId: string): Promise<void>\n    getAvailableLanguages(): Promise<LanguageInfo[]>\n    loadLocalization(languageId: string): Promise<Localization>\n}\n\nexport interface Localization extends LanguageInfo {\n    translations: Record<string, string>;\n    replacements?: Record<string, string>;\n}\n\nexport interface LanguageInfo {\n    languageId: string;\n    languageName?: string;\n    languagePack?: boolean;\n    localizedLanguageName?: string;\n}\n\nexport type FormatType = string | number | boolean | undefined;\n\nexport namespace Localization {\n\n    const formatRegexp = /{([^}]+)}/g;\n\n    export function format(message: string, args: FormatType[]): string;\n    export function format(message: string, args: Record<string | number, FormatType>): string;\n    export function format(message: string, args: Record<string | number, FormatType> | FormatType[]): string {\n        return message.replace(formatRegexp, (match, group) => (args[group] ?? match) as string);\n    }\n\n    export function localize(localization: Localization | undefined, key: string, defaultValue: string, ...args: FormatType[]): string {\n        let value = defaultValue;\n        if (localization) {\n            const replacement = localization.replacements?.[defaultValue];\n            if (typeof replacement === 'string') {\n                value = replacement;\n            } else {\n                const translation = localization.translations[key];\n                if (translation) {\n                    value = normalize(translation);\n                }\n            }\n        }\n        return format(value, args);\n    }\n\n    /**\n     * This function normalizes values from VSCode's localizations, which often contain additional mnemonics (`&&`).\n     * The normalization removes the mnemonics from the input string.\n     *\n     * @param value Localization value coming from VSCode\n     * @returns A normalized localized value\n     */\n    export function normalize(value: string): string {\n        return value.replace(/&&/g, '');\n    }\n\n    export function transformKey(key: string): string {\n        let nlsKey = key;\n        const keySlashIndex = key.lastIndexOf('/');\n        if (keySlashIndex >= 0) {\n            nlsKey = key.substring(keySlashIndex + 1);\n        }\n        return nlsKey;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { isOSX, isWindows } from '@theia/core/lib/common/os';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { ResourceMap } from '@theia/monaco-editor-core/esm/vs/base/common/map';\nimport { IConfigurationOverrides } from '@theia/monaco-editor-core/esm/vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationModel, ConfigurationModelParser } from '@theia/monaco-editor-core/esm/vs/platform/configuration/common/configurationModels';\nimport { Workspace, WorkspaceFolder } from '@theia/monaco-editor-core/esm/vs/platform/workspace/common/workspace';\nimport * as theia from '@theia/plugin';\nimport { generateUuid } from '@theia/core/lib/common/uuid';\nimport {\n    PLUGIN_RPC_CONTEXT, PreferenceChangeExt, PreferenceData, PreferenceRegistryExt,\n    PreferenceRegistryMain\n} from '../common/plugin-api-rpc';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { isObject, mixin } from '../common/types';\nimport { WorkspaceExtImpl } from './workspace';\nimport cloneDeep = require('lodash.clonedeep');\nimport { ILogService, LogLevel } from '@theia/monaco-editor-core/esm/vs/platform/log/common/log';\n\nconst injectionRe = /\\b__proto__\\b|\\bconstructor\\.prototype\\b/;\n\nenum ConfigurationTarget {\n    Global = 1,\n    Workspace = 2, // eslint-disable-line @typescript-eslint/no-shadow\n    WorkspaceFolder = 3 // eslint-disable-line @typescript-eslint/no-shadow\n}\n\nexport enum PreferenceScope {\n    Default,\n    User,\n    Workspace, // eslint-disable-line @typescript-eslint/no-shadow\n    Folder,\n}\n\ninterface ConfigurationInspect<T> {\n    key: string;\n    defaultValue?: T;\n    globalValue?: T;\n    workspaceValue?: T;\n    workspaceFolderValue?: T;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction lookUp(tree: any, key: string): any {\n    if (!key) {\n        return;\n    }\n\n    const parts = key.split('.');\n    let node = tree;\n    for (let i = 0; node && i < parts.length; i++) {\n        node = node[parts[i]];\n    }\n    return node;\n}\n\nexport class TheiaWorkspace extends Workspace {\n    constructor(ext: WorkspaceExtImpl) {\n        const folders = (ext.workspaceFolders ?? []).map(folder => new WorkspaceFolder(folder));\n        super(generateUuid(), folders, false, ext.workspaceFile ?? null, () => isOSX || isWindows);\n    }\n}\n\nconst logService: ILogService = {\n    _serviceBrand: undefined,\n    onDidChangeLogLevel: new Emitter<LogLevel>().event,\n    getLevel: function (): LogLevel {\n        return LogLevel.Info;\n    },\n    setLevel: function (level: LogLevel): void {\n    },\n    trace: function (message: string, ...args: any[]): void {\n    },\n    debug: function (message: string, ...args: any[]): void {\n    },\n    info: function (message: string, ...args: any[]): void {\n    },\n    warn: function (message: string, ...args: any[]): void {\n    },\n    error: function (message: string | Error, ...args: any[]): void {\n    },\n    flush: function (): void {\n    },\n    dispose: function (): void {\n    }\n};\n\n@injectable()\nexport class PreferenceRegistryExtImpl implements PreferenceRegistryExt {\n    @inject(RPCProtocol)\n    protected rpc: RPCProtocol;\n\n    @inject(WorkspaceExtImpl)\n    protected readonly workspace: WorkspaceExtImpl;\n\n    private proxy: PreferenceRegistryMain;\n    private _preferences: Configuration;\n    private readonly _onDidChangeConfiguration = new Emitter<theia.ConfigurationChangeEvent>();\n\n    readonly onDidChangeConfiguration: Event<theia.ConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.PREFERENCE_REGISTRY_MAIN);\n    }\n\n    init(data: PreferenceData): void {\n        this.preferencesChanged(data);\n    }\n\n    $acceptConfigurationChanged(data: PreferenceData, eventData: PreferenceChangeExt[]): void {\n        this.preferencesChanged(data, eventData);\n    }\n\n    private preferencesChanged(data: PreferenceData, eventData?: PreferenceChangeExt[]): void {\n        this._preferences = this.parse(data);\n        this._onDidChangeConfiguration.fire(this.toConfigurationChangeEvent(eventData ?? []));\n    }\n\n    getConfiguration(rawSection?: string, rawScope?: theia.ConfigurationScope | null, extensionId?: string): theia.WorkspaceConfiguration {\n        const overrides = this.parseConfigurationAccessOptions(rawScope);\n\n        const preferences = this.toReadonlyValue(\n            this._preferences.getValue(rawSection, overrides, new TheiaWorkspace(this.workspace)));\n\n        const configuration: theia.WorkspaceConfiguration = {\n            has(key: string): boolean {\n                return typeof lookUp(preferences, key) !== 'undefined';\n            },\n            get: <T>(key: string, defaultValue?: T) => {\n                const result = lookUp(preferences, key);\n                if (typeof result === 'undefined') {\n                    return defaultValue;\n                } else {\n                    let clonedConfig: any = undefined;\n                    const cloneOnWriteProxy = (target: any, accessor: string): any => {\n                        let clonedTarget: any = undefined;\n                        const cloneTarget = () => {\n                            clonedConfig = clonedConfig ? clonedConfig : cloneDeep(preferences);\n                            clonedTarget = clonedTarget ? clonedTarget : lookUp(clonedConfig, accessor);\n                        };\n\n                        if (!isObject(target)) {\n                            return target;\n                        }\n                        return new Proxy(target, {\n                            get: (targ: any, prop: string) => {\n                                const config = Object.getOwnPropertyDescriptor(targ, prop);\n                                // This check ensures that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get#invariants are satisfied\n                                if (config?.configurable === false && config?.writable === false) {\n                                    return targ[prop];\n                                }\n                                if (typeof prop === 'string' && prop.toLowerCase() === 'tojson') {\n                                    cloneTarget();\n                                    return () => clonedTarget;\n                                }\n                                if (clonedConfig) {\n                                    clonedTarget = clonedTarget ? clonedTarget : lookUp(clonedConfig, accessor);\n                                    return clonedTarget[prop];\n                                }\n                                const res = targ[prop];\n                                if (typeof prop === 'string') {\n                                    return cloneOnWriteProxy(res, `${accessor}.${prop}`);\n                                }\n                                return res;\n                            },\n                            set: (targ: any, prop: string, val: any) => {\n                                cloneTarget();\n                                clonedTarget[prop] = val;\n                                return true;\n                            },\n                            deleteProperty: (targ: any, prop: string) => {\n                                cloneTarget();\n                                delete clonedTarget[prop];\n                                return true;\n                            },\n                            defineProperty: (targ: any, prop: string, descr: any) => {\n                                cloneTarget();\n                                Object.defineProperty(clonedTarget, prop, descr);\n                                return true;\n                            }\n                        });\n                    };\n                    return cloneOnWriteProxy(result, key);\n                }\n            },\n            update: (key: string, value: any, targetScope?: ConfigurationTarget | boolean, withLanguageOverride?: boolean): PromiseLike<void> => {\n                const resourceStr = overrides.resource?.toString();\n                const overrideSegment = overrides.overrideIdentifier ? `[${overrides.overrideIdentifier}].` : '';\n                const preferenceKey = rawSection ? `${rawSection}.${key}` : key;\n                const fullPath = overrideSegment + preferenceKey;\n                if (typeof value !== 'undefined') {\n                    return this.proxy.$updateConfigurationOption(targetScope, fullPath, value, resourceStr, withLanguageOverride);\n                } else {\n                    return this.proxy.$removeConfigurationOption(targetScope, fullPath, resourceStr, withLanguageOverride);\n                }\n            },\n            inspect: <T>(key: string): ConfigurationInspect<T> | undefined => {\n                const path = rawSection ? `${rawSection}.${key}` : key;\n                const result = this._preferences.inspect<T>(path, overrides, new TheiaWorkspace(this.workspace));\n\n                if (!result) {\n                    return undefined;\n                }\n\n                const configInspect: ConfigurationInspect<T> = { key };\n                configInspect.defaultValue = cloneDeep(result.default?.value);\n                configInspect.globalValue = cloneDeep(result.user?.value);\n                configInspect.workspaceValue = cloneDeep(result.workspace?.value);\n                configInspect.workspaceFolderValue = cloneDeep(result.workspaceFolder?.value);\n                return configInspect;\n            }\n        };\n\n        if (typeof preferences === 'object') {\n            mixin(configuration, preferences, false);\n        }\n\n        return Object.freeze(configuration);\n    }\n\n    private toReadonlyValue(data: any): any {\n        const readonlyProxy = (target: any): any => isObject(target)\n            ? new Proxy(target, {\n                get: (targ: any, prop: string) => {\n                    const config = Object.getOwnPropertyDescriptor(targ, prop);\n                    // This check ensures that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get#invariants are satisfied\n                    if (config?.configurable === false && config?.writable === false) {\n                        return targ[prop];\n                    }\n                    return readonlyProxy(targ[prop]);\n                },\n                set: (targ: any, prop: string, val: any) => {\n                    throw new Error(`TypeError: Cannot assign to read only property '${prop}' of object`);\n                },\n                deleteProperty: (targ: any, prop: string) => {\n                    throw new Error(`TypeError: Cannot delete read only property '${prop}' of object`);\n                },\n                defineProperty: (targ: any, prop: string) => {\n                    throw new Error(`TypeError: Cannot define property '${prop}' of a readonly object`);\n                },\n                setPrototypeOf: (targ: any) => {\n                    throw new Error('TypeError: Cannot set prototype for a readonly object');\n                },\n                isExtensible: () => false,\n                preventExtensions: () => true\n            })\n            : target;\n        return readonlyProxy(data);\n    }\n\n    private parse(data: PreferenceData): Configuration {\n        const defaultConfiguration = this.getConfigurationModel('Default', data[PreferenceScope.Default]);\n        const userConfiguration = this.getConfigurationModel('User', data[PreferenceScope.User]);\n        const workspaceConfiguration = this.getConfigurationModel('Workspace', data[PreferenceScope.Workspace]);\n        const folderConfigurations = new ResourceMap<ConfigurationModel>();\n        Object.keys(data[PreferenceScope.Folder]).forEach(resource => {\n            folderConfigurations.set(URI.parse(resource), this.getConfigurationModel(`Folder: ${resource}`, data[PreferenceScope.Folder][resource]));\n        });\n\n        function createEmptyModel(): ConfigurationModel {\n            return new ConfigurationModel({}, [], [], undefined, logService);\n        }\n\n        return new Configuration(\n            defaultConfiguration,\n            createEmptyModel(), /** policy configuration. */\n            createEmptyModel(), /** application configuration. */\n            userConfiguration,\n            createEmptyModel(), /** remote configuration. */\n            workspaceConfiguration,\n            folderConfigurations,\n            ConfigurationModel.createEmptyModel(logService),\n            new ResourceMap<ConfigurationModel>(),\n            logService\n        );\n    }\n\n    private getConfigurationModel(label: string, data: { [key: string]: any }): ConfigurationModel {\n        const parser = new ConfigurationModelParser(label, logService);\n        const sanitized = this.sanitize(data);\n        parser.parseRaw(sanitized);\n        return parser.configurationModel;\n    }\n\n    /**\n     * Creates a new object and assigns those keys of raw to it that are not likely to cause prototype pollution.\n     * Also preprocesses override identifiers so that they take the form [identifier]: {...contents}.\n     */\n    private sanitize<T = unknown>(raw: T): T {\n        if (!isObject(raw)) { return raw; }\n        const asObject = raw as Record<string, unknown>;\n        const sanitized = Object.create(null);\n        for (const key of Object.keys(asObject)) {\n            if (!injectionRe.test(key)) {\n                const override = this.OVERRIDE_KEY_TEST.exec(key);\n                if (override) {\n                    const overrideKey = `[${override[1]}]`;\n                    const remainder = key.slice(override[0].length);\n                    if (!isObject(sanitized[overrideKey])) {\n                        sanitized[overrideKey] = Object.create(null);\n                    }\n                    sanitized[overrideKey][remainder] = this.sanitize(asObject[key]);\n                } else {\n                    sanitized[key] = this.sanitize(asObject[key]);\n                }\n            }\n        }\n        return sanitized;\n    }\n\n    private readonly OVERRIDE_KEY_TEST = /^\\[([^\\]]+)\\]\\./;\n\n    private toConfigurationChangeEvent(eventData: PreferenceChangeExt[]): theia.ConfigurationChangeEvent {\n        return Object.freeze({\n            affectsConfiguration: (section: string, scope?: theia.ConfigurationScope): boolean => {\n                const { resource, overrideIdentifier } = this.parseConfigurationAccessOptions(scope);\n                const sectionWithLanguage = overrideIdentifier ? `[${overrideIdentifier}].${section}` : section;\n                return eventData.some(change => {\n                    const matchesUri = !resource || !change.scope || (resource.toString() + '/').startsWith(change.scope.endsWith('/') ? change.scope : change.scope + '/');\n                    const sliceIndex = overrideIdentifier ? 0 : (this.OVERRIDE_KEY_TEST.exec(change.preferenceName)?.[0].length ?? 0);\n                    const changedPreferenceName = sliceIndex ? change.preferenceName.slice(sliceIndex) : change.preferenceName;\n                    return matchesUri && (\n                        sectionWithLanguage === changedPreferenceName\n                        || sectionWithLanguage.startsWith(`${changedPreferenceName}.`)\n                        || changedPreferenceName.startsWith(`${sectionWithLanguage}.`));\n                });\n            }\n        });\n    }\n\n    protected parseConfigurationAccessOptions(scope?: theia.ConfigurationScope | null): IConfigurationOverrides {\n        if (!scope) {\n            return {};\n        }\n        let overrideIdentifier: string | undefined = undefined;\n        let resource: theia.Uri | undefined;\n        if ('uri' in scope || 'languageId' in scope) {\n            resource = scope.uri;\n        } else {\n            resource = scope;\n        }\n        if ('languageId' in scope) {\n            overrideIdentifier = scope.languageId;\n        }\n        return { resource, overrideIdentifier };\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Disposable, DisposableCollection } from './disposable';\nimport { Emitter, Event } from './event';\nimport { MaybePromise } from './types';\n\nexport interface Reference<T> extends Disposable {\n    readonly object: T\n}\n\n/**\n * Abstract class for a map of reference-counted disposable objects, with the\n * following features:\n *\n *    - values are not inserted explicitly; instead, acquire() is used to\n *      create the value for a given key, or return the previously created\n *      value for it. How the value is created for a given key is\n *      implementation specific.\n *\n *    - any subsquent acquire() with the same key will bump the reference\n *      count on that value. acquire() returns not the value directly but\n *      a reference object that holds the value. Calling dispose() on the\n *      reference decreases the value's effective reference count.\n *\n *    - a contained value will have its dispose() function called when its\n *      reference count reaches zero. The key/value pair will be purged\n *      from the collection.\n *\n *    - calling dispose() on the value directly, instead of calling it on\n *      the reference returned by acquire(), will automatically dispose\n *      all outstanding references to that value and the key/value pair\n *      will be purged from the collection.\n *\n *    - supports synchronous and asynchronous implementations. acquire() will\n *      return a Promise if the value cannot be created immediately\n *\n *    - functions has|keys|values|get are always synchronous and the result\n *      excludes asynchronous additions in flight.\n *\n *    - functions values|get return the value directly and not a reference\n *      to the value. Use these functions to obtain a value without bumping\n *      its reference count.\n *\n *    - clients can register to be notified when values are added and removed;\n *      notification for asynchronous additions happen when the creation\n *      completes, not when it's requested.\n *\n *    - keys can be any value/object that can be successfully stringified using\n *      JSON.stringify(), sans arguments\n *\n *    - calling dispose() on the collection will dispose all outstanding\n *      references to all contained values, which results in the disposal of\n *      the values themselves.\n */\nexport abstract class AbstractReferenceCollection<K, V extends Disposable> implements Disposable {\n\n    protected readonly _keys = new Map<string, K>();\n    protected readonly _values = new Map<string, V>();\n    protected readonly references = new Map<string, DisposableCollection>();\n\n    protected readonly onDidCreateEmitter = new Emitter<V>();\n    readonly onDidCreate: Event<V> = this.onDidCreateEmitter.event;\n\n    protected readonly onWillDisposeEmitter = new Emitter<V>();\n    readonly onWillDispose: Event<V> = this.onWillDisposeEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n\n    constructor() {\n        this.toDispose.push(this.onDidCreateEmitter);\n        this.toDispose.push(this.onWillDisposeEmitter);\n        this.toDispose.push(Disposable.create(() => this.clear()));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    clear(): void {\n        for (const value of this._values.values()) {\n            try {\n                value.dispose();\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n    has(args: K): boolean {\n        const key = this.toKey(args);\n        return this.references.has(key);\n    }\n\n    keys(): K[] {\n        return [...this._keys.values()];\n    }\n\n    values(): V[] {\n        return [...this._values.values()];\n    }\n\n    get(args: K): V | undefined {\n        const key = this.toKey(args);\n        return this._values.get(key);\n    }\n\n    abstract acquire(args: K): MaybePromise<Reference<V>>;\n\n    protected doAcquire(key: string, object: V): Reference<V> {\n        const references = this.references.get(key) || this.createReferences(key, object);\n        const reference: Reference<V> = {\n            object,\n            dispose: () => { }\n        };\n        references.push(reference);\n        return reference;\n    }\n\n    protected toKey(args: K): string {\n        return JSON.stringify(args);\n    }\n\n    protected createReferences(key: string, value: V): DisposableCollection {\n        const references = new DisposableCollection();\n        references.onDispose(() => value.dispose());\n        const disposeObject = value.dispose.bind(value);\n        value.dispose = () => {\n            this.onWillDisposeEmitter.fire(value);\n            disposeObject();\n            this._values.delete(key);\n            this._keys.delete(key);\n            this.references.delete(key);\n            references!.dispose();\n        };\n        this.references.set(key, references);\n        return references;\n    }\n\n}\n\n/**\n * Asynchronous implementation of AbstractReferenceCollection that requires\n * the client to provide a value factory, used to service the acquire()\n * function. That factory may return a Promise if the value cannot be\n * created immediately.\n */\nexport class ReferenceCollection<K, V extends Disposable> extends AbstractReferenceCollection<K, V> {\n\n    constructor(protected readonly factory: (key: K) => MaybePromise<V>) {\n        super();\n    }\n\n    async acquire(args: K): Promise<Reference<V>> {\n        const key = this.toKey(args);\n        const existing = this._values.get(key);\n        if (existing) {\n            return this.doAcquire(key, existing);\n        }\n        const object = await this.getOrCreateValue(key, args);\n        return this.doAcquire(key, object);\n    }\n\n    protected readonly pendingValues = new Map<string, MaybePromise<V>>();\n    protected async getOrCreateValue(key: string, args: K): Promise<V> {\n        const existing = this.pendingValues.get(key);\n        if (existing) {\n            return existing;\n        }\n        const pending = this.factory(args);\n        this._keys.set(key, args);\n        this.pendingValues.set(key, pending);\n        try {\n            const value = await pending;\n            this._values.set(key, value);\n            this.onDidCreateEmitter.fire(value);\n            return value;\n        } catch (e) {\n            this._keys.delete(key);\n            throw e;\n        } finally {\n            this.pendingValues.delete(key);\n        }\n    }\n\n}\n\n/**\n * Synchronous implementation of AbstractReferenceCollection that requires\n * the client to provide a value factory, used to service the acquire()\n * function.\n */\nexport class SyncReferenceCollection<K, V extends Disposable> extends AbstractReferenceCollection<K, V> {\n\n    constructor(protected readonly factory: (key: K) => V) {\n        super();\n    }\n\n    acquire(args: K): Reference<V> {\n        const key = this.toKey(args);\n        const object = this.getOrCreateValue(key, args);\n        return this.doAcquire(key, object);\n    }\n\n    protected getOrCreateValue(key: string, args: K): V {\n        const existing = this._values.get(key);\n        if (existing) {\n            return existing;\n        }\n        const value = this.factory(args);\n        this._keys.set(key, args);\n        this._values.set(key, value);\n        this.onDidCreateEmitter.fire(value);\n        return value;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { generateUuid, hashValue } from '@theia/core/lib/common/uuid';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Plugin, WebviewsExt, WebviewPanelViewState, WebviewsMain, PLUGIN_RPC_CONTEXT, WebviewInitData, /* WebviewsMain, PLUGIN_RPC_CONTEXT  */ } from '../common/plugin-api-rpc';\nimport * as theia from '@theia/plugin';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { fromViewColumn, toViewColumn, toWebviewPanelShowOptions } from './type-converters';\nimport { Disposable, WebviewPanelTargetArea, URI } from './types-impl';\nimport { WorkspaceExtImpl } from './workspace';\nimport { PluginIconPath } from './plugin-icon-path';\nimport { PluginModel, PluginPackage } from '../common';\n\n@injectable()\nexport class WebviewsExtImpl implements WebviewsExt {\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    @inject(WorkspaceExtImpl)\n    protected readonly workspace: WorkspaceExtImpl;\n\n    private proxy: WebviewsMain;\n    private readonly webviewPanels = new Map<string, WebviewPanelImpl>();\n    private readonly webviews = new Map<string, WebviewImpl>();\n    private readonly serializers = new Map<string, {\n        serializer: theia.WebviewPanelSerializer,\n        plugin: Plugin\n    }>();\n    private initData: WebviewInitData | undefined;\n\n    readonly onDidDisposeEmitter = new Emitter<void>();\n    readonly onDidDispose: Event<void> = this.onDidDisposeEmitter.event;\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.WEBVIEWS_MAIN);\n    }\n\n    init(initData: WebviewInitData): void {\n        this.initData = initData;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    $onMessage(handle: string, message: any): void {\n        const panel = this.getWebviewPanel(handle);\n        if (panel) {\n            panel.webview.onMessageEmitter.fire(message);\n        } else {\n            const webview = this.getWebview(handle);\n            if (webview) {\n                webview.onMessageEmitter.fire(message);\n            }\n        }\n    }\n    $onDidChangeWebviewPanelViewState(handle: string, newState: WebviewPanelViewState): void {\n        const panel = this.getWebviewPanel(handle);\n        if (panel) {\n            const viewColumn = toViewColumn(newState.position);\n            if (panel.active !== newState.active || panel.visible !== newState.visible || panel.viewColumn !== viewColumn) {\n                panel.setActive(newState.active);\n                panel.setVisible(newState.visible);\n                panel.setViewColumn(viewColumn!);\n                panel.onDidChangeViewStateEmitter.fire({ webviewPanel: panel });\n            }\n        }\n    }\n    $onDidDisposeWebviewPanel(handle: string): PromiseLike<void> {\n        const panel = this.getWebviewPanel(handle);\n        if (panel) {\n            panel.dispose();\n            this.webviewPanels.delete(handle);\n        }\n        return Promise.resolve();\n    }\n    $deserializeWebviewPanel(viewId: string,\n        viewType: string,\n        title: string,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        state: any,\n        viewState: WebviewPanelViewState,\n        options: theia.WebviewOptions & theia.WebviewPanelOptions): PromiseLike<void> {\n        if (!this.initData) {\n            return Promise.reject(new Error('Webviews are not initialized'));\n        }\n        const entry = this.serializers.get(viewType);\n        if (!entry) {\n            return Promise.reject(new Error(`No serializer found for '${viewType}'`));\n        }\n        const { serializer, plugin } = entry;\n\n        const webview = new WebviewImpl(viewId, this.proxy, options, this.initData, this.workspace, plugin, hashValue(viewType));\n        const revivedPanel = new WebviewPanelImpl(viewId, this.proxy, viewType, title, toViewColumn(viewState.position)!, options, webview);\n        revivedPanel.setActive(viewState.active);\n        revivedPanel.setVisible(viewState.visible);\n        this.webviewPanels.set(viewId, revivedPanel);\n        return serializer.deserializeWebviewPanel(revivedPanel, state);\n    }\n\n    createWebview(\n        viewType: string,\n        title: string,\n        showOptions: theia.ViewColumn | theia.WebviewPanelShowOptions,\n        options: theia.WebviewPanelOptions & theia.WebviewOptions,\n        plugin: Plugin\n    ): theia.WebviewPanel {\n        const viewId = generateUuid();\n        const webviewShowOptions = toWebviewPanelShowOptions(showOptions);\n        const webviewOptions = WebviewImpl.toWebviewOptions(options, this.workspace, plugin);\n        this.proxy.$createWebviewPanel(viewId, viewType, title, webviewShowOptions, webviewOptions);\n        const panel = this.createWebviewPanel(viewType, title, showOptions, options, plugin, viewId);\n        return panel;\n    }\n\n    /**\n     * Creates a new webview panel.\n     *\n     * @param viewType Identifies the type of the webview panel.\n     * @param title Title of the panel.\n     * @param showOptions Where webview panel will be reside.\n     * @param options Settings for the new panel.\n     * @param plugin The plugin contributing the webview.\n     * @param viewId The identifier of the webview instance.\n     * @param originBasedOnType true if a stable origin based on the viewType shall be used, false if the viewId should be used.\n     * @returns The new webview panel.\n     */\n    createWebviewPanel(\n        viewType: string,\n        title: string,\n        showOptions: theia.ViewColumn | theia.WebviewPanelShowOptions,\n        options: theia.WebviewPanelOptions & theia.WebviewOptions,\n        plugin: Plugin,\n        viewId: string,\n        originBasedOnType = true\n    ): WebviewPanelImpl {\n        if (!this.initData) {\n            throw new Error('Webviews are not initialized');\n        }\n        const webviewShowOptions = toWebviewPanelShowOptions(showOptions);\n        const origin = originBasedOnType ? hashValue(viewType) : undefined;\n        const webview = new WebviewImpl(viewId, this.proxy, options, this.initData, this.workspace, plugin, origin);\n        const panel = new WebviewPanelImpl(viewId, this.proxy, viewType, title, webviewShowOptions, options, webview);\n        this.webviewPanels.set(viewId, panel);\n        return panel;\n    }\n\n    createNewWebview(\n        options: theia.WebviewPanelOptions & theia.WebviewOptions,\n        plugin: Plugin,\n        viewId: string,\n        origin?: string\n    ): WebviewImpl {\n        if (!this.initData) {\n            throw new Error('Webviews are not initialized');\n        }\n        const webview = new WebviewImpl(viewId, this.proxy, options, this.initData, this.workspace, plugin, origin);\n        this.webviews.set(viewId, webview);\n        return webview;\n    }\n\n    registerWebviewPanelSerializer(\n        viewType: string,\n        serializer: theia.WebviewPanelSerializer,\n        plugin: Plugin\n    ): theia.Disposable {\n        if (this.serializers.has(viewType)) {\n            throw new Error(`Serializer for '${viewType}' already registered`);\n        }\n\n        this.serializers.set(viewType, { serializer, plugin });\n        this.proxy.$registerSerializer(viewType);\n\n        return new Disposable(() => {\n            this.serializers.delete(viewType);\n            this.proxy.$unregisterSerializer(viewType);\n        });\n    }\n\n    getWebviewPanel(viewId: string): WebviewPanelImpl | undefined {\n        if (this.webviewPanels.has(viewId)) {\n            return this.webviewPanels.get(viewId);\n        }\n        return undefined;\n    }\n\n    toGeneralWebviewResource(extension: PluginModel, resource: theia.Uri): theia.Uri {\n        const extensionUri = URI.parse(extension.packageUri);\n        const relativeResourcePath = resource.path.replace(extensionUri.path, '');\n        const basePath = PluginPackage.toPluginUrl(extension, '') + relativeResourcePath;\n\n        return URI.parse(this.initData!.webviewResourceRoot.replace('{{uuid}}', 'webviewUUID')).with({ path: basePath });\n    }\n\n    public deleteWebview(handle: string): void {\n        this.webviews.delete(handle);\n    }\n\n    public getWebview(handle: string): WebviewImpl | undefined {\n        return this.webviews.get(handle);\n    }\n\n    public getResourceRoot(): string | undefined {\n        return this.initData?.webviewResourceRoot;\n    }\n}\n\nexport class WebviewImpl implements theia.Webview {\n    private isDisposed = false;\n    private _html: string;\n    private _options: theia.WebviewOptions;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public readonly onMessageEmitter = new Emitter<any>();\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public readonly onDidReceiveMessage: Event<any> = this.onMessageEmitter.event;\n\n    constructor(\n        private readonly viewId: string,\n        private readonly proxy: WebviewsMain,\n        options: theia.WebviewOptions,\n        private readonly initData: WebviewInitData,\n        private readonly workspace: WorkspaceExtImpl,\n        readonly plugin: Plugin,\n        private readonly origin?: string\n    ) {\n        this._options = options;\n    }\n\n    dispose(): void {\n        if (this.isDisposed) {\n            return;\n        }\n        this.isDisposed = true;\n        this.onMessageEmitter.dispose();\n    }\n\n    asWebviewUri(resource: theia.Uri): theia.Uri {\n        const uri = this.initData.webviewResourceRoot\n            .replace('{{scheme}}', resource.scheme)\n            .replace('{{authority}}', resource.authority)\n            .replace('{{path}}', resource.path.replace(/^\\//, ''))\n            .replace('{{uuid}}', this.origin ?? this.viewId);\n        return URI.parse(uri).with({ query: resource.query });\n    }\n\n    get cspSource(): string {\n        return this.initData.webviewCspSource.replace('{{uuid}}', this.origin ?? this.viewId);\n    }\n\n    get html(): string {\n        this.checkIsDisposed();\n        return this._html;\n    }\n\n    set html(value: string) {\n        this.checkIsDisposed();\n        if (this._html !== value) {\n            this._html = value;\n            this.proxy.$setHtml(this.viewId, this._html);\n        }\n    }\n\n    get options(): theia.WebviewOptions {\n        this.checkIsDisposed();\n        return this._options;\n    }\n\n    set options(newOptions: theia.WebviewOptions) {\n        this.checkIsDisposed();\n        this.proxy.$setOptions(this.viewId, WebviewImpl.toWebviewOptions(newOptions, this.workspace, this.plugin));\n        this._options = newOptions;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    postMessage(message: any): PromiseLike<boolean> {\n        this.checkIsDisposed();\n        return this.proxy.$postMessage(this.viewId, message);\n    }\n\n    private checkIsDisposed(): void {\n        if (this.isDisposed) {\n            throw new Error('This Webview is disposed!');\n        }\n    }\n\n    static toWebviewOptions(options: theia.WebviewOptions, workspace: WorkspaceExtImpl, plugin: Plugin): theia.WebviewOptions {\n        return {\n            ...options,\n            localResourceRoots: options.localResourceRoots || [\n                ...(workspace.workspaceFolders || []).map(x => x.uri),\n                URI.file(plugin.pluginFolder)\n            ]\n        };\n    }\n}\n\nexport class WebviewPanelImpl implements theia.WebviewPanel {\n\n    private isDisposed = false;\n    private _active = true;\n    private _visible = true;\n    private _showOptions: theia.WebviewPanelShowOptions;\n    private _iconPath: theia.Uri | { light: theia.Uri; dark: theia.Uri } | undefined;\n\n    readonly onDisposeEmitter = new Emitter<void>();\n    public readonly onDidDispose: Event<void> = this.onDisposeEmitter.event;\n\n    readonly onDidChangeViewStateEmitter = new Emitter<theia.WebviewPanelOnDidChangeViewStateEvent>();\n    public readonly onDidChangeViewState: Event<theia.WebviewPanelOnDidChangeViewStateEvent> = this.onDidChangeViewStateEmitter.event;\n\n    constructor(private readonly viewId: string,\n        private readonly proxy: WebviewsMain,\n        private readonly _viewType: string,\n        private _title: string,\n        showOptions: theia.ViewColumn | theia.WebviewPanelShowOptions,\n        private readonly _options: theia.WebviewPanelOptions,\n        private readonly _webview: WebviewImpl\n    ) {\n        this._showOptions = typeof showOptions === 'object' ? showOptions : { viewColumn: showOptions as theia.ViewColumn };\n    }\n\n    dispose(): void {\n        if (this.isDisposed) {\n            return;\n        }\n\n        this.isDisposed = true;\n        this.onDisposeEmitter.fire(undefined);\n\n        this.proxy.$disposeWebview(this.viewId);\n        this._webview.dispose();\n\n        this.onDisposeEmitter.dispose();\n        this.onDidChangeViewStateEmitter.dispose();\n    }\n\n    get viewType(): string {\n        this.checkIsDisposed();\n        return this._viewType;\n    }\n\n    get title(): string {\n        this.checkIsDisposed();\n        return this._title;\n    }\n\n    set title(newTitle: string) {\n        this.checkIsDisposed();\n        if (this._title !== newTitle) {\n            this._title = newTitle;\n            this.proxy.$setTitle(this.viewId, newTitle);\n        }\n    }\n\n    get iconPath(): theia.Uri | { light: theia.Uri; dark: theia.Uri } | undefined {\n        return this._iconPath;\n    }\n\n    set iconPath(iconPath: theia.Uri | { light: theia.Uri; dark: theia.Uri } | undefined) {\n        this.checkIsDisposed();\n        if (this._iconPath !== iconPath) {\n            this._iconPath = iconPath;\n            this.proxy.$setIconPath(this.viewId, PluginIconPath.toUrl(iconPath, this._webview.plugin));\n        }\n    }\n\n    get webview(): WebviewImpl {\n        this.checkIsDisposed();\n        return this._webview;\n    }\n\n    get options(): theia.WebviewPanelOptions {\n        this.checkIsDisposed();\n        return this._options;\n    }\n\n    get viewColumn(): theia.ViewColumn | undefined {\n        this.checkIsDisposed();\n        return this._showOptions.viewColumn;\n    }\n\n    setViewColumn(value: theia.ViewColumn | undefined): void {\n        this.checkIsDisposed();\n        this._showOptions.viewColumn = value;\n    }\n\n    get showOptions(): theia.WebviewPanelShowOptions {\n        this.checkIsDisposed();\n        return this._showOptions;\n    }\n\n    setShowOptions(value: theia.WebviewPanelShowOptions): void {\n        this.checkIsDisposed();\n        this._showOptions = value;\n    }\n\n    get active(): boolean {\n        this.checkIsDisposed();\n        return this._active;\n    }\n\n    setActive(value: boolean): void {\n        this.checkIsDisposed();\n        this._active = value;\n    }\n\n    get visible(): boolean {\n        this.checkIsDisposed();\n        return this._visible;\n    }\n\n    setVisible(value: boolean): void {\n        this.checkIsDisposed();\n        this._visible = value;\n    }\n\n    reveal(arg0?: theia.ViewColumn | WebviewPanelTargetArea, arg1?: theia.ViewColumn | boolean, arg2?: boolean): void {\n        let area: WebviewPanelTargetArea | undefined = undefined;\n        let viewColumn: theia.ViewColumn | undefined = undefined;\n        let preserveFocus: boolean | undefined = undefined;\n        if (typeof arg0 === 'number') {\n            viewColumn = arg0;\n        } else {\n            area = arg0;\n        }\n        if (typeof arg1 === 'number') {\n            viewColumn = arg1;\n        } else {\n            preserveFocus = arg1;\n        }\n        if (typeof arg2 === 'boolean') {\n            preserveFocus = arg2;\n        }\n        this.checkIsDisposed();\n        this.proxy.$reveal(this.viewId, {\n            area,\n            viewColumn: viewColumn ? fromViewColumn(viewColumn) : undefined,\n            preserveFocus\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    postMessage(message: any): PromiseLike<boolean> {\n        this.checkIsDisposed();\n        return this.proxy.$postMessage(this.viewId, message);\n    }\n\n    private checkIsDisposed(): void {\n        if (this.isDisposed) {\n            throw new Error('This WebviewPanel is disposed!');\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from 'inversify';\nimport { CancellationToken } from './cancellation';\nimport { nls } from './nls';\n\nexport const messageServicePath = '/services/messageService';\n\nexport enum MessageType {\n    Error = 1,\n    Warning = 2,\n    Info = 3,\n    Log = 4,\n    Progress = 5\n}\n\nexport interface Message {\n    /**\n     * Type of the message, i.e. error, warning, info, etc.\n     */\n    readonly type?: MessageType;\n    /**\n     * Message text.\n     */\n    readonly text: string;\n    /**\n     * Actions offered to the user in the context of the message.\n     */\n    readonly actions?: string[];\n    /**\n     * Additional options.\n     */\n    readonly options?: MessageOptions;\n    readonly source?: string;\n}\n\nexport interface ProgressMessage extends Message {\n    readonly type?: MessageType.Progress;\n    readonly options?: ProgressMessageOptions;\n}\nexport namespace ProgressMessage {\n    export const Cancel = nls.localizeByDefault('Cancel');\n    export function isCancelable(message: ProgressMessage): boolean {\n        return !!message.options?.cancelable;\n    }\n}\n\nexport interface MessageOptions {\n    /**\n     * Timeout in milliseconds.\n     * `0` and negative values are treated as no timeout.\n     */\n    readonly timeout?: number;\n}\n\nexport interface ProgressMessageOptions extends MessageOptions {\n    /**\n     * Default: `false`\n     */\n    readonly cancelable?: boolean;\n    /**\n     * Known values: `notification` | `window` | `scm`\n     */\n    readonly location?: string;\n}\n\nexport interface Progress {\n    /**\n     * Unique progress id.\n     */\n    readonly id: string;\n    /**\n     * Update the current progress.\n     *\n     * @param update the data to update.\n     */\n    readonly report: (update: ProgressUpdate) => void;\n    /**\n     * Cancel or complete the current progress.\n     */\n    readonly cancel: () => void;\n    /**\n     * Result of the progress.\n     *\n     * @returns a promise which resolves to either 'Cancel', an alternative action or `undefined`.\n     */\n    readonly result: Promise<string | undefined>;\n}\n\nexport interface ProgressUpdate {\n    /**\n     * Updated message for the progress.\n     */\n    readonly message?: string;\n    /**\n     * Updated ratio between steps done so far and total number of steps.\n     */\n    readonly work?: { done: number, total: number };\n}\n\n@injectable()\nexport class MessageClient {\n\n    /**\n     * Show a message of the given type and possible actions to the user.\n     * Resolve to a chosen action.\n     * Never reject.\n     *\n     * To be implemented by an extension, e.g. by the messages extension.\n     */\n    showMessage(message: Message): Promise<string | undefined> {\n        console.info(message.text);\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Show a progress message with possible actions to user.\n     *\n     * To be implemented by an extension, e.g. by the messages extension.\n     */\n    showProgress(progressId: string, message: ProgressMessage, cancellationToken: CancellationToken): Promise<string | undefined> {\n        console.info(message.text);\n        return Promise.resolve(undefined);\n    }\n\n    /**\n     * Update a previously created progress message.\n     *\n     * To be implemented by an extension, e.g. by the messages extension.\n     */\n    reportProgress(progressId: string, update: ProgressUpdate, message: ProgressMessage, cancellationToken: CancellationToken): Promise<void> {\n        return Promise.resolve(undefined);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as theia from '@theia/plugin';\nimport { SerializedAutoClosingPair, SerializedIndentationRule, SerializedOnEnterRule, SerializedRegExp } from '../common';\nimport { SyntaxTokenType } from './types-impl';\n\nexport function serializeEnterRules(rules?: theia.OnEnterRule[]): SerializedOnEnterRule[] | undefined {\n    if (typeof rules === 'undefined' || rules === null) {\n        return undefined;\n    }\n\n    return rules.map(r =>\n    ({\n        beforeText: serializeRegExp(r.beforeText),\n        afterText: serializeRegExp(r.afterText),\n        previousLineText: serializeRegExp(r.previousLineText),\n        action: r.action,\n    } as SerializedOnEnterRule));\n}\n\nexport function serializeRegExp(regexp?: RegExp): SerializedRegExp | undefined {\n    if (typeof regexp === 'undefined' || regexp === null) {\n        return undefined;\n    }\n\n    return {\n        pattern: regexp.source,\n        flags: (regexp.global ? 'g' : '') + (regexp.ignoreCase ? 'i' : '') + (regexp.multiline ? 'm' : '')\n    };\n}\n\nexport function serializeIndentation(indentationRules?: theia.IndentationRule): SerializedIndentationRule | undefined {\n    if (typeof indentationRules === 'undefined' || indentationRules === null) {\n        return undefined;\n    }\n\n    return {\n        increaseIndentPattern: serializeRegExp(indentationRules.increaseIndentPattern),\n        decreaseIndentPattern: serializeRegExp(indentationRules.decreaseIndentPattern),\n        indentNextLinePattern: serializeRegExp(indentationRules.indentNextLinePattern),\n        unIndentedLinePattern: serializeRegExp(indentationRules.unIndentedLinePattern)\n    };\n}\n\nexport function serializeAutoClosingPairs(pairs: theia.AutoClosingPair[] | undefined): SerializedAutoClosingPair[] | undefined {\n    if (!pairs) {\n        return undefined;\n    };\n    return pairs.map(pair => ({\n        open: pair.open,\n        close: pair.close,\n        notIn: pair.notIn ? pair.notIn.map(tokenType => SyntaxTokenType.toString(tokenType)) : undefined\n    }));\n}\n","// *****************************************************************************\n// Copyright (C) 2019-2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// code copied and modified from https://github.com/microsoft/vscode/blob/1.52.1/src/vs/workbench/api/common/extHostSCM.ts\n\nimport * as theia from '@theia/plugin';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport {\n    Plugin, PLUGIN_RPC_CONTEXT,\n    ScmExt,\n    ScmMain, ScmRawResource, ScmRawResourceGroup,\n    ScmRawResourceSplice, ScmRawResourceSplices,\n    SourceControlGroupFeatures\n} from '../common';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { CommandRegistryImpl } from '../plugin/command-registry';\nimport { Splice } from '../common/arrays';\nimport { UriComponents } from '../common/uri-components';\nimport { Command } from '../common/plugin-api-rpc-model';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { URI, ThemeIcon } from './types-impl';\nimport { ScmCommandArg } from '../common/plugin-api-rpc';\nimport { sep } from '@theia/core/lib/common/paths';\nimport { PluginIconPath } from './plugin-icon-path';\nimport { createAPIObject } from './plugin-context';\ntype ProviderHandle = number;\ntype GroupHandle = number;\ntype ResourceStateHandle = number;\n\nfunction getIconResource(decorations?: theia.SourceControlResourceThemableDecorations): UriComponents | ThemeIcon | undefined {\n    if (!decorations || !decorations.iconPath) {\n        return undefined;\n    } else if (typeof decorations.iconPath === 'string') {\n        return URI.file(decorations.iconPath);\n    } else if (URI.isUri(decorations.iconPath)) {\n        return decorations.iconPath;\n    } else if (ThemeIcon.is(decorations.iconPath)) {\n        return decorations.iconPath;\n    } else {\n        console.warn(`Unexpected Value ${decorations.iconPath} in Source Control Resource Themable Decoration. URI, ThemeIcon or string expected.`);\n        return undefined;\n    }\n}\n\nfunction comparePaths(one: string, other: string, caseSensitive = false): number {\n    const oneParts = one.split(sep);\n    const otherParts = other.split(sep);\n\n    const lastOne = oneParts.length - 1;\n    const lastOther = otherParts.length - 1;\n    let endOne: boolean;\n    let endOther: boolean;\n\n    for (let i = 0; ; i++) {\n        endOne = lastOne === i;\n        endOther = lastOther === i;\n\n        if (endOne && endOther) {\n            const onePart = caseSensitive ? oneParts[i].toLocaleLowerCase() : oneParts[i];\n            const otherPart = caseSensitive ? otherParts[i].toLocaleLowerCase() : otherParts[i];\n            return onePart > otherPart ? -1 : 1;\n        } else if (endOne) {\n            return -1;\n        } else if (endOther) {\n            return 1;\n        }\n\n        if (endOne) {\n            return -1;\n        } else if (endOther) {\n            return 1;\n        }\n\n        const result = comparePathComponents(oneParts[i], otherParts[i], caseSensitive);\n\n        if (result !== 0) {\n            return result;\n        }\n    }\n}\n\nfunction comparePathComponents(one: string, other: string, caseSensitive = false): number {\n    if (!caseSensitive) {\n        one = one && one.toLowerCase();\n        other = other && other.toLowerCase();\n    }\n\n    if (one === other) {\n        return 0;\n    }\n\n    return one < other ? -1 : 1;\n}\n\nfunction compareResourceThemableDecorations(a: theia.SourceControlResourceThemableDecorations, b: theia.SourceControlResourceThemableDecorations): number {\n    if (!a.iconPath && !b.iconPath) {\n        return 0;\n    } else if (!a.iconPath) {\n        return -1;\n    } else if (!b.iconPath) {\n        return 1;\n    }\n\n    const aPath = typeof a.iconPath === 'string' ? a.iconPath : URI.isUri(a.iconPath) ? a.iconPath.fsPath : (a.iconPath as ThemeIcon).id;\n    const bPath = typeof b.iconPath === 'string' ? b.iconPath : URI.isUri(b.iconPath) ? b.iconPath.fsPath : (b.iconPath as ThemeIcon).id;\n    return comparePaths(aPath, bPath);\n}\n\nfunction compareResourceStatesDecorations(a: theia.SourceControlResourceDecorations, b: theia.SourceControlResourceDecorations): number {\n    let result = 0;\n\n    if (a.strikeThrough !== b.strikeThrough) {\n        return a.strikeThrough ? 1 : -1;\n    }\n\n    if (a.faded !== b.faded) {\n        return a.faded ? 1 : -1;\n    }\n\n    if (a.tooltip !== b.tooltip) {\n        return (a.tooltip || '').localeCompare(b.tooltip || '');\n    }\n\n    result = compareResourceThemableDecorations(a, b);\n\n    if (result !== 0) {\n        return result;\n    }\n\n    if (a.light && b.light) {\n        result = compareResourceThemableDecorations(a.light, b.light);\n    } else if (a.light) {\n        return 1;\n    } else if (b.light) {\n        return -1;\n    }\n\n    if (result !== 0) {\n        return result;\n    }\n\n    if (a.dark && b.dark) {\n        result = compareResourceThemableDecorations(a.dark, b.dark);\n    } else if (a.dark) {\n        return 1;\n    } else if (b.dark) {\n        return -1;\n    }\n\n    return result;\n}\n\nfunction compareCommands(a: theia.Command, b: theia.Command): number {\n    if (a.command !== b.command) {\n        return a.command! < b.command! ? -1 : 1;\n    }\n\n    if (a.title !== b.title) {\n        return a.title! < b.title! ? -1 : 1;\n    }\n\n    if (a.tooltip !== b.tooltip) {\n        if (a.tooltip !== undefined && b.tooltip !== undefined) {\n            return a.tooltip < b.tooltip ? -1 : 1;\n        } else if (a.tooltip !== undefined) {\n            return 1;\n        } else if (b.tooltip !== undefined) {\n            return -1;\n        }\n    }\n\n    if (a.arguments === b.arguments) {\n        return 0;\n    } else if (!a.arguments) {\n        return -1;\n    } else if (!b.arguments) {\n        return 1;\n    } else if (a.arguments.length !== b.arguments.length) {\n        return a.arguments.length - b.arguments.length;\n    }\n\n    for (let i = 0; i < a.arguments.length; i++) {\n        const aArg = a.arguments[i];\n        const bArg = b.arguments[i];\n\n        if (aArg === bArg) {\n            continue;\n        }\n\n        return aArg < bArg ? -1 : 1;\n    }\n\n    return 0;\n}\n\nfunction compareResourceStates(a: theia.SourceControlResourceState, b: theia.SourceControlResourceState): number {\n    let result = comparePaths(a.resourceUri.fsPath, b.resourceUri.fsPath, true);\n\n    if (result !== 0) {\n        return result;\n    }\n\n    if (a.command && b.command) {\n        result = compareCommands(a.command, b.command);\n    } else if (a.command) {\n        return 1;\n    } else if (b.command) {\n        return -1;\n    }\n\n    if (result !== 0) {\n        return result;\n    }\n\n    if (a.decorations && b.decorations) {\n        result = compareResourceStatesDecorations(a.decorations, b.decorations);\n    } else if (a.decorations) {\n        return 1;\n    } else if (b.decorations) {\n        return -1;\n    }\n\n    return result;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction compareArgs(a: any[], b: any[]): boolean {\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction commandEquals(a: theia.Command, b: theia.Command): boolean {\n    return a.command === b.command\n        && a.title === b.title\n        && a.tooltip === b.tooltip\n        && (a.arguments && b.arguments ? compareArgs(a.arguments, b.arguments) : a.arguments === b.arguments);\n}\n\nfunction commandListEquals(a: readonly theia.Command[], b: readonly theia.Command[]): boolean {\n    return equals(a, b, commandEquals);\n}\n\nfunction equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n    if (one === other) {\n        return true;\n    }\n\n    if (!one || !other) {\n        return false;\n    }\n\n    if (one.length !== other.length) {\n        return false;\n    }\n\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\ninterface ValidateInput {\n    (value: string, cursorPosition: number): theia.ProviderResult<theia.SourceControlInputBoxValidation | undefined | null>;\n}\n\nexport class ScmInputBoxImpl implements theia.SourceControlInputBox {\n\n    private _value: string = '';\n    apiObject: theia.SourceControlInputBox;\n\n    get value(): string {\n        return this._value;\n    }\n\n    set value(value: string) {\n        this.proxy.$setInputBoxValue(this.sourceControlHandle, value);\n        this.updateValue(value);\n    }\n\n    private readonly onDidChangeEmitter = new Emitter<string>();\n\n    get onDidChange(): Event<string> {\n        return this.onDidChangeEmitter.event;\n    }\n\n    private _placeholder: string = '';\n\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(placeholder: string) {\n        this.proxy.$setInputBoxPlaceholder(this.sourceControlHandle, placeholder);\n        this._placeholder = placeholder;\n    }\n\n    private _visible: boolean = true;\n\n    get visible(): boolean {\n        return this._visible;\n    }\n\n    set visible(visible: boolean) {\n        this.proxy.$setInputBoxVisible(this.sourceControlHandle, visible);\n        this._visible = visible;\n    }\n\n    private _enabled: boolean;\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    set enabled(enabled: boolean) {\n        this.proxy.$setInputBoxEnabled(this.sourceControlHandle, enabled);\n        this._enabled = enabled;\n    }\n\n    private _validateInput: ValidateInput | undefined;\n\n    get validateInput(): ValidateInput | undefined {\n        return this._validateInput;\n    }\n\n    set validateInput(fn: ValidateInput | undefined) {\n        if (fn && typeof fn !== 'function') {\n            throw new Error(`[${this.plugin.model.id}]: Invalid SCM input box validation function`);\n        }\n\n        this._validateInput = fn;\n    }\n\n    constructor(private plugin: Plugin, private proxy: ScmMain, private sourceControlHandle: number) {\n        this.apiObject = createAPIObject(this);\n    }\n\n    onInputBoxValueChange(value: string): void {\n        this.updateValue(value);\n    }\n\n    private updateValue(value: string): void {\n        this._value = value;\n        this.onDidChangeEmitter.fire(value);\n    }\n}\n\nclass ScmResourceGroupImpl implements theia.SourceControlResourceGroup {\n\n    private static handlePool: number = 0;\n    private resourceHandlePool: number = 0;\n    private _resourceStates: theia.SourceControlResourceState[] = [];\n\n    private resourceStatesMap = new Map<ResourceStateHandle, theia.SourceControlResourceState>();\n    private resourceStatesCommandsMap = new Map<ResourceStateHandle, theia.Command>();\n    private resourceStatesDisposablesMap = new Map<ResourceStateHandle, Disposable>();\n\n    private readonly onDidUpdateResourceStatesEmitter = new Emitter<void>();\n    readonly onDidUpdateResourceStates = this.onDidUpdateResourceStatesEmitter.event;\n\n    private _disposed = false;\n    get disposed(): boolean { return this._disposed; }\n    private readonly onDidDisposeEmitter = new Emitter<void>();\n    readonly onDidDispose = this.onDidDisposeEmitter.event;\n\n    private handlesSnapshot: number[] = [];\n    private resourceSnapshot: theia.SourceControlResourceState[] = [];\n\n    get id(): string { return this._id; }\n\n    get label(): string { return this._label; }\n    set label(label: string) {\n        this._label = label;\n        this.proxy.$updateGroupLabel(this.sourceControlHandle, this.handle, label);\n    }\n\n    private _hideWhenEmpty: boolean | undefined = undefined;\n    get hideWhenEmpty(): boolean | undefined { return this._hideWhenEmpty; }\n    set hideWhenEmpty(hideWhenEmpty: boolean | undefined) {\n        this._hideWhenEmpty = hideWhenEmpty;\n        this.proxy.$updateGroup(this.sourceControlHandle, this.handle, this.features);\n    }\n\n    private _contextValue: string | undefined = undefined;\n    get contextValue(): string | undefined { return this._contextValue; }\n    set contextValue(contextValue: string | undefined) {\n        this._contextValue = contextValue;\n        this.proxy.$updateGroup(this.sourceControlHandle, this.handle, this.features);\n    }\n\n    get features(): SourceControlGroupFeatures {\n        return {\n            hideWhenEmpty: this.hideWhenEmpty,\n            contextValue: this.contextValue\n        };\n    }\n\n    get resourceStates(): theia.SourceControlResourceState[] { return [...this._resourceStates]; }\n    set resourceStates(resources: theia.SourceControlResourceState[]) {\n        this._resourceStates = [...resources];\n        this.onDidUpdateResourceStatesEmitter.fire();\n    }\n\n    readonly handle = ScmResourceGroupImpl.handlePool++;\n\n    constructor(\n        private proxy: ScmMain,\n        private commands: CommandRegistryImpl,\n        private sourceControlHandle: number,\n        private plugin: Plugin,\n        private _id: string,\n        private _label: string,\n    ) { }\n\n    getResourceState(handle: number): theia.SourceControlResourceState | undefined {\n        return this.resourceStatesMap.get(handle);\n    }\n\n    executeResourceCommand(handle: number): Promise<void> {\n        const command = this.resourceStatesCommandsMap.get(handle);\n\n        if (!command) {\n            return Promise.resolve(undefined);\n        }\n\n        return new Promise(() => this.commands.executeCommand(command.command!, ...(command.arguments || [])));\n    }\n\n    takeResourceStateSnapshot(): ScmRawResourceSplice[] {\n        const snapshot = [...this._resourceStates];\n        const diffs = sortedDiff(this.resourceSnapshot, snapshot, compareResourceStates);\n\n        const splices = diffs.map<Splice<{ rawResource: ScmRawResource, handle: number }>>(diff => {\n            const toInsert = diff.toInsert.map(r => {\n                const handle = this.resourceHandlePool++;\n                this.resourceStatesMap.set(handle, r);\n\n                const sourceUri = r.resourceUri;\n\n                const icon = getIconResource(r.decorations);\n                const lightIcon = r.decorations && getIconResource(r.decorations.light) || icon;\n                const darkIcon = r.decorations && getIconResource(r.decorations.dark) || icon;\n                const icons = [this.getThemableIcon(lightIcon), this.getThemableIcon(darkIcon)];\n                let command: Command | undefined;\n\n                if (r.command) {\n                    if (r.command.command === 'theia.open' || r.command.command === 'theia.diff') {\n                        const disposables = new DisposableCollection();\n                        command = this.commands.converter.toSafeCommand(r.command, disposables);\n                        this.resourceStatesDisposablesMap.set(handle, disposables);\n                    } else {\n                        this.resourceStatesCommandsMap.set(handle, r.command);\n                    }\n                }\n\n                const tooltip = (r.decorations && r.decorations.tooltip) || '';\n                const strikeThrough = r.decorations && !!r.decorations.strikeThrough;\n                const faded = r.decorations && !!r.decorations.faded;\n                const contextValue = r.contextValue || '';\n\n                // TODO remove the letter and colorId fields when the FileDecorationProvider is applied, see https://github.com/eclipse-theia/theia/pull/8911\n                const rawResource = {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    handle, sourceUri, letter: (r as any).letter, colorId: (r as any).color?.id, icons,\n                    tooltip, strikeThrough, faded, contextValue, command\n                } as ScmRawResource;\n\n                return { rawResource, handle };\n            });\n\n            const { start, deleteCount } = diff;\n            return { start, deleteCount, toInsert };\n        });\n\n        const rawResourceSplices = splices\n            .map(({ start, deleteCount, toInsert }) => ({\n                start: start,\n                deleteCount: deleteCount,\n                rawResources: toInsert.map(i => i.rawResource)\n            } as ScmRawResourceSplice));\n\n        const reverseSplices = splices.reverse();\n\n        for (const { start, deleteCount, toInsert } of reverseSplices) {\n            const handles = toInsert.map(i => i.handle);\n            const handlesToDelete = this.handlesSnapshot.splice(start, deleteCount, ...handles);\n\n            for (const handle of handlesToDelete) {\n                this.resourceStatesMap.delete(handle);\n                this.resourceStatesCommandsMap.delete(handle);\n                this.resourceStatesDisposablesMap.get(handle)?.dispose();\n                this.resourceStatesDisposablesMap.delete(handle);\n            }\n        }\n\n        this.resourceSnapshot = snapshot;\n        return rawResourceSplices;\n    }\n\n    private getThemableIcon(icon: UriComponents | ThemeIcon | undefined): string | ThemeIcon | undefined {\n        if (!icon) {\n            return undefined;\n        } else if (ThemeIcon.is(icon)) {\n            return icon;\n        }\n        return PluginIconPath.asString(URI.revive(icon), this.plugin);\n    }\n\n    dispose(): void {\n        this._disposed = true;\n        this.onDidDisposeEmitter.fire();\n    }\n}\n\nclass SourceControlImpl implements theia.SourceControl {\n\n    private static handlePool: number = 0;\n    private groups: Map<GroupHandle, ScmResourceGroupImpl> = new Map<GroupHandle, ScmResourceGroupImpl>();\n\n    get id(): string {\n        return this._id;\n    }\n\n    get label(): string {\n        return this._label;\n    }\n\n    get rootUri(): theia.Uri | undefined {\n        return this._rootUri;\n    }\n\n    readonly inputBox: ScmInputBoxImpl;\n\n    private _count: number | undefined = undefined;\n\n    get count(): number | undefined {\n        return this._count;\n    }\n\n    set count(count: number | undefined) {\n        if (this._count === count) {\n            return;\n        }\n\n        this._count = count;\n        this.proxy.$updateSourceControl(this.handle, { count });\n    }\n\n    private _quickDiffProvider: theia.QuickDiffProvider | undefined = undefined;\n\n    get quickDiffProvider(): theia.QuickDiffProvider | undefined {\n        return this._quickDiffProvider;\n    }\n\n    set quickDiffProvider(quickDiffProvider: theia.QuickDiffProvider | undefined) {\n        this._quickDiffProvider = quickDiffProvider;\n        this.proxy.$updateSourceControl(this.handle, { hasQuickDiffProvider: !!quickDiffProvider });\n    }\n\n    private _commitTemplate: string | undefined = undefined;\n\n    get commitTemplate(): string | undefined {\n        return this._commitTemplate;\n    }\n\n    set commitTemplate(commitTemplate: string | undefined) {\n        if (commitTemplate === this._commitTemplate) {\n            return;\n        }\n\n        this._commitTemplate = commitTemplate;\n        this.proxy.$updateSourceControl(this.handle, { commitTemplate });\n    }\n\n    private acceptInputDisposables = new DisposableCollection();\n    private _acceptInputCommand: theia.Command | undefined = undefined;\n\n    get acceptInputCommand(): theia.Command | undefined {\n        return this._acceptInputCommand;\n    }\n\n    set acceptInputCommand(acceptInputCommand: theia.Command | undefined) {\n        this.acceptInputDisposables = new DisposableCollection();\n\n        this._acceptInputCommand = acceptInputCommand;\n\n        const internal = this.commands.converter.toSafeCommand(acceptInputCommand, this.acceptInputDisposables);\n        this.proxy.$updateSourceControl(this.handle, { acceptInputCommand: internal });\n    }\n\n    private _statusBarDisposables = new DisposableCollection();\n    private _statusBarCommands: theia.Command[] | undefined = undefined;\n\n    get statusBarCommands(): theia.Command[] | undefined {\n        return this._statusBarCommands;\n    }\n\n    set statusBarCommands(statusBarCommands: theia.Command[] | undefined) {\n        if (this._statusBarCommands && statusBarCommands && commandListEquals(this._statusBarCommands, statusBarCommands)) {\n            return;\n        }\n\n        this._statusBarDisposables = new DisposableCollection();\n\n        this._statusBarCommands = statusBarCommands;\n\n        const internal = (statusBarCommands || []).map(c => this.commands.converter.toSafeCommand(c, this._statusBarDisposables)) as Command[];\n        this.proxy.$updateSourceControl(this.handle, { statusBarCommands: internal });\n    }\n\n    private _selected: boolean = false;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private readonly onDidChangeSelectionEmitter = new Emitter<boolean>();\n    readonly onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n\n    private handle: number = SourceControlImpl.handlePool++;\n\n    constructor(\n        private plugin: Plugin,\n        private proxy: ScmMain,\n        private commands: CommandRegistryImpl,\n        private _id: string,\n        private _label: string,\n        private _rootUri?: theia.Uri\n    ) {\n        this.inputBox = new ScmInputBoxImpl(plugin, this.proxy, this.handle);\n        this.proxy.$registerSourceControl(this.handle, _id, _label, _rootUri);\n    }\n\n    private createdResourceGroups = new Map<ScmResourceGroupImpl, Disposable>();\n    private updatedResourceGroups = new Set<ScmResourceGroupImpl>();\n\n    createResourceGroup(id: string, label: string): ScmResourceGroupImpl {\n        const group = new ScmResourceGroupImpl(this.proxy, this.commands, this.handle, this.plugin, id, label);\n        const disposable = group.onDidDispose(() => this.createdResourceGroups.delete(group));\n        this.createdResourceGroups.set(group, disposable);\n        this.eventuallyAddResourceGroups();\n        return group;\n    }\n\n    eventuallyAddResourceGroups(): void {\n        const groups: ScmRawResourceGroup[] = [];\n        const splices: ScmRawResourceSplices[] = [];\n\n        for (const [group, disposable] of this.createdResourceGroups) {\n            disposable.dispose();\n\n            const updateListener = group.onDidUpdateResourceStates(() => {\n                this.updatedResourceGroups.add(group);\n                this.eventuallyUpdateResourceStates();\n            });\n\n            group.onDidDispose(() => {\n                this.updatedResourceGroups.delete(group);\n                updateListener.dispose();\n                this.groups.delete(group.handle);\n                this.proxy.$unregisterGroup(this.handle, group.handle);\n            });\n\n            const { handle, id, label, features } = group;\n            groups.push({ handle, id, label, features });\n\n            const snapshot = group.takeResourceStateSnapshot();\n\n            if (snapshot.length > 0) {\n                splices.push({ handle: group.handle, splices: snapshot });\n            }\n\n            this.groups.set(group.handle, group);\n        }\n\n        this.proxy.$registerGroups(this.handle, groups, splices);\n        this.createdResourceGroups.clear();\n    }\n\n    eventuallyUpdateResourceStates(): void {\n        const splices: ScmRawResourceSplices[] = [];\n\n        this.updatedResourceGroups.forEach(group => {\n            const snapshot = group.takeResourceStateSnapshot();\n\n            if (snapshot.length === 0) {\n                return;\n            }\n\n            splices.push({ handle: group.handle, splices: snapshot });\n        });\n\n        if (splices.length > 0) {\n            this.proxy.$spliceResourceStates(this.handle, splices);\n        }\n\n        this.updatedResourceGroups.clear();\n    }\n\n    getResourceGroup(handle: GroupHandle): ScmResourceGroupImpl | undefined {\n        return this.groups.get(handle);\n    }\n\n    setSelectionState(selected: boolean): void {\n        this._selected = selected;\n        this.onDidChangeSelectionEmitter.fire(selected);\n    }\n\n    dispose(): void {\n        this.acceptInputDisposables.dispose();\n        this._statusBarDisposables.dispose();\n\n        this.groups.forEach(group => group.dispose());\n        this.proxy.$unregisterSourceControl(this.handle);\n    }\n}\n\nexport class ScmExtImpl implements ScmExt {\n\n    private static handlePool: number = 0;\n\n    private proxy: ScmMain;\n    private sourceControls: Map<ProviderHandle, SourceControlImpl> = new Map<ProviderHandle, SourceControlImpl>();\n    private sourceControlsByExtension: Map<string, SourceControlImpl[]> = new Map<string, SourceControlImpl[]>();\n\n    private readonly onDidChangeActiveProviderEmitter = new Emitter<theia.SourceControl>();\n    get onDidChangeActiveProvider(): Event<theia.SourceControl> { return this.onDidChangeActiveProviderEmitter.event; }\n\n    private selectedSourceControlHandle: number | undefined;\n\n    constructor(rpc: RPCProtocol, private commands: CommandRegistryImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.SCM_MAIN);\n\n        commands.registerArgumentProcessor({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            processArgument: (arg: any) => {\n                if (!ScmCommandArg.is(arg)) {\n                    return arg;\n                }\n                const sourceControl = this.sourceControls.get(arg.sourceControlHandle);\n                if (!sourceControl) {\n                    return undefined;\n                }\n                if (typeof arg.resourceGroupHandle !== 'number') {\n                    return sourceControl;\n                }\n                const resourceGroup = sourceControl.getResourceGroup(arg.resourceGroupHandle);\n                if (typeof arg.resourceStateHandle !== 'number') {\n                    return resourceGroup;\n                }\n                return resourceGroup && resourceGroup.getResourceState(arg.resourceStateHandle);\n            }\n        });\n    }\n\n    createSourceControl(extension: Plugin, id: string, label: string, rootUri: theia.Uri | undefined): theia.SourceControl {\n        const handle = ScmExtImpl.handlePool++;\n        const sourceControl = new SourceControlImpl(extension, this.proxy, this.commands, id, label, rootUri);\n        this.sourceControls.set(handle, sourceControl);\n\n        const sourceControls = this.sourceControlsByExtension.get(extension.model.id) || [];\n        sourceControls.push(sourceControl);\n        this.sourceControlsByExtension.set(extension.model.id, sourceControls);\n\n        return sourceControl;\n    }\n\n    getLastInputBox(extension: Plugin): ScmInputBoxImpl | undefined {\n        const sourceControls = this.sourceControlsByExtension.get(extension.model.id);\n        const sourceControl = sourceControls && sourceControls[sourceControls.length - 1];\n        return sourceControl && sourceControl.inputBox;\n    }\n\n    $provideOriginalResource(sourceControlHandle: number, uriComponents: string, token: theia.CancellationToken): Promise<UriComponents | undefined> {\n        const sourceControl = this.sourceControls.get(sourceControlHandle);\n\n        if (!sourceControl || !sourceControl.quickDiffProvider || !sourceControl.quickDiffProvider.provideOriginalResource) {\n            return Promise.resolve(undefined);\n        }\n\n        return new Promise<UriComponents | undefined>(() => sourceControl.quickDiffProvider!.provideOriginalResource!(URI.file(uriComponents), token))\n            .then<UriComponents | undefined>(r => r || undefined);\n    }\n\n    $onInputBoxValueChange(sourceControlHandle: number, value: string): Promise<void> {\n        const sourceControl = this.sourceControls.get(sourceControlHandle);\n\n        if (!sourceControl) {\n            return Promise.resolve(undefined);\n        }\n\n        sourceControl.inputBox.onInputBoxValueChange(value);\n        return Promise.resolve(undefined);\n    }\n\n    $executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number): Promise<void> {\n        const sourceControl = this.sourceControls.get(sourceControlHandle);\n\n        if (!sourceControl) {\n            return Promise.resolve(undefined);\n        }\n\n        const group = sourceControl.getResourceGroup(groupHandle);\n\n        if (!group) {\n            return Promise.resolve(undefined);\n        }\n\n        return group.executeResourceCommand(handle);\n    }\n\n    async $validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string, number] | undefined> {\n        const sourceControl = this.sourceControls.get(sourceControlHandle);\n\n        if (!sourceControl) {\n            return Promise.resolve(undefined);\n        }\n\n        if (!sourceControl.inputBox.validateInput) {\n            return Promise.resolve(undefined);\n        }\n\n        const result = await sourceControl.inputBox.validateInput!(value, cursorPosition);\n        if (!result) {\n            return Promise.resolve(undefined);\n        }\n        return [result.message, result.type];\n    }\n\n    $setSelectedSourceControl(selectedSourceControlHandle: number | undefined): Promise<void> {\n        if (selectedSourceControlHandle !== undefined) {\n            this.sourceControls.get(selectedSourceControlHandle)?.setSelectionState(true);\n        }\n\n        if (this.selectedSourceControlHandle !== undefined) {\n            this.sourceControls.get(this.selectedSourceControlHandle)?.setSelectionState(false);\n        }\n\n        this.selectedSourceControlHandle = selectedSourceControlHandle;\n        return Promise.resolve(undefined);\n    }\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nfunction sortedDiff(before: ReadonlyArray<theia.SourceControlResourceState>,\n    after: ReadonlyArray<theia.SourceControlResourceState>,\n    compare: (a: theia.SourceControlResourceState,\n        b: theia.SourceControlResourceState) => number): Splice<theia.SourceControlResourceState>[] {\n    const result: MutableSplice<theia.SourceControlResourceState>[] = [];\n\n    function pushSplice(start: number, deleteCount: number, toInsert: theia.SourceControlResourceState[]): void {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n\n        const latest = result[result.length - 1];\n\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        } else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n\n    let beforeIdx = 0;\n    let afterIdx = 0;\n\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            // equal\n            beforeIdx += 1;\n            afterIdx += 1;\n        } else if (n < 0) {\n            // beforeElement is smaller -> before element removed\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        } else if (n > 0) {\n            // beforeElement is greater -> after element added\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n\n    return result;\n}\n\ninterface MutableSplice<T> extends Splice<T> {\n    deleteCount: number;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { TextEditorConfiguration, TextEditorsMain, TextEditorConfigurationUpdate, SingleEditOperation } from '../common/plugin-api-rpc';\nimport { Range as ApiRange } from '../common/plugin-api-rpc-model';\nimport { Selection, Range, TextEditorLineNumbersStyle, SnippetString, Position, TextEditorRevealType, EndOfLine } from './types-impl';\nimport * as theia from '@theia/plugin';\nimport { DocumentDataExt } from './document-data';\nimport { readonly, illegalArgument } from '../common/errors';\nimport { TextEditorCursorStyle } from '../common/editor-options';\nimport { ok } from '../common/assert';\nimport * as Converter from './type-converters';\n\nexport class TextEditorExt implements theia.TextEditor {\n    private _viewColumn: theia.ViewColumn | undefined;\n    private _document: DocumentDataExt;\n    private _options: TextEditorOptionsExt;\n    private disposed = false;\n    constructor(\n        private readonly proxy: TextEditorsMain,\n        readonly id: string,\n        document: DocumentDataExt,\n        private _selections: Selection[],\n        options: TextEditorConfiguration,\n        private _visibleRanges: Range[],\n        viewColumn: theia.ViewColumn | undefined) {\n        this._options = new TextEditorOptionsExt(proxy, id, options);\n        this._viewColumn = viewColumn;\n        this._document = document;\n    }\n\n    get document(): theia.TextDocument {\n        return this._document.document;\n    }\n\n    set document(doc) {\n        throw readonly('Document');\n    }\n\n    acceptViewColumn(val: theia.ViewColumn): void {\n        this._viewColumn = val;\n    }\n\n    dispose(): void {\n        this.disposed = true;\n    }\n\n    get options(): theia.TextEditorOptions {\n        return this._options;\n    }\n\n    set options(val: theia.TextEditorOptions) {\n        if (!this.disposed) {\n            this._options.assign(val);\n        }\n    }\n\n    acceptOptions(options: TextEditorConfiguration): void {\n        ok(!this.disposed);\n        this._options.accept(options);\n    }\n\n    get selection(): Selection {\n        return this._selections && this._selections[0];\n    }\n\n    set selection(val: Selection) {\n        if (!(val instanceof Selection)) {\n            throw illegalArgument('selection');\n        }\n        this._selections = [val];\n        this.trySetSelection();\n    }\n\n    private trySetSelection(): Promise<theia.TextEditor | undefined> {\n        const selection = this._selections.map(Converter.fromSelection);\n        return this.runOnProxy(() => this.proxy.$trySetSelections(this.id, selection));\n    }\n\n    get selections(): Selection[] {\n        return this._selections;\n    }\n\n    set selections(val: Selection[]) {\n        if (!Array.isArray(val) || val.some(s => !(s instanceof Selection))) {\n            throw illegalArgument('selections');\n        }\n\n        this._selections = val;\n        this.trySetSelection();\n    }\n\n    acceptSelections(selections: Selection[]): void {\n        ok(!this.disposed);\n        this._selections = selections;\n    }\n\n    get visibleRanges(): Range[] {\n        return this._visibleRanges;\n    }\n\n    set visibleRanges(val: Range[]) {\n        throw readonly('visibleRanges');\n    }\n\n    acceptVisibleRanges(range: Range[]): void {\n        ok(!this.disposed);\n        this._visibleRanges = range;\n    }\n\n    get viewColumn(): theia.ViewColumn | undefined {\n        return this._viewColumn;\n    }\n\n    set viewColumn(value) {\n        throw readonly('viewColumn');\n    }\n\n    _acceptViewColumn(value: theia.ViewColumn): void {\n        ok(!this.disposed);\n        this._viewColumn = value;\n    }\n\n    // eslint-disable-next-line max-len\n    edit(callback: (editBuilder: theia.TextEditorEdit) => void, options: { undoStopBefore: boolean; undoStopAfter: boolean; } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n        if (this.disposed) {\n            return Promise.reject(new Error('TextEditor#edit not possible on closed editor'));\n        }\n\n        const edit = new TextEditorEdit(this._document.document, options);\n        callback(edit);\n        return this.applyEdit(edit);\n    }\n    // eslint-disable-next-line max-len\n    insertSnippet(snippet: SnippetString, location?: Position | Range | Position[] | Range[], options: { undoStopBefore: boolean; undoStopAfter: boolean; } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n        if (this.disposed) {\n            return Promise.reject(new Error('TextEditor#insertSnippet not possible on closed editors'));\n        }\n        let ranges: ApiRange[];\n\n        if (!location || (Array.isArray(location) && location.length === 0)) {\n            ranges = this._selections.map(s => Converter.fromRange(s)!);\n\n        } else if (location instanceof Position) {\n            const { lineNumber, column } = Converter.fromPosition(location);\n            ranges = [{ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column }];\n\n        } else if (location instanceof Range) {\n            ranges = [Converter.fromRange(location)!];\n        } else {\n            ranges = [];\n            for (const posOrRange of location) {\n                if (posOrRange instanceof Range) {\n                    ranges.push(Converter.fromRange(posOrRange)!);\n                } else {\n                    const { lineNumber, column } = Converter.fromPosition(posOrRange);\n                    ranges.push({ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column });\n                }\n            }\n        }\n\n        return this.proxy.$tryInsertSnippet(this.id, snippet.value, ranges, options);\n    }\n    setDecorations(decorationType: theia.TextEditorDecorationType, rangesOrOptions: Range[] | theia.DecorationOptions[]): void {\n        this.runOnProxy(() => {\n            if (Converter.isDecorationOptionsArr(rangesOrOptions)) {\n                return this.proxy.$trySetDecorations(\n                    this.id,\n                    decorationType.key,\n                    Converter.fromRangeOrRangeWithMessage(rangesOrOptions)\n                );\n            } else {\n                const ranges: number[] = new Array<number>(4 * rangesOrOptions.length);\n                const len = rangesOrOptions.length;\n                for (let i = 0; i < len; i++) {\n                    const range = rangesOrOptions[i];\n                    ranges[4 * i] = range.start.line + 1;\n                    ranges[4 * i + 1] = range.start.character + 1;\n                    ranges[4 * i + 2] = range.end.line + 1;\n                    ranges[4 * i + 3] = range.end.character + 1;\n                }\n                return this.proxy.$trySetDecorationsFast(\n                    this.id,\n                    decorationType.key,\n                    ranges\n                );\n            }\n        });\n    }\n\n    revealRange(range: Range, revealType?: theia.TextEditorRevealType): void {\n        this.runOnProxy(() => this.proxy.$tryRevealRange(this.id, Converter.fromRange(range)!, (revealType || TextEditorRevealType.Default)));\n    }\n\n    private applyEdit(edit: TextEditorEdit): Promise<boolean> {\n        const editData = edit.finalize();\n\n        const editRanges = editData.edits.map(e => e.range);\n\n        editRanges.sort((a, b) => {\n            if (a.end.line === b.end.line) {\n                if (a.end.character === b.end.character) {\n                    if (a.start.line === b.start.line) {\n                        return a.start.character - b.start.character;\n                    }\n                    return a.start.line - b.start.line;\n                }\n                return a.end.character - b.end.character;\n            }\n            return a.end.line - b.end.line;\n        });\n\n        const count = editRanges.length - 1;\n        for (let i = 0; i < count; i++) {\n            const rangeEnd = editRanges[i].end;\n            const nextRangeStart = editRanges[i + 1].start;\n\n            if (nextRangeStart.isBefore(rangeEnd)) {\n                return Promise.reject(\n                    new Error('Overlapping ranges are not allowed!')\n                );\n            }\n        }\n\n        // prepare data for serialization\n        const edits: SingleEditOperation[] = editData.edits.map(e =>\n        ({\n            range: Converter.fromRange(e.range)!,\n            text: e.text,\n            forceMoveMarkers: e.forceMoveMarkers\n        }));\n\n        return this.proxy.$tryApplyEdits(this.id, editData.documentVersionId, edits, {\n            setEndOfLine: editData.setEndOfLine,\n            undoStopBefore: editData.undoStopBefore,\n            undoStopAfter: editData.undoStopAfter\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private runOnProxy(callback: () => Promise<any>): Promise<TextEditorExt | undefined> {\n        if (this.disposed) {\n            console.warn('TextEditor is disposed!');\n            return Promise.resolve(undefined);\n        }\n\n        return callback().then(() => this, err => {\n            if (!(err instanceof Error && err.name === 'DISPOSED')) {\n                console.warn(err);\n            }\n            return undefined;\n        });\n    }\n\n    show(column?: theia.ViewColumn): void {\n        this.proxy.$tryShowTextDocument(this.document.uri, {\n            viewColumn: column,\n            preview: true,\n        });\n    }\n\n    hide(): void {\n        this.proxy.$tryHideEditor(this.id);\n    }\n\n    getDiffInformation(): Promise<theia.LineChange[]> {\n        return this.proxy.$getDiffInformation(this.id);\n    }\n}\n\nexport class TextEditorOptionsExt implements theia.TextEditorOptions {\n    private _tabSize: number;\n    private _indentSize: number | 'tabSize';\n    private _insertSpace: boolean;\n    private _cursorStyle: TextEditorCursorStyle;\n    private _lineNumbers: TextEditorLineNumbersStyle;\n    constructor(private readonly proxy: TextEditorsMain,\n        private readonly id: string,\n        source: TextEditorConfiguration) {\n        this.accept(source);\n    }\n\n    accept(source: TextEditorConfiguration): void {\n        this._tabSize = source.tabSize;\n        this._indentSize = source.indentSize;\n        this._insertSpace = source.insertSpaces;\n        this._cursorStyle = source.cursorStyle;\n        this._lineNumbers = source.lineNumbers;\n    }\n\n    get tabSize(): number {\n        return this._tabSize;\n    }\n\n    set tabSize(val: number | string | undefined) {\n        const tabSize = this.validateTabSize(val);\n        if (!tabSize) {\n            return; // ignore invalid values\n        }\n\n        if (typeof tabSize === 'number') {\n            if (this._tabSize === tabSize) {\n                return;\n            }\n            this._tabSize = tabSize;\n        }\n        warnOnError(this.proxy.$trySetOptions(this.id, {\n            tabSize\n        }));\n    }\n\n    private validateTabSize(val: number | string | undefined): number | 'auto' | undefined {\n        if (val === 'auto') {\n            return 'auto';\n        }\n\n        if (typeof val === 'number') {\n            const r = Math.floor(val);\n            return r > 0 ? r : undefined;\n        }\n        if (typeof val === 'string') {\n            const r = parseInt(val, undefined);\n            if (isNaN(r)) {\n                return undefined;\n            }\n            return r > 0 ? r : undefined;\n        }\n        return undefined;\n    }\n\n    get indentSize(): number {\n        if (this._indentSize === 'tabSize') {\n            return this.tabSize;\n        }\n        return this._indentSize;\n    }\n\n    set indentSize(val: number | string | undefined) {\n        const indentSize = this.validateIndentSize(val);\n        if (!indentSize) {\n            return; // ignore invalid values\n        }\n\n        if (typeof indentSize === 'number') {\n            if (this._indentSize === indentSize) {\n                return;\n            }\n            this._indentSize = indentSize;\n        } else if (val === 'tabSize') {\n            this._indentSize = val;\n        }\n        warnOnError(this.proxy.$trySetOptions(this.id, {\n            indentSize\n        }));\n    }\n\n    private validateIndentSize(val: number | string | undefined): number | 'tabSize' | undefined {\n        if (val === 'tabSize') {\n            return 'tabSize';\n        }\n\n        if (typeof val === 'number') {\n            const r = Math.floor(val);\n            return r > 0 ? r : undefined;\n        }\n        if (typeof val === 'string') {\n            const r = parseInt(val, undefined);\n            if (isNaN(r)) {\n                return undefined;\n            }\n            return r > 0 ? r : undefined;\n        }\n        return undefined;\n    }\n\n    get insertSpaces(): boolean | string {\n        return this._insertSpace;\n    }\n\n    set insertSpaces(val: boolean | string) {\n        const insertSpaces = this.validateInsertSpaces(val);\n        if (typeof insertSpaces === 'boolean') {\n            if (this._insertSpace === insertSpaces) {\n                return;\n            }\n            this._insertSpace = insertSpaces;\n        }\n        warnOnError(this.proxy.$trySetOptions(this.id, { insertSpaces }));\n    }\n\n    private validateInsertSpaces(val: boolean | string): boolean | 'auto' {\n        if (val === 'auto') {\n            return 'auto';\n        }\n        return val === 'false' ? false : Boolean(val);\n    }\n\n    get cursorStyle(): TextEditorCursorStyle {\n        return this._cursorStyle;\n    }\n\n    set cursorStyle(val: TextEditorCursorStyle) {\n        if (this._cursorStyle === val) {\n            return;\n        }\n        this._cursorStyle = val;\n        warnOnError(this.proxy.$trySetOptions(this.id, { cursorStyle: val }));\n    }\n\n    get lineNumbers(): TextEditorLineNumbersStyle {\n        return this._lineNumbers;\n    }\n    set lineNumbers(val: TextEditorLineNumbersStyle) {\n        if (this._lineNumbers === val) {\n            return;\n        }\n        this._lineNumbers = val;\n        warnOnError(this.proxy.$trySetOptions(this.id, { lineNumbers: val }));\n    }\n\n    public assign(newOptions: theia.TextEditorOptions): void {\n        const configurationUpdate: TextEditorConfigurationUpdate = {};\n        let hasUpdate = false;\n\n        if (typeof newOptions.tabSize !== 'undefined') {\n            const tabSize = this.validateTabSize(newOptions.tabSize);\n            if (tabSize === 'auto') {\n                hasUpdate = true;\n                configurationUpdate.tabSize = tabSize;\n            } else if (typeof tabSize === 'number' && this._tabSize !== tabSize) {\n                this._tabSize = tabSize;\n                hasUpdate = true;\n                configurationUpdate.tabSize = tabSize;\n            }\n        }\n\n        if (typeof newOptions.indentSize !== 'undefined') {\n            const indentSize = this.validateIndentSize(newOptions.indentSize);\n            if (indentSize === 'tabSize') {\n                hasUpdate = true;\n                configurationUpdate.indentSize = indentSize;\n            } else if (typeof indentSize === 'number' && this._indentSize !== indentSize) {\n                // reflect the new indentSize value immediately\n                this._indentSize = indentSize;\n                hasUpdate = true;\n                configurationUpdate.indentSize = indentSize;\n            }\n        }\n\n        if (typeof newOptions.insertSpaces !== 'undefined') {\n            const insertSpaces = this.validateInsertSpaces(newOptions.insertSpaces);\n            if (insertSpaces === 'auto') {\n                hasUpdate = true;\n                configurationUpdate.insertSpaces = insertSpaces;\n            } else if (this.insertSpaces !== insertSpaces) {\n                this.insertSpaces = insertSpaces;\n                hasUpdate = true;\n                configurationUpdate.insertSpaces = insertSpaces;\n            }\n        }\n\n        if (typeof newOptions.cursorStyle !== 'undefined') {\n            if (this._cursorStyle !== newOptions.cursorStyle) {\n                this._cursorStyle = newOptions.cursorStyle;\n                hasUpdate = true;\n                configurationUpdate.cursorStyle = newOptions.cursorStyle;\n            }\n        }\n\n        if (typeof newOptions.lineNumbers !== 'undefined') {\n            if (this._lineNumbers !== newOptions.lineNumbers) {\n                this._lineNumbers = newOptions.lineNumbers;\n                hasUpdate = true;\n                configurationUpdate.lineNumbers = newOptions.lineNumbers;\n            }\n        }\n\n        if (hasUpdate) {\n            warnOnError(this.proxy.$trySetOptions(this.id, configurationUpdate));\n        }\n    }\n\n}\n\nexport interface TextEditOperation {\n    range: theia.Range;\n    text?: string;\n    forceMoveMarkers: boolean;\n}\n\nexport interface EditData {\n    documentVersionId: number;\n    edits: TextEditOperation[];\n    setEndOfLine: EndOfLine | undefined;\n    undoStopBefore: boolean;\n    undoStopAfter: boolean;\n}\n\nexport class TextEditorEdit {\n    private readonly documentVersionId: number;\n    private collectedEdits: TextEditOperation[];\n    private eol: EndOfLine | undefined;\n    private readonly undoStopBefore: boolean;\n    private readonly undoStopAfter: boolean;\n    constructor(private document: theia.TextDocument, options: { undoStopBefore: boolean; undoStopAfter: boolean }) {\n        this.documentVersionId = document.version;\n        this.collectedEdits = [];\n        this.undoStopBefore = options.undoStopBefore;\n        this.undoStopAfter = options.undoStopAfter;\n    }\n\n    finalize(): EditData {\n        return {\n            documentVersionId: this.documentVersionId,\n            edits: this.collectedEdits,\n            setEndOfLine: this.eol,\n            undoStopAfter: this.undoStopAfter,\n            undoStopBefore: this.undoStopBefore\n        };\n    }\n\n    replace(location: Position | Range | Selection, val: string): void {\n        let range: Range;\n        if (location instanceof Position) {\n            range = new Range(location, location);\n        } else if (location instanceof Range) {\n            range = location;\n        } else {\n            throw new Error('Unknown location');\n        }\n\n        this.addEdit(range, val, false);\n    }\n\n    insert(location: Position, val: string): void {\n        this.addEdit(new Range(location, location), val, true);\n    }\n\n    delete(location: Range | Selection): void {\n        let range: Range;\n        if (location instanceof Range) {\n            range = location;\n        } else {\n            throw new Error('Unknown location');\n        }\n\n        this.addEdit(range, undefined, true);\n    }\n\n    setEndOfLine(endOfLine: EndOfLine): void {\n        if (endOfLine !== EndOfLine.CRLF && endOfLine !== EndOfLine.LF) {\n            throw illegalArgument('endOfLine');\n        }\n\n        this.eol = endOfLine;\n    }\n\n    private addEdit(range: Range, text: string | undefined, moveMarkers: boolean): void {\n        const validatedRange = this.document.validateRange(range);\n        this.collectedEdits.push({\n            range: validatedRange,\n            forceMoveMarkers: moveMarkers,\n            text: text\n        });\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction warnOnError(promise: Promise<any>): void {\n    promise.then(undefined, err => {\n        console.warn(err);\n    });\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport * from './notebook-common';\nexport * from './notebook-range';\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport * as theia from '@theia/plugin';\nimport { DocumentsExtImpl } from '../documents';\nimport { ReferenceContext, Location } from '../../common/plugin-api-rpc-model';\nimport * as Converter from '../type-converters';\nimport { Position } from '../../common/plugin-api-rpc';\nimport { isLocationArray } from './util';\n\nexport class ReferenceAdapter {\n\n    constructor(\n        private readonly provider: theia.ReferenceProvider,\n        private readonly documents: DocumentsExtImpl\n    ) { }\n\n    provideReferences(resource: URI, position: Position, context: ReferenceContext, token: theia.CancellationToken): Promise<Location[] | undefined> {\n        const documentData = this.documents.getDocumentData(resource);\n        if (!documentData) {\n            return Promise.reject(new Error(`There is no document for ${resource}`));\n        }\n\n        const document = documentData.document;\n        const zeroBasedPosition = Converter.toPosition(position);\n\n        return Promise.resolve(this.provider.provideReferences(document, zeroBasedPosition, context, token)).then(reference => {\n            if (!reference) {\n                return undefined;\n            }\n\n            if (isLocationArray(reference)) {\n                const locations: Location[] = [];\n\n                for (const location of reference) {\n                    locations.push(Converter.fromLocation(location));\n                }\n\n                return locations;\n            }\n        });\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport * as theia from '@theia/plugin';\nimport { DataTransferDTO, DocumentDropEdit } from '../../common/plugin-api-rpc-model';\nimport { CancellationToken } from '@theia/core/shared/vscode-languageserver-protocol';\nimport { Position } from '../../common/plugin-api-rpc';\nimport * as Converter from '../type-converters';\nimport { DocumentsExtImpl } from '../documents';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { FileSystemExtImpl } from '../file-system-ext-impl';\nimport * as os from 'os';\nimport * as path from 'path';\n\nexport class DocumentDropEditAdapter {\n    constructor(private readonly provider: theia.DocumentDropEditProvider,\n        private readonly documents: DocumentsExtImpl,\n        private readonly fileSystem: FileSystemExtImpl) { }\n\n    async provideDocumentDropEdits(resource: URI, position: Position, dataTransfer: DataTransferDTO, token: CancellationToken): Promise<DocumentDropEdit | undefined> {\n        return this.provider.provideDocumentDropEdits(\n            this.documents.getDocument(resource),\n            Converter.toPosition(position),\n            Converter.DataTransfer.toDataTransfer(dataTransfer, itemId => this.resolveFileData(itemId)),\n            token) as DocumentDropEdit | undefined;\n    }\n\n    private async resolveFileData(itemId: string): Promise<Uint8Array> {\n        const filePath = URI.file(path.resolve(os.tmpdir(), 'theia_upload', itemId));\n        return this.fileSystem.fileSystem.readFile(filePath);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2025 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, named, postConstruct } from 'inversify';\nimport { Disposable } from '../disposable';\nimport { Emitter } from '../event';\nimport { IJSONSchema } from '../json-schema';\nimport { JSONObject, JSONValue } from '@lumino/coreutils';\nimport { PreferenceDataProperty, PreferenceSchema, PreferenceSchemaService, DefaultValueChangedEvent, PreferenceContribution } from './preference-schema';\nimport { PreferenceScope, ValidPreferenceScopes } from './preference-scope';\nimport { PreferenceUtils } from './preference-provider';\nimport { ContributionProvider } from '../contribution-provider';\nimport { Deferred } from '../promise-util';\n\nconst NO_OVERRIDE = {};\nconst OVERRIDE_PROPERTY = '\\\\[(.*)\\\\]$';\n\n@injectable()\nexport class PreferenceSchemaServiceImpl implements PreferenceSchemaService {\n    // Storage structures\n    protected readonly schemas = new Set<PreferenceSchema>();\n    protected readonly properties = new Map<string, PreferenceDataProperty>();\n    /**\n     * This map stores default overrides. The primary map key is the base preference name.\n     * The preference name maps to a second map keyed by the override identifier or a special object value `NO_OVERRIDE',\n     * representing default overrides for the base property. The value in this second map is an array\n     * of entries in reverse order of their insertion. This is necessary becuaus multiple clients might register\n     * overrides for the same preference key/override combination. The elements in this array consist of a unique, generated\n     * identifier and the actual override value. This allows us to always return the last registerd override even\n     * when overrides are later removed.\n     */\n    protected readonly defaultOverrides = new Map<string, Map<string | object, [number, JSONValue][]>>();\n    protected readonly _overrideIdentifiers = new Set<string>();\n\n    protected readonly jsonSchemas: IJSONSchema[] = [];\n\n    protected readonly _ready = new Deferred();\n\n    get ready(): Promise<void> {\n        return this._ready.promise;\n    }\n\n    get overrideIdentifiers(): ReadonlySet<string> {\n        return this._overrideIdentifiers;\n    }\n\n    getSchemaProperties(): ReadonlyMap<string, PreferenceDataProperty> {\n        return this.properties;\n    }\n\n    protected nextSchemaTitle = 1;\n    protected nextOverrideValueId = 1;\n\n    // Event emitters\n    protected readonly defaultValueChangedEmitter = new Emitter<DefaultValueChangedEvent>();\n    protected readonly schemaChangedEmitter = new Emitter<void>();\n\n    // Public events\n    readonly onDidChangeDefaultValue = this.defaultValueChangedEmitter.event;\n    readonly onDidChangeSchema = this.schemaChangedEmitter.event;\n\n    @inject(ValidPreferenceScopes)\n    readonly validScopes: readonly PreferenceScope[];\n\n    @inject(ContributionProvider) @named(PreferenceContribution)\n    protected readonly preferenceContributions: ContributionProvider<PreferenceContribution>;\n\n    @postConstruct()\n    protected init(): void {\n        for (const scope of this.validScopes) {\n            this.jsonSchemas[scope] = {\n                type: 'object',\n                properties: {},\n                patternProperties: {},\n                additionalProperties: false\n            };\n        }\n        const promises: Promise<void>[] = [];\n        this.preferenceContributions.getContributions().forEach(contrib => {\n            if (contrib.schema) {\n                this.addSchema(contrib.schema);\n            }\n            if (contrib.initSchema) {\n                promises.push(contrib.initSchema(this));\n            }\n        });\n        Promise.all(promises).then(() => this._ready.resolve());\n    }\n\n    dispose(): void {\n        this.defaultValueChangedEmitter.dispose();\n        this.schemaChangedEmitter.dispose();\n    }\n\n    registerOverrideIdentifier(overrideIdentifier: string): Disposable {\n        if (!this._overrideIdentifiers.has(overrideIdentifier)) {\n            this.addOverrideToJsonSchema(overrideIdentifier);\n            this._overrideIdentifiers.add(overrideIdentifier);\n            this.schemaChangedEmitter.fire();\n\n            return Disposable.create(() => {\n                if (this._overrideIdentifiers.delete(overrideIdentifier)) {\n                    this.schemaChangedEmitter.fire();\n                }\n            });\n        }\n        return Disposable.NULL;\n    }\n\n    addSchema(schema: PreferenceSchema): Disposable {\n        this.schemas.add(schema);\n\n        for (const [key, property] of Object.entries(schema.properties)) {\n            if (this.properties.has(key)) {\n                throw new Error(`Property with id '${key}' already exists`);\n            }\n\n            if (property.scope === undefined) {\n                property.scope = schema.scope;\n            }\n\n            if (property.overridable === undefined) {\n                property.overridable = schema.defaultOverridable;\n            }\n\n            this.properties.set(key, property);\n            this.setJSONSchemasProperty(key, property);\n            if (property.default !== undefined) {\n                this.defaultValueChangedEmitter.fire(this.changeFor(key, undefined, this.defaultOverrides.get(key), undefined, property.default!));\n            }\n\n        }\n\n        this.schemaChangedEmitter.fire();\n\n        return Disposable.create(() => {\n            if (this.schemas.delete(schema)) {\n                for (const [key, property] of Object.entries(schema.properties)) {\n                    this.deleteFromJSONSchemas(key, property);\n                    this.properties.delete(key);\n                    const overrides = this.defaultOverrides.get(key);\n\n                    const baseOverride = overrides?.get(NO_OVERRIDE);\n                    if (baseOverride !== undefined) {\n                        this.defaultValueChangedEmitter.fire(this.changeFor(key, undefined, overrides, baseOverride, undefined));\n                    } else if (property.default !== undefined) {\n                        this.defaultValueChangedEmitter.fire(this.changeFor(key, undefined, overrides, property.default, undefined));\n                    }\n                    if (overrides) {\n                        for (const [overrideKey, value] of overrides) {\n                            if (typeof overrideKey === 'string') {\n                                this.defaultValueChangedEmitter.fire(this.changeFor(key, overrideKey, overrides, value[0][1], undefined));\n                            }\n                        }\n                    }\n                }\n\n                this.schemaChangedEmitter.fire();\n            }\n        });\n    }\n\n    isValidInScope(preferenceName: string, scope: PreferenceScope): boolean {\n        const property = this.properties.get(preferenceName);\n\n        if (!property) {\n            return false;\n        }\n\n        // A property is valid in a scope if:\n        // 1. It is included (undefined or true)\n        // 2. Its scope is not defined (valid in all scopes) or its scope includes the given scope\n        return (property.included !== false) &&\n            (property.scope === undefined || property.scope >= scope);\n    }\n\n    getSchemaProperty(key: string): PreferenceDataProperty | undefined {\n        return this.properties.get(key);\n    }\n\n    updateSchemaProperty(key: string, property: PreferenceDataProperty): void {\n        const existing = this.properties.get(key);\n        if (existing) {\n            // Update the property with new values\n            const updatedProperty = { ...existing, ...property };\n            this.properties.set(key, updatedProperty);\n            const hasNoBaseOverrideValue = this.defaultOverrides.get(key)?.get(NO_OVERRIDE) === undefined;\n            if (hasNoBaseOverrideValue && !PreferenceUtils.deepEqual(property.default, existing.default)) {\n                this.defaultValueChangedEmitter.fire(this.changeFor(key, undefined, this.defaultOverrides.get(key), undefined, property.default!));\n            }\n\n            this.setJSONSchemasProperty(key, updatedProperty);\n            this.schemaChangedEmitter.fire();\n        } else {\n            console.warn(`Trying to update non-existent property ${key}`);\n        }\n    }\n\n    registerOverride(key: string, overrideIdentifier: string | undefined, value: JSONValue): Disposable {\n        const overrideId = overrideIdentifier || NO_OVERRIDE;\n        const property = this.properties.get(key);\n        if (!property) {\n            console.warn(`Trying to register default override for non-existent preference: ${key}`);\n        } else if (!property.overridable && overrideIdentifier) {\n            console.warn(`Trying to register default override for identifier ${overrideIdentifier} for non-overridable preference: ${key}`);\n        }\n\n        let overrides = this.defaultOverrides.get(key);\n        if (!overrides) {\n            overrides = new Map();\n            this.defaultOverrides.set(key, overrides);\n        }\n\n        const oldValue = this.getDefaultValue(key, overrideIdentifier);\n\n        const overrideValueId = this.nextOverrideValueId;\n        let override = overrides.get(overrideId);\n        if (!override) {\n            override = [];\n            overrides.set(overrideId, override);\n        }\n        override.unshift([overrideValueId, value]);\n\n        // Fire event only if the value actually changed\n        if (!PreferenceUtils.deepEqual(oldValue, value)) {\n            const evt = this.changeFor(key, overrideIdentifier, overrides, oldValue, value);\n            this.defaultValueChangedEmitter.fire(evt);\n        }\n\n        if (property) {\n            this.setJSONSchemasProperty(key, property);\n        }\n\n        return Disposable.create(() => {\n            this.removeOverride(key, overrideIdentifier, overrideValueId);\n        });\n    }\n\n    protected changeFor(key: string, overrideIdentifier: string | undefined,\n        overrides: Map<string | object, [number, JSONValue][]> | undefined, oldValue: JSONValue | undefined, newValue: JSONValue | undefined): DefaultValueChangedEvent {\n        const affectedOverrides = [];\n        if (!overrideIdentifier) {\n            for (const id of this._overrideIdentifiers) {\n                if (!overrides?.has(id)) {\n                    affectedOverrides.push(id);\n                }\n            }\n        }\n        return {\n            key,\n            overrideIdentifier: overrideIdentifier,\n            otherAffectedOverrides: affectedOverrides,\n            oldValue,\n            newValue\n        };\n    }\n\n    protected removeOverride(key: string, overrideIdentifier: string | undefined, overrideValueId: number): void {\n        const overrideId = overrideIdentifier || NO_OVERRIDE;\n        const overrides = this.defaultOverrides.get(key);\n        if (overrides) {\n            const values = overrides.get(overrideId);\n            if (values) {\n                const index = values.findIndex(v => v[0] === overrideValueId);\n                if (index) {\n                    const oldValue = this.getDefaultValue(key, overrideIdentifier);\n                    values.splice(index, 1);\n                    const newValue = this.getDefaultValue(key, overrideIdentifier);\n                    if (!PreferenceUtils.deepEqual(oldValue, newValue)) {\n\n                        const affectedOverrides = [];\n                        if (!overrideIdentifier) {\n                            for (const id of this._overrideIdentifiers) {\n                                if (!overrides.has(id)) {\n                                    affectedOverrides.push(id);\n                                }\n                            }\n                        }\n\n                        this.defaultValueChangedEmitter.fire({\n                            key,\n                            overrideIdentifier,\n                            otherAffectedOverrides: affectedOverrides,\n                            oldValue,\n                            newValue\n                        });\n                    }\n                }\n                if (values.length === 0) {\n                    overrides.delete(overrideId);\n                }\n            }\n            if (overrides.size === 0) {\n                this.defaultOverrides.delete(key);\n            }\n        }\n    }\n\n    getDefaultValue(key: string, overrideIdentifier: string | undefined): JSONValue | undefined {\n        const overrideId = overrideIdentifier || NO_OVERRIDE;\n        const overrides = this.defaultOverrides.get(key);\n        if (overrides) {\n            const values = overrides.get(overrideId);\n            if (values) {\n                return values[0][1]; // there will be no empty values arrays in the data structure\n            }\n        }\n\n        const property = this.properties.get(key);\n        return property?.default;\n    }\n\n    inspectDefaultValue(key: string, overrideIdentifier: string | undefined): JSONValue | undefined {\n        const overrideId = overrideIdentifier || NO_OVERRIDE;\n        const overrides = this.defaultOverrides.get(key);\n        if (overrides) {\n            const values = overrides.get(overrideId);\n            if (values) {\n                return values[0][1]; // there will be no empty values arrays in the data structure\n            }\n        }\n\n        if (!overrideIdentifier) {\n            const property = this.properties.get(key);\n            return property?.default;\n        }\n        return undefined;\n    }\n\n    getJSONSchema(scope: PreferenceScope): IJSONSchema {\n        return this.jsonSchemas[scope];\n    }\n\n    private setJSONSchemasProperty(key: string, property: PreferenceDataProperty): void {\n        for (const scope of this.validScopes) {\n            if (this.isValidInScope(key, scope)) {\n                this.setJSONSchemaProperty(this.jsonSchemas[scope], key, property);\n            }\n        }\n    }\n    private deleteFromJSONSchemas(key: string, property: PreferenceDataProperty): void {\n        for (const scope of this.validScopes) {\n            if (this.isValidInScope(key, scope)) {\n                const schema = this.jsonSchemas[scope];\n                for (const name of Object.keys(schema.properties!)) {\n                    if (name.match(OVERRIDE_PROPERTY)) {\n                        const value = schema.properties![name] as IJSONSchema;\n                        delete value.properties![key];\n                    } else {\n                        delete schema.properties![key];\n                    }\n                }\n            }\n        }\n    }\n\n    private setJSONSchemaProperty(schema: IJSONSchema, key: string, property: PreferenceDataProperty): void {\n        // Add property to the schema\n        const prop = { ...property, default: this.getDefaultValue(key, undefined) };\n        schema.properties![key] = prop;\n        delete prop['scope'];\n        delete prop['overridable'];\n        if (property.overridable) {\n            for (const overrideIdentifier of this._overrideIdentifiers) {\n                const overrideSchema: IJSONSchema = schema.properties![`[${overrideIdentifier}]`] || {\n                    type: 'object',\n                    properties: {},\n                    patternProperties: {},\n                    additionalProperties: false\n                };\n                schema.properties![`[${overrideIdentifier}]`] = overrideSchema;\n                overrideSchema.properties![key] = { ...property, default: this.getDefaultValue(key, overrideIdentifier) };\n            }\n        }\n    }\n\n    addOverrideToJsonSchema(overrideIdentifier: string): void {\n        for (const scope of this.validScopes) {\n            const schema = this.jsonSchemas[scope];\n            const overrideSchema: IJSONSchema = {\n                type: 'object',\n                properties: {},\n                patternProperties: {},\n                additionalProperties: false\n            };\n            schema.properties![`[${overrideIdentifier}]`] = overrideSchema;\n            for (const [key, property] of this.properties.entries()) {\n                if (property.overridable && this.isValidInScope(key, scope)) {\n                    overrideSchema.properties![key] = { ...property, default: this.getDefaultValue(key, overrideIdentifier) };\n                }\n            }\n        }\n    }\n\n    getDefaultValues(): JSONObject {\n        const result: JSONObject = {};\n\n        for (const [key, property] of this.properties.entries()) {\n            if (this.isValidInScope(key, PreferenceScope.Default)) {\n                if (property.default !== undefined) {\n                    result[key] = property.default;\n                }\n                const overrides = this.defaultOverrides.get(key);\n                if (overrides) {\n                    for (const [overrideId, values] of overrides.entries()) {\n                        if (overrideId === NO_OVERRIDE) {\n                            result[key] = values[0][1];\n                        } else {\n                            const overrideKey = `[${overrideId}]`;\n                            const target: JSONObject = result[overrideKey] as JSONObject || {};\n                            target[key] = values[0][1];\n                            result[overrideKey] = target;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2023 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n    CellExecuteUpdateDto, NotebookKernelDto, NotebookKernelsExt, NotebookKernelsMain,\n    NotebookKernelSourceActionDto, NotebookOutputDto, PluginModel, PLUGIN_RPC_CONTEXT\n} from '../../common';\nimport { RPCProtocol } from '../../common/rpc-protocol';\nimport { UriComponents } from '../../common/uri-components';\nimport { CancellationTokenSource, Disposable, DisposableCollection, Emitter } from '@theia/core';\nimport { Cell } from './notebook-document';\nimport { NotebooksExtImpl } from './notebooks';\nimport { NotebookCellOutputConverter, NotebookCellOutputItem, NotebookKernelSourceAction } from '../type-converters';\nimport { timeout, Deferred } from '@theia/core/lib/common/promise-util';\nimport { CellExecutionUpdateType, NotebookCellExecutionState } from '@theia/notebook/lib/common';\nimport { CommandRegistryImpl } from '../command-registry';\nimport { NotebookCellOutput, NotebookRendererScript, URI } from '../types-impl';\nimport { toUriComponents } from '../../main/browser/hierarchy/hierarchy-types-converters';\nimport type * as theia from '@theia/plugin';\nimport { WebviewsExtImpl } from '../webviews';\nimport { WorkspaceExtImpl } from '../workspace';\nimport { PluginLogger } from '../logger';\n\ninterface KernelData {\n    extensionId: string;\n    controller: theia.NotebookController;\n    onDidChangeSelection: Emitter<{ selected: boolean; notebook: theia.NotebookDocument }>;\n    onDidReceiveMessage: Emitter<{ editor: theia.NotebookEditor; message: unknown }>;\n    associatedNotebooks: Map<string, boolean>;\n}\n\nexport class NotebookKernelsExtImpl implements NotebookKernelsExt {\n\n    private readonly activeExecutions = new Map<string, NotebookCellExecutionTask>();\n\n    private readonly kernelData = new Map<number, KernelData>();\n\n    private readonly proxy: NotebookKernelsMain;\n\n    private readonly logger: PluginLogger;\n\n    private kernelDetectionTasks = new Map<number, theia.NotebookControllerDetectionTask>();\n    private currentKernelDetectionTaskHandle = 0;\n\n    private kernelSourceActionProviders = new Map<number, theia.NotebookKernelSourceActionProvider>();\n    private currentSourceActionProviderHandle = 0;\n\n    private readonly onDidChangeCellExecutionStateEmitter = new Emitter<theia.NotebookCellExecutionStateChangeEvent>();\n    readonly onDidChangeNotebookCellExecutionState = this.onDidChangeCellExecutionStateEmitter.event;\n\n    constructor(\n        rpc: RPCProtocol,\n        private readonly notebooks: NotebooksExtImpl,\n        private readonly commands: CommandRegistryImpl,\n        private readonly webviews: WebviewsExtImpl,\n        workspace: WorkspaceExtImpl\n    ) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.NOTEBOOK_KERNELS_MAIN);\n        this.logger = new PluginLogger(rpc, 'notebook');\n\n        // call onDidChangeSelection for all kernels after trust is granted to inform extensions they can set the kernel as assoiciated\n        // the jupyter extension for example does not set kernel association after trust is granted\n        workspace.onDidGrantWorkspaceTrust(() => {\n            this.kernelData.forEach(kernel => {\n                kernel.associatedNotebooks.forEach(async (_, uri) => {\n                    const notebook = await this.notebooks.waitForNotebookDocument(URI.parse(uri));\n                    kernel.onDidChangeSelection.fire({ selected: true, notebook: notebook.apiNotebook });\n                });\n            });\n        });\n    }\n\n    private currentHandle = 0;\n\n    createNotebookController(extension: PluginModel, id: string, viewType: string, label: string, handler?: (cells: theia.NotebookCell[],\n        notebook: theia.NotebookDocument, controller: theia.NotebookController) => void | Thenable<void>, rendererScripts?: NotebookRendererScript[]): theia.NotebookController {\n\n        for (const kernelData of this.kernelData.values()) {\n            if (kernelData.controller.id === id && extension.id === kernelData.extensionId) {\n                throw new Error(`notebook controller with id '${id}' ALREADY exist`);\n            }\n        }\n\n        const handle = this.currentHandle++;\n        const that = this;\n\n        this.logger.debug(`NotebookController[${handle}], CREATED by ${extension.id}, ${id}`);\n\n        const defaultExecuteHandler = () => this.logger.warn(`NO execute handler from notebook controller '${data.id}' of extension: '${extension.id}'`);\n\n        let isDisposed = false;\n        const commandDisposables = new DisposableCollection();\n\n        const onDidChangeSelection = new Emitter<{ selected: boolean; notebook: theia.NotebookDocument }>();\n        const onDidReceiveMessage = new Emitter<{ editor: theia.NotebookEditor; message: unknown }>();\n\n        const data: NotebookKernelDto = {\n            id: createKernelId(extension.id, id),\n            notebookType: viewType,\n            extensionId: extension.id,\n            extensionLocation: toUriComponents(extension.packageUri),\n            label: label || extension.id,\n            preloads: rendererScripts?.map(preload => ({ uri: toUriComponents(preload.uri.toString()), provides: preload.provides })) ?? []\n        };\n\n        //\n        let executeHandler = handler ?? defaultExecuteHandler;\n        let interruptHandler: ((this: theia.NotebookController, notebook: theia.NotebookDocument) => void | Thenable<void>) | undefined;\n\n        this.proxy.$addKernel(handle, data).catch(err => {\n            // this can happen when a kernel with that ID is already registered\n            this.logger.info(err);\n            isDisposed = true;\n        });\n\n        // update: all setters write directly into the dto object\n        // and trigger an update. the actual update will only happen\n        // once per event loop execution\n        let tokenPool = 0;\n        const update = () => {\n            if (isDisposed) {\n                return;\n            }\n            const myToken = ++tokenPool;\n            Promise.resolve().then(() => {\n                if (myToken === tokenPool) {\n                    this.proxy.$updateKernel(handle, data);\n                }\n            });\n        };\n\n        // notebook documents that are associated to this controller\n        const associatedNotebooks = new Map<string, boolean>();\n\n        const controller: theia.NotebookController = {\n            get id(): string { return id; },\n            get notebookType(): string { return data.notebookType; },\n            onDidChangeSelectedNotebooks: onDidChangeSelection.event,\n            get label(): string {\n                return data.label;\n            },\n            set label(value) {\n                data.label = value ?? extension.id;\n                update();\n            },\n            get detail(): string {\n                return data.detail ?? '';\n            },\n            set detail(value) {\n                data.detail = value;\n                update();\n            },\n            get description(): string {\n                return data.description ?? '';\n            },\n            set description(value) {\n                data.description = value;\n                update();\n            },\n            get supportedLanguages(): string[] | undefined {\n                return data.supportedLanguages;\n            },\n            set supportedLanguages(value) {\n                data.supportedLanguages = value;\n                update();\n            },\n            get supportsExecutionOrder(): boolean {\n                return data.supportsExecutionOrder ?? false;\n            },\n            set supportsExecutionOrder(value) {\n                data.supportsExecutionOrder = value;\n                update();\n            },\n            get rendererScripts(): NotebookRendererScript[] {\n                return data.preloads?.map(preload => (new NotebookRendererScript(URI.from(preload.uri), preload.provides))) ?? [];\n            },\n            get executeHandler(): (cells: theia.NotebookCell[], notebook: theia.NotebookDocument, controller: theia.NotebookController) => void | Thenable<void> {\n                return executeHandler;\n            },\n            set executeHandler(value) {\n                executeHandler = value ?? defaultExecuteHandler;\n            },\n            get interruptHandler(): ((this: theia.NotebookController, notebook: theia.NotebookDocument) => void | Thenable<void>) | undefined {\n                return interruptHandler;\n            },\n            set interruptHandler(value) {\n                interruptHandler = value;\n                data.supportsInterrupt = Boolean(value);\n                update();\n            },\n            createNotebookCellExecution(cell): theia.NotebookCellExecution {\n                if (isDisposed) {\n                    throw new Error('notebook controller is DISPOSED');\n                }\n                if (!associatedNotebooks.has(cell.notebook.uri.toString())) {\n                    that.logger.debug(`NotebookController[${handle}] NOT associated to notebook, associated to THESE notebooks:`,\n                        Array.from(associatedNotebooks.keys()).map(u => u.toString()));\n                    throw new Error(`notebook controller is NOT associated to notebook: ${cell.notebook.uri.toString()}`);\n                }\n                return that.createNotebookCellExecution(cell, createKernelId(extension.id, this.id));\n            },\n            dispose: () => {\n                if (!isDisposed) {\n                    that.logger.debug(`NotebookController[${handle}] DISPOSED`);\n                    isDisposed = true;\n                    this.kernelData.delete(handle);\n                    commandDisposables.dispose();\n                    onDidChangeSelection.dispose();\n                    onDidReceiveMessage.dispose();\n                    this.proxy.$removeKernel(handle);\n                }\n            },\n            updateNotebookAffinity(notebook, priority): void {\n                that.proxy.$updateNotebookPriority(handle, notebook.uri, priority);\n            },\n            onDidReceiveMessage: onDidReceiveMessage.event,\n            async postMessage(message: unknown, editor?: theia.NotebookEditor): Promise<boolean> {\n                return that.proxy.$postMessage(handle, 'notebook:' + editor?.notebook.uri.toString(), message);\n            },\n            asWebviewUri(localResource: theia.Uri): theia.Uri {\n                return that.webviews.toGeneralWebviewResource(extension, localResource);\n            }\n        };\n\n        this.kernelData.set(handle, {\n            extensionId: extension.id,\n            controller,\n            onDidReceiveMessage,\n            onDidChangeSelection,\n            associatedNotebooks\n        });\n        return controller;\n    }\n\n    createNotebookCellExecution(cell: theia.NotebookCell, controllerId: string): theia.NotebookCellExecution {\n        if (cell.index < 0) {\n            throw new Error('CANNOT execute cell that has been REMOVED from notebook');\n        }\n        const notebook = this.notebooks.getNotebookDocument(URI.from(cell.notebook.uri));\n        const cellObj = notebook.getCellFromApiCell(cell);\n        if (!cellObj) {\n            throw new Error('invalid cell');\n        }\n        if (this.activeExecutions.has(cellObj.uri.toString())) {\n            throw new Error(`duplicate execution for ${cellObj.uri}`);\n        }\n        const execution = new NotebookCellExecutionTask(controllerId, cellObj, this.proxy, this.logger);\n        this.activeExecutions.set(cellObj.uri.toString(), execution);\n        const listener = execution.onDidChangeState(() => {\n            if (execution.state === NotebookCellExecutionTaskState.Resolved) {\n                execution.dispose();\n                listener.dispose();\n                this.activeExecutions.delete(cellObj.uri.toString());\n            }\n        });\n        return execution.asApiObject();\n    }\n\n    createNotebookControllerDetectionTask(viewType: string): theia.NotebookControllerDetectionTask {\n        const handle = this.currentKernelDetectionTaskHandle++;\n        const that = this;\n\n        this.proxy.$addKernelDetectionTask(handle, viewType);\n\n        const detectionTask: theia.NotebookControllerDetectionTask = {\n            dispose: () => {\n                this.kernelDetectionTasks.delete(handle);\n                that.proxy.$removeKernelDetectionTask(handle);\n            }\n        };\n\n        this.kernelDetectionTasks.set(handle, detectionTask);\n        return detectionTask;\n    }\n\n    registerKernelSourceActionProvider(viewType: string, provider: theia.NotebookKernelSourceActionProvider): Disposable {\n        const handle = this.currentSourceActionProviderHandle++;\n        const eventHandle = typeof provider.onDidChangeNotebookKernelSourceActions === 'function' ? handle : undefined;\n        const that = this;\n\n        this.kernelSourceActionProviders.set(handle, provider);\n        this.proxy.$addKernelSourceActionProvider(handle, handle, viewType);\n\n        let subscription: theia.Disposable | undefined;\n        if (eventHandle !== undefined) {\n            subscription = provider.onDidChangeNotebookKernelSourceActions!(_ => this.proxy.$emitNotebookKernelSourceActionsChangeEvent(eventHandle));\n        }\n\n        return {\n            dispose: () => {\n                this.kernelSourceActionProviders.delete(handle);\n                that.proxy.$removeKernelSourceActionProvider(handle, handle);\n                subscription?.dispose();\n            }\n        };\n    }\n\n    async $acceptNotebookAssociation(handle: number, uri: UriComponents, selected: boolean): Promise<void> {\n        const obj = this.kernelData.get(handle);\n        if (obj) {\n            // update data structure\n            const notebook = await this.notebooks.waitForNotebookDocument(URI.from(uri));\n            if (selected) {\n                obj.associatedNotebooks.set(notebook.uri.toString(), true);\n            } else {\n                obj.associatedNotebooks.delete(notebook.uri.toString());\n            }\n            this.logger.debug(`NotebookController[${handle}] ASSOCIATE notebook`, notebook.uri.toString(), selected);\n            // send event\n            obj.onDidChangeSelection.fire({\n                selected: selected,\n                notebook: notebook.apiNotebook\n            });\n        }\n\n    }\n\n    async $executeCells(handle: number, uri: UriComponents, handles: number[]): Promise<void> {\n        const obj = this.kernelData.get(handle);\n        if (!obj) {\n            // extension can dispose kernels in the meantime\n            return Promise.resolve();\n        }\n        const document = await this.notebooks.waitForNotebookDocument(URI.from(uri));\n        const cells: theia.NotebookCell[] = [];\n        for (const cellHandle of handles) {\n            const cell = document.getCell(cellHandle);\n            if (cell) {\n                cells.push(cell.apiCell);\n            }\n        }\n\n        try {\n            this.logger.debug(`NotebookController[${handle}] EXECUTE cells`, {\n                notebook: document.uri.toString(),\n                cells: cells.map(e => e.index)\n            });\n            await obj.controller.executeHandler.call(obj.controller, cells, document.apiNotebook, obj.controller);\n        } catch (err) {\n            this.logger.error(`NotebookController[${handle}] EXECUTE cells FAILED`, err);\n        }\n\n    }\n\n    async $cancelCells(handle: number, uri: UriComponents, handles: number[]): Promise<void> {\n        const obj = this.kernelData.get(handle);\n        if (!obj) {\n            // extension can dispose kernels in the meantime\n            return Promise.resolve();\n        }\n\n        // cancel or interrupt depends on the controller. When an interrupt handler is used we\n        // don't trigger the cancelation token of executions.N\n        const document = await this.notebooks.waitForNotebookDocument(URI.from(uri));\n        if (obj.controller.interruptHandler) {\n            await obj.controller.interruptHandler.call(obj.controller, document.apiNotebook);\n\n        } else {\n            for (const cellHandle of handles) {\n                const cell = document.getCell(cellHandle);\n                if (cell) {\n                    this.activeExecutions.get(cell.uri.toString())?.cancel();\n                }\n            }\n        }\n    }\n\n    $acceptKernelMessageFromRenderer(handle: number, editorId: string, message: unknown): void {\n        const obj = this.kernelData.get(handle);\n        if (!obj) {\n            // extension can dispose kernels in the meantime\n            return;\n        }\n\n        const editor = this.notebooks.getEditorById(editorId);\n        obj.onDidReceiveMessage.fire(Object.freeze({ editor: editor.apiEditor, message }));\n    }\n\n    $cellExecutionChanged(uri: UriComponents, cellHandle: number, state: NotebookCellExecutionState | undefined): void {\n        // Proposed Api though seems needed by jupyter for telemetry\n    }\n\n    async $provideKernelSourceActions(handle: number, token: theia.CancellationToken): Promise<NotebookKernelSourceActionDto[]> {\n        const provider = this.kernelSourceActionProviders.get(handle);\n        if (provider) {\n            const disposables = new DisposableCollection();\n            const ret = await provider.provideNotebookKernelSourceActions(token);\n            return (ret ?? []).map(item => NotebookKernelSourceAction.from(item, this.commands.converter, disposables));\n        }\n        return [];\n\n    }\n\n}\n\nenum NotebookCellExecutionTaskState {\n    Init,\n    Started,\n    Resolved\n}\n\nclass NotebookCellExecutionTask implements Disposable {\n    private static HANDLE = 0;\n    private _handle = NotebookCellExecutionTask.HANDLE++;\n\n    private _onDidChangeState = new Emitter<void>();\n    readonly onDidChangeState = this._onDidChangeState.event;\n\n    private _state = NotebookCellExecutionTaskState.Init;\n    get state(): NotebookCellExecutionTaskState { return this._state; }\n\n    private readonly tokenSource = new CancellationTokenSource();\n\n    private readonly collector: TimeoutBasedCollector<CellExecuteUpdateDto>;\n\n    private executionOrder: number | undefined;\n\n    constructor(\n        controllerId: string,\n        private readonly cell: Cell,\n        private readonly proxy: NotebookKernelsMain,\n        private readonly logger: PluginLogger\n    ) {\n        this.collector = new TimeoutBasedCollector(10, updates => this.update(updates));\n\n        this.executionOrder = cell.internalMetadata.executionOrder;\n        this.proxy.$createExecution(this._handle, controllerId, this.cell.notebookDocument.uri, this.cell.handle);\n        this.logger.debug(`NotebookCellExecutionTask[${this._handle}] CREATED`, { controllerId, cell: this.cell.uri.toString() });\n    }\n\n    cancel(): void {\n        this.tokenSource.cancel();\n    }\n\n    private async updateSoon(update: CellExecuteUpdateDto): Promise<void> {\n        await this.collector.addItem(update);\n    }\n\n    private async update(update: CellExecuteUpdateDto | CellExecuteUpdateDto[]): Promise<void> {\n        const updates = Array.isArray(update) ? update : [update];\n        return this.proxy.$updateExecution(this._handle, updates);\n    }\n\n    private verifyStateForOutput(): void {\n        if (this._state === NotebookCellExecutionTaskState.Init) {\n            throw new Error('Must call start before modifying cell output');\n        }\n\n        if (this._state === NotebookCellExecutionTaskState.Resolved) {\n            throw new Error('Cannot modify cell output after calling resolve');\n        }\n    }\n\n    private cellIndexToHandle(cellOrCellIndex: theia.NotebookCell | undefined): number {\n        let cell: Cell | undefined = this.cell;\n        if (cellOrCellIndex) {\n            cell = this.cell.notebookDocument.getCellFromApiCell(cellOrCellIndex);\n        }\n        if (!cell) {\n            throw new Error('INVALID cell');\n        }\n        return cell.handle;\n    }\n\n    private validateAndConvertOutputs(items: NotebookCellOutput[]): NotebookOutputDto[] {\n        return items.map(output => {\n            const newOutput = NotebookCellOutputConverter.ensureUniqueMimeTypes(output.items, true);\n            if (newOutput === output.items) {\n                return NotebookCellOutputConverter.from(output);\n            }\n            return NotebookCellOutputConverter.from({\n                items: newOutput,\n                outputId: output.outputId,\n                metadata: output.metadata\n            });\n        });\n    }\n\n    private async updateOutputs(outputs: NotebookCellOutput | NotebookCellOutput[], cell: theia.NotebookCell | undefined, append: boolean): Promise<void> {\n        const handle = this.cellIndexToHandle(cell);\n        const outputDtos = this.validateAndConvertOutputs(Array.isArray(outputs) ? outputs : [outputs]);\n        this.logger.debug(`NotebookCellExecutionTask[${this._handle}] received new outputs from plugin`, { append, outputs: outputDtos });\n        return this.updateSoon(\n            {\n                editType: CellExecutionUpdateType.Output,\n                cellHandle: handle,\n                append,\n                outputs: outputDtos\n            }\n        );\n    }\n\n    private async updateOutputItems(items: theia.NotebookCellOutputItem | theia.NotebookCellOutputItem[],\n        output: theia.NotebookCellOutput, append: boolean): Promise<void> {\n        items = NotebookCellOutputConverter.ensureUniqueMimeTypes(Array.isArray(items) ? items : [items], true);\n        this.logger.debug(`NotebookCellExecutionTask[${this._handle}] received new outputs from plugin`, { append, items });\n        return this.updateSoon({\n            editType: CellExecutionUpdateType.OutputItems,\n            items: items.map(NotebookCellOutputItem.from),\n            outputId: output instanceof NotebookCellOutput ? output.outputId : '',\n            append\n        });\n    }\n\n    asApiObject(): theia.NotebookCellExecution {\n        const that = this;\n        const result: theia.NotebookCellExecution = {\n            get token(): theia.CancellationToken { return that.tokenSource.token; },\n            get cell(): theia.NotebookCell { return that.cell.apiCell; },\n            get executionOrder(): number | undefined { return that.executionOrder; },\n            set executionOrder(v: number | undefined) {\n                that.executionOrder = v;\n                that.update([{\n                    editType: CellExecutionUpdateType.ExecutionState,\n                    executionOrder: that.executionOrder\n                }]);\n            },\n\n            start(startTime?: number): void {\n                if (that._state === NotebookCellExecutionTaskState.Resolved || that._state === NotebookCellExecutionTaskState.Started) {\n                    throw new Error('Cannot call start again');\n                }\n\n                that._state = NotebookCellExecutionTaskState.Started;\n                that._onDidChangeState.fire();\n\n                that.update({\n                    editType: CellExecutionUpdateType.ExecutionState,\n                    runStartTime: startTime\n                });\n            },\n\n            end(success: boolean | undefined, endTime?: number): void {\n                if (that._state === NotebookCellExecutionTaskState.Resolved) {\n                    throw new Error('Cannot call resolve twice');\n                }\n\n                that._state = NotebookCellExecutionTaskState.Resolved;\n                that._onDidChangeState.fire();\n\n                // The last update needs to be ordered correctly and applied immediately,\n                // so we use updateSoon and immediately flush.\n                that.collector.flush();\n\n                that.proxy.$completeExecution(that._handle, {\n                    runEndTime: endTime,\n                    lastRunSuccess: success\n                });\n            },\n\n            clearOutput(cell?: theia.NotebookCell): Thenable<void> {\n                that.verifyStateForOutput();\n                return that.updateOutputs([], cell, false);\n            },\n\n            appendOutput(outputs: NotebookCellOutput | NotebookCellOutput[], cell?: theia.NotebookCell): Promise<void> {\n                that.verifyStateForOutput();\n                return that.updateOutputs(outputs, cell, true);\n            },\n\n            replaceOutput(outputs: NotebookCellOutput | NotebookCellOutput[], cell?: theia.NotebookCell): Promise<void> {\n                that.verifyStateForOutput();\n                return that.updateOutputs(outputs, cell, false);\n            },\n\n            appendOutputItems(items: theia.NotebookCellOutputItem | theia.NotebookCellOutputItem[], output: theia.NotebookCellOutput): Promise<void> {\n                that.verifyStateForOutput();\n                return that.updateOutputItems(items, output, true);\n            },\n\n            replaceOutputItems(items: theia.NotebookCellOutputItem | theia.NotebookCellOutputItem[], output: theia.NotebookCellOutput): Promise<void> {\n                that.verifyStateForOutput();\n                return that.updateOutputItems(items, output, false);\n            }\n        };\n        return Object.freeze(result);\n    }\n\n    dispose(): void {\n\n    }\n}\n\nclass TimeoutBasedCollector<T> {\n    private batch: T[] = [];\n    private startedTimer = Date.now();\n    private currentDeferred: Deferred<void> | undefined;\n\n    constructor(\n        private readonly delay: number,\n        private readonly callback: (items: T[]) => Promise<void>) { }\n\n    addItem(item: T): Promise<void> {\n        this.batch.push(item);\n        if (!this.currentDeferred) {\n            this.currentDeferred = new Deferred<void>();\n            this.startedTimer = Date.now();\n            timeout(this.delay).then(() => this.flush());\n        }\n\n        // This can be called by the extension repeatedly for a long time before the timeout is able to run.\n        // Force a flush after the delay.\n        if (Date.now() - this.startedTimer > this.delay) {\n            return this.flush();\n        }\n\n        return this.currentDeferred.promise;\n    }\n\n    flush(): Promise<void> {\n        if (this.batch.length === 0 || !this.currentDeferred) {\n            return Promise.resolve();\n        }\n\n        const deferred = this.currentDeferred;\n        this.currentDeferred = undefined;\n        const batch = this.batch;\n        this.batch = [];\n        return this.callback(batch)\n            .finally(() => deferred.resolve());\n    }\n}\n\nexport function createKernelId(extensionIdentifier: string, id: string): string {\n    return `${extensionIdentifier}/${id}`;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { isObject, isUndefined, isUndefinedOrNull } from './types';\n\nexport function deepClone<T>(obj: T): T {\n    if (!isObject(obj)) {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result: any = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key: string) => {\n        const prop = obj[key];\n        if (isObject(prop)) {\n            result[key] = deepClone(prop);\n        } else {\n            result[key] = prop;\n        }\n    });\n    return result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n    if (!isObject(obj)) {\n        return obj;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const stack: any[] = [obj];\n    while (stack.length > 0) {\n        const objectToFreeze = stack.shift();\n        Object.freeze(objectToFreeze);\n        for (const key in objectToFreeze) {\n            if (_hasOwnProperty.call(objectToFreeze, key)) {\n                const prop = objectToFreeze[key];\n                if (isObject(prop) && !Object.isFrozen(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function notEmpty<T>(arg: T | undefined | null): arg is T {\n    // eslint-disable-next-line no-null/no-null\n    return arg !== undefined && arg !== null;\n}\n\n/**\n * `true` if the argument is an empty object. Otherwise, `false`.\n */\nexport function isEmpty(arg: Object): boolean {\n    return Object.keys(arg).length === 0 && arg.constructor === Object;\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Copied from https://github.com/microsoft/vscode/blob/1.72.2/src/vs/base/common/objects.ts\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n    return _cloneAndChange(obj, changer, new Set());\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n\n    const changed = changer(obj);\n    if (!isUndefined(changed)) {\n        return changed;\n    }\n\n    if (Array.isArray(obj)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const r1: any[] = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n\n    return obj;\n}\n","// *****************************************************************************\n// Copyright (C) 2023 Mathieu Bussieres and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport type * as theia from '@theia/plugin';\n\nimport { TreeCollection, observableProperty } from '@theia/test/lib/common/collections';\nimport { TreeDeltaBuilder } from '@theia/test/lib/common/tree-delta';\nimport { TestControllerImpl } from './tests';\n\nexport class TestTagImpl {\n    constructor(readonly id: string) { }\n}\n\nexport class TestItemImpl implements theia.TestItem {\n    constructor(readonly id: string, readonly uri: theia.Uri | undefined, label: string) {\n        this.label = label;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected notifyPropertyChange(property: keyof TestItemImpl, value: any): void {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const val: any = {};\n        val[property] = value;\n        if (this.path) {\n            this.deltaBuilder?.reportChanged(this.path, val);\n        }\n    }\n\n    _deltaBuilder: TreeDeltaBuilder<string, TestItemImpl> | undefined;\n    get deltaBuilder(): TreeDeltaBuilder<string, TestItemImpl> | undefined {\n        if (this._deltaBuilder) {\n            return this._deltaBuilder;\n        } else if (this.parent) {\n            this._deltaBuilder = this.parent._deltaBuilder;\n            return this._deltaBuilder;\n        } else {\n            return undefined;\n        }\n    }\n\n    _path: string[] | undefined;\n\n    get path(): string[] {\n        if (this._path) {\n            return this._path;\n        } else if (this.parent && this.parent.path) {\n            this._path = [...this.parent.path, this.id];\n            return this._path;\n        } else {\n            return [this.id];\n        }\n    };\n\n    private _parent?: TestItemImpl | TestControllerImpl;\n    get realParent(): TestItemImpl | TestControllerImpl | undefined {\n        return this._parent;\n    }\n\n    set realParent(v: TestItemImpl | TestControllerImpl | undefined) {\n        this.iterate(item => {\n            item._path = undefined;\n            return true;\n        });\n        this._parent = v;\n    }\n\n    get parent(): TestItemImpl | undefined {\n        const p = this.realParent;\n        if (p instanceof TestControllerImpl) {\n            return undefined;\n        }\n        return p;\n    }\n\n    protected iterate(toDo: (v: TestItemImpl) => boolean): boolean {\n        if (toDo(this)) {\n            for (const tuple of this.children) {\n                const child: TestItemImpl = tuple[1] as TestItemImpl;\n                if (!child.iterate(toDo)) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n    children: TestItemCollection = new TestItemCollection(this, (v: TestItemImpl) => v.path, (v: TestItemImpl) => v.deltaBuilder);\n    @observableProperty('notifyPropertyChange')\n    tags: readonly theia.TestTag[] = [];\n\n    @observableProperty('notifyPropertyChange')\n    canResolveChildren: boolean = false;\n    @observableProperty('notifyPropertyChange')\n    busy: boolean = false;\n    @observableProperty('notifyPropertyChange')\n    label: string = '';\n    @observableProperty('notifyPropertyChange')\n    description?: string | undefined;\n    @observableProperty('notifyPropertyChange')\n    sortText?: string | undefined;\n    @observableProperty('notifyPropertyChange')\n    range: theia.Range | undefined;\n    @observableProperty('notifyPropertyChange')\n    error: string | theia.MarkdownString | undefined;\n}\n\nexport class TestItemCollection implements theia.TestItemCollection {\n\n    constructor(private owner: TestItemImpl | TestControllerImpl,\n        protected readonly pathOf: (v: TestItemImpl) => string[],\n        protected readonly deltaBuilder: (v: TestItemImpl | TestControllerImpl | undefined) => TreeDeltaBuilder<string, TestItemImpl> | undefined) {\n        this.values = new TreeCollection<string, TestItemImpl, TestItemImpl | TestControllerImpl>(owner, pathOf, deltaBuilder);\n    }\n\n    private readonly values: TreeCollection<string, TestItemImpl, TestItemImpl | TestControllerImpl>;\n\n    get size(): number {\n        return this.values.size;\n    }\n    replace(items: readonly theia.TestItem[]): void {\n        const toRemove = this.values.values.map(item => item.id);\n        items.forEach(item => this.add(item));\n        toRemove.forEach(key => this.delete(key));\n    }\n\n    forEach(callback: (item: theia.TestItem, collection: theia.TestItemCollection) => unknown, thisArg?: unknown): void {\n        this.values.values.forEach(item => callback(item, this), thisArg);\n    }\n    add(item: theia.TestItem): void {\n        if (!(item instanceof TestItemImpl)) {\n            throw new Error('Not an instance of TestItem');\n        }\n        item.realParent = this.owner;\n        item._deltaBuilder = this.deltaBuilder(this.owner);\n        this.values.add(item);\n    }\n    delete(itemId: string): void {\n        this.values.remove(itemId);\n    }\n    get(itemId: string): theia.TestItem | undefined {\n        return this.values.get(itemId);\n    }\n\n    [Symbol.iterator](): Iterator<[id: string, testItem: theia.TestItem], unknown, undefined> {\n        return this.values.entries();\n    }\n\n    find(path: string[]): theia.TestItem | undefined {\n        let currentCollection: theia.TestItemCollection = this;\n        let item;\n        for (let i = 0; i < path.length; i++) {\n            item = currentCollection.get(path[i]);\n            if (!item) {\n                return undefined;\n            }\n            currentCollection = item.children;\n        }\n        return item;\n    }\n}\n","/* eslint-disable */\n// copied from https://github.com/microsoft/vscode/blob/1.37.0/src/vs/base/common/objects.ts\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n\nimport { isUndefinedOrNull, isArray, isObject } from './types';\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n    return _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n\n    if (isArray(obj)) {\n        const r1: any[] = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (let i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                (r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n\n    return obj;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiagnosticSeverity } from 'vscode-languageserver-protocol';\nimport { nls } from './nls';\n\nexport enum Severity {\n    Ignore = 0,\n    Error = 1,\n    Warning = 2,\n    Info = 3,\n    Log = 4\n}\n\nconst error = 'Errors';\nconst warning = 'Warnings';\nconst info = 'Info';\nconst log = 'Log';\nconst ignore = 'All';\n\nexport namespace Severity {\n    export function fromValue(value: string | undefined): Severity {\n        value = value && value.toLowerCase();\n\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (['error', 'errors'].indexOf(value) !== -1) {\n            return Severity.Error;\n        }\n        if (['warn', 'warning', 'warnings'].indexOf(value) !== -1) {\n            return Severity.Warning;\n        }\n        if (value === 'info') {\n            return Severity.Info;\n        }\n        if (value === 'log') {\n            return Severity.Log;\n        }\n\n        return Severity.Ignore;\n    }\n\n    export function toDiagnosticSeverity(value: Severity): DiagnosticSeverity {\n        switch (value) {\n            case Severity.Ignore:\n                return DiagnosticSeverity.Hint;\n            case Severity.Info:\n                return DiagnosticSeverity.Information;\n            case Severity.Log:\n                return DiagnosticSeverity.Information;\n            case Severity.Warning:\n                return DiagnosticSeverity.Warning;\n            case Severity.Error:\n                return DiagnosticSeverity.Error;\n            default:\n                return DiagnosticSeverity.Error;\n        }\n    }\n\n    export function toString(severity: Severity | undefined): string {\n        switch (severity) {\n            case Severity.Error:\n                return error;\n            case Severity.Warning:\n                return warning;\n            case Severity.Info:\n                return info;\n            case Severity.Log:\n                return log;\n            default:\n                return ignore;\n        }\n    }\n\n    export function toLocaleString(severity: string | Severity): string {\n        if (severity === Severity.Error || severity === error) {\n            return nls.localize('theia/core/severity/errors', 'Errors');\n        } else if (severity === Severity.Warning || severity === warning) {\n            return nls.localize('theia/core/severity/warnings', 'Warnings');\n        } else if (severity === Severity.Info || severity === info) {\n            return nls.localizeByDefault('Info');\n        } else if (severity === Severity.Log || severity === log) {\n            return nls.localize('theia/core/severity/log', 'Log');\n        } else {\n            return nls.localizeByDefault('All');\n        }\n    }\n\n    export function toArray(): string[] {\n        return [ignore, error, warning, info, log];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2021 SAP SE or an SAP affiliate company and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\n// some of the code is copied and modified from https://github.com/microsoft/vscode/blob/e1f0f8f51390dea5df9096718fb6b647ed5a9534/src/vs/workbench/api/common/extHostWebviewView.ts\n\nimport { Disposable } from './types-impl';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { PLUGIN_RPC_CONTEXT, WebviewViewsMain, WebviewViewsExt, Plugin } from '../common/plugin-api-rpc';\nimport { CancellationToken } from '@theia/core/lib/common/cancellation';\nimport { WebviewImpl, WebviewsExtImpl } from './webviews';\nimport { WebviewViewProvider } from '@theia/plugin';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport * as theia from '@theia/plugin';\nimport { hashValue } from '@theia/core/lib/common/uuid';\n\nexport class WebviewViewsExtImpl implements WebviewViewsExt {\n\n    private readonly proxy: WebviewViewsMain;\n\n    protected readonly viewProviders = new Map<string, {\n        readonly provider: WebviewViewProvider;\n        readonly plugin: Plugin;\n    }>();\n    protected readonly webviewViews = new Map<string, WebviewViewExtImpl>();\n\n    constructor(rpc: RPCProtocol,\n        private readonly webviewsExt: WebviewsExtImpl) {\n        this.proxy = rpc.getProxy(PLUGIN_RPC_CONTEXT.WEBVIEW_VIEWS_MAIN);\n    }\n\n    registerWebviewViewProvider(\n        viewType: string,\n        provider: WebviewViewProvider,\n        plugin: Plugin,\n        webviewOptions?: {\n            retainContextWhenHidden?: boolean\n        }\n    ): Disposable {\n        if (this.viewProviders.has(viewType)) {\n            throw new Error(`View provider for '${viewType}' already registered`);\n        }\n\n        this.viewProviders.set(viewType, { provider: provider, plugin: plugin });\n\n        this.proxy.$registerWebviewViewProvider(viewType, {\n            retainContextWhenHidden: webviewOptions?.retainContextWhenHidden,\n            serializeBuffersForPostMessage: false,\n        });\n\n        return new Disposable(() => {\n            this.viewProviders.delete(viewType);\n            this.proxy.$unregisterWebviewViewProvider(viewType);\n        });\n    }\n\n    async $resolveWebviewView(handle: string,\n        viewType: string,\n        title: string | undefined,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        state: any,\n        cancellation: CancellationToken\n    ): Promise<void> {\n        const entry = this.viewProviders.get(viewType);\n        if (!entry) {\n            throw new Error(`No view provider found for '${viewType}'`);\n        }\n\n        const { provider, plugin } = entry;\n\n        const webviewNoPanel = this.webviewsExt.createNewWebview({}, plugin, handle, hashValue(viewType));\n        const revivedView = new WebviewViewExtImpl(handle, this.proxy, viewType, title, webviewNoPanel, true);\n        this.webviewViews.set(handle, revivedView);\n        await provider.resolveWebviewView(revivedView, { state }, cancellation);\n    }\n\n    async $onDidChangeWebviewViewVisibility(\n        handle: string,\n        visible: boolean\n    ): Promise<void> {\n        const webviewView = this.getWebviewView(handle);\n        webviewView.setVisible(visible);\n        webviewView.onDidChangeVisibilityEmitter.fire();\n    }\n\n    async $disposeWebviewView(handle: string): Promise<void> {\n        const webviewView = this.getWebviewView(handle);\n        this.webviewViews.delete(handle);\n        webviewView.dispose();\n\n        this.webviewsExt.deleteWebview(handle);\n    }\n\n    protected getWebviewView(handle: string): WebviewViewExtImpl {\n        const entry = this.webviewViews.get(handle);\n        if (!entry) {\n            throw new Error('No webview found');\n        }\n\n        return entry;\n    }\n}\n\nexport class WebviewViewExtImpl implements theia.WebviewView {\n\n    readonly onDidChangeVisibilityEmitter = new Emitter<void>();\n    readonly onDidChangeVisibility = this.onDidChangeVisibilityEmitter.event;\n\n    readonly onDidDisposeEmitter = new Emitter<void>();\n    readonly onDidDispose = this.onDidDisposeEmitter.event;\n\n    readonly handle: string;\n    readonly proxy: WebviewViewsMain;\n\n    readonly _viewType: string;\n    readonly _webview: WebviewImpl;\n\n    _isDisposed = false;\n    _isVisible: boolean;\n    _title: string | undefined;\n    _description: string | undefined;\n    _badge: theia.ViewBadge | undefined;\n\n    constructor(\n        handle: string,\n        proxy: WebviewViewsMain,\n        viewType: string,\n        title: string | undefined,\n        webview: WebviewImpl,\n        isVisible: boolean\n    ) {\n        this._viewType = viewType;\n        this._title = title;\n        this.handle = handle;\n        this.proxy = proxy;\n        this._webview = webview;\n        this._isVisible = isVisible;\n    }\n    onDispose: Event<void>;\n\n    dispose(): void {\n        if (this._isDisposed) {\n            return;\n        }\n\n        this._isDisposed = true;\n        this.onDidDisposeEmitter.fire();\n    }\n\n    get title(): string | undefined {\n        this.assertNotDisposed();\n        return this._title;\n    }\n\n    set title(value: string | undefined) {\n        this.assertNotDisposed();\n        if (this._title !== value) {\n            this._title = value;\n            this.proxy.$setWebviewViewTitle(this.handle, value);\n        }\n    }\n\n    get description(): string | undefined {\n        this.assertNotDisposed();\n        return this._description;\n    }\n\n    set description(value: string | undefined) {\n        this.assertNotDisposed();\n        if (this._description !== value) {\n            this._description = value;\n            this.proxy.$setWebviewViewDescription(this.handle, value);\n        }\n    }\n\n    get badge(): theia.ViewBadge | undefined {\n        this.assertNotDisposed();\n        return this._badge;\n    }\n\n    set badge(badge: theia.ViewBadge | undefined) {\n        this.assertNotDisposed();\n        if (this._badge !== badge) {\n            this._badge = badge;\n            this.proxy.$setBadge(this.handle, badge ? { value: badge.value, tooltip: badge.tooltip } : undefined);\n        }\n    }\n\n    get visible(): boolean { return this._isVisible; }\n    get webview(): WebviewImpl { return this._webview; }\n    get viewType(): string { return this._viewType; }\n\n    setVisible(visible: boolean): void {\n        if (visible === this._isVisible || this._isDisposed) {\n            return;\n        }\n\n        this._isVisible = visible;\n        this.onDidChangeVisibilityEmitter.fire();\n    }\n\n    show(preserveFocus?: boolean): void {\n        this.assertNotDisposed();\n        this.proxy.$show(this.handle, !!preserveFocus);\n    }\n\n    protected assertNotDisposed(): void {\n        if (this._isDisposed) {\n            throw new Error('Webview is disposed');\n        }\n    }\n}\n\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// copied from https://github.com/Microsoft/vscode/blob/bf7ac9201e7a7d01741d4e6e64b5dc9f3197d97b/src/vs/base/common/paths.ts\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/* eslint-disable no-void */\n/* eslint-disable no-null/no-null */\n'use strict';\nimport { isWindows } from './os';\nimport { startsWithIgnoreCase } from './strings';\nimport { CharCode } from './char-code';\n\n/**\n * The forward slash path separator.\n */\nexport const sep = '/';\n\n/**\n * The native path separator depending on the OS.\n */\nexport const nativeSep = isWindows ? '\\\\' : '/';\n\nconst _posixBadPath = /(\\/\\.\\.?\\/)|(\\/\\.\\.?)$|^(\\.\\.?\\/)|(\\/\\/+)|(\\\\)/;\nconst _winBadPath = /(\\\\\\.\\.?\\\\)|(\\\\\\.\\.?)$|^(\\.\\.?\\\\)|(\\\\\\\\+)|(\\/)/;\n\nfunction _isNormal(path: string, win: boolean): boolean {\n    return win\n        ? !_winBadPath.test(path)\n        : !_posixBadPath.test(path);\n}\n\n/**\n * @returns the base name of a path.\n */\nexport function basename(path: string): string {\n    const idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n    if (idx === 0) {\n        return path;\n    } else if (~idx === path.length - 1) {\n        return basename(path.substring(0, path.length - 1));\n    } else {\n        return path.substring(~idx + 1);\n    }\n}\n\n/**\n * @returns `.far` from `boo.far` or the empty string.\n */\nexport function extname(path: string): string {\n    path = basename(path);\n    const idx = ~path.lastIndexOf('.');\n    return idx ? path.substring(~idx) : '';\n}\n\nexport function normalize(path: string, toOSPath?: boolean): string {\n    if (path === null || path === void 0) {\n        return path;\n    }\n\n    const len = path.length;\n    if (len === 0) {\n        return '.';\n    }\n\n    const wantsBackslash = isWindows && toOSPath;\n    if (_isNormal(path, wantsBackslash!)) {\n        return path;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const sep = wantsBackslash ? '\\\\' : '/';\n    const root = getRoot(path, sep);\n\n    // skip the root-portion of the path\n    let start = root.length;\n    let skip = false;\n    let res = '';\n\n    for (let end = root.length; end <= len; end++) {\n\n        // either at the end or at a path-separator character\n        if (end === len || path.charCodeAt(end) === CharCode.Slash || path.charCodeAt(end) === CharCode.Backslash) {\n\n            if (streql(path, start, end, '..')) {\n                // skip current and remove parent (if there is already something)\n                const prev_start = res.lastIndexOf(sep);\n                const prev_part = res.slice(prev_start + 1);\n                if ((root || prev_part.length > 0) && prev_part !== '..') {\n                    res = prev_start === -1 ? '' : res.slice(0, prev_start);\n                    skip = true;\n                }\n            } else if (streql(path, start, end, '.') && (root || res || end < len - 1)) {\n                // skip current (if there is already something or if there is more to come)\n                skip = true;\n            }\n\n            if (!skip) {\n                const part = path.slice(start, end);\n                if (res !== '' && res[res.length - 1] !== sep) {\n                    res += sep;\n                }\n                res += part;\n            }\n            start = end + 1;\n            skip = false;\n        }\n    }\n\n    return root + res;\n}\nfunction streql(value: string, start: number, end: number, other: string): boolean {\n    return start + other.length === end && value.indexOf(other, start) === start;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\n// eslint-disable-next-line @typescript-eslint/no-shadow\nexport function getRoot(path: string, sep: string = '/'): string {\n\n    if (!path) {\n        return '';\n    }\n\n    const len = path.length;\n    let code = path.charCodeAt(0);\n    if (code === CharCode.Slash || code === CharCode.Backslash) {\n\n        code = path.charCodeAt(1);\n        if (code === CharCode.Slash || code === CharCode.Backslash) {\n            // UNC candidate \\\\localhost\\shares\\ddd\n            //               ^^^^^^^^^^^^^^^^^^^\n            code = path.charCodeAt(2);\n            if (code !== CharCode.Slash && code !== CharCode.Backslash) {\n                // eslint-disable-next-line @typescript-eslint/no-shadow\n                let pos = 3;\n                const start = pos;\n                for (; pos < len; pos++) {\n                    code = path.charCodeAt(pos);\n                    if (code === CharCode.Slash || code === CharCode.Backslash) {\n                        break;\n                    }\n                }\n                code = path.charCodeAt(pos + 1);\n                if (start !== pos && code !== CharCode.Slash && code !== CharCode.Backslash) {\n                    pos += 1;\n                    for (; pos < len; pos++) {\n                        code = path.charCodeAt(pos);\n                        if (code === CharCode.Slash || code === CharCode.Backslash) {\n                            return path.slice(0, pos + 1) // consume this separator\n                                .replace(/[\\\\/]/g, sep);\n                        }\n                    }\n                }\n            }\n        }\n\n        // /user/far\n        // ^\n        return sep;\n\n    } else if ((code >= CharCode.A && code <= CharCode.Z) || (code >= CharCode.a && code <= CharCode.z)) {\n        // check for windows drive letter c:\\ or c:\n\n        if (path.charCodeAt(1) === CharCode.Colon) {\n            code = path.charCodeAt(2);\n            if (code === CharCode.Slash || code === CharCode.Backslash) {\n                // C:\\fff\n                // ^^^\n                return path.slice(0, 2) + sep;\n            } else {\n                // C:\n                // ^^\n                return path.slice(0, 2);\n            }\n        }\n    }\n\n    // check for URI\n    // scheme://authority/path\n    // ^^^^^^^^^^^^^^^^^^^\n    let pos = path.indexOf('://');\n    if (pos !== -1) {\n        pos += 3; // 3 -> \"://\".length\n        for (; pos < len; pos++) {\n            code = path.charCodeAt(pos);\n            if (code === CharCode.Slash || code === CharCode.Backslash) {\n                return path.slice(0, pos + 1); // consume this separator\n            }\n        }\n    }\n\n    return '';\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n    if (path === candidate) {\n        return true;\n    }\n\n    if (!path || !candidate) {\n        return false;\n    }\n\n    if (candidate.length > path.length) {\n        return false;\n    }\n\n    if (ignoreCase) {\n        const beginsWith = startsWithIgnoreCase(path, candidate);\n        if (!beginsWith) {\n            return false;\n        }\n\n        if (candidate.length === path.length) {\n            return true; // same path, different casing\n        }\n\n        let sepOffset = candidate.length;\n        if (candidate.charAt(candidate.length - 1) === nativeSep) {\n            sepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n        }\n\n        return path.charAt(sepOffset) === nativeSep;\n    }\n\n    if (candidate.charAt(candidate.length - 1) !== nativeSep) {\n        candidate += nativeSep;\n    }\n\n    return path.indexOf(candidate) === 0;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nexport class IdGenerator {\n    private lastId: number;\n    constructor(private prefix: string) {\n        this.lastId = 0;\n    }\n\n    nextId(): string {\n        return this.prefix + (++this.lastId);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport * as theia from '@theia/plugin';\nimport { RPCProtocol } from '../common/rpc-protocol';\nimport { EnvMain, PLUGIN_RPC_CONTEXT } from '../common/plugin-api-rpc';\nimport { QueryParameters } from '../common/env';\nimport { generateUuid } from '@theia/core/lib/common/uuid';\n\n@injectable()\nexport abstract class EnvExtImpl {\n    @inject(RPCProtocol)\n    protected readonly rpc: RPCProtocol;\n\n    private proxy: EnvMain;\n    private queryParameters: QueryParameters;\n    private lang: string;\n    private applicationName: string;\n    private ui: theia.UIKind;\n    private envMachineId: string;\n    private envSessionId: string;\n    private host: string;\n    private applicationRoot: string;\n    private appUriScheme: string;\n    private _remoteName: string | undefined;\n\n    constructor() {\n        this.envSessionId = generateUuid();\n        this.envMachineId = generateUuid();\n        this._remoteName = undefined;\n    }\n\n    @postConstruct()\n    initialize(): void {\n        this.proxy = this.rpc.getProxy(PLUGIN_RPC_CONTEXT.ENV_MAIN);\n    }\n\n    getEnvVariable(envVarName: string): Promise<string | undefined> {\n        return this.proxy.$getEnvVariable(envVarName).then(x => {\n            if (x === null) {\n                return undefined;\n            }\n            return x;\n        });\n    }\n\n    getQueryParameter(queryParamName: string): string | string[] | undefined {\n        return this.queryParameters[queryParamName];\n    }\n\n    getQueryParameters(): QueryParameters {\n        return this.queryParameters;\n    }\n\n    setQueryParameters(queryParams: QueryParameters): void {\n        this.queryParameters = queryParams;\n    }\n\n    setApplicationName(applicationName: string): void {\n        this.applicationName = applicationName;\n    }\n\n    setLanguage(lang: string): void {\n        this.lang = lang;\n    }\n\n    setUIKind(uiKind: theia.UIKind): void {\n        this.ui = uiKind;\n    }\n\n    setAppHost(appHost: string): void {\n        this.host = appHost;\n    }\n\n    setAppRoot(appRoot: string): void {\n        this.applicationRoot = appRoot;\n    }\n\n    setAppUriScheme(uriScheme: string): void {\n        this.appUriScheme = uriScheme;\n    }\n\n    getClientOperatingSystem(): Promise<theia.OperatingSystem> {\n        return this.proxy.$getClientOperatingSystem();\n    }\n\n    get appName(): string {\n        return this.applicationName;\n    }\n\n    get appRoot(): string {\n        return this.applicationRoot;\n    }\n\n    abstract get isNewAppInstall(): boolean;\n\n    get appHost(): string {\n        return this.host;\n    }\n\n    get remoteName(): string | undefined {\n        return this._remoteName;\n    }\n\n    get language(): string {\n        return this.lang;\n    }\n    get machineId(): string {\n        return this.envMachineId;\n    }\n    get sessionId(): string {\n        return this.envSessionId;\n    }\n    get uriScheme(): string {\n        return this.appUriScheme;\n    }\n    get uiKind(): theia.UIKind {\n        return this.ui;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// eslint-disable-next-line @theia/runtime-import-check\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { DebugExtImpl } from '../../../plugin/debug/debug-ext';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function createDebugExtStub(container: interfaces.Container): DebugExtImpl {\n    const delegate = container.get(DebugExtImpl);\n    return new Proxy(delegate, {\n        apply: function (target, that, args): void {\n            console.error('Debug API works only in plugin container');\n        }\n    });\n}\n","// *****************************************************************************\n// Copyright (C) 2022 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\n// Copied from https://github.com/microsoft/vscode/blob/7d9b1c37f8e5ae3772782ba3b09d827eb3fdd833/src/vs/base/common/codicons.ts\nexport namespace CSSIcon {\n    export const iconNameSegment = '[A-Za-z0-9]+';\n    export const iconNameExpression = '[A-Za-z0-9-]+';\n    export const iconModifierExpression = '~[A-Za-z]+';\n    export const iconNameCharacter = '[A-Za-z0-9~-]';\n}\n\nconst iconsRegex = new RegExp(`\\\\$\\\\(${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\n\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text: string): string {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { EnvExtImpl } from '../../../plugin/env';\n\n/**\n * Worker specific implementation not returning any FileSystem details\n * Extending the common class\n */\n@injectable()\nexport class WorkerEnvExtImpl extends EnvExtImpl {\n\n    constructor() {\n        super();\n    }\n\n    override get appRoot(): string {\n        // The documentation indicates that this should be an empty string\n        return '';\n    }\n\n    get isNewAppInstall(): boolean {\n        return false;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2021 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nconst separator = '/';\n\nexport function normalize(path: string): string {\n    if (!path || path.length === 0) {\n        return '.';\n    }\n\n    const isAbsolute = path.charCodeAt(0) === 47;\n    const trailingSlash = path.charCodeAt(path.length - 1) === 47;\n\n    const parts = path.split(separator);\n\n    const result: string[] = [];\n\n    for (let i = 0; i < parts.length; i++) {\n        const p = parts[i];\n        if (p === '') {\n            continue;\n        }\n\n        if (p === '..') {\n            result.pop();\n            continue;\n        }\n\n        result.push(p);\n    }\n\n    if (result.length === 0) {\n        return '.';\n    }\n\n    path = result.join(separator);\n    if (isAbsolute) {\n        path = '/' + path;\n    }\n\n    if (trailingSlash) {\n        path += '/';\n    }\n\n    return path;\n}\n\nexport function join(...paths: string[]): string {\n    if (paths.length === 0) {\n        return '.';\n    }\n\n    const path = paths.join(separator);\n    return normalize(path);\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// copied and modified from https://github.com/microsoft/vscode/blob/0eb3a02ca2bcfab5faa3dc6e52d7c079efafcab0/src/vs/workbench/api/common/extHostLanguageFeatures.ts#L692-L869\n\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\n\nimport { BinaryBuffer } from '@theia/core/lib/common/buffer';\nimport * as theia from '@theia/plugin';\nimport { URI } from '@theia/core/shared/vscode-uri';\nimport { SemanticTokens, SemanticTokensEdit, SemanticTokensEdits } from '../types-impl';\nimport { DocumentsExtImpl } from '../documents';\nimport { toRange } from '../type-converters';\nimport { encodeSemanticTokensDto } from '../../common/semantic-tokens-dto';\nimport { Range } from '../../common/plugin-api-rpc-model';\n\nclass SemanticTokensPreviousResult {\n    constructor(\n        public readonly resultId: string | undefined,\n        public readonly tokens?: Uint32Array,\n    ) { }\n}\n\ntype RelaxedSemanticTokens = { readonly resultId?: string; readonly data: number[]; };\ntype RelaxedSemanticTokensEdit = { readonly start: number; readonly deleteCount: number; readonly data?: number[]; };\ntype RelaxedSemanticTokensEdits = { readonly resultId?: string; readonly edits: RelaxedSemanticTokensEdit[]; };\n\ntype ProvidedSemanticTokens = theia.SemanticTokens | RelaxedSemanticTokens;\ntype ProvidedSemanticTokensEdits = theia.SemanticTokensEdits | RelaxedSemanticTokensEdits;\n\nexport class DocumentSemanticTokensAdapter {\n\n    private readonly _previousResults: Map<number, SemanticTokensPreviousResult>;\n    private _nextResultId = 1;\n\n    constructor(\n        private readonly _documents: DocumentsExtImpl,\n        private readonly _provider: theia.DocumentSemanticTokensProvider,\n    ) {\n        this._previousResults = new Map<number, SemanticTokensPreviousResult>();\n    }\n\n    async provideDocumentSemanticTokens(resource: URI, previousResultId: number, token: theia.CancellationToken): Promise<BinaryBuffer | null> {\n        const doc = this._documents.getDocument(resource);\n        const previousResult = (previousResultId !== 0 ? this._previousResults.get(previousResultId) : null);\n        let value: ProvidedSemanticTokens | ProvidedSemanticTokensEdits | null | undefined;\n        if (previousResult && typeof previousResult.resultId === 'string' && typeof this._provider.provideDocumentSemanticTokensEdits === 'function') {\n            value = await this._provider.provideDocumentSemanticTokensEdits(doc, previousResult.resultId, token);\n        } else {\n            value = await this._provider.provideDocumentSemanticTokens(doc, token);\n        }\n        if (previousResult) {\n            this._previousResults.delete(previousResultId);\n        }\n        if (!value) {\n            return null;\n        }\n        value = DocumentSemanticTokensAdapter._fixProvidedSemanticTokens(value);\n        return this._send(DocumentSemanticTokensAdapter._convertToEdits(previousResult, value), value);\n    }\n\n    async releaseDocumentSemanticColoring(semanticColoringResultId: number): Promise<void> {\n        this._previousResults.delete(semanticColoringResultId);\n    }\n\n    private static _fixProvidedSemanticTokens(v: ProvidedSemanticTokens | ProvidedSemanticTokensEdits): theia.SemanticTokens | theia.SemanticTokensEdits {\n        if (DocumentSemanticTokensAdapter._isSemanticTokens(v)) {\n            if (DocumentSemanticTokensAdapter._isCorrectSemanticTokens(v)) {\n                return v;\n            }\n            return new SemanticTokens(new Uint32Array(v.data), v.resultId);\n        } else if (DocumentSemanticTokensAdapter._isSemanticTokensEdits(v)) {\n            if (DocumentSemanticTokensAdapter._isCorrectSemanticTokensEdits(v)) {\n                return v;\n            }\n            return new SemanticTokensEdits(v.edits.map(edit => new SemanticTokensEdit(edit.start, edit.deleteCount, edit.data ?\n                new Uint32Array(edit.data) : edit.data)), v.resultId);\n        }\n        return v;\n    }\n\n    private static _isSemanticTokens(v: ProvidedSemanticTokens | ProvidedSemanticTokensEdits): v is ProvidedSemanticTokens {\n        return v && !!((v as ProvidedSemanticTokens).data);\n    }\n\n    private static _isCorrectSemanticTokens(v: ProvidedSemanticTokens): v is theia.SemanticTokens {\n        return (v.data instanceof Uint32Array);\n    }\n\n    private static _isSemanticTokensEdits(v: ProvidedSemanticTokens | ProvidedSemanticTokensEdits): v is ProvidedSemanticTokensEdits {\n        return v && Array.isArray((v as ProvidedSemanticTokensEdits).edits);\n    }\n\n    private static _isCorrectSemanticTokensEdits(v: ProvidedSemanticTokensEdits): v is theia.SemanticTokensEdits {\n        for (const edit of v.edits) {\n            if (!(edit.data instanceof Uint32Array)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private static _convertToEdits(previousResult: SemanticTokensPreviousResult | null | undefined, newResult: theia.SemanticTokens | theia.SemanticTokensEdits):\n        theia.SemanticTokens | theia.SemanticTokensEdits {\n        if (!DocumentSemanticTokensAdapter._isSemanticTokens(newResult)) {\n            return newResult;\n        }\n        if (!previousResult || !previousResult.tokens) {\n            return newResult;\n        }\n        const oldData = previousResult.tokens;\n        const oldLength = oldData.length;\n        const newData = newResult.data;\n        const newLength = newData.length;\n\n        let commonPrefixLength = 0;\n        const maxCommonPrefixLength = Math.min(oldLength, newLength);\n        while (commonPrefixLength < maxCommonPrefixLength && oldData[commonPrefixLength] === newData[commonPrefixLength]) {\n            commonPrefixLength++;\n        }\n\n        if (commonPrefixLength === oldLength && commonPrefixLength === newLength) {\n            // complete overlap!\n            return new SemanticTokensEdits([], newResult.resultId);\n        }\n\n        let commonSuffixLength = 0;\n        const maxCommonSuffixLength = maxCommonPrefixLength - commonPrefixLength;\n        while (commonSuffixLength < maxCommonSuffixLength && oldData[oldLength - commonSuffixLength - 1] === newData[newLength - commonSuffixLength - 1]) {\n            commonSuffixLength++;\n        }\n\n        return new SemanticTokensEdits([{\n            start: commonPrefixLength,\n            deleteCount: (oldLength - commonPrefixLength - commonSuffixLength),\n            data: newData.subarray(commonPrefixLength, newLength - commonSuffixLength)\n        }], newResult.resultId);\n    }\n\n    private _send(value: theia.SemanticTokens | theia.SemanticTokensEdits, original: theia.SemanticTokens | theia.SemanticTokensEdits): BinaryBuffer | null {\n        if (DocumentSemanticTokensAdapter._isSemanticTokens(value)) {\n            const myId = this._nextResultId++;\n            this._previousResults.set(myId, new SemanticTokensPreviousResult(value.resultId, value.data));\n            return encodeSemanticTokensDto({\n                id: myId,\n                type: 'full',\n                data: value.data\n            });\n        }\n\n        if (DocumentSemanticTokensAdapter._isSemanticTokensEdits(value)) {\n            const myId = this._nextResultId++;\n            if (DocumentSemanticTokensAdapter._isSemanticTokens(original)) {\n                // store the original\n                this._previousResults.set(myId, new SemanticTokensPreviousResult(original.resultId, original.data));\n            } else {\n                this._previousResults.set(myId, new SemanticTokensPreviousResult(value.resultId));\n            }\n            return encodeSemanticTokensDto({\n                id: myId,\n                type: 'delta',\n                deltas: (value.edits || []).map(edit => ({ start: edit.start, deleteCount: edit.deleteCount, data: edit.data }))\n            });\n        }\n\n        return null;\n    }\n}\n\nexport class DocumentRangeSemanticTokensAdapter {\n\n    constructor(\n        private readonly _documents: DocumentsExtImpl,\n        private readonly _provider: theia.DocumentRangeSemanticTokensProvider,\n    ) {\n    }\n\n    async provideDocumentRangeSemanticTokens(resource: URI, range: Range, token: theia.CancellationToken): Promise<BinaryBuffer | null> {\n        const doc = this._documents.getDocument(resource);\n        const value = await this._provider.provideDocumentRangeSemanticTokens(doc, toRange(range), token);\n        if (!value) {\n            return null;\n        }\n        return this._send(value);\n    }\n\n    private _send(value: theia.SemanticTokens): BinaryBuffer | null {\n        return encodeSemanticTokensDto({\n            id: 0,\n            type: 'full',\n            data: value.data\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [136], () => (__webpack_require__(72421)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and chunks that the entrypoint depends on\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t132: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_theia_example_browser_only\"] = self[\"webpackChunk_theia_example_browser_only\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","module","exports","CodeActionAdapter","constructor","provider","document","diagnostics","pluginId","commands","cache","Map","disposables","cacheId","provideCodeAction","resource","rangeOrSelection","context","token","this","getDocumentData","Promise","reject","Error","doc","ran","_isSelection","Converter","toSelection","toRange","allDiagnostics","diagnostic","getDiagnostics","intersection","range","push","codeActionContext","only","CodeActionKind","undefined","triggerKind","toCodeActionTriggerKind","trigger","commandsOrActions","provideCodeActions","Array","isArray","length","result","candidate","nextCacheId","toDispose","DisposableCollection","set","_isCommand","title","command","converter","toSafeCommand","kind","contains","console","warn","value","map","convertDiagnosticToMarkerData","edit","fromWorkspaceEdit","disabled","isPreferred","releaseCodeActions","cacheIds","forEach","id","delete","get","dispose","resolveCodeAction","resolved","arg","isObject","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","resolveDebugAdapterExecutable","_pluginPath","_debuggerContribution","createDebugAdapter","session","_debugConfiguration","executable","descriptorFactory","descriptor","createDebugAdapterDescriptor","DebugAdapterInlineImplementation","is","connectInlineDebugAdapter","adapter","InlineDebugAdapter","implementation","rpc","editorsAndDocuments","_onDidAddDocument","Emitter","_onDidRemoveDocument","_onDidChangeDocument","_onDidSaveTextDocument","_onWillSaveTextDocument","onDidAddDocument","event","onDidRemoveDocument","onDidChangeDocument","onDidSaveTextDocument","onWillSaveTextDocument","loadingDocuments","proxy","getProxy","PLUGIN_RPC_CONTEXT","DOCUMENTS_MAIN","onDidAddDocuments","documents","fire","onDidRemoveDocuments","data","$acceptModelModeChanged","startUrl","oldModeId","newModeId","uriString","URI","revive","toString","getDocument","acceptLanguageId","$acceptModelSaved","strUrl","$acceptDirtyStateChanged","$acceptModelWillSave","reason","saveTimeout","uri","operations","didTimeout","didTimeoutHandle","setTimeout","sequence","async","fireEvent","documentData","fireTextDocumentWillSaveEvent","accept","operation","e","error","clearTimeout","promises","Object","freeze","waitUntil","p","isFrozen","all","then","allEdits","edits","TextEdit","isTextEdit","fromTextEdit","isDirty","acceptIsDirty","contentChanges","$acceptEncodingChanged","encoding","acceptEncoding","$acceptModelChanged","onEvents","changes","change","rangeOffset","rangeLength","text","getAllDocumentData","allDocuments","showDocument","options","loadingDocument","loadDocument","openDocument","cached","$tryOpenDocument","documentOptions","selection","start","end","startLineNumber","line","startColumn","character","endLineNumber","endColumn","preserveFocus","preview","viewColumn","$tryShowDocument","createDocumentData","$tryCreateDocument","setWordDefinitionFor","modeId","wordDefinition","ResponseError","code","message","super","EncodingError","msg","cause","defaultMsgPack","moreTypes","encodeUndefinedAsNil","bundleStrings","msgPack","cancel","buf","requestId","encode","type","notification","method","args","request","replyOK","res","replyErr","err","writeBytes","decode","bytes","readBytes","parse","buffer","MsgPackExtensionManager","getInstance","registerExtensions","class","tag","serialize","name","stack","stacktrace","isResponseError","deserialize","provideTasks","resolve","tasks","task","fromTask","resolveTask","item","toTask","execution","converted","isElectron","environment","electron","THEIA_ELECTRON_VERSION","isDevMode","process","defaultApp","test","execPath","runAsNodeEnv","env","ELECTRON_RUN_AS_NODE","notebooksExt","rendererMessageEmitters","NOTEBOOK_RENDERERS_MAIN","$postRendererMessage","editorId","rendererId","editor","getEditorById","apiEditor","createRendererMessaging","onDidReceiveMessage","listener","thisArg","getOrCreateEmitterFor","postMessage","editorOrAlias","extHostEditor","NotebookEditor","apiEditorsToExtHost","$postMessage","emitter","onLastListenerRemove","Memento","isPluginGlobalData","storage","getPerPluginData","storageDataChangedEvent","keys","entries","filter","key","defaultValue","hasOwnProperty","update","setPerPluginData","_","setKeysForSync","InternalStorageExt","Symbol","KeyValueStorageProxy","storageDataChangedEmitter","STORAGE_MAIN","init","initGlobalData","initWorkspaceData","globalDataCache","workspaceDataCache","isGlobal","$set","$updatePluginsWorkspaceData","workspaceData","injectable","inject","RPCProtocol","RenameAdapter","supportsResolving","prepareRename","provideRenameEdits","position","newName","pos","toPosition","rejectReason","asMessage","resolveRenameLocation","rangeOrLocation","Range","isRange","getText","placeholder","fromRange","TabExt","dto","parentGroup","activeTabIdGetter","acceptDtoUpdate","apiObject","tabApiObject","that","obj","isActive","tabDto","label","input","isPinned","isPreview","group","tabId","initInput","TextTabInput","TextDiffTabInput","original","modified","TextMergeTabInput","base","input1","input2","CustomEditorTabInput","viewType","WebviewEditorTabInput","NotebookEditorTabInput","notebookType","NotebookDiffEditorTabInput","TerminalEditorTabInput","InteractiveWindowInput","inputBoxUri","TabGroupExt","activeGroupIdGetter","tabsArr","activeTabId","tabGroupDto","tabs","getActiveTabId","tabGroupApiObject","groupId","ViewColumn","to","activeTab","find","tab","acceptGroupDtoUpdate","acceptTabOperation","splice","index","oldIndex","_tab","extHostTab","onDidChangeTabs","onDidChangeTabGroups","tabGroupArr","TABS_MAIN","tabGroups","activeTabGroup","activeTabGroupId","activeGroupId","assertIsDefined","close","tabOrTabGroup","tabsOrTabGroups","isTabGroup","_closeGroups","_closeTabs","$acceptEditorTabModel","groupIdsBefore","Set","groupIdsAfter","diff","diffSets","closed","removed","includes","opened","changed","tabsOpened","tabGroup","added","$acceptTabGroupUpdate","groupDto","$acceptTabOperation","_findExtHostTabFromApi","apiTab","_findExtHostTabGroupFromApi","apiTabGroup","extHostTabIds","$closeTab","groups","extHostGroupIds","extHostGroup","$closeGroup","ExtPluginApiProvider","MainPluginApiProvider","AcceleratorSource","node","getAccelerator","action","keybindingRegistry","contextKeyService","onDidChangeEmitter","onDidChange","getAllHandlers","commandId","handler","onDidChangeEnabled","when","contextKeys","parseKeys","add","size","affects","isVisible","effeciveMenuPath","contextMatcher","match","bindings","getKeybindingsForCommand","binding","b","isEnabledInScope","acceleratorFor","isEnabled","isToggled","run","executeCommand","cmd","getCommand","debug","icon","iconClass","sortString","order","EnvironmentVariableMutatorType","IShellTerminalServer","shellTerminalPath","ShellTerminalServerProxy","NO_ROOT_URI","Deferred","state","promise","setState","timeout","ms","CancellationToken","None","handle","onCancellationRequested","cancelled","delay","retryDelay","retries","lastError","i","registration","CancellationError","evt","isFunction","newPromises","race","ContributionFilterRegistry","FilterContribution","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","Uint8Array","view","Uint16Array","reverseEndianness","arr","len","b0","b1","b2","b3","semanticTokens","dest","Uint32Array","deltas","delta","encodeSemanticTokensDtoSize","offset","deleteCount","uint8Arr","byteOffset","BinaryBuffer","wrap","toLittleEndianBuffer","_buff","src","buff","byteLength","fromLittleEndianBuffer","subarray","deltaCount","array","concat","mapFn","mapped","LoggerWatcher","onLogLevelChangedEmitter","onLogConfigChangedEmitter","getLoggerClient","logLevelEmitter","logConfigEmitter","onLogLevelChanged","onLogConfigChanged","_onDidChangeTextEditorSelection","_onDidChangeTextEditorOptions","_onDidChangeTextEditorVisibleRanges","_onDidChangeTextEditorViewColumn","_onDidChangeActiveTextEditor","_onDidChangeVisibleTextEditors","onDidChangeTextEditorSelection","onDidChangeTextEditorOptions","onDidChangeTextEditorVisibleRanges","onDidChangeTextEditorViewColumn","onDidChangeActiveTextEditor","onDidChangeVisibleTextEditors","TEXT_EDITORS_MAIN","$acceptEditorPropertiesChanged","props","textEditor","getEditor","acceptOptions","selections","Converters","acceptSelections","visibleRanges","acceptVisibleRanges","TextEditorSelectionChangeKind","fromValue","source","$acceptEditorPositionData","toViewColumn","acceptViewColumn","getActiveEditor","activeEditor","getDiffInformation","getVisibleTextEditors","allEditors","createTextEditorDecorationType","TextEditorDecorationType","applyWorkspaceEdit","metadata","$tryApplyWorkspaceEdit","save","$save","components","saveAs","$saveAs","saveAll","includeUntitled","$saveAll","Keys","nextId","$registerTextEditorDecorationType","DecorationRenderOptions","from","$removeTextEditorDecorationType","IdGenerator","delegate","provideDefinition","zeroBasedPosition","definition","types","Location","fromLocation","isLocationArray","locations","location","isDefinitionLinkArray","definitionLinks","definitionLink","fromDefinitionLink","MarkdownStringTextNewlineStyle","MarkdownString","escapeMarkdownSyntaxTokens","replace","isString","isTrustedOrOptions","isTrusted","supportThemeIcons","supportHtml","appendText","newlineStyle","Paragraph","escapeIcons","_match","g1","repeat","Break","appendMarkdown","appendCodeblock","langId","appendLink","target","_escape","String","ch","r","RegExp","escapeRegExpCharacters","charAt","href","dimensions","splitted","split","s","trim","parameters","heightFromParams","exec","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","before","after","element","has","replaceRegex","paths","processed","TypeError","sep","normalize","join","substring","absolute","removeDuplicateSeparators","goodComponents","c","pop","unshift","fromSegments","toSegments","shift","upCount","downSegments","slice","rv","ArrayUtils","Sort","findLastIdx","predicate","fromIndex","TailImpl","tail","HeadAndChildrenImpl","head","children","assign","asTail","asHeadAndTail","binarySearch2","compareToKey","low","high","mid","comp","partition","pass","fail","idx","coalesce","groupBy","compare","currentGroup","sort","shallowEqual","left","right","startsWith","equals","one","other","itemEquals","a","findLast","checkAdjacentItems","items","Event","WaitUntilEvent","_disposable","once","thisArgs","didFire","call","getMaxListeners","maxListeners","setMaxListeners","addMaxListeners","toPromise","mapFunc","any","events","CallbackList","_callbacks","callback","bucket","_contexts","remove","foundCallbackWithDifferentContext","iterator","callbacks","contexts","apply","invoke","ret","isEmpty","_options","_disposed","_leakWarnCountdown","_event","onFirstListenerAdd","removeMaxListenersCheck","checkMaxListeners","_noop","DisposableGroup","canPush","canAdd","LEAK_WARNING_THRESHHOLD","listenerCount","popStack","pushLeakingStack","topStack","topCount","_leakingStacks","stackCount","count","popLeakingStack","processor","clear","waitables","asyncEvent","thenable","promiseJoin","listeners","deliveryQueue","deliver","isCancellationRequested","queue","currentQueue","servicesPath","ConnectionHandler","UTF8","UTF8_with_bom","UTF16be","UTF16le","UTF16be_BOM","UTF16le_BOM","UTF8_BOM","createAPIObject","rawObject","Proxy","receiver","isOwnProperty","getOwnPropertyDescriptor","val","Reflect","bind","pluginManager","envExt","debugExt","preferenceRegistryExt","editorsAndDocumentsExt","workspaceExt","messageRegistryExt","clipboard","webviewExt","localizationExt","authenticationExt","MAIN_RPC_CONTEXT","AUTHENTICATION_EXT","AuthenticationExtImpl","commandRegistry","COMMAND_REGISTRY_EXT","CommandRegistryImpl","quickOpenExt","QUICK_OPEN_EXT","QuickOpenExtImpl","dialogsExt","DialogsExtImpl","windowStateExt","WINDOW_STATE_EXT","WindowStateExtImpl","notificationExt","NOTIFICATION_EXT","NotificationExtImpl","editors","TEXT_EDITORS_EXT","TextEditorsExtImpl","DOCUMENTS_EXT","DocumentsExtImpl","NOTEBOOKS_EXT","NotebooksExtImpl","notebookEditors","NOTEBOOK_EDITORS_EXT","NotebookEditorsExtImpl","notebookRenderers","NOTEBOOK_RENDERERS_EXT","NotebookRenderersExtImpl","notebookKernels","NOTEBOOK_KERNELS_EXT","NotebookKernelsExtImpl","notebookDocuments","NOTEBOOK_DOCUMENTS_EXT","NotebookDocumentsExtImpl","statusBarMessageRegistryExt","StatusBarMessageRegistryExt","terminalExt","TERMINAL_EXT","TerminalServiceExtImpl","outputChannelRegistryExt","OUTPUT_CHANNEL_REGISTRY_EXT","OutputChannelRegistryExtImpl","treeViewsExt","TREE_VIEWS_EXT","TreeViewsExtImpl","tasksExt","TASKS_EXT","TasksExtImpl","connectionExt","CONNECTION_EXT","ConnectionImpl","CONNECTION_MAIN","fileSystemExt","FILE_SYSTEM_EXT","FileSystemExtImpl","languagesExt","LANGUAGES_EXT","LanguagesExtImpl","extHostFileSystemEvent","ExtHostFileSystemEventService","scmExt","SCM_EXT","ScmExtImpl","decorationsExt","DECORATIONS_EXT","DecorationsExtImpl","labelServiceExt","LABEL_SERVICE_EXT","LabelServiceExtImpl","timelineExt","TIMELINE_EXT","TimelineExtImpl","themingExt","THEMING_EXT","ThemingExtImpl","commentsExt","COMMENTS_EXT","CommentsExtImpl","tabsExt","TABS_EXT","TabsExtImpl","customEditorExt","CUSTOM_EDITORS_EXT","CustomEditorsExtImpl","webviewViewsExt","WEBVIEW_VIEWS_EXT","WebviewViewsExtImpl","telemetryExt","TELEMETRY_EXT","TelemetryExtImpl","testingExt","TESTING_EXT","TestingExtImpl","uriExt","URI_EXT","UriExtImpl","lmExt","MCP_SERVER_DEFINITION_REGISTRY_EXT","LmExtImpl","DEBUG_EXT","commandLogger","PluginLogger","plugin","authentication","registerAuthenticationProvider","getSession","providerId","scopes","onDidChangeSessions","getAccounts","commandIsDeclaredInPackage","model","rawCommands","contributes","some","registerCommand","rawModel","registerHandler","registerTextEditorCommand","internalHandler","activeTextEditor","getKeyBinding","getCommands","filterInternal","registerDiffInformationCommand","lineChanges","onDidChangeActiveTerminal","onDidChangeTerminalState","onDidCloseTerminal","onDidOpenTerminal","showInformationMessage","showMessage","MainMessageType","Info","showWarningMessage","Warning","showErrorMessage","window","activeTerminal","visibleTextEditors","terminals","showTextDocument","documentArg","columnOrOptions","visibleNotebookEditors","visibleApiNotebookEditors","onDidChangeVisibleNotebookEditors","activeNotebookEditor","activeApiNotebookEditor","onDidChangeActiveNotebookEditor","onDidChangeNotebookEditorSelection","onDidChangeNotebookEditorVisibleRanges","showNotebookDocument","showQuickPick","createQuickPick","showWorkspaceFolderPick","pickWorkspaceFolder","showOpenDialog","showSaveDialog","showUploadDialog","setStatusBarMessage","showInputBox","showInput","createStatusBarItem","alignmentOrId","priorityOrAlignment","priorityArg","alignment","priority","createOutputChannel","pluginToPluginInfo","createWebviewPanel","showOptions","createWebview","registerWebviewPanelSerializer","serializer","registerCustomEditorProvider","registerWebviewViewProvider","webviewOptions","getWindowState","onDidChangeWindowState","createTerminal","nameOrOptions","shellPath","shellArgs","registerTreeDataProvider","viewId","treeDataProvider","createTreeView","withScmProgress","ProgressLocation","SourceControl","withProgress","report","registerFileDecorationProvider","registerUriHandler","createInputBox","registerTerminalLinkProvider","registerTerminalProfileProvider","activeColorTheme","onDidChangeActiveColorTheme","registerExternalUriOpener","opener","Disposable","NULL","registerProfileContentHandler","profileContentHandler","registerTerminalCompletionProvider","triggerCharacters","registerTerminalQuickFixProvider","registerTerminalObserver","observer","registerShareProvider","onDidChangeTerminalShellIntegration","onDidEndTerminalShellExecution","onDidStartTerminalShellExecution","workspace","fs","fileSystem","rootPath","workspaceFolders","workspaceFile","onDidChangeWorkspaceFolders","getAllApiDocuments","textDocuments","onDidChangeTextDocument","onDidCloseTextDocument","onDidOpenNotebookDocument","onDidCloseNotebookDocument","onWillSaveNotebookDocument","onDidSaveNotebookDocument","onDidChangeNotebookDocument","onDidOpenTextDocument","onDidCreateFiles","onDidCreateFile","onDidDeleteFiles","onDidDeleteFile","onDidRenameFiles","onDidRenameFile","onWillCreateFiles","getOnWillCreateFileEvent","onWillDeleteFiles","getOnWillDeleteFileEvent","onWillRenameFiles","getOnWillRenameFileEvent","getConfiguration","section","onDidChangeConfiguration","content","openTextDocument","uriOrPathOrOptions","file","isUri","openNotebookDocument","uriOrType","createNotebookDocument","getNotebookDocument","apiNotebook","createFileSystemWatcher","pattern","ignoreCreateEvents","ignoreChangeEvents","ignoreDeleteEvents","fromGlobPattern","findFiles","include","exclude","maxResults","findTextInFiles","query","optionsOrCallback","callbackOrToken","applyEdit","registerTextDocumentContentProvider","scheme","registerFileSystemProvider","getWorkspaceFolder","asRelativePath","pathOrUri","includeWorkspace","getRelativePath","updateWorkspaceFolders","workspaceFoldersToAdd","registerTaskProvider","registerResourceLabelFormatter","formatter","$registerResourceLabelFormatter","registerTimelineProvider","registerNotebookSerializer","trusted","requestWorkspaceTrust","onDidGrantWorkspaceTrust","registerEditSessionIdentityProvider","$registerEditSessionIdentityProvider","onWillCreateEditSessionIdentity","registerCanonicalUriProvider","getCanonicalUri","registerPortAttributesProvider","onDidChangeLogLevel","appName","appRoot","appHost","language","isNewAppInstall","isTelemetryEnabled","onDidChangeTelemetryEnabled","createTelemetryLogger","sender","remoteName","machineId","sessionId","uriScheme","shell","defaultShell","onDidChangeShell","uiKind","getEnvVariable","envVarName","getQueryParameter","queryParamName","getQueryParameters","getClientOperatingSystem","openExternal","openUri","asExternalUri","logLevel","LogLevel","extensions","getExtension","extensionId","includeFromDifferentExtensionHosts","plg","getPluginById","toLowerCase","PluginExt","getAllPlugins","allAcrossExtensionHosts","languages","getLanguages","setTextDocumentLanguage","languageId","changeLanguage","selector","score","fromDocumentSelector","path","onDidChangeDiagnostics","createDiagnosticCollection","setLanguageConfiguration","configuration","registerCompletionItemProvider","registerInlineCompletionItemProvider","registerInlineCompletionsProvider","registerDefinitionProvider","registerDeclarationProvider","registerSignatureHelpProvider","first","remaining","retriggerCharacters","registerTypeDefinitionProvider","registerImplementationProvider","registerHoverProvider","registerEvaluatableExpressionProvider","registerInlineValuesProvider","registerDocumentHighlightProvider","registerMultiDocumentHighlightProvider","registerWorkspaceSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","firstTriggerCharacter","moreTriggerCharacters","registerDocumentDropEditProvider","registerDocumentLinkProvider","registerCodeActionsProvider","registerCodeLensProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerColorProvider","registerInlayHintsProvider","registerFoldingRangeProvider","registerSelectionRangeProvider","registerRenameProvider","registerDocumentSemanticTokensProvider","legend","registerDocumentRangeSemanticTokensProvider","registerCallHierarchyProvider","registerTypeHierarchyProvider","registerLinkedEditingRangeProvider","createLanguageStatusItem","registerDocumentPasteEditProvider","tests","createTestController","plugins","getPlugin","debuggersContributions","debuggers","assistedInject","registerDebuggersContributions","pluginFolder","entryPoint","frontend","activeDebugSession","activeDebugConsole","breakpoints","onDidChangeActiveDebugSession","onDidStartDebugSession","onDidReceiveDebugSessionCustomEvent","onDidTerminateDebugSession","onDidChangeBreakpoints","activeStackItem","onDidChangeActiveStackItem","registerDebugAdapterDescriptorFactory","debugType","factory","registerDebugConfigurationProvider","DebugConfigurationProviderTriggerKind","Initial","registerDebugAdapterTrackerFactory","startDebugging","folder","nameOrConfiguration","parentSessionOrOptions","parentSession","stopDebugging","addBreakpoints","removeBreakpoints","asDebugSourceUri","registerDebugVisualizationProvider","registerDebugVisualizationTreeProvider","fetchTasks","executeTask","taskExecutions","onDidStartTask","onDidEndTask","onDidStartTaskProcess","onDidEndTaskProcess","scm","inputBox","getLastInputBox","createSourceControl","rootUri","comments","createCommentController","l10n","t","params","argsFormatted","translateMessage","bundle","getBundle","getBundleUri","notebooks","createNotebookController","rendererScripts","registerNotebookCellStatusBarItemProvider","onDidChangeNotebookCellExecutionState","createNotebookControllerDetectionTask","registerKernelSourceActionProvider","chat","registerMappedEditsProvider","documentSelector","registerMappedEditsProvider2","createChatParticipant","requestHandler","onDidReceiveFeedback","mcpContributions","mcpServerDefinitionProviders","registerMcpContributions","lm","selectChatModels","onDidChangeChatModels","invokeTool","registerTool","tool","tools","registerMcpServerDefinitionProvider","version","StatusBarAlignment","EventEmitter","CancellationTokenSource","Position","Selection","Uri","EndOfLine","TextEditorRevealType","TextEditorCursorStyle","TextEditorLineNumbersStyle","ThemeColor","ThemeIcon","SnippetString","DecorationRangeBehavior","OverviewRulerLane","ConfigurationTarget","RelativePattern","IndentAction","SyntaxTokenType","CompletionItem","CompletionItemKind","CompletionList","DebugConsoleMode","DiagnosticSeverity","DiagnosticRelatedInformation","LanguageStatusSeverity","DiagnosticTag","CompletionItemTag","Diagnostic","CompletionTriggerKind","SnippetTextEdit","ProgressOptions","Progress","ParameterInformation","QuickPickItemKind","SignatureInformation","SignatureHelp","SignatureHelpTriggerKind","Hover","EvaluatableExpression","InlineValueEvaluatableExpression","InlineValueText","InlineValueVariableLookup","InlineValueContext","DocumentHighlightKind","DocumentHighlight","MultiDocumentHighlight","DocumentLink","DocumentDropEdit","DocumentDropOrPasteEditKind","CodeLens","CodeActionTrigger","CodeActionTriggerKind","TextDocumentSaveReason","CodeAction","DataTransferItem","DataTransfer","TreeItem","TreeItemCollapsibleState","TreeItemCheckboxState","SymbolKind","SymbolTag","DocumentSymbol","WorkspaceEdit","SymbolInformation","FileType","FilePermission","FileChangeType","ShellQuoting","ShellExecution","ProcessExecution","CustomExecution","TaskScope","TaskRevealKind","TaskPanelKind","TaskGroup","Task","Task2","DebugAdapterExecutable","DebugAdapterServer","DebugAdapterNamedPipeServer","Breakpoint","SourceBreakpoint","FunctionBreakpoint","DebugStackFrame","DebugThread","Color","ColorInformation","ColorPresentation","FoldingRange","SelectionRange","FoldingRangeKind","OperatingSystem","WebviewPanelTargetArea","UIKind","FileSystemError","CommentThreadState","CommentThreadCollapsibleState","QuickInputButtons","CommentMode","CallHierarchyItem","CallHierarchyIncomingCall","CallHierarchyOutgoingCall","TypeHierarchyItem","TimelineItem","SemanticTokensLegend","SemanticTokensBuilder","SemanticTokens","SemanticTokensEdits","SemanticTokensEdit","TextDocumentChangeReason","ColorThemeKind","SourceControlInputBoxValidationType","FileDecoration","TerminalLink","TerminalProfile","ExtensionMode","LinkedEditingRanges","InputBoxValidationSeverity","InlayHint","InlayHintKind","InlayHintLabelPart","TelemetryTrustedValue","NotebookCellData","NotebookCellExecutionState","NotebookCellKind","NotebookCellOutput","NotebookCellOutputItem","NotebookCellStatusBarAlignment","NotebookCellStatusBarItem","NotebookControllerAffinity","NotebookData","NotebookEditorRevealType","NotebookDocument","NotebookRange","NotebookEdit","NotebookKernelSourceAction","NotebookRendererScript","TestRunProfileKind","TestTag","TestRunRequest","TestMessage","TestMessageStackFrame","ExtensionKind","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","TabInputText","TabInputTextDiff","TabInputTextMerge","TabInputCustom","TabInputNotebook","TabInputNotebookDiff","TabInputWebview","TabInputTerminal","TerminalLocation","TerminalOutputAnchor","TerminalExitReason","DocumentPasteEdit","DocumentPasteEditKind","DocumentPasteTriggerKind","ExternalUriOpenerPriority","TerminalQuickFixTerminalCommand","TerminalQuickFixOpener","EditSessionIdentityMatch","TestResultState","BranchCoverage","DeclarationCoverage","FileCoverage","StatementCoverage","TestCoverageCount","ChatRequestTurn","ChatResponseTurn","ChatResponseAnchorPart","ChatResponseCommandButtonPart","ChatResponseFileTreePart","ChatResponseMarkdownPart","ChatResponseProgressPart","ChatResponseReferencePart","ChatResultFeedbackKind","LanguageModelChatMessage","LanguageModelChatMessageRole","LanguageModelError","LanguageModelChatToolMode","LanguageModelPromptTsxPart","LanguageModelTextPart","LanguageModelToolCallPart","LanguageModelToolResult","LanguageModelToolResultPart","PortAutoForwardAction","PortAttributes","DebugVisualization","TerminalShellExecutionCommandLineConfidence","TerminalCompletionItemKind","TerminalCompletionList","McpHttpServerDefinition","McpStdioServerDefinition","TabInputInteractiveWindow","Plugin","pluginPath","packageJSON","pluginType","origin","Endpoint","pluginUri","PluginPackage","toPluginUrl","getPluginExport","activate","activatePlugin","isFromDifferentExtensionHost","extensionPath","extensionUri","extensionKind","getPluginKind","MAX_SAFE_INTEGER","provideWorkspaceSymbols","workspaceSymbols","newSymbols","sym","convertedSymbol","fromSymbolInformation","resolveWorkspaceSymbol","symbol","theiaSymbol","toSymbolInformation","workspaceSymbol","windowStateChangedEmitter","WINDOW_MAIN","windowStateCached","focused","active","$onDidChangeWindowFocus","onDidChangeWindowProperty","$onDidChangeWindowActive","property","uriOrString","$openUri","$asExternalUri","PREFERENCE_NAME_TREE_INDENT","treePreferencesSchema","properties","description","nls","localizeByDefault","default","minimum","maximum","TreePreferences","toDynamicValue","ctx","container","PreferenceProxyFactory","inSingletonScope","PreferenceContribution","toConstantValue","schema","debugAdapter","isClosed","onMessageReceived","send","onClose","onDebugAdapterExit","onError","onDebugAdapterError","channel","onMessage","write","JSON","stringify","seq","body","stop","InternalSecretsExt","SecretsExtImpl","onDidChangePasswordEmitter","onDidChangePassword","SECRETS_MAIN","$onDidChangePassword","$getPassword","store","$setPassword","$deletePassword","pluginDescription","secretState","provideHover","contents","getWordRangeAtPosition","fromHover","Readable","isReadableStream","on","pause","resume","destroy","every","fn","newWriteableStream","reducer","WriteableStreamImpl","fromString","done","read","readable","chunk","stream","ended","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","removeListener","indexOf","fullDataBuffer","pendingWritePromise","chunks","maxChunks","lastReadChunk","streamListeners","dataListener","create","errorListener","endListener","wrapperStream","consumed","transformer","DiagnosticCollection","maxCountPerFile","onDidChangeDiagnosticsEmitter","collectionName","diagnosticsLimitPerResource","isDisposed","onDisposeCallback","ensureNotDisposed","setDiagnosticsForUri","setDiagnostics","fireDiagnosticChangeEvent","sendChangesToEditor","existedDiagnostics","$changeDiagnostics","getAllResourcesUris","$clearDiagnostics","getDiagnosticsByUri","diag","setOnDisposeCallback","resourcesUris","uris","toUrisArray","markers","nextUri","uriMarkers","uriDiagnostics","severity","DIAGNOSTICS_PRIORITY","lastMarker","MarkerSeverity","Information","Hint","Diagnostics","diagnosticsChangedEmitter","LANGUAGES_MAIN","diagnosticCollections","getAllDiagnosticsForResource","getAllDiagnostics","GENERATED_DIAGNOSTIC_COLLECTION_NAME_PREFIX","getNextId","diagnosticCollection","MAX_DIAGNOSTICS_PER_FILE","generateUuid","urisIndexes","nextIndex","diagnosticsCollection","uriIndex","_terminals","_pseudoTerminals","terminalLinkProviders","terminalObservers","terminalProfileProviders","onDidCloseTerminalEmitter","onDidOpenTerminalEmitter","onDidChangeActiveTerminalEmitter","onDidChangeTerminalStateEmitter","environmentVariableCollections","MultiKeyMap","onDidChangeShellEmitter","TERMINAL_MAIN","values","$setShell","UUID","uuid4","pseudoTerminal","parentId","pty","PseudoTerminal","parentTerminal","TerminalExtImpl","k","v","iconPath","iconUrl","PluginIconPath","toUrl","color","$createTerminal","creationOptions","obtainTerminal","attachPtyToTerminal","terminalId","terminal","$terminalOnInput","emitOnInput","$terminalOnInteraction","isInteractedWith","$terminalShellTypeChanged","shellType","$terminalSizeChanged","clos","rows","emitOnResize","$terminalCreated","$terminalNameChanged","$terminalOpened","processId","cols","deferredProcessId","tId","pseudo","emitOnOpen","$terminalClosed","exitStatus","Unknown","emitOnClose","activeTerminalId","$currentTerminalChanged","nextProviderId","$registerTerminalLinkProvider","$unregisterTerminalLinkProvider","$registerTerminalObserver","nrOfLinesToMatch","outputMatcherRegex","$unregisterTerminalObserver","$reportOutputMatch","observerId","matchOccurred","isExtensionTerminalOptions","$startProfile","profileId","cancellationToken","profile","provideTerminalProfile","$provideTerminalLinks","links","providedLinks","provideTerminalLinks","link","$handleTerminalLink","handleTerminalLink","getEnvironmentVariableCollection","extensionIdentifier","collection","EnvironmentVariableCollectionImpl","getScoped","scope","workspaceFolder","setEnvironmentVariableCollection","syncEnvironmentVariableCollection","serialized","$setEnvironmentVariableCollection","persistent","mutators","fromMarkdownOrString","pluginIdentifier","onDidChangeCollection","$initEnvironmentVariableCollections","collections","entry","_description","onDidChangeCollectionEmitter","_persistent","variable","_setIfDiffers","Replace","applyAtProcessCreation","append","Append","prepend","Prepend","mutator","current","shellIntegration","sendText","shouldExecute","$sendText","show","$show","hide","$hide","$dispose","waitOnExit","onDidWrite","$write","$writeByTerminalId","onDidClose","$disposeByTerminalId","onDidOverrideDimensions","$resize","columns","$resizeByTerminalId","onDidChangeName","$setName","$setNameByTerminalId","handleInput","open","setDimensions","provideFoldingRanges","ranges","fromFoldingRange","PreferenceSchemaService","InlineCompletionAdapterBase","provideInlineCompletions","_resource","_position","_context","_token","disposeCompletions","pid","references","ReferenceMap","languageTriggerKindToVSCodeTriggerKind","Automatic","Explicit","Invoke","provideInlineCompletionItems","selectedCompletionInfo","selectedSuggestionInfo","normalizedResult","disposableCollection","createReferenceId","insertText","snippet","filterText","disposeReferenceId","MessageRegistryExt","initialize","MESSAGE_REGISTRY_MAIN","optionsOrFirstItem","rest","actions","pushItem","isCloseAffordance","onCloseActionHandle","modal","detail","actionHandle","$showMessage","postConstruct","ChangeKind","StructuralMenuChange","MenuContribution","CHANGED","MenuNodeFactory","MenuModelRegistry","contributions","menuNodeFactory","isReady","root","createGroup","addNode","MAIN_MENU_BAR","onStart","contrib","getContributions","registerMenus","registerCommandMenu","menuPath","parent","getOrCreate","removeNode","fireChangeEvent","REMOVED","affectedChildId","registerMenuAction","createCommandMenu","registerSubmenu","contextKeyOverlay","existing","Group","newMenu","createSubmenu","ADDED","linkCompoundMenuNode","newParentPath","submenuPath","child","getMenu","newParent","MutableCompoundMenuNode","createSubmenuLink","LINKED","unregisterMenuAction","itemOrCommandOrId","MenuAction","Command","findInNode","removeActionInSubtree","CompoundMenuNode","pathIndex","getMenuNode","removeSingleRootNodes","fullMenuModel","previous","removeSingleRootNode","singleChild","ContributionProvider","named","CommandRegistry","asString","fsPath","packagePath","absolutePath","isAbsolute","normalizedPath","relativePath","relative","light","dark","toLocalizedCommand","nlsLabelKey","nlsCategoryKey","localize","originalLabel","category","originalCategory","toDefaultLocalizedCommand","compareCommands","aCommand","bCommand","localeCompare","CommandContribution","commandServicePath","CommandService","contributionProvider","_commands","_handlers","toUnregisterCommands","_recent","onWillExecuteCommandEmitter","onWillExecuteCommand","onDidExecuteCommandEmitter","onDidExecuteCommand","onCommandsChangedEmitter","onCommandsChanged","fireDidChange","debounce","doFireDidChange","registerCommands","getAllCommands","handlers","doRegisterCommand","unregisterCommand","commandOrId","toUnregister","getActiveHandler","getVisibleHandler","getToggledHandler","fireWillExecuteCommand","execute","commandIds","recent","recentId","addRecentCommand","recentCommand","findIndex","clearCommandHistory","ProgressClient","provideEvaluatableExpression","expression","fromEvaluatableExpression","PluginDebugAdapterSession","DebugAdapterSessionImpl","tracker","theiaSession","onWillStartSession","onWillStopSession","customRequest","getDebugProtocolBreakpoint","breakpoint","onDidSendMessage","onWillReceiveMessage","onExit","DEFAULT_LOG_LEVEL","INFO","Stopwatch","onDidAddMeasurementResult","onDidAddMeasurementResultEmitter","defaultLogOptions","_storedMeasurements","defaultLogLevel","storeResults","startAsync","computation","threshold","thresholdMillis","Number","POSITIVE_INFINITY","measure","log","createMeasurement","logOptions","mergeLogOptions","measurement","elapsed","startTime","duration","owner","activity","optionalArgs","atLevel","DEBUG","info","WARN","ERROR","levelOverride","arguments","level","isNaN","FATAL","timeFromStart","now","toFixed","whatWasMeasured","logger","storedMeasurements","ILogger","unmanaged","SelectionService","onSelectionChangedEmitter","onSelectionChanged","currentSelection","notebookData","internalVisible","notebook","trySetSelections","revealRange","revealType","visible","acceptVisibility","WeakMap","DECORATIONS_MAIN","providersMap","pluginInfo","$registerDecorationProvider","onDidChangeFileDecorations","$onDidChange","maxEventSize","compareFn","rank","picked","outer","lastDirname","myDirname","dirname","$unregisterDecorationProvider","$provideDecorations","requests","provideFileDecoration","validate","propagate","tooltip","badge","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","createWordRegExp","global","flags","ignoreCase","multiline","lastIndex","column","textOffset","word","getWordAtPosSlow","lastIndexOf","getWordAtPosFast","THEIA_VERSION","languageProtocol","SymbolKindConverter","toItemHierarchyDefinition","modelItem","toSymbolKind","selectionRange","fromItemHierarchyDefinition","fromSymbolKind","lineNumber","File","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","Boolean","Key","Null","EnumMember","Struct","Operator","TypeParameter","caller","fromRanges","callee","Listener","await","list","registeredCount","register","reg","l","_isTelemetryEnabled","onDidChangeTelemetryEnabledEmitter","TelemetryLogger","telemetryEnabled","onDidChangeEnableStatesEmitter","onDidChangeEnableStates","commonProperties","getCommonProperties","_isErrorsEnabled","_isUsageEnabled","isUsageEnabled","isErrorsEnabled","logUsage","eventName","logEvent","logError","eventNameOrException","sendErrorData","flush","tempSender","additionalProperties","updatedData","cleanData","mixin","mixInCommonPropsAndCleanData","additionalCommonProperties","ignoreBuiltInCommonProperties","sendEventData","cleanUpPatterns","cloneAndChange","updatedProperty","cleanupPatterns","updatedStack","cleanUpIndexes","regexp","nodeModulesRegex","fileRegex","overlappingRange","anonymizeFilePaths","userDataRegexes","regex","secretRegex","removePropertiesWithPossibleUserInfo","CellKind","NotebookCellsChangeType","NotebookModelResource","NotebookCellModelResource","CellExecutionUpdateType","CellUri","notebookModelUri","notebookCellModelUri","mimeType","cellUriScheme","outputUriScheme","_lengths","_padRegexp","generate","fragment","Buffer","withScheme","withFragment","cell","parsedScheme","withoutFragment","generateCellOutputUri","outputId","withQuery","parseCellOutputUri","withoutQuery","generateCellPropertyUri","cellScheme","parseCellPropertyUri","propertyScheme","PreferenceProxySchema","PreferenceProxyChange","PreferenceChangeImpl","overrideIdentifier","resourceUri","InjectablePreferenceProxy","prefix","style","isDeep","isFlat","onPreferenceChangedEmitter","_onPreferenceChangedEmitter","subscribeToChangeEvents","onPreferenceChanged","promisedSchema","resolvedSchema","preferenceName","toGet","preferences","overridePreferenceName","getValue","ready","toJSON","ownKeys","parentSegment","segments","segment","fullProperty","PreferenceScope","Default","newPrefix","subProxy","valueAsContainer","pre","prop","enumerable","configurable","deleteProperty","defineProperty","onPreferencesChanged","handlePreferenceChanges","overrideInfo","overriddenPreferenceName","isRelevantChange","buildNewChangeEvent","newValue","oldValue","domain","preferenceIdentifier","OverridePreferenceName","isDisposable","PreferenceProxyOptions","PreferenceService","SUPPORTED_ENCODINGS","utf8","labelLong","labelShort","alias","utf8bom","encodeOnly","utf16le","utf16be","windows1252","iso88591","iso88593","iso885915","macroman","cp437","windows1256","iso88596","windows1257","iso88594","iso885914","windows1250","iso88592","cp852","windows1251","cp866","iso88595","koi8r","koi8u","iso885913","windows1253","iso88597","windows1255","iso88598","iso885910","iso885916","windows1254","iso88599","windows1258","gbk","gb18030","cp950","big5hkscs","shiftjis","eucjp","euckr","windows874","iso885911","koi8ru","koi8t","gb2312","cp865","cp850","MAX_UINT_32","toUint32","PrefixSumIndexOfResult","remainder","prefixSum","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","changeValue","removeValues","startIndex","maxCount","getTotalValue","_getAccumulatedValue","getAccumulatedValue","Math","max","getIndexOf","accumulatedValue","floor","midStop","midStart","Cache","provideInlayHints","hints","isValidInlayHint","convertInlayHint","resolveInlayHint","hint","part","fromPosition","textEdits","paddingLeft","paddingRight","partResult","fromMarkdown","releaseHints","provideSelectionRanges","positions","allProviderRanges","allResults","oneResult","last","fromSelectionRange","provideImplementation","STATUS_BAR_MESSAGE_REGISTRY_MAIN","statusMessage","StatusBarMessage","timeoutOrThenable","d","setMessage","StatusBarItemImpl","statusBar","_messages","_item","Left","MIN_VALUE","_update","IGNORE_ENCODINGS","EncodingService","addBOM","hasBOM","toIconvEncoding","iconv","exists","encodingExists","toResourceEncoding","overwriteEncoding","detectEncodingByBOMFromBuffer","detectEncoding","autoGuessEncoding","bytesRead","seemsBinary","couldBeUTF16LE","couldBeUTF16BE","containsZeroByte","isEndian","isZeroByte","readUInt8","guessEncodingByBuffer","guessed","detect","enc","decodeStream","minBytesRequiredForDetection","guessEncoding","strings","bufferedChunks","decoder","bytesBuffered","createDecoder","detected","getDecoder","decoded","encodeStream","BinaryBufferReadable","fromReadable","encoder","getEncoder","bytesWritten","leftovers","func","onDisposeEmitter","disposingElements","onDispose","checkDisposed","disposed","disposable","originalDispose","toRemove","pushAll","provideRanges","provideLinkedEditingRanges","wordPattern","serializeRegExp","documentExt","editorProviders","EditorProviderStore","CustomDocumentStore","CUSTOM_EDITORS_MAIN","addTextProvider","$registerTextEditorProvider","supportsMove","moveCustomTextEditor","addCustomProvider","supportEditing","onDidChangeCustomDocument","getCustomDocumentEntry","undo","redo","isEditEvent","editId","addEdit","$onDidEdit","$onContentChange","$registerCustomEditorProvider","supportsMultipleEditorsPerDocument","$unregisterEditorProvider","$createCustomDocument","openContext","cancellation","revivedResource","openCustomDocument","editable","$disposeCustomDocument","$resolveWebviewEditor","panel","resolveCustomEditor","resolveCustomTextEditor","$disposeEdits","resourceComponents","editIds","disposeEdits","$onMoveCustomEditor","newResourceComponents","webview","getWebviewPanel","cancellationSource","$undo","$redo","$revert","getCustomEditorProvider","revertCustomDocument","saveCustomDocument","targetResource","saveCustomDocumentAs","CustomDocumentStoreEntry","getEdit","providers","userAgent","platform","navigator","OS","isWindows","isOSX","EOL","Type","Windows","OSX","Linux","backend","OSBackendProviderPath","OSBackendProvider","Date","LogType","destination","overwrite","construct","setPrototypeOf","prototype","isUndefined","isUndefinedOrNull","ClipboardExt","CLIPBOARD_MAIN","readText","$readText","writeText","$writeText","hasBuffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","alloc","allocUnsafe","actual","isBuffer","buffers","totalLength","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","writeUInt8","BinaryBufferReadableStream","BinaryBufferReadableBufferedStream","BinaryBufferWriteableStream","toBuffer","streams","consumeReadable","fromBuffer","toReadable","consumeStream","toStream","bufferedStream","isMcpHttpServerDefinitionDto","what","errno","isErrnoException","ColorTheme","Dark","_onDidChangeActiveColorTheme","$onColorThemeChange","convertKind","Light","HighContrast","HighContrastLight","ActivatedPlugin","pluginContext","stopFn","MinimalTerminalServiceExt","AbstractPluginManagerExtImpl","registry","activations","loadedPlugins","activatedPlugins","pluginContextsMap","jsonValidation","pluginKind","UI","messageRegistryProxy","notificationMain","NOTIFICATION_MAIN","setPluginHost","pluginHost","host","$stop","stopAll","stopPlugin","terminate","terminating","subscription","subscriptions","$start","configStorage","foreignPlugins","registerPlugin","$activateByEvent","activationEvent","activationEvents","loadTests","fireOnDidChange","getActivationEvents","activation","$activatePlugin","setActivation","unsupportedActivationEvents","isSupportedActivationEvent","loadPlugin","visited","loading","progressId","$startProgress","displayName","extensionDependencies","dependencyId","dependency","pluginMain","startPlugin","$stopProgress","$updateStoragePath","hostStoragePath","storagePath","endsWith","baseEvent","activateByBaseEvent","activateBySingleEvent","pendingActivations","logPath","hostLogPath","secrets","SecretStorageExt","globalStoragePath","hostGlobalStoragePath","extension","extensionModeValue","isUnderDevelopment","Development","Production","globalState","GlobalState","workspaceState","asAbsolutePath","storageUri","globalStorageUri","environmentVariableCollection","terminalService","extensionMode","logUri","languageModelAccessInformation","canSendRequest","lifecycle","stopMethod","startMethod","localization","initializeLocalizedMessages","pluginExport","self","g","activePlugin","isRunning","EnvExtImpl","LocalizationExt","PluginManagerExtImpl","$init","setQueryParameters","queryParams","setUIKind","setLanguage","setApplicationName","setAppHost","setAppRoot","setAppUriScheme","appUriScheme","preferencesManager","extApi","initExtApi","supportedActivationEvents","PreferenceRegistryExtImpl","WebviewsExtImpl","textDocumentsAndEditors","notebookStatusBarItemProviders","onDidChangeActiveNotebookEditorEmitter","onDidOpenNotebookDocumentEmitter","onDidCloseNotebookDocumentEmitter","onDidChangeVisibleNotebookEditorsEmitter","statusBarRegistry","currentSerializerHandle","notebookSerializer","commandsConverter","notebookProxy","NOTEBOOKS_MAIN","notebookDocumentsProxy","NOTEBOOK_DOCUMENTS_MAIN","NOTEBOOK_EDITORS_MAIN","registerArgumentProcessor","processArgument","cellUri","getCell","apiCell","$provideNotebookCellStatusBarItems","revivedUri","fromComponents","getCellFromIndex","provideCellStatusBarItems","typeConverters","NotebookStatusBarItem","$releaseNotebookCellStatusBarItems","$acceptActiveCellEditorChange","newActiveEditor","newActiveEditorId","acceptEditorsAndDocumentsDelta","$registerNotebookSerializer","NotebookDocumentContentOptions","$unregisterNotebookSerializer","$dataToNotebook","deserializeNotebook","$notebookToData","serializeNotebook","eventHandle","onDidChangeCellStatusBarItems","$registerNotebookCellStatusBarItemProvider","$emitCellStatusBarEvent","$unregisterNotebookCellStatusBarItemProvider","$acceptDocumentsAndEditorsDelta","removedCellDocuments","removedDocuments","getCells","addedDocuments","modelData","cells","Cell","asModelAddData","addedEditors","editorModelData","documentUri","createExtHostEditor","removedEditors","visibleEditors","visibleEditorsSet","newActiveCell","cellAt","relaxed","waitForNotebookDocument","waitForNotebookEditor","canonicalUri","$tryCreateNotebook","$tryOpenNotebook","notebookOrUri","resolvedOptions","pinned","$tryShowNotebookDocument","mapProgressIdToCancellationSource","progress","$updateProgress","mapLocation","cancellable","$acceptProgressCanceled","Notification","Window","idGenerator","fromTypeHierarchyItem","sessionCache","itemId","_itemId","_sessionId","tags","prepareSession","prepareTypeHierarchy","provideSupertypes","fetchItemFromCatch","supertypes","provideTypeHierarchySupertypes","supertype","provideSubtypes","subTypes","provideTypeHierarchySubtypes","subtype","releaseSession","restarts","maxErrors","maxRestarts","restartInterval","shouldStop","shouldRestart","serverName","AbstractChannel","RpcProtocol","registerMsgPackExtensions","itemsBySourceAndUriMap","TIMELINE_MAIN","TimelineCommandArg","timelineHandle","$getTimeline","internalOptions","provideTimeline","timelineDisposables","convertTimelineItem","$fireTimelineChanged","reset","registerTimelineProviderCore","resetCache","convertItem","sourceMap","cacheResults","itemsByUri","uriKey","getUriKey","timestamp","$registerTimelineProvider","$unregisterTimelineProvider","ContainerModule","BasicChannel","writeBuffer","Uint8ArrayWriteBuffer","onCommit","addEventListener","onMessageEmitter","Uint8ArrayReadBuffer","RPCProtocolImpl","toSelf","WorkerEnvExtImpl","LocalizationExtImpl","toService","DebugExtImpl","createChild","createDebugExtStub","EditorsAndDocumentsExtImpl","WorkspaceExtImpl","TreeViewItemReference","TreeViewItemCollapsibleState","ScmCommandArg","CommentsCommandArg","CommentsContextCommandArg","CommentsEditCommandArg","EditorPosition","TrackedRangeStickiness","WorkspaceTextEditDto","WorkspaceNotebookCellEditDto","PluginManager","for","emptyPlugin","publisher","engine","packageUri","engines","contentId","textEdit","cellEdit","LanguagesMainFactory","OutputChannelRegistryFactory","LOGGER_MAIN","createProxyIdentifier","AUTHENTICATION_MAIN","COMMAND_REGISTRY_MAIN","QUICK_OPEN_MAIN","DIALOGS_MAIN","WORKSPACE_MAIN","NOTEBOOK_DOCUMENTS_AND_EDITORS_MAIN","NOTEBOOK_KERNELS_MAIN","ENV_MAIN","TREE_VIEWS_MAIN","PREFERENCE_REGISTRY_MAIN","OUTPUT_CHANNEL_REGISTRY_MAIN","WEBVIEWS_MAIN","WEBVIEW_VIEWS_MAIN","TASKS_MAIN","DEBUG_MAIN","FILE_SYSTEM_MAIN","SCM_MAIN","LABEL_SERVICE_MAIN","THEMING_MAIN","COMMENTS_MAIN","TELEMETRY_MAIN","LOCALIZATION_MAIN","TESTING_MAIN","URI_MAIN","MCP_SERVER_DEFINITION_REGISTRY_MAIN","HOSTED_PLUGIN_MANAGER_EXT","WORKSPACE_EXT","EDITORS_AND_DOCUMENTS_EXT","PREFERENCE_REGISTRY_EXT","WEBVIEWS_EXT","STORAGE_EXT","SECRETS_EXT","Path","isDrive","normalizeDrive","charCodeAt","fromCharCode","normalizePathSeparator","separator","windowsPath","toUpperCase","tildify","resourcePath","home","untildify","untildifiedResource","untildifiedPath","raw","firstIndex","isRoot","computeRoot","extIndex","ext","dir","_dir","computeDir","hasDir","reverse","format","Format","isEqualOrParent","relativity","relativeStr","trailingSlash","pathArray","resultArray","_documents","commentControllers","commentControllersByExtension","commentController","commentControlHandle","commentThread","getCommentThread","commentThreadHandle","thread","getCommentByUniqueId","commentUniqueId","comment","CommentController","$createCommentThreadTemplate","commentControllerHandle","uriComponents","$updateCommentThreadTemplate","threadHandle","$deleteCommentThread","$provideCommentingRanges","commentingRangeProvider","commentingRanges","provideCommentingRanges","x","fileComments","enableFileComments","ExtHostCommentThread","threadId","_id","_uri","_range","isEqual","modifications","_onDidUpdateCommentThread","_label","contextValue","_contextValue","_comments","newComments","collapsibleState","collapseState","newState","_state","_isDisposed","canReply","_canReply","_handlePool","commentHandle","onDidUpdateCommentThread","commentsMap","acceptInputDisposables","$createCommentThread","localDisposables","eventuallyUpdateCommentThread","formattedModifications","theiaComment","author","date","toISOString","mode","uniqueIdInThread","userName","userIconPath","convertToModeComment","Expanded","Collapsed","convertToCollapsibleState","Resolved","Unresolved","convertToState","$updateCommentThread","uniqueId","_handle","threads","$registerCommentController","$updateCommentControllerFeatures","createCommentThread","arg0","arg1","arg2","arg3","$unregisterCommentController","NodeDebugAdapterCreator","PluginDebugAdapterCreator","debuggerContribution","toPlatformInfo","program","programArgs","runtime","runtimeArgs","debugConfiguration","connectSocketDebugAdapter","startDebugAdapter","connectPipeDebugAdapter","port","debugServer","winx86","win","windows","osx","linux","stdio","childProcess","cwd","forkOptions","execArgv","silent","fork","spawn","ProcessDebugAdapter","server","socket","net","createConnection","SocketDebugAdapter","deepFreeze","PreferenceProviderProvider","PreferenceServiceImpl","onPreferencesChangedEmitter","preferenceProviders","_ready","_isReady","initializeProviders","schemaService","validScopes","providerProvider","onDidPreferencesChanged","reconcilePreferences","changesToEmit","acceptChange","getAffectedPreferenceNames","overridden","doGet","getProvider","changedPreferenceNames","preferenceOverrideService","preference","getSchemaProperty","overridable","overrideId","overrideIdentifiers","doHas","configUri","doResolve","resolvedScope","Folder","Workspace","setPreference","getBoolean","getString","getNumber","inspect","forceLanguageOverride","inspectInScope","globalValue","User","workspaceValue","workspaceFolderValue","doInspectInScope","getScopedValueFromInspection","inspection","unreachable","updateValue","scopesToChange","getScopesToChange","effectiveValue","JSONExt","deepEqual","intendedValue","allScopes","isScopeDefined","canHandleScope","PreferenceUtils","merge","getConfigUri","sectionName","configurations","getConfigName","isAnyConfig","getContainingConfigUri","PreferenceConfigurations","PreferenceLanguageOverrideService","createPreferenceProxy","opts","isThenable","unsupportedOperation","__","ApplicationError","codes","declare","constructorOpt","Impl","fromJson","captureStackTrace","toJson","_references","_idPool","referenceId","ContributionFilterRegistryImpl","initialized","genericFilters","typeToFilters","contribution","registerContributionFilters","addFilters","filters","applyFilters","toFilter","getFilters","object","multiInject","optional","ObjectIdentifier","of","_proxy","_alignment","_priority","_name","_text","_tooltip","_color","backgroundColor","_backgroundColor","_command","accessibilityInformation","_accessibilityInformation","isMarkdownString","markdownTooltip","updatedContent","linkText","argsEncoded","tooltipPart","decodeURIComponent","safeCommand","newArgsPart","encodeURIComponent","originalLink","safeLink","BACKGROUND_COLORS","information","_isVisible","_timeoutHandle","$setMessage","ID_PREFIX","PreferenceProviderDataChange","PreferenceProvider","deepCopy","isPrimitive","sourceValue","Resource","ResourceError","trySaveContentChanges","saveContentChanges","shouldSaveContent","NotFound","OutOfSync","contentLength","saveStream","contentChangesLength","saveContents","ResourceResolver","ResourceProvider","DefaultResourceProvider","resolversProvider","resolvers","resolver","MutableResource","onDidChangeContentsEmitter","onDidChangeContents","readContents","fireDidChangeContents","ReferenceMutableResource","reference","InMemoryResources","resources","SyncReferenceCollection","acquire","MEMORY_TEXT","InMemoryTextResource","InMemoryTextResourceResolver","UNTITLED_SCHEME","untitledResourceSequenceIndex","UntitledResourceResolver","createUntitledResource","createUntitledURI","UntitledResource","untitledUri","counter","autosaveable","initiallyDirty","DefaultsPreferenceProvider","PreferenceProviderBase","preferenceSchemaService","onDidChangeDefaultValue","changeFor","override","otherAffectedOverrides","emitPreferencesChangedEvent","getDefaultValue","inspectDefaultValue","getPreferences","getDefaultValues","idSequence","provideSignatureHelp","pluginHelpContext","reviveContext","activeParameter","signatures","activeSignature","activeSignatureHelp","revivedSignatureHelp","saved","releaseSignatureHelp","provideInlineValues","viewPort","toInlineValueContext","inlineValue","iv","fromInlineValue","BaseStat","FileStat","FileSystemProviderErrorCode","ReadOnlyMessageFileSystemProvider","isOperation","checkForChangeType","getAdded","getOfType","gotAdded","hasType","getDeleted","gotDeleted","getUpdated","gotUpdated","asFileType","stat","isFile","isDirectory","Directory","isSymbolicLink","SymbolicLink","fromStat","isReadonly","permissions","Readonly","mtime","ctime","etag","fileStat","toStat","FileOperationError","fileOperationResult","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","FileSystemProvider","capabilities","ETAG_DISABLED","BinarySize","formatSize","KB","MB","GB","TB","_modeId2WordDefinition","getWordDefinitionFor","regExpLeadsToEndlessLoop","lines","eol","versionId","textLines","dirty","ok","lineStarts","acceptDeleteRange","acceptInsertText","_document","fileName","isUntitled","getTextInRange","LF","CRLF","lineCount","lineAt","lineOrPos","offsetAt","positionAt","validateRange","validatePosition","insertLines","setLineText","newLengths","lineIndex","$trySaveDocument","isSingleLine","lineEnding","startLineIndex","endLineIndex","resultLines","hasChanged","maxCharacter","lineOrPosition","firstNonWhitespaceCharacterIndex","rangeIncludingLineBreak","isEmptyOrWhitespace","ensureLineStarts","eolLength","linesLength","lineStartValues","PrefixSumComputer","out","lineLength","min","wordAtText","getWordAtText","ensureValidWordDefinition","getWebSocketUrl","wsScheme","pathname","getRestUrl","httpScheme","protocol","PROTO_FILE","getSearchParam","search","encoded","PROTO_HTTPS","PROTO_WSS","PROTO_WS","PROTO_HTTP","Options","provideTypeDefinition","ProxyIdentifier","isMain","ConnectionClosedError","identifier","locals","proxies","BatchingChannel","handleRequest","onNotification","handleNotification","serviceId","proxyId","createProxy","isNotify","isNotification","sendRequest","sendNotification","propertyString","instance","underlyingChannel","messagesToSend","handleMessages","getWriteBuffer","writer","commitSingleMessage","setImmediate","sendAccumulated","cachedMessages","writeLength","commit","readLength","onCloseEmitter","onErrorEmitter","writeBufferProvider","ForwardingChannel","closeHandler","writeBufferSource","MessageTypes","onDidOpenChannel","onOpenChannelEmitter","pendingOpen","openChannels","handleMessage","onUnderlyingChannelClose","handleError","readUint8","readString","AckOpen","handleAckOpen","Open","handleOpen","Close","handleClose","Data","handleData","createChannel","writeUint8","writeString","sliceAtReadPosition","closeChannel","prepareWriteBuffer","underlying","getOpenChannel","QuickPickItem","QuickPickSeparator","QuickInputHideReason","findMatches","toLocaleLowerCase","delimiter","matchResult","fuzzy","post","rendered","highlights","quickPickServicePath","QuickPickService","quickInputServicePath","QuickInputService","filteredItems","ContainerBasedContributionProvider","serviceIdentifier","recursive","services","currentServices","filterRegistry","currentContainer","isBound","getAll","Bindable","isContainer","bindable","whenTargetNamed","service","_data","logDebugInfo","enableDebugLogging","fromViewColumn","One","Beside","isDecorationOptionsArr","something","fromManyMarkdown","markup","toMarkdown","implemented","baseUri","rp","isRelativePattern","newText","fromSnippetTextEdit","insertAsSnippet","keepWhitespace","convertCode","convertSeverity","convertRelatedInformation","diagnosticsRelatedInformation","relatedInformation","convertTags","markerTags","Unnecessary","MarkerTag","Deprecated","fromLocationToLanguageServerLocation","ThemableDecorationRenderOptions","ThemableDecorationAttachmentRenderOptions","NotebookCellOutputConverter","NotebookCellExecutionSummary","TestItem","fromDocumentHighlightKind","Text","Read","Write","fromSymbolTag","toSymbolTag","isModelRange","isUriComponents","isModelCallHierarchyItem","fromHierarchyItem","toCallHierarchyItem","fromProcessExecution","taskDto","executionType","fromShellExecution","getShellExecutionOptions","commandLine","getShellArgs","fromCustomExecution","getProcessExecution","getShellExecution","getCustomExecution","shellQuoting","fromFoldingRangeKind","Comment","Imports","Region","convertIconPath","convertQuickInputButton","button","pathOrURIToURI","ep","ONE","TWO","Two","THREE","Three","FOUR","Four","FIVE","Five","SIX","Six","SEVEN","Seven","EIGHT","Eight","NINE","Nine","area","Main","anchor","hoverMessage","renderOptions","isReadonlyArray","Unit","Value","Keyword","Snippet","Reference","Issue","hover","evaluatableExpression","variableName","caseSensitiveLookup","inlineValueContext","ivLocation","stoppedLocation","frameId","targetUri","targetRange","originSelectionRange","targetSelectionRange","url","documentHighlight","documentation","help","_allEntries","_type","workspaceTextEditDto","modelVersionId","workspaceFileEditDto","oldResource","newResource","editType","fromMapping","fromDocumentSymbol","toDocumentSymbol","toMergedSymbol","uriValue","containerName","runOptions","reevaluateOnRerun","hasProblemMatchers","problemMatcher","problemMatchers","presentationOptions","presentation","isDefault","taskDefinition","symbolInformation","p1","lstypes","p2","foldingRange","red","green","blue","alpha","colorPresentation","additionalTextEdits","Separator","alwaysShow","buttons","isWholeLine","rangeBehavior","overviewRulerLane","outline","outlineColor","outlineStyle","outlineWidth","border","borderColor","borderRadius","borderSpacing","borderStyle","borderWidth","fontStyle","fontWeight","textDecoration","cursor","opacity","letterSpacing","gutterIconPath","gutterIconSize","overviewRulerColor","OpenOpen","AlwaysGrowsWhenTypingAtEdges","ClosedClosed","NeverGrowsWhenTypingAtEdges","OpenClosed","GrowsOnlyWhenTypingBefore","ClosedOpen","GrowsOnlyWhenTypingAfter","contentText","contentIconPath","margin","mime","resolveFileData","fileData","asFile","uriListData","toDataTransfer","dataTransfer","transientOutputs","transientCellMetadata","transientDocumentMetadata","isEmptyObject","cellKind","internalMetadata","executionSummary","outputs","Markup","Code","output","valueBytes","ensureUniqueMimeTypes","seen","removeIdx","isTextStreamMime","timing","runStartTime","runEndTime","endTime","executionOrder","success","lastRunSuccess","expected","expectedOutput","actualOutput","stackTrace","frame","fromPartial","sortKey","sortText","busy","canResolveChildren","PreferenceConfiguration","bindContributionProvider","getPaths","getSectionNames","sectionNames","isSectionName","isSectionUri","getName","isConfigUri","getPath","createUri","configPath","configName","onNotificationEmitter","pendingRequests","pendingRequestCancellationEventListeners","nextMessageId","cancellationTokenSources","MsgPackMessageEncoder","MsgPackMessageDecoder","pending","readBuffer","handleCancel","handleNotify","handleReply","handleReplyErr","replyHandler","disposeCancellationEventListener","reply","CANCELLATION_TOKEN_KEY","disposableWrapper","DisposableWrapper","sendCancel","cancellationTokenSource","tokenSource","errorOutput","OVERRIDE_PROPERTY_PATTERN","getOverridePattern","testOverrideValue","markLanguageOverride","matches","computeOverridePatternPropertiesKey","param","getOverridePreferenceNames","$unregisterResourceLabelFormatter","DeltaKind","wrapped","mapPartial","reportAdded","reportRemoved","reportChanged","TreeDeltaBuilderImpl","_currentDelta","currentDelta","findNode","parentCollection","nodeIndex","residual","NONE","insert","prefixLength","computePrefixLength","childDeltas","newNode","doFindNode","rootCollection","commonPrefixLength","childIndex","timeoutMillis","onDidFlushEmitter","onDidFlush","batcher","ChangeBatcher","doEmitDelta","batch","changeOccurred","CustomEditorPriority","PluginViewType","PluginDeployerEntryType","PluginType","IconContribution","getPluginId","PluginIdentifiers","hostedServicePath","pck","PluginScanner","PluginDeployerResolver","PluginDeployerDirectoryHandler","PluginDeployerFileHandler","PluginDeployer","PluginDeployerParticipant","isIconDefinition","defaults","MetadataProcessor","HostedPluginClient","PluginDeployerHandler","HostedPluginServer","PLUGIN_HOST_BACKEND","pluginServerJsonRpcPath","PluginServer","ServerPluginRunner","PluginHostEnvironmentVariable","CompletionItemInsertTextRule","HierarchyItem","FsLinkProvider","_schemes","_stateMachine","_initStateMachine","schemes","edges","prevScheme","prevState","lastState","nextState","StateMachine","provideDocumentLinks","LinkComputer","computeLinks","getLineContent","getLineCount","docLink","typeConverter","ConsumerFileSystem","_capabilities","$stat","catch","_handleError","readDirectory","$readdir","createDirectory","$mkdir","readFile","$readFile","writeFile","$writeFile","$delete","useTrash","rename","oldUri","newUri","$rename","copy","$copy","isWritableFileSystem","files","_linkProvider","_fsProvider","_usedSchemes","_watches","onWillRegisterFileSystemProviderEmitter","onWillRegisterFileSystemProvider","readonlyMessage","isCaseSensitive","$registerFileSystemProvider","onDidChangeFile","newType","Changed","Created","Deleted","$onFileSystemChange","$unregisterProvider","_asIStat","$acceptProviderInfos","_getFsProvider","$watch","watch","$unwatch","$open","$close","fd","$read","canceledName","isPromiseCanceledError","_sessions","_instances","itemsOrItemsPromise","onDidSelectItem","itemsPromise","widgetPromise","canPickMany","placeHolder","matchOnDescription","matchOnDetail","ignoreFocusLost","ignoreFocusOut","widgetClosedMarker","widgetClosedPromise","pickItems","convertToTransferQuickPickItems","$setItems","h","$setError","$onItemSelected","validateInputHandler","validateInput","$input","$showInputBox","$validateInput","Severity","Ignore","QuickPickExt","InputBoxExt","$acceptOnDidAccept","_fireAccept","$acceptDidChangeValue","changedValue","_fireChangedValue","$acceptOnDidHide","_fireHide","$acceptOnDidTriggerButton","btn","_fireButtonTrigger","Back","btnFromHandle","$onDidChangeActive","handles","_fireDidChangeActive","$onDidChangeSelection","_fireDidChangeSelection","$onDidTriggerItemButton","itemHandle","buttonHandle","_fireDidTriggerItemButton","QuickInputExt","quickOpen","quickOpenMain","_onDidDispose","_nextId","_buttons","_handlesToButtons","expectingHide","_pendingUpdate","step","totalSteps","enabled","onDidAcceptEmitter","_onDidChangeValueEmitter","onDidHideEmitter","onDidTriggerButtonEmitter","_title","_step","_totalSteps","_enabled","_busy","_ignoreFocusOut","_value","_placeholder","_updateTimeout","dispatchUpdate","$createOrUpdate","convertURL","onDidHide","onDidAccept","onDidChangeValue","onDidTriggerButton","password","_password","prompt","_prompt","valueSelection","_valueSelection","validationMessage","_validationMessage","_items","_handlesToItems","_itemsToHandles","_canSelectMany","_matchOnDescription","_matchOnDetail","_sortByLabel","_keepScrollPosition","_activeItems","_selectedItems","_onDidChangeActiveEmitter","_onDidChangeSelectionEmitter","_onDidTriggerItemButtonEmitter","onDidChangeActive","onDidChangeSelection","onDidTriggerItemButton","canSelectMany","sortByLabel","keepScrollPosition","activeItems","selectedItems","provideDocumentFormattingEdits","onDidPreferencesChangedEmitter","fireDidPreferencesChanged","deferredChanges","mergePreferenceProviderDataChange","PreferenceProviderImpl","getDomain","getParsedContent","jsonData","preferenceValue","overriddenValue","TestExecutionState","TestFailureDTO","TestItemReference","TestMessageArg","ref","Failed","Errored","typeTag","controllerId","testPath","testMessage","testItemReference","testMessageDTO","_UUIDPattern","v4","v5","FileSystemWatcher","_config","dispatcher","globPattern","excludes","_onDidCreate","_onDidChange","_onDidDelete","parsedPattern","excludePatterns","created","deleted","onDidCreate","onDidDelete","_extHostDocumentsAndEditors","_mainThreadTextEditors","_onFileSystemEvent","_onDidRenameFile","_onDidCreateFile","_onDidDeleteFile","_onWillRenameFile","AsyncEmitter","_onWillCreateFile","_onWillDeleteFile","$onFileEvent","$onDidRunFileOperation","_createWillExecuteEvent","wrappedListener","$onWillRunFileOperation","_fireWillEvent","flatten","thing","plainObject","es5ClassCompat","UriSelection","getUri","getUris","KnownCommands","mappings","f","createConversionFunction","fromPositionToP","CONVERT_VSCODE_TO_MONACO","argStack","isCallHierarchyItem","fromCallHierarchyItem","isTypeHierarchyItem","TextDocumentShowOptions","isTextDocumentShowOptions","fromTextDocumentShowOptions","isPosition","isLocation","vscodeToMonacoArgsConverter","identity","CONVERT_MONACO_TO_VSCODE","monacoToVscodeArgsConverter","argsArray","conversions","conversion","isModelTypeHierarchyItem","toTypeHierarchyItem","isModelCallHierarchyIncomingCall","toCallHierarchyIncomingCall","isModelCallHierarchyOutgoingCall","toCallHierarchyOutgoingCall","isModelLocation","toLocation","toDo","provideOnTypeFormattingEdits","TextDocumentContentChangeDelta","isNumber","_breakpoints","sessions","descriptorFactories","trackerFactories","contributionPaths","contributionTypes","onDidChangeBreakpointsEmitter","onDidChangeActiveDebugSessionEmitter","onDidTerminateDebugSessionEmitter","onDidCreateDebugSessionEmitter","onDidStartDebugSessionEmitter","onDidReceiveDebugSessionCustomEmitter","onDidChangeActiveStackItemEmitter","frontendAdapterCreator","backendAdapterCreator","$appendToDebugConsole","appendLine","$appendLineToDebugConsole","configurationProviderHandleGenerator","configurationProviders","commandRegistryExt","$registerDebuggerContribution","onDidCreateDebugSession","$addBreakpoints","removedIds","$removeBreakpoints","optionsDto","parentSessionId","compact","consoleMode","suppressSaveBeforeStart","suppressDebugStatusbar","suppressDebugView","lifecycleManagedByParent","noDebug","testRun","checkTestRunInstance","controller","runId","$startDebugging","$stopDebugging","getDebugSourceUri","sourceReference","DEBUG_SCHEME","SCHEME_PATTERN","tuple","provideDebugConfiguration","provideDebugConfigurations","resolveDebugConfigurations","resolveDebugConfiguration","resolveDebugConfigurationWithSubstitutedVariables","$registerDebugConfigurationProvider","$unregisterDebugConfigurationProvider","stackItem","_activeStackItem","$onDidChangeActiveThread","debugThread","$onDidChangeActiveFrame","debugFrame","$onSessionCustomEvent","$sessionDidCreate","$sessionDidStart","$sessionDidDestroy","$sessionDidChange","$breakpointsDidChange","bExt","toBreakpointExt","functionName","condition","hitCondition","logMessage","$createDebugSession","workspaceFolderUri","toWorkspaceFolder","response","$customRequest","$getDebugProtocolBreakpoint","createDebugAdapterTracker","communicationProvider","debugAdapterSession","connection","ensureConnection","$terminateDebugSession","$getTerminalCreationOptions","doGetTerminalCreationOptions","getConfigurationProviderRecord","record","$provideDebugConfigurationsByHandle","$resolveDebugConfigurationByHandle","$resolveDebugConfigurationWithSubstitutedVariablesByHandle","PluginDebugAdapterTracker","getAdapterCreator","adapterExecutableCommand","contributionPath","RpcConnectionHandler","targetFactory","factoryConstructor","RpcProxyFactory","onConnection","listen","defaultRpcProtocolFactory","rpcProtocolFactory","onDidOpenConnectionEmitter","onDidCloseConnectionEmitter","waitForConnection","rpcDeferred","meth","onRequest","serializeError","client","capturedError","deserializeError","capturedStack","JsonRpcProxyFactory","decorate","provideLinks","resolveLink","resolveDocumentLink","releaseDocumentLinks","ids","provideDocumentRangeFormattingEdits","PluginChannel","messageEmitter","errorEmitter","closedEmitter","$sendMessage","fireMessageReceived","fireError","fireClosed","cb","$deleteConnection","connections","$createConnection","doEnsureConnection","doCreateConnection","fromFilePath","codeUri","allLocations","withPath","authority","resolveToAbsolute","pathSegments","newCodeUri","withAuthority","withoutAuthority","withoutPath","normalizePath","_path","skipEncoding","caseSensitive","hasSameOrigin","getDistinctParents","otherUri","toComponents","shortcutEvent","Cancelled","isBoolean","MutableToken","_isCancelled","_emitter","_parentListener","cancelledMessage","observationFunction","emitBatch","timeoutMs","_values","onChangeEmitter","onChanged","AbstractIndexedCollection","doAdd","TreeCollection","pathOf","deltaBuilder","iter","_args","keyOf","authenticationProviders","onDidChangeSessionsEmitter","requestingExtension","extensionName","$getSession","$getAccounts","getSessions","$onDidChangeSessions","$registerAuthenticationProvider","supportsMultipleAccounts","$unregisterAuthenticationProvider","$createSession","authProvider","createSession","$removeSession","removeSession","$getSessions","accessToken","account","$onDidChangeAuthenticationSessions","optionsMain","openLabel","defaultUri","canSelectFiles","canSelectFolders","$showOpenDialog","saveLabel","$showSaveDialog","$showUploadDialog","workspaceFoldersChangedEmitter","documentContentProviders","searchInWorkspaceEmitter","workspaceSearchSequence","_trusted","didGrantWorkspaceTrustEmitter","canonicalUriProviders","folders","workspaceFileUri","resolveProxy","$resolveProxy","$onWorkspaceFoldersChanged","newFolders","roots","deltaFolders","refreshWorkspaceFile","$onWorkspaceLocationChanged","updateWorkSpace","$onTextSearchResult","searchRequestId","tRange","fileUri","lineText","searchId","currentFolders","foldersDiff","folder1","folder2","$pickWorkspaceFolder","includePattern","includeFolderUri","excludeString","useFileExcludes","$startFileSearch","useDefaultExcludes","useDefaultSearchExcludes","useIgnoreFiles","nextSearchID","searchResult","$findTextInFiles","Schemes","untitled","onDidChangeSubscription","$registerTextDocumentContentProvider","$provideTextDocumentContent","$onTextDocumentContentChange","$unregisterTextDocumentContentProvider","documentURI","provideTextDocumentContent","resolveParent","hasFolder","with","folderPath","rootsToAdd","folderToAdd","currentWorkspaceFolders","newWorkspaceFolders","otherFolder","$updateWorkspaceFolders","messageService","$getWorkspace","$requestWorkspaceTrust","$onWorkspaceTrustChanged","trust","$registerCanonicalUriProvider","$unregisterCanonicalUriProvider","$disposeCanonicalUriProvider","$getCanonicalUri","targetScheme","$provideCanonicalUri","parsed","provideCanonicalUri","asEncodeDecodeParameters","preferredEncoding","$resolveDecoding","decodeStreamOptions","detectedEncoding","$getValidEncoding","encodingService","$resolveEncoding","Filter","messageReceivedEmitter","closeEmitter","$append","$clear","preserveFocusOrColumn","$reveal","doCreateLogOutputChannel","doCreateOutputChannel","OutputChannelImpl","LogOutputChannelImpl","rootLoggerName","ConsoleLogger","aLogger","optionalParams","trace","TRACE","LoggerFactory","LoggerName","Logger","_logLevel","getLogLevel","loggerWatcher","loggerName","newLogLevel","setLogLevel","oldLevel","ifEnabled","getLog","isTrace","ifTrace","isDebug","ifDebug","isInfo","ifInfo","isWarn","ifWarn","isError","ifError","isFatal","ifFatal","fatal","ILoggerServer","NLS_REGEX","readPluginJson","pluginModel","XMLHttpRequest","onreadystatechange","readyState","DONE","status","readPluginFile","json","UNPUBLISHED","loadTranslations","translations","propertyName","manifest","built_prefix","windowTitleDescription","createCorePreferences","corePreferenceSchema","enum","markdownDescription","markdownEnumDescriptions","included","enumDescriptions","enumItemLabels","patternProperties","CorePreferenceContribution","CorePreferences","cursorStyle","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","sessionIds","provideRootDefinition","prepareCallHierarchy","provideCallers","callers","provideCallHierarchyIncomingCalls","fromCallHierarchyIncomingCall","provideCallees","callees","provideCallHierarchyOutgoingCalls","fromCallHierarchyOutgoingCall","ValidPreferenceScopes","getScopes","nameOrIndex","getReversedScopes","getScopeNames","names","scopeIndex","argumentProcessors","CommandsConverter","$registerCommand","$unregisterCommand","$registerHandler","$unregisterHandler","$executeCommand","executeLocalCommand","mappedId","mappedArgs","mappedResult","mr","$getKeyBinding","reduce","filterUnderscoreCommands","$getCommands","commandsMap","safeCommandId","isSafeCommandRegistered","toInternalCommand","executeSafeCommand","external","allArgs","CharacterClassifier","_defaultValue","toUint8","_asciiMap","_createAsciiMap","_map","asciiMap","charCode","INSTANCE","addExtension","MessageService","progressIdPrefix","random","processMessage","MessageType","Log","showProgress","onDidCancel","newProgressId","ProgressMessage","isCancelable","Cancel","clientMessage","reportProgress","MessageClient","providerChangeListeners","handleCounter","announcedMCPProviders","$registerMcpServerDefinitionProvider","onDidChangeMcpServerDefinitions","changeListener","$onDidChangeMcpServerDefinitions","$unregisterMcpServerDefinitionProvider","$provideServerDefinitions","definitions","provideMcpServerDefinitions","def","convertToDto","$resolveServerDefinition","resolveMcpServerDefinition","convertFromDto","isMcpHttpServerDefinition","headers","pluginsApiImpl","pluginsModulesNames","scripts","Container","load","importScripts","frontendModuleName","rawPluginData","foreign","pluginLifecycle","frontendInitPath","contextPath","loadManifest","apiImpl","apiFactory","api","frontendExtApi","initPath","initVariable","initFunction","clipboardExt","storageProxy","createAPIFactory","defaultApi","provideCompletionItems","replacing","inserting","completions","defaultRange","incomplete","isIncomplete","suggestion","convertCompletionItem","resolveCompletionItem","chainedId","resolvedItem","releaseCompletionItems","defaultInserting","defaultReplacing","itemLabel","insertTextRules","KeepWhitespace","InsertAsSnippet","itemRange","deprecated","fromCompletionItemKind","preselect","commitCharacters","hasResolveSupport","_sortString","_when","contextKeyOverlays","effectiveMenuPath","AbstractCompoundMenuImpl","orderString","endIndex","getNode","GroupImpl","sortChildren","removeById","callId","adaptersMap","executions","callbackIdBase","customExecutionIds","customExecutionFunctions","onDidExecuteTask","onDidTerminateTask","onDidExecuteTaskProcess","onDidTerminateTaskProcess","$onDidStartTask","customExecution","executionId","$customExecutionComplete","lastStartedTask","getTaskExecution","$onDidEndTask","taskExecution","$onDidStartTaskProcess","executionDto","$onDidEndTaskProcess","exitCode","taskId","addNewAdapter","TaskProviderAdapter","$registerTaskProvider","createDisposable","taskVersion","taskType","$fetchTasks","addCustomExecution","$executeTask","$provideTasks","applyCustomExecution","$resolveTask","resolvedTask","nextCallId","$unregister","$initLoadedTasks","$terminateTask","nextCallbackId","callbackId","BackendStopwatch","stopwatchPath","BackendStopwatchOptions","DefaultBackendStopwatch","measurements","stopwatch","measurementToken","messageArgs","NullBackendStopwatch","Prioritizeable","nullable","undefinable","_never","writePosition","onCommitEmitter","DataView","ensureCapacity","newLength","newBuffer","writeNumber","setFloat64","writeRaw","writeUint16","setUint16","writeUint32","setUint32","encodeInto","written","getCurrentContents","readPosition","getUint8","readUint16","getUint16","readUint32","getUint32","byte","readNumber","getFloat64","sliceOffset","decodeString","$registerUriHandler","$unregisterUriHandler","$handleExternalUri","handleUri","loggerPath","ILoggerClient","DispatchingLoggerClient","clients","levelStr","pair","originalConsoleLog","consoles","formattedMessage","GLOBSTAR","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","char","inBraces","inBrackets","curVal","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","parsePattern","patternKey","trimForExclusions","wrapRelativePattern","basename","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","n","withBasenames","allPaths","trivia3","trivia4and5","regExp","toRegExp","pathToRelative","matchPathEnds","nativePath","nativeSep","nativePathEnd","resultPattern","getOwnPropertyNames","hasSibling","matched","m","requiresSiblings","parseExpressionPattern","resultExpression","extname","parsedExpression","listToMap","basenamePatterns","aggregate","aggregatedPatterns","siblingsFn","siblings","patternOrExpression","provideColors","provideDocumentColors","colors","colorInfo","fromColor","provideColorPresentations","toColor","fromColorPresentation","schemeOrData","_strict","joinPath","newPath","posix","Keyboard","Mouse","_line","_character","isBefore","isBeforeOrEqual","isAfter","isAfterOrEqual","compareTo","translate","lineDeltaOrChange","characterDelta","illegalArgument","lineDelta","lineOrChange","Min","Max","startLineOrStart","startColumnOrEnd","endLine","_start","_end","positionOrRange","union","startOrChange","anchorLineOrAnchor","anchorColumnOrActive","activeLine","activeColumn","_anchor","_active","isReversed","isSnippetString","_tabstop","string","appendTabstop","number","appendPlaceholder","nested","appendChoice","appendVariable","_base","_baseUri","Other","RegEx","_newText","newEol","_newEol","setEndOfLine","rangeOrPosition","idOrMetadata","jsonStr","stdout","stderr","isNotebookRange","newStart","newEnd","isSnippetTextEdit","isNotebookCellEdit","newCells","replaceCells","insertCells","deleteCells","updateCellMetadata","newCellMetadata","updateNotebookMetadata","newNotebookMetadata","provides","parts","intersects","Empty","TextUpdateImports","isResolved","startsWithIgnoreCase","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorMove","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Notebook","_edits","renameFile","createFile","deleteFile","editOrTuple","notebookMetadata","callbackfn","mimetype","rangeOrContainer","locationOrUri","messageOrUri","uriOrMessage","terminator","varg1","varg2","executionProcess","executionOptions","shellCommand","shellOptions","shellCommandLine","_callback","Clean","Build","Rebuild","Test","taskProblemMatchers","hasTaskProblemMatchers","isTaskBackground","taskRunOptions","taskScope","taskName","isBackground","taskSource","taskGroup","taskPresentationOptions","impl","ColorFormat","nextTestRunId","continuous","testRunId","covered","total","fromDetails","details","statements","branches","decl","executed","branch","coverage","detailedCoverage","statementCoverage","branchCoverage","declarationCoverage","includesTests","tokenTypes","tokenModifiers","_prevLine","_prevChar","_dataIsSortedAndDeltaEncoded","_dataLen","_tokenTypeStrToInt","_tokenModifierStrToInt","_hasLegend","arg4","_pushEncoded","isStringArray","_push","tokenType","nTokenType","nTokenModifiers","tokenModifier","tokenCount","prevLine","prevChar","pushLine","pushChar","_sortAndDeltaEncode","aLine","bLine","srcOffset","dstOffset","build","resultId","eventNameOrError","resourceRequestConfig","terminalCommand","participant","toolReferences","Assistant","role","Blocked","autoForwardAction","candidateLanguage","candidateIsSynchronized","hasAccessToAllModels","RawContentChangeEvent","deletedCount","deletedItems","asApiEvent","addedCells","removedCells","notebookDocument","cellData","previousResult","getCellIndex","setOutputs","newOutputs","setMetadata","newMetadata","setInternalMetadata","newInternalMetadata","cellCount","validateIndex","$trySaveNotebook","acceptDirty","acceptModelChanged","cellChanges","relaxedCellChanges","rawEvent","rawEvents","notebookCommon","ModelChange","spliceNotebookCells","Move","moveCells","newIdx","Output","setCellOutputs","ChangeDocumentMetadata","ChangeCellLanguage","changeCellLanguage","ChangeCellContent","ChangeCellMetadata","changeCellMetadata","ChangeCellInternalMetadata","changeCellInternalMetadata","relaxedCellChange","newLen","splices","initialization","contentChangeEvents","newItems","extCell","changeEvent","newLanguageId","getCellFromApiCell","cellHandle","onDidChangeLogLevelEmitter","checkLogLevel","Trace","Debug","errorMsg","provideDeclaration","CodeLensAdapter","provideCodeLenses","lenses","lens","lensSymbol","resolveCodeLens","newLens","BAD_CMD","releaseCodeLenses","ProgressService","shouldDelegate","locationId","cancelable","TestControllerImpl","_profiles","activeRuns","$registerTestController","AccumulatingTreeDeltaEmitter","mapDeltas","$notifyDelta","TestItemCollection","mapDelta","Convert","$updateController","refreshHandler","_refreshHandler","canRefresh","resolveHandler","_resolveHandler","canResolve","getProfile","createRunProfile","runHandler","supportsContinuousRun","hash","TestRunProfile","createTestItem","TestItemImpl","createTestRun","persist","TestRun","onWillFlush","onDidEnd","$unregisterTestController","runTestsForUI","includedTests","excludedTests","includeTests","testId","isDefined","excludeTests","includedPath","isPrefix","cancelRun","invalidateTestResults","checkTestInstance","isPersisted","onDidEndEmitter","onWillFlushEmitter","onDidDisposeEmitter","onDidDispose","testStateDeltas","testOutputDeltas","changeBatcher","emitChange","$notifyTestRunCreated","enqueued","updateTestState","itemPath","Queued","started","Running","skipped","Skipped","failed","messages","errored","passed","Passed","appendOutput","$notifyTestRunEnded","addCoverage","fileCoverage","checkNotEnded","$notifyTestStateChanged","controllersById","toTestItem","fromTestMessageArg","toTestMessage","toStackFrame","stackFrame","withController","$onResolveChildren","$onConfigureRunProfile","configureHandler","$onDidChangeDefault","doSetDefault","$refreshTests","$onRunControllerTests","reqs","req","$onCancelTestRun","onDidChangeDefaultEmitter","onDidChangeDefault","$notifyTestRunProfileCreated","canConfigure","notifyPropertyChange","$updateTestRunProfile","_isDefault","notifyTagChange","_property","notifyConfigureHandlerChange","observableProperty","keyLength","rootMap","doForeach","currentMap","filesSystem","statusItemHandlePool","statusItemIds","linkProvider","registerLinkProviderIfNotYetRegistered","linkProviderRegistration","$getLanguages","$changeLanguage","config","brackets","onEnterRules","serializeEnterRules","indentationRules","serializeIndentation","autoClosingPairs","serializeAutoClosingPairs","$setLanguageConfiguration","withAdapter","ctor","fallbackValue","transformDocumentSelector","sel","doTransformDocumentSelector","$serialized","$provideCompletionItems","CompletionAdapter","$resolveCompletionItem","$releaseCompletionItems","$registerCompletionSupport","InlineCompletionAdapter","$registerInlineCompletionsSupport","$provideInlineCompletions","$freeInlineCompletionsList","$provideDefinition","DefinitionAdapter","$registerDefinitionProvider","$provideDeclaration","DeclarationAdapter","$registerDeclarationProvider","$provideSignatureHelp","SignatureHelpAdapter","$releaseSignatureHelp","$registerSignatureHelpProvider","$provideImplementation","ImplementationAdapter","$registerImplementationProvider","$provideTypeDefinition","TypeDefinitionAdapter","$registerTypeDefinitionProvider","HoverAdapter","$registerHoverProvider","$provideHover","EvaluatableExpressionAdapter","$registerEvaluatableExpressionProvider","$provideEvaluatableExpression","onDidChangeInlineValues","InlineValuesAdapter","$registerInlineValuesProvider","$emitInlineValuesEvent","$provideInlineValues","DocumentHighlightAdapter","$registerDocumentHighlightProvider","$provideDocumentHighlights","provideDocumentHighlights","WorkspaceSymbolAdapter","$registerWorkspaceSymbolProvider","$provideWorkspaceSymbols","$resolveWorkspaceSymbol","DocumentFormattingAdapter","$registerDocumentFormattingSupport","$provideDocumentFormattingEdits","$provideDocumentDropEdits","DocumentDropEditAdapter","provideDocumentDropEdits","$registerDocumentDropEditProvider","RangeFormattingAdapter","$registerRangeFormattingSupport","$provideDocumentRangeFormattingEdits","OnTypeFormattingAdapter","$registerOnTypeFormattingProvider","$provideOnTypeFormattingEdits","$provideDocumentLinks","LinkProviderAdapter","$resolveDocumentLink","$registerDocumentLinkProvider","$releaseDocumentLinks","$registerQuickFixProvider","providedCodeActionKinds","$provideCodeActions","$releaseCodeActions","$resolveCodeAction","onDidChangeCodeLenses","$registerCodeLensSupport","$emitCodeLensEvent","$provideCodeLenses","$resolveCodeLens","$releaseCodeLenses","$provideReferences","ReferenceAdapter","provideReferences","$registerReferenceProvider","OutlineAdapter","getPluginLabel","$registerOutlineSupport","$provideDocumentSymbols","provideDocumentSymbols","ColorProviderAdapter","$registerDocumentColorProvider","$provideDocumentColors","$provideColorPresentations","onDidChangeInlayHints","InlayHintsAdapter","$registerInlayHintsProvider","$emitInlayHintsEvent","$provideInlayHints","$resolveInlayHint","$releaseInlayHints","FoldingProviderAdapter","onDidChangeFoldingRanges","$registerFoldingRangeProvider","$emitFoldingRangeEvent","$provideFoldingRange","SelectionRangeProviderAdapter","$registerSelectionRangeProvider","$provideSelectionRanges","$registerRenameProvider","$provideRenameEdits","$resolveRenameLocation","CallHierarchyAdapter","$registerCallHierarchyProvider","$provideRootDefinition","$provideCallers","$provideCallees","$releaseCallHierarchy","TypeHierarchyAdapter","$registerTypeHierarchyProvider","$prepareTypeHierarchy","$provideSuperTypes","$provideSubTypes","$releaseTypeHierarchy","LinkedEditingRangeAdapter","$registerLinkedEditingRangeProvider","$provideLinkedEditingRanges","onDidChangeSemanticTokens","DocumentSemanticTokensAdapter","$registerDocumentSemanticTokensProvider","$emitDocumentSemanticTokensEvent","$provideDocumentSemanticTokens","previousResultId","provideDocumentSemanticTokens","$releaseDocumentSemanticTokens","semanticColoringResultId","releaseDocumentSemanticColoring","DocumentRangeSemanticTokensAdapter","$registerDocumentRangeSemanticTokensProvider","$provideDocumentRangeSemanticTokens","provideDocumentRangeSemanticTokens","fullyQualifiedId","soonHandle","commandDisposables","updateAsync","disposableTimeout","$setLanguageStatus","accessibilityInfo","$removeLanguageStatus","Uint8Matrix","row","col","maxCharCode","maxState","chCode","states","_states","_maxCharCode","currentState","_classifier","_createLink","classifier","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","stateMachine","getStateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","j","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","componentsToUnversionedId","componentsToVersionedId","componentsToVersionWithId","idAndVersionToVersionedId","unversionedFromVersioned","endOfId","identifiersFromVersionedId","probablyId","endOfPublisher","endOfName","idAndVersionFromVersionedId","activeEditorId","_onDidAddDocuments","_onDidRemoveDocuments","$acceptEditorsAndDocumentsDelta","uriComponent","DocumentDataExt","TextEditorExt","editorPosition","toPrioritizeable","rawValue","getPriority","toPrioritizeableSync","isValid","prioritizeAllSync","prioritizeAll","factoryId","parameterBindings","toFactory","defaultScope","notebooksAndEditors","DidChangeNotebookEditorSelectionEmitter","DidChangeNotebookEditorVisibleRangesEmitter","notebookEditor","$acceptEditorViewColumns","isDefaultLanguage","bundleCache","Localization","str","currentLanguage","defaultLocale","$fetchBundle","trackers","factories","signal","StreamDebugAdapter","fromAdapter","toAdapter","handleClosed","CONTENT_LENGTH","TWO_CRLF","stdin","kill","asDocumentSymbolTree","infos","parentStack","containsRange","equalsRange","otherRange","documentHighlights","isDocumentHighlightArray","highlight","fromDocumentHighlight","didSaveNotebookDocumentEmitter","didChangeNotebookDocumentEmitter","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeSettings","webviewPanel","treeViews","toTreeElement","$checkStateChanged","treeViewId","itemIds","getTreeView","checkStateChanged","$dragStarted","treeItemIds","onDragStarted","$dragEnd","dragEnd","$drop","treeItemId","dataTransferItems","handleDrop","treeViewItemRef","getElement","treeView","TreeViewExtImpl","onDidExpandElement","onDidCollapseElement","selectedElements","onDidChangeVisibility","onDidChangeCheckboxState","reveal","revealOptions","$getChildren","getChildren","$resolveTreeItem","resolveTreeItem","$hasResolveTreeItem","hasResolveTreeItem","$setExpanded","expanded","onExpanded","onCollapsed","$setSelection","setSelection","$setVisible","setVisible","onDidExpandElementEmitter","onDidCollapseElementEmitter","onDidChangeSelectionEmitter","onDidChangeVisibilityEmitter","onDidChangeCheckboxStateEmitter","nodes","pendingRefresh","localDataTransfer","clearAll","_message","_badge","selectedItemIds","_visible","dragMimeTypes","dragAndDropController","dropMimeTypes","$registerTreeDataProvider","manageCheckboxStateManually","showCollapseAll","$unregisterTreeDataProvider","onDidChangeTreeData","elements","$refresh","select","focus","expand","elementParentChain","calculateRevealParentChain","$setTitle","$setDescription","$setBadge","getParent","chain","treeItem","getTreeItem","buildTreeItemId","getTreeItemLabel","treeItemLabel","getTreeItemLabelHighlights","getItemLabel","idLabel","mustReturnNew","ID_ITEM","ID_COMPUTED","elementId","childrenNodes","pluginTreeItem","parentNode","clearChildren","rootNodeDisposables","treeItemPromises","toDisposeElement","themeIcon","checkboxInfo","checkboxState","checked","Checked","treeViewItem","valueOf","cachedElement","transformed","Unchecked","toDelete","doSetSelection","selectedItemIts","treeItems","handleDrag","uriList","dropTransfer","$readDroppedFile","fileItem","doHash","hashVal","numberHash","initialHashVal","stringHash","objectHash","booleanHash","Action","RenderedMenuNode","CommandMenu","MANAGE_MENU","ACCOUNTS_MENU","ACCOUNTS_SUBMENU","isNavigationGroup","m1","m2","sendLog","Warn","$log","toLog","keyProvider","getDefaultKey","LocalizationKeyProvider","localeId","locale","localStorage","getItem","isSelectedLocale","setLocale","setItem","preferredKeys","buildData","normalized","bundles","foundPreferredKeys","keysAndMessages","buildKeyMessageTuples","upperMessage","fileKey","messageBundle","keyBundle","localizationKey","buildKey","filepath","transformKey","isLowerAsciiLetter","isUpperAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","codeA","codeB","abs","compareSubstring","aStart","aEnd","bStart","bEnd","aLen","bLen","compareSubstringIgnoreCase","haystack","needle","candidateLength","splitter","unicode","localizationPath","AsyncLocalizationProvider","formatRegexp","replacement","replacements","translation","nlsKey","keySlashIndex","injectionRe","lookUp","tree","TheiaWorkspace","WorkspaceFolder","logService","_serviceBrand","getLevel","setLevel","_onDidChangeConfiguration","OVERRIDE_KEY_TEST","preferencesChanged","$acceptConfigurationChanged","eventData","_preferences","toConfigurationChangeEvent","rawSection","rawScope","overrides","parseConfigurationAccessOptions","toReadonlyValue","clonedConfig","cloneOnWriteProxy","accessor","clonedTarget","cloneTarget","cloneDeep","targ","writable","descr","targetScope","withLanguageOverride","resourceStr","fullPath","$updateConfigurationOption","$removeConfigurationOption","configInspect","user","readonlyProxy","isExtensible","preventExtensions","defaultConfiguration","getConfigurationModel","userConfiguration","workspaceConfiguration","folderConfigurations","ResourceMap","createEmptyModel","ConfigurationModel","Configuration","parser","ConfigurationModelParser","sanitized","sanitize","parseRaw","configurationModel","asObject","overrideKey","affectsConfiguration","sectionWithLanguage","matchesUri","sliceIndex","changedPreferenceName","AbstractReferenceCollection","_keys","onDidCreateEmitter","onWillDisposeEmitter","onWillDispose","toKey","doAcquire","createReferences","disposeObject","pendingValues","getOrCreateValue","webviewPanels","webviews","serializers","initData","$onMessage","getWebview","$onDidChangeWebviewPanelViewState","setActive","setViewColumn","onDidChangeViewStateEmitter","$onDidDisposeWebviewPanel","$deserializeWebviewPanel","viewState","WebviewImpl","hashValue","revivedPanel","WebviewPanelImpl","deserializeWebviewPanel","webviewShowOptions","toWebviewPanelShowOptions","toWebviewOptions","$createWebviewPanel","originBasedOnType","createNewWebview","$registerSerializer","$unregisterSerializer","toGeneralWebviewResource","relativeResourcePath","basePath","webviewResourceRoot","deleteWebview","getResourceRoot","asWebviewUri","cspSource","webviewCspSource","html","checkIsDisposed","_html","$setHtml","newOptions","$setOptions","localResourceRoots","_viewType","_webview","onDidChangeViewState","_showOptions","$disposeWebview","newTitle","_iconPath","$setIconPath","setShowOptions","messageServicePath","rules","beforeText","afterText","previousLineText","increaseIndentPattern","decreaseIndentPattern","indentNextLinePattern","unIndentedLinePattern","pairs","notIn","getIconResource","decorations","comparePaths","oneParts","otherParts","lastOne","lastOther","endOne","endOther","comparePathComponents","compareResourceThemableDecorations","compareResourceStates","aArg","bArg","strikeThrough","faded","compareResourceStatesDecorations","commandEquals","compareArgs","ScmInputBoxImpl","$setInputBoxValue","sourceControlHandle","$setInputBoxPlaceholder","$setInputBoxVisible","$setInputBoxEnabled","_validateInput","onInputBoxValueChange","ScmResourceGroupImpl","$updateGroupLabel","hideWhenEmpty","_hideWhenEmpty","$updateGroup","features","resourceStates","_resourceStates","onDidUpdateResourceStatesEmitter","resourceHandlePool","resourceStatesMap","resourceStatesCommandsMap","resourceStatesDisposablesMap","onDidUpdateResourceStates","handlesSnapshot","resourceSnapshot","handlePool","getResourceState","executeResourceCommand","takeResourceStateSnapshot","snapshot","pushSplice","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","sortedDiff","sourceUri","lightIcon","darkIcon","icons","getThemableIcon","rawResource","letter","colorId","rawResourceSplices","rawResources","reverseSplices","handlesToDelete","SourceControlImpl","_rootUri","_count","$updateSourceControl","quickDiffProvider","_quickDiffProvider","hasQuickDiffProvider","commitTemplate","_commitTemplate","acceptInputCommand","_acceptInputCommand","statusBarCommands","_statusBarCommands","_statusBarDisposables","selected","_selected","createdResourceGroups","updatedResourceGroups","$registerSourceControl","createResourceGroup","eventuallyAddResourceGroups","updateListener","eventuallyUpdateResourceStates","$unregisterGroup","$registerGroups","$spliceResourceStates","getResourceGroup","setSelectionState","$unregisterSourceControl","onDidChangeActiveProvider","onDidChangeActiveProviderEmitter","sourceControls","sourceControlsByExtension","sourceControl","resourceGroupHandle","resourceGroup","resourceStateHandle","$provideOriginalResource","provideOriginalResource","$onInputBoxValueChange","$executeResourceCommand","groupHandle","cursorPosition","$setSelectedSourceControl","selectedSourceControlHandle","_selections","_visibleRanges","TextEditorOptionsExt","_viewColumn","readonly","trySetSelection","fromSelection","runOnProxy","$trySetSelections","_acceptViewColumn","undoStopBefore","undoStopAfter","TextEditorEdit","insertSnippet","posOrRange","$tryInsertSnippet","setDecorations","decorationType","rangesOrOptions","$trySetDecorations","fromRangeOrRangeWithMessage","$trySetDecorationsFast","$tryRevealRange","editData","finalize","editRanges","rangeEnd","forceMoveMarkers","$tryApplyEdits","documentVersionId","$tryShowTextDocument","$tryHideEditor","$getDiffInformation","_tabSize","tabSize","_indentSize","indentSize","_insertSpace","insertSpaces","_cursorStyle","_lineNumbers","lineNumbers","validateTabSize","warnOnError","$trySetOptions","validateIndentSize","validateInsertSpaces","configurationUpdate","hasUpdate","collectedEdits","endOfLine","moveMarkers","validatedRange","filePath","os","tmpdir","NO_OVERRIDE","PreferenceSchemaServiceImpl","schemas","defaultOverrides","_overrideIdentifiers","jsonSchemas","nextSchemaTitle","nextOverrideValueId","defaultValueChangedEmitter","schemaChangedEmitter","onDidChangeSchema","getSchemaProperties","preferenceContributions","addSchema","initSchema","registerOverrideIdentifier","addOverrideToJsonSchema","defaultOverridable","setJSONSchemasProperty","deleteFromJSONSchemas","baseOverride","isValidInScope","updateSchemaProperty","registerOverride","overrideValueId","removeOverride","affectedOverrides","getJSONSchema","setJSONSchemaProperty","overrideSchema","NotebookCellExecutionTaskState","activeExecutions","kernelData","kernelDetectionTasks","currentKernelDetectionTaskHandle","kernelSourceActionProviders","currentSourceActionProviderHandle","onDidChangeCellExecutionStateEmitter","currentHandle","kernel","associatedNotebooks","defaultExecuteHandler","createKernelId","extensionLocation","toUriComponents","preloads","preload","interruptHandler","executeHandler","$addKernel","tokenPool","myToken","$updateKernel","onDidChangeSelectedNotebooks","supportedLanguages","supportsExecutionOrder","supportsInterrupt","createNotebookCellExecution","u","$removeKernel","updateNotebookAffinity","$updateNotebookPriority","localResource","cellObj","NotebookCellExecutionTask","onDidChangeState","asApiObject","$addKernelDetectionTask","detectionTask","$removeKernelDetectionTask","onDidChangeNotebookKernelSourceActions","$addKernelSourceActionProvider","$emitNotebookKernelSourceActionsChangeEvent","$removeKernelSourceActionProvider","$acceptNotebookAssociation","$executeCells","$cancelCells","$acceptKernelMessageFromRenderer","$cellExecutionChanged","$provideKernelSourceActions","provideNotebookKernelSourceActions","HANDLE","_onDidChangeState","Init","collector","TimeoutBasedCollector","updates","$createExecution","updateSoon","addItem","$updateExecution","verifyStateForOutput","cellIndexToHandle","cellOrCellIndex","validateAndConvertOutputs","newOutput","updateOutputs","outputDtos","updateOutputItems","OutputItems","ExecutionState","Started","$completeExecution","clearOutput","replaceOutput","appendOutputItems","replaceOutputItems","startedTimer","currentDeferred","finally","deepClone","objectToFreeze","_hasOwnProperty","_cloneAndChange","changer","r1","r2","i2","_deltaBuilder","realParent","_parent","iterate","currentCollection","warning","toDiagnosticSeverity","toLocaleString","toArray","webviewsExt","viewProviders","webviewViews","$registerWebviewViewProvider","retainContextWhenHidden","serializeBuffersForPostMessage","$unregisterWebviewViewProvider","$resolveWebviewView","webviewNoPanel","revivedView","WebviewViewExtImpl","resolveWebviewView","$onDidChangeWebviewViewVisibility","webviewView","getWebviewView","$disposeWebviewView","assertNotDisposed","$setWebviewViewTitle","$setWebviewViewDescription","_posixBadPath","_winBadPath","streql","getRoot","toOSPath","wantsBackslash","_isNormal","skip","prev_start","prev_part","sepOffset","lastId","envSessionId","envMachineId","_remoteName","$getEnvVariable","queryParameters","applicationName","lang","ui","applicationRoot","$getClientOperatingSystem","CSSIcon","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","iconsRegex","escapeIconsRegex","escaped","SemanticTokensPreviousResult","tokens","_provider","_nextResultId","_previousResults","provideDocumentSemanticTokensEdits","_fixProvidedSemanticTokens","_send","_convertToEdits","_isSemanticTokens","_isCorrectSemanticTokens","_isSemanticTokensEdits","_isCorrectSemanticTokensEdits","newResult","oldData","oldLength","newData","maxCommonPrefixLength","commonSuffixLength","maxCommonSuffixLength","myId","encodeSemanticTokensDto","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","__webpack_exports__","O","chunkIds","notFulfilled","Infinity","fulfilled","o","chunkId","globalThis","toStringTag","nmd","scriptUrl","currentScript","tagName","getElementsByTagName","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules"],"sourceRoot":""}